author,author_association,state,comments,pull_request,created_at,updated_at,closed_at,body,url,repo
thomasp85,MEMBER,open,0,https://github.com/tidyverse/ggplot2/pull/4818,2022-04-26T11:11:46Z,2022-04-27T07:42:55Z,list(),"Fix #4817 

This is a very minor release, only done to remove a call to a base function that was deprecated in R 4.2",https://github.com/tidyverse/ggplot2/pull/4818,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4816,2022-04-26T08:23:01Z,2022-04-26T08:23:45Z,2022-04-26T08:23:45Z,Reapplying #4750 to 3.3.6 patch release,https://github.com/tidyverse/ggplot2/pull/4816,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4812,2022-04-23T16:12:54Z,2022-04-26T12:09:53Z,2022-04-26T12:09:50Z,"(This pull request is not intended to be merged, just to test if the CI runs well even after the release of R 4.2. But we can merge this if we want the CI to be fixed immediately.)

It seems RSPM is not ready for R 4.2 for Windows.",https://github.com/tidyverse/ggplot2/pull/4812,ggplot2
92amartins,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/4809,2022-04-21T18:14:45Z,2022-04-27T09:14:49Z,2022-04-25T13:40:38Z,"This PR is an attempt to fix #4792.

I tried to follow the @yutannihilation guidelines on the original issue.

Couldn't figure it out how to include proper snaps.

Further guidance is greatly appreciated",https://github.com/tidyverse/ggplot2/pull/4809,ggplot2
hadley,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4806,2022-04-20T11:48:07Z,2022-04-20T14:34:00Z,2022-04-20T14:33:36Z,Only needed for a single doc link? And requires RcppEigen which is having install problems.,https://github.com/tidyverse/ggplot2/pull/4806,ggplot2
benyamindsmith,NONE,open,1,https://github.com/tidyverse/ggplot2/pull/4803,2022-04-19T18:17:54Z,2022-04-19T18:41:59Z,list(),list(),https://github.com/tidyverse/ggplot2/pull/4803,ggplot2
lionel-,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4802,2022-04-19T11:52:00Z,2022-04-19T12:30:58Z,2022-04-19T12:29:07Z,"Closes #2675.

This implements custom handling of the `!!!` operator inside the `x` and `y` arguments of `aes()`. This is temporary until rlang supports this.",https://github.com/tidyverse/ggplot2/pull/4802,ggplot2
billybarc,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4800,2022-04-14T16:29:37Z,2022-04-19T09:33:22Z,2022-04-19T09:33:19Z,Closes #4797,https://github.com/tidyverse/ggplot2/pull/4800,ggplot2
krlmlr,MEMBER,open,0,https://github.com/tidyverse/ggplot2/pull/4799,2022-04-10T06:36:09Z,2022-04-10T06:36:09Z,list(),Closes #4705.,https://github.com/tidyverse/ggplot2/pull/4799,ggplot2
thomasp85,MEMBER,open,1,https://github.com/tidyverse/ggplot2/pull/4796,2022-04-07T12:37:16Z,2022-04-26T08:43:57Z,list(),"This PR updates all user messaging to use the cli framework for proper formating. This PR is almost a direct translation from the old behaviour, but it does include a few refactors to make the code simpler where possible, using e.g. the auto collapsing feature of cli.

The changes has led to a few failing tests. These tests have been updated to use the new `expect_snapshot_*()` functions to better handle messages with formating.

This PR will be followed an additional PR looking into better error message chaining to let users know where errors occurred during rendering",https://github.com/tidyverse/ggplot2/pull/4796,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4791,2022-04-01T13:25:31Z,2022-04-19T20:25:15Z,2022-04-19T20:25:15Z,list(),https://github.com/tidyverse/ggplot2/pull/4791,ggplot2
davidchall,NONE,closed,0,https://github.com/tidyverse/ggplot2/pull/4785,2022-03-31T04:00:20Z,2022-04-14T14:48:42Z,2022-04-14T14:48:42Z,"This is a proof-of-concept to address #4783. There might be some context I'm missing here, so I'm interested to hear feedback before proceeding any further.

``` r
library(tidyverse)

p <- tibble(x = rnorm(1000, mean = 10)) %>%
  ggplot(aes(x)) +
  geom_density() +
  geom_function(fun = dnorm, args = list(mean = 10), color = ""red"")

p + scale_x_continuous(limits = c(1, NA))
```

![](https://i.imgur.com/zWKiIa1.png)

``` r
p + scale_x_log10(limits = c(1, NA))
```

![](https://i.imgur.com/lavm6ac.png)

``` r
p + scale_x_sqrt(limits = c(1, NA))
```

![](https://i.imgur.com/XO3Qogj.png)

<sup>Created on 2022-03-30 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>",https://github.com/tidyverse/ggplot2/pull/4785,ggplot2
flrd,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4779,2022-03-28T21:58:39Z,2022-03-30T15:52:29Z,2022-03-30T15:52:24Z,list(),https://github.com/tidyverse/ggplot2/pull/4779,ggplot2
teunbrand,CONTRIBUTOR,open,3,https://github.com/tidyverse/ggplot2/pull/4775,2022-03-24T20:20:26Z,2022-04-20T16:28:36Z,list(),"Apologies for submitting a PR that will not work (yet). It aims to fix #980.

In anticipation of https://github.com/r-lib/scales/pull/336, this PR implements (a version of) the fix suggested [here](https://github.com/tidyverse/ggplot2/issues/980#issuecomment-505455353) that has become viable thanks to the change in {scales}. 

Note that this PR will likely not pass the automated checks until the new {scales} version hits CRAN, at which point is seems a good idea to bump the required version in the description file.",https://github.com/tidyverse/ggplot2/pull/4775,ggplot2
teunbrand,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4774,2022-03-24T18:02:00Z,2022-04-19T22:06:50Z,2022-04-19T20:27:30Z,"This is a simple PR that adds some caution to the documentation of `position_stack()`, as per  #4731.",https://github.com/tidyverse/ggplot2/pull/4774,ggplot2
zeehio,NONE,open,1,https://github.com/tidyverse/ggplot2/pull/4765,2022-03-19T14:58:46Z,2022-04-19T20:29:30Z,list(),"This pull request improves ggplot2 error handling by using `conditionMessage(e)` instead of `e$message`.

Some error messages were not printed. See the following reprex, which assumes `hexbin` is NOT installed:

# Before:

We have no clue why the computation failed

``` r
#remove.packages(""hexbin"")
library(ggplot2)
plt1 <- ggplot(iris) + 
  geom_hex(aes(x = Sepal.Length, y = Sepal.Width))
#> Warning: Computation failed in `stat_binhex()`:
```

<sup>Created on 2022-03-19 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>


# After:

We know what to do, just install hexbin!

``` r
#remove.packages(""hexbin"")
library(ggplot2)
plt1<- ggplot(iris) + 
  geom_hex(aes(x = Sepal.Length, y = Sepal.Width))
#> Warning: Computation failed in `stat_binhex()`:
#> The package `hexbin` is required for `stat_binhex()`
```


<sup>Created on 2022-03-19 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>",https://github.com/tidyverse/ggplot2/pull/4765,ggplot2
mone27,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/4764,2022-03-18T22:29:08Z,2022-04-19T20:45:32Z,2022-04-19T20:45:32Z,"Migrates the dynamic dots management (`...`) from `base::list` to `rlang::list2`, see #4752

The functions modified are the one of the Public API that accepts `...` as arguments.

In total 89 functions have been update, they include:

- `geom_*`
- `stat_*`
- `lims`, `expand_limits`
- `aes_`, `aes_string`
- `coord_map`
- `annatation`, `annotation_map`, `annotation_logticks`

Here there is the script that I have used to find the functions that use `...` with `list` [https://gist.github.com/mone27/285f022b9efbb4bc244acb6622f3411e](https://gist.github.com/mone27/285f022b9efbb4bc244acb6622f3411e)

The PR should be complete, possible additional steps are:

- document the use of `rlang` `...` [https://rlang.r-lib.org/reference/dyn-dots.html#add-dynamic-dots-support-in-your-functions](https://rlang.r-lib.org/reference/dyn-dots.html#add-dynamic-dots-support-in-your-functions). However, in `ggplot` most of the `...` are actually not documented.
- add some test for the dynamic dots support
",https://github.com/tidyverse/ggplot2/pull/4764,ggplot2
mrcaseb,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/4762,2022-03-17T13:28:33Z,2022-03-25T11:23:17Z,2022-03-23T17:42:02Z,"`grid::pointsGrob` allows shapes via the `pch` argument that is used in `GeomPoint`. Valid values are explained in `?points` where it is also explained that it is possible to use additional symbols when setting `par(font = 5)`. 

This PR adds a `fontface` aesthetic that allows setting the symbol font and activates additional point shapes. See examples below (the output images of the reprex are replaced with higher qualitiy images that are saved with ggsave). 

``` r
library(ggplot2)

df <- tidyr::crossing(x = 0:15, y = 0:15)
df$shape  <- 0:255

# Default fontface (""plain"") == 1
ggplot(df, aes(x = x, y = y)) +
  geom_point(shape = df$shape, size = 5, bg = ""grey"", fontface = 1) +
  geom_text(aes(label = shape), nudge_y = 0.45, size = 3) +
  scale_y_reverse() +
  theme_void()
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '26'
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '27'
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '28'
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '29'
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '30'
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '31'
```

![plot_plain](https://user-images.githubusercontent.com/38586519/158818022-7d2c8bc6-9a14-425d-a3eb-e78aa126c0cc.png)


``` r
# Symbol fontface == 5
ggplot(df, aes(x = x, y = y)) +
  geom_point(shape = df$shape, size = 5, bg = ""grey"", fontface = 5) +
  geom_text(aes(label = shape), nudge_y = 0.45, size = 3) +
  scale_y_reverse() +
  theme_void()
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '26'
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '27'
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '28'
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '29'
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '30'
#> Warning in grid.Call.graphics(C_points, x$x, x$y, x$pch, x$size): unimplemented
#> pch value '31'
```

![plot_symbol](https://user-images.githubusercontent.com/38586519/158817995-bec35357-8643-421b-87ae-c1fa917cb1c8.png)


<sup>Created on 2022-03-17 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>

<details style=""margin-bottom:10px;"">
<summary>
Session info
</summary>

``` r
sessioninfo::session_info()
#> - Session info ---------------------------------------------------------------
#>  setting  value
#>  version  R version 4.1.2 (2021-11-01)
#>  os       Windows 10 x64 (build 19042)
#>  system   x86_64, mingw32
#>  ui       RTerm
#>  language en
#>  collate  German_Germany.1252
#>  ctype    German_Germany.1252
#>  tz       Europe/Berlin
#>  date     2022-03-17
#>  pandoc   2.14.0.3 @ C:/Program Files/RStudio/bin/pandoc/ (via rmarkdown)
#> 
#> - Packages -------------------------------------------------------------------
#>  package     * version    date (UTC) lib source
#>  assertthat    0.2.1      2019-03-21 [1] CRAN (R 4.1.0)
#>  backports     1.4.1      2021-12-13 [1] CRAN (R 4.1.2)
#>  cli           3.1.1      2022-01-20 [1] CRAN (R 4.1.2)
#>  colorspace    2.0-3      2022-02-21 [1] CRAN (R 4.1.2)
#>  crayon        1.5.0      2022-02-14 [1] CRAN (R 4.1.2)
#>  curl          4.3.2      2021-06-23 [1] CRAN (R 4.1.0)
#>  DBI           1.1.2      2021-12-20 [1] CRAN (R 4.1.1)
#>  digest        0.6.29     2021-12-01 [1] CRAN (R 4.1.2)
#>  dplyr         1.0.8      2022-02-08 [1] CRAN (R 4.1.2)
#>  ellipsis      0.3.2      2021-04-29 [1] CRAN (R 4.1.0)
#>  evaluate      0.15       2022-02-18 [1] CRAN (R 4.1.2)
#>  fansi         1.0.2      2022-01-14 [1] CRAN (R 4.1.1)
#>  farver        2.1.0      2021-02-28 [1] CRAN (R 4.1.0)
#>  fastmap       1.1.0      2021-01-25 [1] CRAN (R 4.1.0)
#>  fs            1.5.2      2021-12-08 [1] CRAN (R 4.1.1)
#>  generics      0.1.2      2022-01-31 [1] CRAN (R 4.1.2)
#>  ggplot2     * 3.3.5.9000 2022-03-17 [1] local
#>  glue          1.6.2      2022-02-24 [1] CRAN (R 4.1.2)
#>  gtable        0.3.0      2019-03-25 [1] CRAN (R 4.1.0)
#>  highr         0.9        2021-04-16 [1] CRAN (R 4.1.0)
#>  htmltools     0.5.2      2021-08-25 [1] CRAN (R 4.1.1)
#>  httr          1.4.2      2020-07-20 [1] CRAN (R 4.1.0)
#>  knitr         1.37       2021-12-16 [1] CRAN (R 4.1.1)
#>  labeling      0.4.2      2020-10-20 [1] CRAN (R 4.1.0)
#>  lifecycle     1.0.1      2021-09-24 [1] CRAN (R 4.1.1)
#>  magrittr      2.0.2      2022-01-26 [1] CRAN (R 4.1.2)
#>  mime          0.12       2021-09-28 [1] CRAN (R 4.1.1)
#>  munsell       0.5.0      2018-06-12 [1] CRAN (R 4.1.0)
#>  pillar        1.7.0      2022-02-01 [1] CRAN (R 4.1.2)
#>  pkgconfig     2.0.3      2019-09-22 [1] CRAN (R 4.1.0)
#>  purrr         0.3.4      2020-04-17 [1] CRAN (R 4.1.0)
#>  R.cache       0.15.0     2021-04-30 [1] CRAN (R 4.1.0)
#>  R.methodsS3   1.8.1      2020-08-26 [1] CRAN (R 4.1.0)
#>  R.oo          1.24.0     2020-08-26 [1] CRAN (R 4.1.0)
#>  R.utils       2.11.0     2021-09-26 [1] CRAN (R 4.1.1)
#>  R6            2.5.1      2021-08-19 [1] CRAN (R 4.1.0)
#>  reprex        2.0.1      2021-08-05 [1] CRAN (R 4.1.0)
#>  rlang         1.0.2      2022-03-04 [1] CRAN (R 4.1.2)
#>  rmarkdown     2.12       2022-03-02 [1] CRAN (R 4.1.2)
#>  rstudioapi    0.13       2020-11-12 [1] CRAN (R 4.1.0)
#>  scales        1.1.1.9000 2022-03-11 [1] Github (r-lib/scales@13b01f0)
#>  sessioninfo   1.2.2      2021-12-06 [1] CRAN (R 4.1.1)
#>  stringi       1.7.6      2021-11-29 [1] CRAN (R 4.1.1)
#>  stringr       1.4.0      2019-02-10 [1] CRAN (R 4.1.0)
#>  styler        1.6.2      2021-09-23 [1] CRAN (R 4.1.1)
#>  tibble        3.1.6      2021-11-07 [1] CRAN (R 4.1.1)
#>  tidyr         1.2.0      2022-02-01 [1] CRAN (R 4.1.2)
#>  tidyselect    1.1.2      2022-02-21 [1] CRAN (R 4.1.2)
#>  utf8          1.2.2      2021-07-24 [1] CRAN (R 4.1.0)
#>  vctrs         0.3.8      2021-04-29 [1] CRAN (R 4.1.0)
#>  withr         2.5.0      2022-03-03 [1] CRAN (R 4.1.2)
#>  xfun          0.30       2022-03-02 [1] CRAN (R 4.1.2)
#>  xml2          1.3.3      2021-11-30 [1] CRAN (R 4.1.1)
#>  yaml          2.3.5      2022-02-21 [1] CRAN (R 4.1.2)
#> 
#>  [1] C:/Users/.../Documents/R/win-library/4.1
#>  [2] C:/Users/.../Documents/R/R-4.1.2/library
#> 
#> ------------------------------------------------------------------------------
```

</details>
",https://github.com/tidyverse/ggplot2/pull/4762,ggplot2
hadley,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4760,2022-03-16T12:34:51Z,2022-04-20T22:31:03Z,2022-04-20T22:31:03Z,For #4756,https://github.com/tidyverse/ggplot2/pull/4760,ggplot2
mmhamdy,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4759,2022-03-16T04:48:19Z,2022-03-16T18:48:50Z,2022-03-16T18:48:47Z,"Replace the old `coord_equal()` function, mentioned in the example code, with `coord_fixed()`",https://github.com/tidyverse/ggplot2/pull/4759,ggplot2
mjskay,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/4757,2022-03-15T21:49:30Z,2022-03-23T14:08:23Z,2022-03-23T14:08:23Z,"This PR closes #4732 by providing orientation-aware key glyphs for `geom_boxplot()`, `geom_crossbar()`, `geom_pointrange()`, and `geom_linerange()`.

For example, **before these changes**:

``` r
library(ggplot2)
library(patchwork)

df <- data.frame(
  middle = 1:2,
  lower = 0:1,
  upper = 2:3,
  min = -1:0,
  max = 3:4,
  group = c(""a"",""b"")
)

p <- ggplot(df, aes(
  x = middle,
  y = group,
  xmiddle = middle,
  xlower = lower,
  xupper = upper,
  xmin = min,
  xmax = max,
  color = group
))

(p + geom_boxplot(stat = ""identity"")) +
  (p + geom_crossbar()) +
  (p + geom_linerange()) +
  (p + geom_pointrange())
```

![](https://i.imgur.com/XVgfxdR.png)

<sup>Created on 2022-03-15 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>

**After these changes**:

![](https://i.imgur.com/93w2J2p.png)

Specifically, this PR:

- modifies `draw_key_boxplot()`, `draw_key_crossbar()`, and `draw_key_pointrange()` to be orientation-aware
- provides a new key glyph, `draw_key_linerange()`, which is an orientation-aware version of `draw_key_path()` (because `draw_key_path()` is used by other geoms whose legends should not be orientation-aware, I could not simply make `draw_key_path()` orientation aware).
- changes the key glyph of `geom_linerange()` to be `draw_key_linerange()` instead of `draw_key_path()`.
- adds tests for horizontal ~~and vertical~~ legends. ~~This might be too many graphical tests; I'm happy to reduce them --- perhaps by removing the vertical tests (the old behavior) and just leaving the horizontal ones.~~ I have condensed the visual tests down to just two for horizontal legends; I'm not sure there's a clear way to reduce them to fewer.

This PR **does not** add orientation-aware key glyphs to `geom_errorbar()` or `geom_errobarh()`, as these geoms consist of both horizontal and vertical lines, so it seemed reasonable to leave them as is. In fact, `geom_errorbarh()` already has the same key glyph as `geom_errorbar()` rather than one of the opposite orientation, corroborating my sense that the legends for these two geoms do not need to be orientation-aware.",https://github.com/tidyverse/ggplot2/pull/4757,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4750,2022-03-04T12:24:26Z,2022-04-26T08:20:47Z,2022-03-07T07:23:43Z,"Fix #4746 

This PR should not affect anything at all, but prepare for the deprecation of `default.stringsAsFactors()` in the next major release of R",https://github.com/tidyverse/ggplot2/pull/4750,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4748,2022-03-04T09:17:42Z,2022-03-07T07:41:32Z,2022-03-07T07:40:53Z,"Closes #4745 

This PR handles the ticked items in #4745. The remaining points in the 2022 will be handled in other PRs, the unticked parts of earlier years are decidedly ignored for ggplot2",https://github.com/tidyverse/ggplot2/pull/4748,ggplot2
hadley,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/4747,2022-03-02T23:23:12Z,2022-03-03T23:45:56Z,2022-03-03T23:45:20Z,list(),https://github.com/tidyverse/ggplot2/pull/4747,ggplot2
PPaccioretti,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4744,2022-02-27T20:52:15Z,2022-03-15T21:04:38Z,2022-03-15T21:04:37Z,fixed typo,https://github.com/tidyverse/ggplot2/pull/4744,ggplot2
gregleleu,NONE,open,0,https://github.com/tidyverse/ggplot2/pull/4737,2022-02-21T09:47:08Z,2022-03-23T14:10:00Z,list(),"Resolves #4372 
Adding a parameter to use the full width of the scale in scale_*_viridis_b functions.

",https://github.com/tidyverse/ggplot2/pull/4737,ggplot2
damonbayer,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4735,2022-02-18T00:57:35Z,2022-03-15T21:30:49Z,2022-03-15T21:30:47Z,This matches the styling of the mentions of `continuous_scale()` and `discrete_scale()`.,https://github.com/tidyverse/ggplot2/pull/4735,ggplot2
mjskay,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4734,2022-02-12T04:40:46Z,2022-03-16T18:51:57Z,2022-03-16T18:51:56Z,"This PR fixes #4614.

## The problem

For `geom_dotplot()` / the `dotstack` grob, the `(1 - x$stackratio) / 2` adjustment on these lines...

https://github.com/tidyverse/ggplot2/blob/c89c265a57fd71f8a0288ce81037296aadc0a012/R/grob-dotstack.r#L34-L42

...is there because otherwise when `stackratio != 1` and `stackdir = ""up""`, the base of the first dot in a stack will no longer touch the baseline. This is because `stackratio` will expand (or contract) the dot stack away (or towards) the origin. 

However, currently this adjustment only works correctly for `stackdir = ""up""`. For example, here is `stackdir = ""down""` (for other examples, see #4614):

```r
ggplot(data.frame(x = c(rep(1, 3), rep(2, 2))), aes(x)) +
  geom_dotplot(binwidth = 0.5, alpha = 0.5, stackdir = ""down"", stackratio = 1.5) +
  coord_fixed() +
  ylim(-2, 2) +
  xlim(0, 6)
```
![image](https://user-images.githubusercontent.com/6345019/153695945-90243584-8c56-4b7e-8015-9720c00f68d8.png)

Notice how the top dot in each stack does not touch `y = 0` as it should.

## The solution

The solution is that the `(1 - x$stackratio) / 2` adjustment needs to depend on `stackdir`:

- For `""up""`, it should remain `(1 - x$stackratio) / 2`
- For `""down""`, it should be reversed: `-(1 - x$stackratio) / 2`
- For `""center""` and `""centerwhole""`, it is unnecessary, and should be `0`.

This PR implements that change, and includes test cases to ensure the adjustment is correct when `stackratio < 1` and when `stackratio > 1`.",https://github.com/tidyverse/ggplot2/pull/4734,ggplot2
mikmart,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/4721,2022-01-27T21:41:30Z,2022-03-15T14:38:52Z,2022-03-15T14:38:52Z,"Reference line geoms `geom_abline()`, `geom_hline()` and `geom_vline()` not working with `annotate()` has caused some recurring confusion (at least #1052, #2011, and #4719). Previous issues have been resolved with an acknowledgement, and a recommendation to use the geoms in question directly, instead.

To hopefully prevent further confusion, this PR:

* Documents the behaviour and recommendation in `annotate()`
* Adds a warning to `annotate()` when unsupported geoms are requested

Closes #4719.",https://github.com/tidyverse/ggplot2/pull/4721,ggplot2
eliocamp,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4720,2022-01-27T15:30:53Z,2022-03-14T21:20:10Z,2022-03-14T21:20:04Z,Closes #4651,https://github.com/tidyverse/ggplot2/pull/4720,ggplot2
PursuitOfDataScience,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4711,2022-01-04T15:25:05Z,2022-03-15T21:04:12Z,2022-03-15T21:04:09Z,"No need to add `\` before `$`.

![image](https://user-images.githubusercontent.com/54338793/148082093-44433f7f-c6bc-4a9c-a4fc-fe42a7ced254.png)

",https://github.com/tidyverse/ggplot2/pull/4711,ggplot2
tomsaunders98,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/4709,2022-01-03T17:03:57Z,2022-03-15T21:14:59Z,2022-03-15T21:14:58Z,"The guide_coloursteps function does not pass on raster or nbin options to the guide_colourbar function which work correctly (with ragg) when passed on. I'm not entirely sure if there is a reason why they aren't passed on but I thought it made sense to include them as options. 

I also updated the associated documentation for guide_colourbar to include explainers of the nbin and raster params, (taken from guide-colorbar).",https://github.com/tidyverse/ggplot2/pull/4709,ggplot2
teunbrand,CONTRIBUTOR,open,4,https://github.com/tidyverse/ggplot2/pull/4707,2021-12-28T22:57:06Z,2022-04-20T06:09:36Z,list(),"This is a simple fix for some warnings that are thrown when multiple modified aesthetics are used.
The warnings could be triggered with the reprex below. With this PR, these warnings won't be triggered.

``` r
# Reprexed before PR
library(ggplot2)
library(colorspace)

df <- data.frame(x = 1, y = 1, lab = ""test"")

ggplot(df, aes(x, y, label = lab)) +
  geom_label(
    aes(colour = stage(lab, after_scale = darken(colour, 0.3)),
        fill   = after_scale(lighten(colour, 0.5)))
  )
#> Warning: Duplicated aesthetics after name standardisation: NA
#> Warning: Duplicated aesthetics after name standardisation: NA
```

![](https://i.imgur.com/Tk7LIt4.png)

Effectively, the two chunks of code below take the names of the (modified) aesthetics twice.

https://github.com/tidyverse/ggplot2/blob/c89c265a57fd71f8a0288ce81037296aadc0a012/R/geom-.r#L146

https://github.com/tidyverse/ggplot2/blob/759c63c2fd9e00ba3322c1b74b227f63c98d2e06/R/aes.r#L168-L169

This surprisingly works well when there is only a single modified aesthetic, but not so much with multiple ones.

The following erroneous code (duplicated colour/color):
``` r
ggplot(df, aes(x, y, label = lab)) +
  geom_label(
    aes(colour = stage(lab, after_scale = darken(colour, 0.3)),
        color  = after_scale(lighten(color, 0.5)))
  )
```
Used to throw these warnings:
```
#> Warning: Duplicated aesthetics after name standardisation: colour
#> Warning: Duplicated aesthetics after name standardisation: NA
#> Warning: Duplicated aesthetics after name standardisation: NA
```
And now throws the following warnings:
```
#> Warning: Duplicated aesthetics after name standardisation: colour
#> Warning: Duplicated aesthetics after name standardisation: colour
#> Warning: Duplicated aesthetics after name standardisation: colour
```
",https://github.com/tidyverse/ggplot2/pull/4707,ggplot2
bkmgit,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/4702,2021-12-22T04:11:56Z,2022-03-14T21:37:53Z,2022-03-14T21:37:53Z,list(),https://github.com/tidyverse/ggplot2/pull/4702,ggplot2
yutannihilation,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/4697,2021-12-14T01:00:12Z,2022-03-02T23:51:27Z,2022-03-02T23:51:20Z,"It seems pak-based workflow is ready to use now. Let's see if this works...

> > This is now possible with `?ignore` and `?ignore-before-r`: see some GHA oriented docs here-ish: https://github.com/r-lib/actions/tree/v2/setup-r-dependencies#ignoring-optional-dependencies-that-need-a-newer-r-version
https://github.com/r-lib/pak/issues/290#issuecomment-992400476",https://github.com/tidyverse/ggplot2/pull/4697,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4692,2021-12-08T14:09:40Z,2021-12-09T11:20:18Z,2021-12-09T07:19:38Z,Fix #4367 make sure that position_stack doesn't convert numeric NA to to logical NA,https://github.com/tidyverse/ggplot2/pull/4692,ggplot2
bkmgit,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/4686,2021-11-27T08:43:42Z,2021-12-06T13:19:46Z,2021-12-06T13:19:45Z,"There is no original source for the data. OpenML indicates it is in the public domain,https://www.openml.org/d/42225

Related issue https://github.com/tidyverse/ggplot2/issues/4681",https://github.com/tidyverse/ggplot2/pull/4686,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4683,2021-11-24T13:13:15Z,2021-12-06T09:42:58Z,2021-12-06T09:41:23Z,"Fix #4495

Correctly declare min, xmax, ymin, and ymax as aes needing values",https://github.com/tidyverse/ggplot2/pull/4683,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4682,2021-11-24T12:22:49Z,2021-12-06T09:42:42Z,2021-12-06T09:31:16Z,"Fix #4509 

This adds a simple check in secondary axes for whether there is any range available to make the monotonity check on",https://github.com/tidyverse/ggplot2/pull/4682,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4676,2021-11-18T19:44:11Z,2021-11-24T08:21:31Z,2021-11-24T08:21:09Z,"Fix #4510 

This PR fixes a rare bug when the scale derives new limits to make the terminal bins equal size and these limits ends up being invalid for the given transformation (e.g. `log10`)",https://github.com/tidyverse/ggplot2/pull/4676,ggplot2
jan-glx,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4675,2021-11-18T16:20:57Z,2021-11-24T08:24:45Z,2021-11-24T08:22:56Z,list(),https://github.com/tidyverse/ggplot2/pull/4675,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4674,2021-11-17T12:32:51Z,2021-11-24T08:26:21Z,2021-11-24T08:25:48Z,"Fix #4539 

This PR make it so that only file _or_ filename is passed on as argument to the custom device",https://github.com/tidyverse/ggplot2/pull/4674,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4673,2021-11-17T11:04:51Z,2021-11-24T08:56:23Z,2021-11-24T08:56:00Z,"Fix #4553 

The new-ish feature of adding back axes when the `facet_wrap()` grid was not complete was not tailored for all settings of `as.table` and `dir`

This is a reimplementation that doesn't make any assumptions about how the grid can or will be filled out",https://github.com/tidyverse/ggplot2/pull/4673,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4672,2021-11-16T14:58:46Z,2021-11-16T20:01:15Z,2021-11-16T20:00:38Z,"Fix #4559 

This is a simple fix that converts all instances of `NA` in the size aesthetic to `0`",https://github.com/tidyverse/ggplot2/pull/4672,ggplot2
thomasp85,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/4671,2021-11-16T13:49:47Z,2022-02-20T14:49:12Z,2021-12-06T09:40:27Z,"Fix #4580 

This PR makes `stat_bin_hex()` write `width` and `height` to the data which `geom_hex()` can pick up instead of deriving the resolution from data. This fixes issues with very sparse data where the bin resolution is not obvious from the bin centers",https://github.com/tidyverse/ggplot2/pull/4671,ggplot2
thomasp85,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/4670,2021-11-12T09:37:40Z,2021-11-16T20:05:26Z,2021-11-16T20:04:59Z,"Fix #4588 

This PR allows mix of 0-length and 1-length vectors (recycled to 0) in aesthetics... It both puts ggplot2 in line with our decided recycling rules and makes it less error-prone to set aesthetics to scalars as these values can now be mixed with all sizes of data (even 0)",https://github.com/tidyverse/ggplot2/pull/4670,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4669,2021-11-12T08:32:33Z,2021-11-16T20:08:54Z,2021-11-16T20:08:31Z,"Fix #4610 

This PR adds the same type of check for presence of axis that happens in `facet_wrap()` to `facet_grid()` before adding padding between the strip and axis",https://github.com/tidyverse/ggplot2/pull/4669,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4667,2021-11-11T12:22:49Z,2021-11-12T07:22:20Z,2021-11-12T07:21:26Z,Fix #4624 by treating ´NA` as `0` when calculating point size,https://github.com/tidyverse/ggplot2/pull/4667,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4666,2021-11-11T11:35:18Z,2021-11-12T07:19:47Z,2021-11-12T07:17:56Z,Fix #4646 - This PR adds a default value to the `weight` aesthetic ensuring that it doesn't emit a warning when given,https://github.com/tidyverse/ggplot2/pull/4666,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4664,2021-11-09T13:27:58Z,2021-11-10T18:57:00Z,2021-11-10T14:39:07Z,"This PR fixes #4653, but also goes a step further and makes the use of `lineend` and `linejoin` parameters more consistent across the board. 

Until now, `lineend` has only been possible to set in a few geom that has explicit ends in their lines, but this parameter affect the ends of stippled lines so should be exposed everywhere the `linetype` aesthetic is available.

Further, `linejoin` has also been unavailable in a wide range of geoms, meaning that the corners of e.g. box plots couldn't be controlled. This has now been fixed.

Across the board, the default `lineend` is now `""butt""`. For `linejoin` it is either `""mitre""` (for squar-ish geoms), or `""round""` (for smooth geoms).

All `draw_key_*` functions will now look for `linetype` and `lineend` in `params` if meaningful so that their display matches that shown in the plot.

**Note**: This PR removes the hack around rectangle joins we put in place cf https://github.com/tidyverse/ggplot2/issues/3037#issuecomment-457504667. This is to make behaviour consistent across geoms. I believe the existence of ragg and all the continued issues with the windows device means that we should not forever cripple our code base to appease it",https://github.com/tidyverse/ggplot2/pull/4664,ggplot2
JakeRuss,CONTRIBUTOR,closed,14,https://github.com/tidyverse/ggplot2/pull/4659,2021-11-04T19:28:48Z,2021-11-09T08:22:12Z,2021-11-09T08:22:01Z,"My vague recollection when I opened #4391, was I thought adding arrow was basically adding it to the list. As you can see from this commit it doesn't work. 

I expected the following to work, but no. 
````
library(sf)
library(ggplot2)

coords <- tibble::tibble(lat = c(26.562855, 28.538336), 
                         lon = c(-81.949532, -81.379234)) %>%
  st_as_sf(coords = c(""lon"", ""lat""),  crs = 4326, remove = FALSE) %>%
  st_coordinates() %>%
  st_linestring()

ggplot() + 
  geom_sf(data = coords, size = 2, 
          arrow = arrow(angle = 45, ends = ""last"", type = ""open"", length = unit(0.5, ""inches"")))
````

I'm not sure I understand enough to complete this task ",https://github.com/tidyverse/ggplot2/pull/4659,ggplot2
r2evans,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4657,2021-10-29T16:09:12Z,2021-11-03T07:16:53Z,2021-11-03T07:16:40Z,list(),https://github.com/tidyverse/ggplot2/pull/4657,ggplot2
thomasp85,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/4656,2021-10-29T12:36:33Z,2021-11-01T18:16:28Z,2021-11-01T18:16:28Z,"This updates our CI scripts to the latest version, hopefully removing the need for continuous keeping up with best practices.",https://github.com/tidyverse/ggplot2/pull/4656,ggplot2
bersbersbers,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/4654,2021-10-29T11:24:26Z,2022-03-20T15:34:18Z,2022-03-20T15:34:15Z,"Fix ""collapsing to unique 'x' values"" warnings. Closes #4455

A test will follow in a later commit.",https://github.com/tidyverse/ggplot2/pull/4654,ggplot2
eliocamp,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/4652,2021-10-28T20:14:13Z,2021-11-09T08:17:05Z,2021-11-09T08:16:58Z,"This is a refreshed version of #2320
``` r
library(ggplot2)

v <- ggplot(faithfuld, aes(waiting, eruptions, z = density))
v + geom_contour(binwidth = 0.001)
```

![](https://i.imgur.com/Pe6Hvkm.png)

``` r
my_breaks <- function(range, binwidth) {
  b <- scales::fullseq(range, binwidth)
  b[b != 0.002]  # remove the 0.002 contour
}

v + geom_contour(breaks = my_breaks, binwidth = 0.001)
```

![](https://i.imgur.com/MAufdxh.png)

<sup>Created on 2021-10-28 by the [reprex package](https://reprex.tidyverse.org) (v2.0.0)</sup>",https://github.com/tidyverse/ggplot2/pull/4652,ggplot2
alonmar,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4640,2021-10-09T06:42:09Z,2021-10-29T12:22:27Z,2021-10-29T12:22:18Z,This issue added in doc  #4615 ,https://github.com/tidyverse/ggplot2/pull/4640,ggplot2
benjaminrich,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/4637,2021-10-07T20:13:04Z,2022-03-14T21:29:14Z,2022-03-14T21:29:14Z,"This is intended to address #4636.

I could really use some help with this, as I've never contributed to ggplot2 before, and I'm not really sure of the best way to do this.

It's a simple enough change, should not break anything, and it does solve the problem described in #4636 if you add `trans= ~ f(.)` inside `annotation_logticks()`, like this:

```r
df1 <- data.frame(x=0:10, y=seq(10, 0, len=11))
df2 <- data.frame(x=0:10, y=seq(0.1, 1000, len=11))

ylim1 <- c(0, 10)
ylim2 <- log10(c(0.1, 1000))

f <- function(y) (diff(ylim1)/diff(ylim2))*(y - min(ylim2)) + min(ylim1)
g <- function(y) (diff(ylim2)/diff(ylim1))*(y - min(ylim1)) + min(ylim2)


ggplot() +
  geom_col(data=df1, aes(x=x, y=y, color=""linear scale""), alpha=0.2) +
  geom_line(data=df2, aes(x=x, y=f(log10(y)), color=""log scale""), size=2) +
  scale_y_continuous(""Linear Scale"",
    sec.axis=sec_axis(~ g(.), name=""Log Scale"", labels=function(x) 10^x)) +
  annotation_logticks(sides=""r"", color=""red"", trans= ~ f(.)) +
  scale_color_manual(breaks=c(""linear scale"", ""log scale""), values=c(""blue"", ""red"")) +
  theme_classic() +
  theme(
    axis.title.y       = element_text(color=""blue""),
    axis.text.y        = element_text(color=""blue""),
    axis.ticks.y       = element_line(color=""blue""),
    axis.title.y.right = element_text(color=""red""),
    axis.text.y.right  = element_text(color=""red""),
    axis.ticks.y.right = element_line(color=""red""))
```
![image](https://user-images.githubusercontent.com/17572252/136455192-d5c5b093-e21d-4bf3-b2e5-28ff49953d1b.png)
",https://github.com/tidyverse/ggplot2/pull/4637,ggplot2
laresbernardo,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4634,2021-10-01T19:27:20Z,2022-03-15T21:58:12Z,2022-03-15T21:58:12Z,"Same format for method and formula, using `param = value`. [Fixed](https://github.com/laresbernardo/ggplot2/commit/f35b764136a5ee48497d90bd4ccfd259db3132bb) and requesting a merge.",https://github.com/tidyverse/ggplot2/pull/4634,ggplot2
dgromer,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4625,2021-09-22T08:00:17Z,2021-09-22T08:06:38Z,2021-09-22T08:06:38Z,Fixes https://github.com/hadley/ggplot2-book/issues/276 as proposed in https://github.com/hadley/ggplot2-book/pull/277#issuecomment-923920536,https://github.com/tidyverse/ggplot2/pull/4625,ggplot2
banfai,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4623,2021-09-18T19:01:22Z,2021-09-18T19:02:20Z,2021-09-18T19:02:20Z,list(),https://github.com/tidyverse/ggplot2/pull/4623,ggplot2
teunbrand,CONTRIBUTOR,closed,15,https://github.com/tidyverse/ggplot2/pull/4619,2021-09-15T20:54:05Z,2021-09-20T08:51:22Z,2021-09-20T07:56:11Z,"#### Why this PR?

In ggplot2 v3.3.4, #4471 was introduced to allow fewer items in `values` than auto-detected breaks.
This has had some consequences, most notably that an extra legend key was produced if a named `values` was longer than auto-detected `breaks` (#4511, #4534, #4556, #4545). One workaround is currently to use `limits = force`, which feels unneccessary (https://github.com/tidyverse/ggplot2/issues/4511#issuecomment-866185530). Additionally, the ordering of the legend keys was effected by the names in the `values` argument (#4616).

#### What does this PR do?

This PR aims to revert back to the old behaviour (in most part), while preserving the spirit of #4471. It does so by replacing a vector-based `limits` by a function-based `limits` that intersects the names of the values by the observed limits.

#### Foreseen problems

Both this PR and #4547 aim to do the same thing and therefore these PRs are in conflict. This PR solely affects manual scales, whereas all scales are affected in #4547.

#### Examples

``` r
library(ggplot2)

p <- ggplot(mpg, aes(displ, hwy, colour = drv)) +
  geom_point(size = 2)

values <- c(""f"" = ""dodgerblue"", ""r"" = ""tomato"", ""4"" = ""limegreen"", 
            ""dummy"" = ""black"")

# Does not change default order (#4616), nor produces extra key (#4511)
p + scale_colour_manual(
    values = values
  )
```

![](https://i.imgur.com/imuZLDV.png)

``` r
# Can add extra key by setting limits
# The plot is the same as CRAN version without limits argument
p + scale_colour_manual(
  values = values,
  limits = names(values)
)
```

![](https://i.imgur.com/NURtrpa.png)

``` r
# Can set undefined values to na.value (spirit of #4471)
p + scale_colour_manual(
  values = values[1:2]
)
```

![](https://i.imgur.com/ywpuHpy.png)

``` r
# Can set fewer keys by setting breaks (same as CRAN version)
p + scale_colour_manual(
  values = values,
  breaks = names(values)[1:2]
)
```

![](https://i.imgur.com/Z4kLI57.png)

<sup>Created on 2021-09-15 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>

",https://github.com/tidyverse/ggplot2/pull/4619,ggplot2
averiperny,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/4585,2021-08-16T18:59:03Z,2021-08-24T14:05:02Z,2021-08-24T14:05:01Z,The ggplot2 cheat sheet file name changed so I updated the link here.,https://github.com/tidyverse/ggplot2/pull/4585,ggplot2
michaelgrund,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/4583,2021-08-12T13:41:14Z,2021-09-08T07:49:20Z,2021-09-07T14:30:24Z,"~~The filename of ``scale-discrete.r`` contains a hyphen right before the .r ending which results e.g. in broken references in several other functions.~~

As I misunderstood how the generation of the documentation works, here's now an adjusted PR which fixes an incorrect name in ``scale_discrete.Rd``.  

The wrong name results in broken links which currently appear when referencing to ```scale_x_discrete()``` e.g. from [scale_continous](https://ggplot2.tidyverse.org/reference/scale_continuous.html).",https://github.com/tidyverse/ggplot2/pull/4583,ggplot2
teunbrand,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4574,2021-08-04T21:14:58Z,2021-08-06T08:59:44Z,2021-08-04T21:55:55Z,There is a very niche bug in the legend drawing code that only affects plotting when the extracted layer data contains a single column. I ran into this bug when I was experimenting with a geom that has a `fill` aesthetic but not an `alpha` aesthetic.,https://github.com/tidyverse/ggplot2/pull/4574,ggplot2
krassowski,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/4563,2021-07-22T19:09:59Z,2021-08-24T13:44:32Z,2021-08-24T13:42:35Z,"Just fixing a typo discovered when looking at this entry find out what was the reason for deprecation and whether there are some ramifications, so having a correct link might be helpful to others too (if you agree, please also consider updating it manually in the release notes on GitHub).

The correct issue is #4097 but #4094 was referenced in the changelog.",https://github.com/tidyverse/ggplot2/pull/4563,ggplot2
aijordan,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/4560,2021-07-22T14:57:46Z,2021-07-22T15:08:29Z,2021-07-22T15:08:29Z,"Allowing `breaks` in `stat_bin()` to accept functions is useful in the context of grouping structures. Particularly, when data are mixed discrete and continuous, e.g., precipitation.

The changes also enable facet histograms for estimators with variable bin width, e.g, equal area of all blocks, or the ""essential histogram"" ([doi:10.1093/biomet/asz081](https://doi.org/10.1093/biomet/asz081)).

This PR is in the same spirit as #1890
",https://github.com/tidyverse/ggplot2/pull/4560,ggplot2
stragu,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4555,2021-07-13T04:54:10Z,2021-07-13T22:31:38Z,2021-07-13T14:06:50Z,"Apologies for not testing building the package before submitting the pull request, but given that this only touches the function documentation text, I did not think it would be necessary.",https://github.com/tidyverse/ggplot2/pull/4555,ggplot2
banfai,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/4547,2021-07-07T08:59:12Z,2021-09-19T00:05:49Z,2021-09-19T00:05:45Z,"Issue introduced in #4471, if there are extra named values in a manual scale then they will show up on the legend even with `drop = TRUE`.

Question: should these values be forced with `drop = FALSE`? (currently it's possible)",https://github.com/tidyverse/ggplot2/pull/4547,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4543,2021-07-05T10:58:02Z,2021-09-07T14:40:39Z,2021-09-07T14:40:29Z,"Fix #4540

Currently the CRAN version of pkgdown seems to have a bug on linking topics. @maelle adviced me to use the dev version of pkgdown (c.f. https://github.com/r-lib/pkgdown/issues/1733), and I confirmed it works as expected on my forked repo: https://yutannihilation.github.io/ggplot2/dev/reference/theme.html",https://github.com/tidyverse/ggplot2/pull/4543,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/4530,2021-06-23T16:15:50Z,2021-06-24T12:29:06Z,2021-06-24T08:11:29Z,fix #4527,https://github.com/tidyverse/ggplot2/pull/4530,ggplot2
clauswilke,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/4528,2021-06-23T14:40:14Z,2021-06-23T16:13:41Z,2021-06-23T16:13:41Z,Creating PR against master for now so the automated tests are run.,https://github.com/tidyverse/ggplot2/pull/4528,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4525,2021-06-22T08:33:34Z,2021-06-28T07:12:10Z,2021-06-28T07:12:10Z,This release fixes a couple of issues related to `ggsave()` and `geom_abline()` that surfaced after the 3.3.4 release and are too annoying to wait for the next big release,https://github.com/tidyverse/ggplot2/pull/4525,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4523,2021-06-19T07:55:29Z,2021-06-22T08:15:05Z,2021-06-22T08:14:56Z,"Fix #4521 

#4164 adds `bg` arg to `ggsave()`, but `grDevices::win.metafile()` is the exception in that it doesn't have `bg` argument. We need to absorb it in the wrapper function.",https://github.com/tidyverse/ggplot2/pull/4523,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/4522,2021-06-18T13:39:47Z,2021-11-09T13:19:19Z,2021-11-09T08:18:31Z,"Now that vdiffr doesn't depend on `context()` (c.f., #4503), it's possible to migrate to testthat 3e.

* Remove `context()`
* `expect_is()` -> `expect_s3_class()` or `expect_type()`
* `expect_equivalent()` -> `expect_equal(ignore_attr = TRUE)`
* Let `expect_equal()` ignore the environments of quosures
* Ignore multiple warnings as `expect_warning()` now captures only one warning
* Skip the test about `stringsAsFactors` on R >=4.0",https://github.com/tidyverse/ggplot2/pull/4522,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4518,2021-06-17T13:18:21Z,2021-06-17T14:39:18Z,2021-06-17T14:39:02Z,"* Use the dev version
* Revert the tweaked settings for GitHub Actions CI
* Add a note that `+ ggsave()` no longer works, fix #4513",https://github.com/tidyverse/ggplot2/pull/4518,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4515,2021-06-17T06:36:34Z,2021-06-17T07:28:27Z,2021-06-17T07:28:27Z,Merge in release to master,https://github.com/tidyverse/ggplot2/pull/4515,ggplot2
lionel-,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/4503,2021-06-08T12:22:03Z,2021-06-09T13:24:29Z,2021-06-09T13:07:50Z,"See https://vdiffr.r-lib.org/news/index.html#vdiffr-1-0-0-2021-06-08 (blog post upcoming).

Practically, the switch to testthat 3e means that figures are now stored in `tests/testthat/_snaps/` instead of `tests/figs/`. This causes several plots to hit the 100 character limits for relative paths inside a package. To work around this I have shortened several titles in the second commit.

The SVG engine update causes a few differences in snapshots. I have reviewed all of them and the changes seem fine:

- Points now look smaller. They actually have the expected size.
- Some textboxes have slightly different extents, which is expected.
- Colour gradients in legends now fit their boxes better.",https://github.com/tidyverse/ggplot2/pull/4503,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4502,2021-06-06T23:51:42Z,2021-11-02T23:32:31Z,2021-11-02T23:32:27Z,"This code is heavily used in our examples. Shouldn't we set a seed to make this deterministic?

```r
dsub <- diamonds[sample(nrow(diamonds), 1000), ]
```",https://github.com/tidyverse/ggplot2/pull/4502,ggplot2
clauswilke,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/4496,2021-05-31T17:31:10Z,2021-06-01T08:52:55Z,2021-06-01T08:52:55Z,"Set `default_crs = NULL`, as discussed in #4494.",https://github.com/tidyverse/ggplot2/pull/4496,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4488,2021-05-25T13:23:51Z,2021-05-25T21:11:17Z,2021-05-25T21:11:13Z,"* Add R 4.1 runners
* Update visual cases",https://github.com/tidyverse/ggplot2/pull/4488,ggplot2
thomasp85,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/4482,2021-05-19T09:29:13Z,2022-04-01T19:50:31Z,2021-06-07T07:57:02Z,"Fix #4477

As discussed, this provides a `get_alt_text()` function that will either pull a string from `labels$alt` or synthesise a description based on the content of the plot.

@Hadley LMK if you don't have time to look at this before the release",https://github.com/tidyverse/ggplot2/pull/4482,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4475,2021-05-11T12:47:41Z,2021-05-17T06:23:41Z,2021-05-17T06:23:41Z,"This PR fixes the ""statefulness"" of the `mapping` field introduced in #4265 by aligning it with how we now treat `geom_params` and `stat_params`. In fact the state has existed since the introduction of `LayerSf` where the mapping would be modified to ensure the geometry was catched.

This clean-up leaves a couple of dangling issues, mainly the fact that `default_mapping` no longer needs to be passed around. It is kept as-is so we don't change the signature of the guide calculation and break extension packages. We can remove it entirely when we rewrite the guide functionality to ggproto",https://github.com/tidyverse/ggplot2/pull/4475,ggplot2
thomasp85,MEMBER,closed,10,https://github.com/tidyverse/ggplot2/pull/4471,2021-05-07T08:56:16Z,2021-05-10T08:45:25Z,2021-05-10T08:45:24Z,"Fix #3451 

This PR relaxes the requirement on the manual scale `values` vector and allow it to contain fewer elements than the data. Non-existing values are implicitly considered `NA` and mapped to the `na.value` value",https://github.com/tidyverse/ggplot2/pull/4471,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4470,2021-05-07T08:22:02Z,2021-05-10T07:53:20Z,2021-05-10T07:53:20Z,"Fix #4149 

This PR removes the inheritance across fill/colour defaults in discrete scales making it behave as continuous and binned scales. It further adds type checking to default functions",https://github.com/tidyverse/ggplot2/pull/4470,ggplot2
teunbrand,CONTRIBUTOR,open,8,https://github.com/tidyverse/ggplot2/pull/4467,2021-05-05T19:09:34Z,2022-03-24T19:19:21Z,list(),"This PR aims to implement drawing axes at interior facets proposed in #4064. It implements this for `facet_wrap()` as well as for `facet_grid()`. While the changes for `facet_wrap()` are quite minimal, for `facet_grid()` some additional code was borrowed from `facet_wrap()` to draw additional axes. 

A few discussion points:
* With regards to the main challenge (the name of the argument), I went with `draw.axes` because it felt somewhat more intuitive than just `axes` to me. I'm not particularly attached to the name though.
* I also think the unit tests might still be improved, they now require drawing four plots which doesn't make the tests particularly lightweight.
* Lastly, https://github.com/tidyverse/ggplot2/issues/4064#issuecomment-646564182 mentions an option for omitting the labels at interior axes. I could add this, but wanted to ask if the maintainers approve of this first.


Two small demonstrations:
``` r
library(ggplot2)

df <- data.frame(
  x = 1, y = 1, facet = LETTERS[1:4]
)

ggplot(df, aes(x, y)) +
  geom_point() +
  facet_wrap(vars(facet), draw.axes = ""all"")
```

![](https://i.imgur.com/A4Xcc91.png)

``` r
df <- data.frame(
  x = 1:4, y = 1:4, 
  fx = c(""A"", ""A"", ""B"", ""B""),
  fy = c(""c"", ""d"", ""c"", ""d"")
)

ggplot(df, aes(x, y)) +
  geom_point() +
  facet_grid(vars(fy), vars(fx), draw.axes = ""all"")
```

![](https://i.imgur.com/v3P8Ief.png)

<sup>Created on 2021-05-05 by the [reprex package](https://reprex.tidyverse.org) (v1.0.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/4467,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4461,2021-05-03T11:48:46Z,2021-05-03T12:00:53Z,2021-05-03T12:00:52Z,Fix #4459 ,https://github.com/tidyverse/ggplot2/pull/4461,ggplot2
clauswilke,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/4456,2021-04-28T15:43:45Z,2021-05-05T16:19:20Z,2021-05-05T07:03:30Z,"Addresses this comment: https://github.com/tidyverse/ggplot2/pull/4450#issuecomment-828231861

Reprex:
``` r
library(ggplot2)

v <- ggplot(faithfuld, aes(waiting, eruptions, fill = density)) +
  geom_tile()

options(ggplot2.continuous.fill = ""viridis"")
v
```

![](https://i.imgur.com/3yHYxJc.png)

``` r
v + scale_fill_binned()
```

![](https://i.imgur.com/38nVnol.png)

``` r
options(ggplot2.continuous.fill = scale_fill_viridis_c)
v
```

![](https://i.imgur.com/azLyBam.png)

``` r
v + scale_fill_binned()
```

![](https://i.imgur.com/uoy4dsl.png)

<sup>Created on 2021-04-28 by the [reprex package](https://reprex.tidyverse.org) (v1.0.0)</sup>",https://github.com/tidyverse/ggplot2/pull/4456,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4454,2021-04-27T12:30:06Z,2021-04-28T08:50:24Z,2021-04-28T07:50:54Z,"(Fix https://github.com/tidyverse/ggplot2/pull/4446#issuecomment-826799440)

Tests in `tests/testthat/test-prohibited-functions.R` needs to parse R files to do static analysis. But, files are not always available, so this test might fail and `covr::coverage()` is the case.

https://github.com/tidyverse/ggplot2/blob/bb8f960356a55fe2e72cfd0569179835818f00d8/tests/testthat/test-prohibited-functions.R#L49-L51

This pull requests let the test skip on `covr::coverage()`, and also on CRAN for safety.",https://github.com/tidyverse/ggplot2/pull/4454,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4453,2021-04-27T11:51:33Z,2021-04-29T11:47:33Z,2021-04-29T11:47:33Z,"Fix #4141

This PR fixes `label_bquote()` so it can once again look up functions etc from the calling environment",https://github.com/tidyverse/ggplot2/pull/4453,ggplot2
clauswilke,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/4450,2021-04-26T16:35:15Z,2021-04-28T15:26:16Z,2021-04-28T15:26:12Z,Improve color scale documentation. Closes #4415.,https://github.com/tidyverse/ggplot2/pull/4450,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/4449,2021-04-26T15:09:49Z,2021-04-27T13:57:52Z,2021-04-27T13:53:06Z,"For `geom_density_2d()`, we have versions with and versions without underscore before the 2d. But for `geom_bin2d()`, we don't currently have those, even though we do for `geom_stat_2d()`. This PR fixes this, by adding `geom_bin_2d()`.",https://github.com/tidyverse/ggplot2/pull/4449,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4448,2021-04-26T08:55:17Z,2021-05-03T08:28:34Z,2021-05-03T08:28:34Z,"Fix #4204 

This PR fixed an unnoticed issue (before #4204) where layers kept a new state after rendering which could lead to a change in appearance after the first render.

The issue was introduced when I added the `setup_params()` hook to geoms to make them symmetrical with all other ggproto objects. Because geom params are used in different calls I overwrote the original geom_params field which introduced a state.

While fixing this I noticed that `finish_layer()` uses the un-computed stat_params, so I've added the same fix for that as well...

The fix is basically to have a second field for the temporary computed params that can be used throughout the rendering. Once it is used the last time it will be reset to `NULL` making layer become borderline stateless again. I say borderline, because `geom_params` is used in both `ggplot_build()` and `ggplot_gtable()` so calling only the first will leave it with a state. This is not an issue as such since the state is not infectious as it will be recreated every time the plot gets rendered",https://github.com/tidyverse/ggplot2/pull/4448,ggplot2
aphalo,CONTRIBUTOR,closed,9,https://github.com/tidyverse/ggplot2/pull/4447,2021-04-24T18:40:12Z,2021-05-06T12:10:26Z,2021-05-06T12:10:25Z,"Fix #4169

In `geom_text()` when `abs(angle) > 45` justification applied based on the orientation of the text labels is done along the x axis for `vjust` and along the y axis for `hjust`. For `""outward""` and `""inward""` to behave correctly, the value tested against 0.5 needs to change from x to y and vice versa based on the value of `angle` in each row in `data`. 

This pull request adds code to `draw_panel` in `GeomText`  to handle `""outward""` and `""inward""` as special cases.

Reprex with 'ggplot2' 3.3.3

``` r
library(ggplot2)

my.cars <- mtcars[c(TRUE, FALSE, FALSE, FALSE), ]

p <- ggplot(my.cars, aes(wt, mpg, label = rownames(my.cars))) +
  geom_point(colour = ""red"")

p + geom_text(hjust = ""outward"")
```

![](https://i.imgur.com/0Mn8yYA.png)

``` r
p + geom_text(hjust = ""outward"", angle = 30)
```

![](https://i.imgur.com/Dc5y46U.png)

``` r
p + geom_text(hjust = ""outward"", angle = 70)
```

![](https://i.imgur.com/fgtViuR.png)

<sup>Created on 2021-04-24 by the [reprex package](https://reprex.tidyverse.org) (v2.0.0)</sup>

<details style=""margin-bottom:10px;"">
<summary>
Session info
</summary>

``` r
sessioninfo::session_info()
#> - Session info ---------------------------------------------------------------
#>  setting  value                       
#>  version  R version 4.0.5 (2021-03-31)
#>  os       Windows 10 x64              
#>  system   x86_64, mingw32             
#>  ui       RTerm                       
#>  language (EN)                        
#>  collate  English_Finland.1252        
#>  ctype    English_Finland.1252        
#>  tz       Europe/Helsinki             
#>  date     2021-04-24                  
#> 
#> - Packages -------------------------------------------------------------------
#>  package     * version date       lib source        
#>  assertthat    0.2.1   2019-03-21 [1] CRAN (R 4.0.0)
#>  backports     1.2.1   2020-12-09 [1] CRAN (R 4.0.3)
#>  cli           2.4.0   2021-04-05 [1] CRAN (R 4.0.4)
#>  colorspace    2.0-0   2020-11-11 [1] CRAN (R 4.0.3)
#>  crayon        1.4.1   2021-02-08 [1] CRAN (R 4.0.3)
#>  curl          4.3     2019-12-02 [1] CRAN (R 4.0.0)
#>  DBI           1.1.1   2021-01-15 [1] CRAN (R 4.0.3)
#>  digest        0.6.27  2020-10-24 [1] CRAN (R 4.0.3)
#>  dplyr         1.0.5   2021-03-05 [1] CRAN (R 4.0.4)
#>  ellipsis      0.3.1   2020-05-15 [1] CRAN (R 4.0.0)
#>  evaluate      0.14    2019-05-28 [1] CRAN (R 4.0.0)
#>  fansi         0.4.2   2021-01-15 [1] CRAN (R 4.0.3)
#>  farver        2.1.0   2021-02-28 [1] CRAN (R 4.0.4)
#>  fs            1.5.0   2020-07-31 [1] CRAN (R 4.0.2)
#>  generics      0.1.0   2020-10-31 [1] CRAN (R 4.0.3)
#>  ggplot2     * 3.3.3   2020-12-30 [1] CRAN (R 4.0.5)
#>  glue          1.4.2   2020-08-27 [1] CRAN (R 4.0.2)
#>  gtable        0.3.0   2019-03-25 [1] CRAN (R 4.0.0)
#>  highr         0.9     2021-04-16 [1] CRAN (R 4.0.4)
#>  htmltools     0.5.1.1 2021-01-22 [1] CRAN (R 4.0.3)
#>  httr          1.4.2   2020-07-20 [1] CRAN (R 4.0.2)
#>  knitr         1.32    2021-04-14 [1] CRAN (R 4.0.4)
#>  labeling      0.4.2   2020-10-20 [1] CRAN (R 4.0.3)
#>  lifecycle     1.0.0   2021-02-15 [1] CRAN (R 4.0.4)
#>  magrittr      2.0.1   2020-11-17 [1] CRAN (R 4.0.3)
#>  mime          0.10    2021-02-13 [1] CRAN (R 4.0.3)
#>  munsell       0.5.0   2018-06-12 [1] CRAN (R 4.0.0)
#>  pillar        1.6.0   2021-04-13 [1] CRAN (R 4.0.5)
#>  pkgconfig     2.0.3   2019-09-22 [1] CRAN (R 4.0.0)
#>  purrr         0.3.4   2020-04-17 [1] CRAN (R 4.0.0)
#>  R6            2.5.0   2020-10-28 [1] CRAN (R 4.0.3)
#>  reprex        2.0.0   2021-04-02 [1] CRAN (R 4.0.4)
#>  rlang         0.4.10  2020-12-30 [1] CRAN (R 4.0.3)
#>  rmarkdown     2.7     2021-02-19 [1] CRAN (R 4.0.4)
#>  scales        1.1.1   2020-05-11 [1] CRAN (R 4.0.0)
#>  sessioninfo   1.1.1   2018-11-05 [1] CRAN (R 4.0.0)
#>  stringi       1.5.3   2020-09-09 [1] CRAN (R 4.0.2)
#>  stringr       1.4.0   2019-02-10 [1] CRAN (R 4.0.0)
#>  styler        1.4.1   2021-03-30 [1] CRAN (R 4.0.4)
#>  tibble        3.1.1   2021-04-18 [1] CRAN (R 4.0.4)
#>  tidyselect    1.1.0   2020-05-11 [1] CRAN (R 4.0.0)
#>  utf8          1.2.1   2021-03-12 [1] CRAN (R 4.0.4)
#>  vctrs         0.3.7   2021-03-29 [1] CRAN (R 4.0.4)
#>  withr         2.4.2   2021-04-18 [1] CRAN (R 4.0.4)
#>  xfun          0.22    2021-03-11 [1] CRAN (R 4.0.4)
#>  xml2          1.3.2   2020-04-23 [1] CRAN (R 4.0.0)
#>  yaml          2.2.1   2020-02-01 [1] CRAN (R 4.0.0)
#> 
#> [1] C:/Users/Aphalo/Documents/R/win-library/4.0
#> [2] C:/Program Files/R/R-4.0.5/library
```

</details>

Similar reprex, adding one example, after applying this pull request to current 'master' branch from GitHub.

``` r
library(ggplot2)

my.cars <- mtcars[c(TRUE, FALSE, FALSE, FALSE), ]

p <- ggplot(my.cars, aes(wt, mpg, label = rownames(my.cars))) +
  geom_point(colour = ""red"")

p + geom_text(hjust = ""outward"")
```

![](https://i.imgur.com/KGUKqfn.png)

``` r
p + geom_text(hjust = ""outward"", angle = 30)
```

![](https://i.imgur.com/02pLKsC.png)

``` r
p + geom_text(hjust = ""outward"", angle = 70)
```

![](https://i.imgur.com/zfZA61A.png)

``` r
p + geom_text(hjust = ""outward"", angle = 90)
```

![](https://i.imgur.com/h4PvmEZ.png)

<sup>Created on 2021-04-25 by the [reprex package](https://reprex.tidyverse.org) (v2.0.0)</sup>

<details style=""margin-bottom:10px;"">
<summary>
Session info
</summary>

``` r
sessioninfo::session_info()
#> - Session info ---------------------------------------------------------------
#>  setting  value                       
#>  version  R version 4.0.5 (2021-03-31)
#>  os       Windows 10 x64              
#>  system   x86_64, mingw32             
#>  ui       RTerm                       
#>  language (EN)                        
#>  collate  English_Finland.1252        
#>  ctype    English_Finland.1252        
#>  tz       Europe/Helsinki             
#>  date     2021-04-25                  
#> 
#> - Packages -------------------------------------------------------------------
#>  package     * version    date       lib source        
#>  assertthat    0.2.1      2019-03-21 [1] CRAN (R 4.0.0)
#>  backports     1.2.1      2020-12-09 [1] CRAN (R 4.0.3)
#>  cli           2.4.0      2021-04-05 [1] CRAN (R 4.0.4)
#>  colorspace    2.0-0      2020-11-11 [1] CRAN (R 4.0.3)
#>  crayon        1.4.1      2021-02-08 [1] CRAN (R 4.0.3)
#>  curl          4.3        2019-12-02 [1] CRAN (R 4.0.0)
#>  DBI           1.1.1      2021-01-15 [1] CRAN (R 4.0.3)
#>  digest        0.6.27     2020-10-24 [1] CRAN (R 4.0.3)
#>  dplyr         1.0.5      2021-03-05 [1] CRAN (R 4.0.4)
#>  ellipsis      0.3.1      2020-05-15 [1] CRAN (R 4.0.0)
#>  evaluate      0.14       2019-05-28 [1] CRAN (R 4.0.0)
#>  fansi         0.4.2      2021-01-15 [1] CRAN (R 4.0.3)
#>  farver        2.1.0      2021-02-28 [1] CRAN (R 4.0.4)
#>  fs            1.5.0      2020-07-31 [1] CRAN (R 4.0.2)
#>  generics      0.1.0      2020-10-31 [1] CRAN (R 4.0.3)
#>  ggplot2     * 3.3.3.9000 2021-04-24 [1] local         
#>  glue          1.4.2      2020-08-27 [1] CRAN (R 4.0.2)
#>  gtable        0.3.0      2019-03-25 [1] CRAN (R 4.0.0)
#>  highr         0.9        2021-04-16 [1] CRAN (R 4.0.4)
#>  htmltools     0.5.1.1    2021-01-22 [1] CRAN (R 4.0.3)
#>  httr          1.4.2      2020-07-20 [1] CRAN (R 4.0.2)
#>  knitr         1.32       2021-04-14 [1] CRAN (R 4.0.4)
#>  labeling      0.4.2      2020-10-20 [1] CRAN (R 4.0.3)
#>  lifecycle     1.0.0      2021-02-15 [1] CRAN (R 4.0.4)
#>  magrittr      2.0.1      2020-11-17 [1] CRAN (R 4.0.3)
#>  mime          0.10       2021-02-13 [1] CRAN (R 4.0.3)
#>  munsell       0.5.0      2018-06-12 [1] CRAN (R 4.0.0)
#>  pillar        1.6.0      2021-04-13 [1] CRAN (R 4.0.5)
#>  pkgconfig     2.0.3      2019-09-22 [1] CRAN (R 4.0.0)
#>  purrr         0.3.4      2020-04-17 [1] CRAN (R 4.0.0)
#>  R6            2.5.0      2020-10-28 [1] CRAN (R 4.0.3)
#>  reprex        2.0.0      2021-04-02 [1] CRAN (R 4.0.4)
#>  rlang         0.4.10     2020-12-30 [1] CRAN (R 4.0.3)
#>  rmarkdown     2.7        2021-02-19 [1] CRAN (R 4.0.4)
#>  scales        1.1.1      2020-05-11 [1] CRAN (R 4.0.0)
#>  sessioninfo   1.1.1      2018-11-05 [1] CRAN (R 4.0.0)
#>  stringi       1.5.3      2020-09-09 [1] CRAN (R 4.0.2)
#>  stringr       1.4.0      2019-02-10 [1] CRAN (R 4.0.0)
#>  styler        1.4.1      2021-03-30 [1] CRAN (R 4.0.4)
#>  tibble        3.1.1      2021-04-18 [1] CRAN (R 4.0.4)
#>  tidyselect    1.1.0      2020-05-11 [1] CRAN (R 4.0.0)
#>  utf8          1.2.1      2021-03-12 [1] CRAN (R 4.0.4)
#>  vctrs         0.3.7      2021-03-29 [1] CRAN (R 4.0.4)
#>  withr         2.4.2      2021-04-18 [1] CRAN (R 4.0.4)
#>  xfun          0.22       2021-03-11 [1] CRAN (R 4.0.4)
#>  xml2          1.3.2      2020-04-23 [1] CRAN (R 4.0.0)
#>  yaml          2.2.1      2020-02-01 [1] CRAN (R 4.0.0)
#> 
#> [1] C:/Users/Aphalo/Documents/R/win-library/4.0
#> [2] C:/Program Files/R/R-4.0.5/library
```

</details>

This may change the rendering of some old plots, but the old behavior is in my view wrong, and this pull request a bug fix. 
",https://github.com/tidyverse/ggplot2/pull/4447,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4446,2021-04-24T13:07:45Z,2021-04-26T12:35:13Z,2021-04-26T12:22:54Z,Fix #4445,https://github.com/tidyverse/ggplot2/pull/4446,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4442,2021-04-22T11:25:17Z,2021-04-27T08:03:54Z,2021-04-27T08:03:54Z,"Fix #4210 

This fixes a bug when reversing the bin guide because the terminal row that held irrelevant `NA` values ended up as the first row",https://github.com/tidyverse/ggplot2/pull/4442,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4441,2021-04-22T09:58:37Z,2021-04-26T07:47:58Z,2021-04-26T07:47:58Z,"Fix #4289 

This PR changes the order of calls in `labels()` to make sure that any guide_axis parts gets correctly applied",https://github.com/tidyverse/ggplot2/pull/4441,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4439,2021-04-21T11:40:53Z,2021-04-21T12:15:15Z,2021-04-21T12:15:14Z,"Fix #4368 

This PR implements the fix proposed by @yutannihilation in the issue",https://github.com/tidyverse/ggplot2/pull/4439,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4437,2021-04-20T09:03:21Z,2021-04-22T07:05:30Z,2021-04-22T07:05:30Z,"Fix #3635 

This PR aims to address the issue of correctly justifying legends if they are larger than the space available. It does so by setting the viewport size to the size of the legend...

re-rendering of the issue example to show it is working

``` r
library(ggplot2)
library(magrittr)

p <- iris %>%
  ggplot(
    aes(x = Sepal.Length, 
        y = Sepal.Width, 
        color = Petal.Length, 
        shape = Species, 
        fill = Petal.Width)
  ) + 
  geom_point() + 
  theme(legend.position = ""bottom"")

p + theme(legend.justification = ""left"")
```

![](https://i.imgur.com/iEvU8gw.png)

``` r
p + theme(legend.justification = ""right"")
```

![](https://i.imgur.com/jH3l8hw.png)

<sup>Created on 2021-04-20 by the [reprex package](https://reprex.tidyverse.org) (v2.0.0)</sup>

(@clauswilke I'm setting you as reviewer as I think you are the other person most familiar with the intricacies of grid. If you don't have time just let me know)",https://github.com/tidyverse/ggplot2/pull/4437,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4436,2021-04-20T07:44:48Z,2021-04-21T09:32:57Z,2021-04-21T09:32:57Z,,https://github.com/tidyverse/ggplot2/pull/4436,ggplot2
topepo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4435,2021-04-19T18:26:19Z,2021-04-20T07:41:49Z,2021-04-20T07:41:07Z,"Closes #3806

``` r
library(ggplot2)
library(locfit)
#> locfit 1.5-9.4    2020-03-24

mtcars$x <- mtcars$disp
grid <- seq(71, 470, length.out = 100)
fit <- locfit::locfit(mpg ~ x, data = mtcars)
prd <- predict(fit, data.frame(x = grid), se.fit = TRUE)
resid_df <- fit$dp[""df2""]

lower_95 <- prd$fit + qt(0.025, df = resid_df) * prd$se.fit
upper_95 <- prd$fit + qt(0.975, df = resid_df) * prd$se.fit
res_95 <- ggplot2:::predictdf(fit, xseq = grid, se = TRUE, level = 0.95)
all.equal(res_95$ymin, lower_95, tolerance = 0.0001)
#> [1] TRUE
all.equal(res_95$ymax, upper_95, tolerance = 0.0001)
#> [1] TRUE

lower_99 <- prd$fit + qt(0.005, df = resid_df) * prd$se.fit
upper_99 <- prd$fit + qt(0.995, df = resid_df) * prd$se.fit
res_99 <- ggplot2:::predictdf(fit, xseq = grid, se = TRUE, level = 0.99)
all.equal(res_99$ymin, lower_99, tolerance = 0.0001)
#> [1] TRUE
all.equal(res_99$ymax, upper_99, tolerance = 0.0001)
#> [1] TRUE
```

<sup>Created on 2021-04-19 by the [reprex package](https://reprex.tidyverse.org) (v1.0.0.9000)</sup>",https://github.com/tidyverse/ggplot2/pull/4435,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4434,2021-04-19T18:19:25Z,2021-04-20T07:35:33Z,2021-04-20T07:35:32Z,"Fix #3741 

This makes `geom_abline()` react to y scale transformations so that intercept gets correctly transformed",https://github.com/tidyverse/ggplot2/pull/4434,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4433,2021-04-19T11:50:46Z,2021-04-21T09:33:48Z,2021-04-21T09:33:48Z,"Fix #3824 

This PR fixes the reported bug by removing the last bin if it lies completely outside the the scale range",https://github.com/tidyverse/ggplot2/pull/4433,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4432,2021-04-19T11:27:27Z,2021-04-21T09:35:42Z,2021-04-21T09:35:42Z,"Fix #3834 

This PR adds a check for when aspect ratio has been set by the theme and free space is requested in facet_grid and throws an error",https://github.com/tidyverse/ggplot2/pull/4432,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4431,2021-04-19T11:02:45Z,2021-04-27T08:04:44Z,2021-04-27T08:04:44Z,"Fix #3954 

This PR ensures that `annotate_logticks()` works in the presence of `coord_flip()`. It does so by flipping around the ranges and aesthetic names.

Important notice: With this PR, `sides = ""b""` will not get translated to `sides = ""l""`. Since the `sides` argument is positional and not tied to aesthetic names it makes sense to me to leave it alone",https://github.com/tidyverse/ggplot2/pull/4431,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4430,2021-04-19T08:57:34Z,2021-04-21T10:41:37Z,2021-04-21T10:41:37Z,"Fix #3965 

This PR implements a fix for the misalignment by calling `floor()` on the breaks returned in `get_breaks()`",https://github.com/tidyverse/ggplot2/pull/4430,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4429,2021-04-19T08:35:03Z,2021-04-21T09:36:59Z,2021-04-21T09:36:58Z,"Fix #4007 

Currently the timezone argument in `scale_[x|y]_datetime()` is ignored. This PR rectifies that",https://github.com/tidyverse/ggplot2/pull/4429,ggplot2
teunbrand,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/4427,2021-04-17T16:13:11Z,2021-04-28T13:05:01Z,2021-04-28T12:59:50Z,"This PR aims to enable purrr style lambda notation for scale arguments that accept functions (`limits`, `breaks`, `minor_breaks`, `labels`, `rescaler` and `oob`). It does so by converting formulas to functions in the scale constructors. Thomas mentioned that lambda notation should work in https://github.com/tidyverse/ggplot2/issues/4173#issuecomment-683742992, but the notation is currently not enabled. 

This PR has partial overlap in scope and in functions altered with #4188. Notable differences are that this PR doesn't touch facet labellers, but applies the lambda notation to more arguments and in all three types of scales (continuous, binned and discrete).

Thank you for considering!",https://github.com/tidyverse/ggplot2/pull/4427,ggplot2
maelle,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/4426,2021-04-17T11:27:49Z,2021-04-19T09:20:35Z,2021-04-19T07:45:02Z,I will also make sure pkgdown doesn't let one have duplicate elements. (or maybe pkgdown will throw an error?),https://github.com/tidyverse/ggplot2/pull/4426,ggplot2
yutannihilation,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/4425,2021-04-16T11:58:07Z,2021-04-20T07:36:55Z,2021-04-20T07:36:55Z,"Fix #4424

Test build: https://github.com/yutannihilation/ggplot2/runs/2361972393",https://github.com/tidyverse/ggplot2/pull/4425,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4423,2021-04-16T08:18:38Z,2021-04-19T08:36:10Z,2021-04-19T07:43:19Z,"Fix #4019 

This PR fixes the issue with extended terminal bins in `guide_coloursteps()` by removing breaks if they coincide",https://github.com/tidyverse/ggplot2/pull/4423,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4422,2021-04-15T12:37:14Z,2021-04-19T08:35:39Z,2021-04-19T07:42:40Z,"Fix #4024

This PR only fixes the issue in `geom_abline()` leaving `geom_function()` as it is because it is not really feasible to fix it right now/for this",https://github.com/tidyverse/ggplot2/pull/4422,ggplot2
Bisaloo,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4420,2021-04-14T14:50:34Z,2021-11-09T08:59:18Z,2021-11-09T08:55:40Z,"Output:

![image](https://user-images.githubusercontent.com/10783929/114730323-0ce98e00-9d41-11eb-97c5-56e09477f839.png)

I believe this new example is useful because it might not be straightforward how to use the `fill` aesthetic with `geom_function()`/`stat_function()`.

My first try was to simply add `fill = ""blue""` but it doesn't work because the `geom_line()` doesn't understand `fill`.",https://github.com/tidyverse/ggplot2/pull/4420,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4419,2021-04-14T10:31:26Z,2021-04-15T07:15:36Z,2021-04-15T07:14:54Z,"Fix #4027 

This PR simply catches the case where the user supplies `c(NA, NA)` as limits and ignores it",https://github.com/tidyverse/ggplot2/pull/4419,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4418,2021-04-14T08:05:30Z,2021-04-15T07:21:15Z,2021-04-15T07:20:40Z,"Fix #4084 

There is one ""issue"" in that parsing is either, or. Right now it will re-add parsing if *any* label is an expression which could potentially lead to errors if there is a mix of expressions and not (I'm not sure if that is possible) and the non-expressions cannot be parsed...

Alternatively we could only do this if *all* labels are expressions...

``` r
library(""ggplot2"")

dat <- data.frame(x = 1, y = 1, a = ""a"", b = 1)

ggplot(dat, aes(x, y)) +
  geom_point() +
  facet_grid(
    ~ a + b,
    labeller = labeller(
      a = c(""a"" = ""a^2""),
      .default = label_parsed,
      .multi_line = FALSE
    )
  )
```

![](https://i.imgur.com/JlFnXyx.png)

<sup>Created on 2021-04-14 by the [reprex package](https://reprex.tidyverse.org) (v2.0.0)</sup>",https://github.com/tidyverse/ggplot2/pull/4418,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4417,2021-04-13T11:04:15Z,2021-04-14T06:21:31Z,2021-04-14T06:21:10Z,"Fix #1745 

This PR fixes the skewed positioning of dots reported in the issue above.

It simply ensures that the data is split on both the binaxis and stackaxis when calculating offset",https://github.com/tidyverse/ggplot2/pull/4417,ggplot2
thomasp85,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/4416,2021-04-13T07:43:45Z,2021-04-15T07:27:24Z,2021-04-15T07:27:04Z,"Fix #2047

This PR makes sure that width is calculated globally to avoid surprise behaviour outlined in #2047. There is a chance that this will break someones code, but I think it is pretty low",https://github.com/tidyverse/ggplot2/pull/4416,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4414,2021-04-12T14:06:38Z,2021-04-15T08:34:42Z,2021-04-15T08:34:20Z,"Fix #2406 

This is a pragmatic fix to the issue described in #2406. With this, labels coming from default aesthetic mappings are marked, and allowed to be overwritten by an explicit mapping label",https://github.com/tidyverse/ggplot2/pull/4414,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4413,2021-04-12T11:24:08Z,2021-04-13T06:14:46Z,2021-04-13T06:14:45Z,"Fix #2507 

This PR implements @paleolimbot suggested fix. I think it is brittle to rely on calling the constructor, because it is also valid (but weird) to pass in PositionJitter directly

I think we should aim for all ggproto objects to be self-sufficient, i.e. have next to no logic in the constructors",https://github.com/tidyverse/ggplot2/pull/4413,ggplot2
yutannihilation,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/4412,2021-04-12T11:17:49Z,2022-04-14T14:06:24Z,2022-04-14T13:44:43Z,"(Depends on https://github.com/r-lib/scales/pull/306)

The dev version of viridisLite has 3 more options, so we need to update the document once it's released. This pull request might be a bit too early and I'll reflect the released version of the document. The main purpose of this is to notify here about the very fact there will be such additions.

https://sjmgarnier.github.io/viridisLite/reference/viridis.html",https://github.com/tidyverse/ggplot2/pull/4412,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4411,2021-04-12T10:38:21Z,2021-04-13T06:15:23Z,2021-04-13T06:15:23Z,"This reverts commit a8352072a048249224f6e517e817e6ac72477c47.

As discussed, adding the additional spelling is more trouble than it is worth so this PR reverts it",https://github.com/tidyverse/ggplot2/pull/4411,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4408,2021-04-09T07:48:02Z,2021-04-12T09:28:40Z,2021-04-12T09:28:16Z,"Fix #2905

This fix catches rows with NA values and assigns them to a new group before they can cause error in the comparison",https://github.com/tidyverse/ggplot2/pull/4408,ggplot2
thomasp85,MEMBER,closed,11,https://github.com/tidyverse/ggplot2/pull/4407,2021-04-09T07:31:08Z,2021-04-12T09:29:55Z,2021-04-12T09:29:55Z,"This is not really the best, and I'm open to alternatives.

ggplot2 originally had `scale_colour_grey()`, and `scale_color_grey()`, with the former mixing up English/American spelling of colour and grey. A recent PR added `scale_color_gray()` which makes the tests fail as it looks for whether all English colour scales have an American equivalent. This PR adds `scale_colour_gray()` which fixes the test, but leaves a sour taste in my mouth. Dream scenario would be to only have `scale_colour_grey()` and `scale_color_gray()` as those names would be internally consistent, but I don't think we can remove the original mixed one as it would cause major breakage...

The alternative is to change the tests to remove one of the versions but that seems almost just as bad...

Thoughts",https://github.com/tidyverse/ggplot2/pull/4407,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4406,2021-04-09T01:27:06Z,2021-04-09T06:58:42Z,2021-04-09T06:58:40Z,"Ubuntu 16.04 reaches EOL in this April. I found r-lib/action moved to Ubuntu 18.04 at last (c.f. https://github.com/r-lib/actions/pull/257), so I think now it's time for this.",https://github.com/tidyverse/ggplot2/pull/4406,ggplot2
mine-cetinkaya-rundel,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/4404,2021-04-08T13:11:02Z,2021-04-18T14:48:00Z,2021-04-16T07:12:10Z,"These were created based on an analysis of the most commonly asked questions about ggplot2 on SO. A summary of these can be found [here](https://connect.rstudioservices.com/tidyverse-so) (requires login).

A few notes:

- If using a package other than ggplot2 in the answers, I've indicated the package name with `::`.
- There is a minimal amount of custom CSS on top fo the FAQ pages that ensure better spacing for readability.
- I think we should add alt text to the images but I'd like to do that after a round of review to avoid rewriting them.

There are some questions that were commonly asked that I didn't include. Happy to add these in if we think it would be good to do so (and I might ask for guidance on most elegant solutions for some).

- Questions not included because I'm not sure of the most elegant solution:
  - [How can I set the background color of facet labels based on another variable?](https://stackoverflow.com/questions/19440069/ggplot2-facet-wrap-strip-color-based-on-variable-in-data-set)
  - [How can I show the x and y axis on all panels in a faceted plot?](https://stackoverflow.com/questions/22116518/add-x-and-y-axis-to-all-facet-wrap)
  - [How can I place a legend for each facet?](https://stackoverflow.com/questions/14840542/place-a-legend-for-each-facet-wrap-grid-in-ggplot2)
  - [How can I add floating axis labels in facet_wrap plot](https://stackoverflow.com/questions/13297155/add-floating-axis-labels-in-facet-wrap-plot) -- this seems to already work and, to me, placing them at the bottom doesn't look very good
- Questions that I wasn't sure which FAQ page to place in and didn't seem worth creating an individual page for
  - [How can I use ggplot2 in a function](https://stackoverflow.com/questions/10004847/making-plot-functions-with-ggplot-and-aes-string) -- I think this is well covered in the vignette on [using ggplot2 in packages](https://stackoverflow.com/questions/10004847/making-plot-functions-with-ggplot-and-aes-string)
  - [How can I change the whisker definition in a box plot?](https://stackoverflow.com/questions/4765482/changing-whisker-definition-in-geom-boxplot)
- Question I thought was out of scope but could easily add to barplots FAQ if we decide it's in scope:
  - [How can I make an animated, racing bar plot?](https://stackoverflow.com/questions/53162821/animated-sorted-bar-chart-with-bars-overtaking-each-other)






",https://github.com/tidyverse/ggplot2/pull/4404,ggplot2
thomasp85,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/4403,2021-04-08T10:20:52Z,2021-04-09T06:59:54Z,2021-04-09T06:59:50Z,"Fix #2941 

This PR changes the jitter position implementation to calculate a jitter once for `x` and `y` and then apply that to all position aesthetics",https://github.com/tidyverse/ggplot2/pull/4403,ggplot2
eliocamp,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/4396,2021-03-30T18:58:48Z,2021-04-08T08:43:30Z,2021-04-08T08:43:30Z,"Implements #3379 so that ggsave returns the file (with path) of the plot.
",https://github.com/tidyverse/ggplot2/pull/4396,ggplot2
teunbrand,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4392,2021-03-27T19:18:45Z,2021-04-08T11:24:25Z,2021-04-08T08:37:57Z,"This PR attempts to fix #4276 by following the suggestion at the end of that issue.

In brief, the current axis text placement with inward ticks is uncomfortable:

``` r
# Current behaviour
library(ggplot2)

ggplot(mtcars, aes(wt, mpg)) +
  geom_point() +
  guides(x.sec = ""axis"", y.sec = ""axis"") +
  theme(axis.ticks.length = unit(-11, ""pt""))
```

![](https://i.imgur.com/PhsbziH.png)

<sup>Created on 2021-03-27 by the [reprex package](https://reprex.tidyverse.org) (v1.0.0)</sup>

With this PR, text placement is outside the panel boundary regardless of tick length:

``` r
library(ggplot2)

ggplot(mtcars, aes(wt, mpg)) +
  geom_point() +
  guides(x.sec = ""axis"", y.sec = ""axis"") +
  theme(axis.ticks.length = unit(-11, ""pt""))
```

![](https://i.imgur.com/r523mBU.png)

<sup>Created on 2021-03-27 by the [reprex package](https://reprex.tidyverse.org) (v1.0.0)</sup>

You can still get the same plot as before, but it costs more effort to do the wrong thing:

``` r
library(ggplot2)

ggplot(mtcars, aes(wt, mpg)) +
  geom_point() +
  guides(x.sec = ""axis"", y.sec = ""axis"") +
  theme(axis.ticks.length  = unit(-11, ""pt""),
        axis.text.x.top    = element_text(margin = margin(b = -11 + 2.2)),
        axis.text.x.bottom = element_text(margin = margin(t = -11 + 2.2)),
        axis.text.y.left   = element_text(margin = margin(r = -11 + 2.2)),
        axis.text.y.right  = element_text(margin = margin(l = -11 + 2.2)))
```

![](https://i.imgur.com/BhB1eDz.png)

<sup>Created on 2021-03-27 by the [reprex package](https://reprex.tidyverse.org) (v1.0.0)</sup>


",https://github.com/tidyverse/ggplot2/pull/4392,ggplot2
larspijnappel,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/4389,2021-03-25T16:12:05Z,2021-04-12T15:35:14Z,2021-04-09T09:21:36Z,"As proposed, here's a PR for the documentation improvement regarding the unsupported `check_overlap` argument for `geom_label()` (#4331).

Note: this request replaces the previous PR #4332 as it can't be completed due to loss of the previous fork.",https://github.com/tidyverse/ggplot2/pull/4389,ggplot2
thomasp85,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/4388,2021-03-25T11:08:11Z,2021-04-09T06:41:03Z,2021-04-09T06:40:41Z,"Fix #4347 

This PR does two things: First, it will use ragg as the default device if it is installed when generating png, jpeg, and tiff files. Second, it fixes the issue that has crippled the use of `device = agg_png` in ggsave, in that it explicitly sets the resolution and units to use in the device function that is passed in. While this only works for devices that uses `res` and `units` arguments it means that devices that uses the same signature as `png()` will work the same way",https://github.com/tidyverse/ggplot2/pull/4388,ggplot2
mitchelloharawild,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/4385,2021-03-22T13:27:35Z,2021-03-22T13:46:08Z,2021-03-22T13:46:08Z,"Resolves #4379

Piping a plot into a `layer()` gives a helpful error with a hint:
``` r
ggplot(diamonds) %>% 
  geom_point(aes(price, carat))
#> Error: `mapping` must be created by `aes()`
#> Did you use %>% instead of +?
```

This pull request adds this hint and better captures the error when piping into facets:

**Before**
``` r
library(ggplot2)
library(magrittr)
ggplot(diamonds) %>% 
  facet_grid(vars(cut))
#> Error: `rows` must be `NULL` or a `vars()` list if `cols` is a `vars()` list
ggplot(diamonds) %>% 
  facet_grid()
#> <ggproto object: Class FacetGrid, Facet, gg>
#>     compute_layout: function
#>     draw_back: function
#>     draw_front: function
#>     draw_labels: function
#>     draw_panels: function
#>     finish_data: function
#>     init_scales: function
#>     map_data: function
#>     params: list
#>     setup_data: function
#>     setup_params: function
#>     shrink: TRUE
#>     train_scales: function
#>     vars: function
#>     super:  <ggproto object: Class FacetGrid, Facet, gg>
ggplot(diamonds) %>% 
  facet_wrap(vars(cut))
#> Warning: Coercing `nrow` to be an integer.
#> Error in sanitise_dim(nrow): 'list' object cannot be coerced to type 'integer'
ggplot(diamonds) %>% 
  facet_wrap()
#> <ggproto object: Class FacetWrap, Facet, gg>
#>     compute_layout: function
#>     draw_back: function
#>     draw_front: function
#>     draw_labels: function
#>     draw_panels: function
#>     finish_data: function
#>     init_scales: function
#>     map_data: function
#>     params: list
#>     setup_data: function
#>     setup_params: function
#>     shrink: TRUE
#>     train_scales: function
#>     vars: function
#>     super:  <ggproto object: Class FacetWrap, Facet, gg>
```

<sup>Created on 2021-03-23 by the [reprex package](https://reprex.tidyverse.org) (v1.0.0)</sup>

**After**
``` r
library(ggplot2)
library(magrittr)
ggplot(diamonds) %>% 
  facet_grid(vars(cut))
#> Error: `rows` must be `NULL` or a `vars()` list if `cols` is a `vars()` list
#> Did you use %>% instead of +?
ggplot(diamonds) %>% 
  facet_grid()
#> Error: Please use `vars()` to supply facet variables
#> Did you use %>% instead of +?
ggplot(diamonds) %>% 
  facet_wrap(vars(cut))
#> Error: Please use `vars()` to supply facet variables
#> Did you use %>% instead of +?
ggplot(diamonds) %>% 
  facet_wrap()
#> Error: Please use `vars()` to supply facet variables
#> Did you use %>% instead of +?
```

<sup>Created on 2021-03-23 by the [reprex package](https://reprex.tidyverse.org) (v1.0.0)</sup>",https://github.com/tidyverse/ggplot2/pull/4385,ggplot2
teunbrand,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4384,2021-03-21T20:22:12Z,2021-03-22T14:54:46Z,2021-03-22T14:11:09Z,"This PR aims to fix #4050, wherein an error occurs in `facet_grid()` when the strip text is a blank element and there are two variables determining the strips. This also caused an inelegant warning in `facet_wrap()` that should now also be remedied.
Instead of returning an `n` by `m` matrix of `zeroGrob`s, the `assemble_strips()` internal function now returns an `n`-length list of `zeroGrob`s regardless of `m`. This then satisfies the `FacetWrap/Grid$draw_panel()` methods' assumption that the length of the strip-grobs is equal to the number of panels (for `facet_wrap()`) or columns/rows (for `facet_grid()`).

The following should now work without warnings or errors:

``` r
library(ggplot2)

df <- data.frame(
  x = 1, y = 1, a = ""A"", b = c(""B"", ""C"")
)

p <- ggplot(df, aes(x, y)) +
  geom_point() +
  theme(strip.text = element_blank())

# Was warning before, now doesn't warn
p + facet_wrap(~ a + b)

# Was error before, now runs fine
p + facet_grid(~ a + b)
```",https://github.com/tidyverse/ggplot2/pull/4384,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4383,2021-03-19T12:02:43Z,2021-03-25T14:38:11Z,2021-03-25T14:38:07Z,"Fix #4319 

This is a follow-up of #3162; at that time I considered only `NULL`, but probably missing arguments should be ignored as well. Here's the use case:

``` r
devtools::load_all(""~/repo/ggplot2"")
#> ℹ Loading ggplot2

f <- function(facet) {
  ggplot(mpg, aes(displ, hwy)) +
    geom_point() +
    facet_wrap(vars({{ facet }}))
}

f()
```

![](https://i.imgur.com/1uu1mtZ.png)

``` r
f(cyl)
```

![](https://i.imgur.com/VZEbzKw.png)

<sup>Created on 2021-03-19 by the [reprex package](https://reprex.tidyverse.org) (v1.0.0)</sup>",https://github.com/tidyverse/ggplot2/pull/4383,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4382,2021-03-19T11:30:09Z,2021-03-19T14:58:42Z,2021-03-19T14:58:38Z,"Fix #4362

Currently, transformation is done by `sf::st_transform()` on the `sf` data, but in this case only the ""active"" geometry column is transformed, which is the intended behaviour (c.f., https://github.com/r-spatial/sf/issues/1620#issuecomment-790654565).

https://github.com/tidyverse/ggplot2/blob/4555055ce6e23e5b0630122fd9cc2aaf8cb1f91a/R/coord-sf.R#L55-L67

This pull request applies the transformation on all of the `sfc` columns in the data independently.",https://github.com/tidyverse/ggplot2/pull/4382,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4380,2021-03-18T13:47:26Z,2021-03-25T14:38:26Z,2021-03-25T14:38:22Z,"While this sentence is in the section of version 3.3.2 on NEWS.md, I believe #3659 is not released yet.

> * `coord_sf()` now has an argument `default_crs` that specifies the coordinate
  reference system (CRS) for non-sf layers and scale/coord limits. ...snip...

Actually, the released NEWS doesn't this.

https://ggplot2.tidyverse.org/news/index.html",https://github.com/tidyverse/ggplot2/pull/4380,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4378,2021-03-18T01:06:23Z,2021-03-24T11:56:33Z,2021-03-24T11:52:16Z,"Fix  #4376

I'm not sure when the behaviour changed, but it seems pkgdown now requires to list all the topics in `structure`. At least this works fine on my forked repo:

https://yutannihilation.github.io/ggplot2/dev/",https://github.com/tidyverse/ggplot2/pull/4378,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4377,2021-03-18T00:14:49Z,2021-03-18T00:16:24Z,2021-03-18T00:16:21Z,"Fix #4373 

pkgdown action only adds or overwrites pages, and old pages never get deleted. I'm not sure if there's nice way, but let's do this manually for now.

```
ggplot2 on  gh-pages [?] via ⬢ v14.16.0
❯ grep --files-without-match 'version.*3.3.3.9000' dev/reference/*.html
dev/reference/el_def.html
dev/reference/empty.html
dev/reference/expand_scale.html
dev/reference/stat.html
dev/reference/stat_function.html

ggplot2 on  gh-pages [?] via ⬢ v14.16.0
❯ grep --files-without-match 'version.*3.3.2' reference/*.html
reference/empty.html
reference/expand_scale.html
reference/stat.html
reference/stat_function.html
```",https://github.com/tidyverse/ggplot2/pull/4377,ggplot2
malcolmbarrett,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/4375,2021-03-17T22:29:18Z,2021-03-18T17:00:54Z,2021-03-18T14:50:01Z,"This PR replaces various `requireNamespace()` + `abort()` checks with the new rlang function `check_installed()`, which offers to install the suggested package then proceeds or aborts. This PR also bumps the rlang dependency to 0.4.10

<img width=""656"" alt=""Screen Shot 2021-03-17 at 3 23 00 PM"" src=""https://user-images.githubusercontent.com/23123711/111546650-39f05400-8735-11eb-9f13-1e211610090d.png"">

I didn't use the `reason` argument in any `check_installed()` calls, which can add a bit of context. I'd be happy to add that, if desired.

Closes #4370, fixes #4344",https://github.com/tidyverse/ggplot2/pull/4375,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4371,2021-03-16T10:48:23Z,2021-03-25T14:38:43Z,2021-03-25T14:38:38Z,"Currently the document says

> Can either be a device function (e.g. `png()`), or ...

but we cannot specify `png()`, but `png`. This seems slightly misleading.

c.f. https://github.com/tidyverse/ggplot2/issues/4347#issuecomment-800095723",https://github.com/tidyverse/ggplot2/pull/4371,ggplot2
jashapiro,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4363,2021-03-03T13:21:08Z,2021-03-03T14:44:47Z,2021-03-03T14:42:14Z,"When using ggplot2, I noticed that the documentation for `scale_color_discrete()` was pointing to `scale_colour_hue()` rather than `scale_colour_discrete()`.

This PR updates the `@rdname` link to the correct parent function. ",https://github.com/tidyverse/ggplot2/pull/4363,ggplot2
bwiernik,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/4360,2021-03-02T21:19:56Z,2021-03-03T15:58:15Z,2021-03-03T14:49:51Z,"This facilitates ggplot2 usage with the R 4.1 native pipe `|>`, which prohibits `+` on the RHS.

```r
diamonds |>
  ggplot(diamonds, aes(carat, price)) |>
  add(geom_point())
```

Also enables a workflow involving the magrittr pipe:

```r
diamonds %>%
  ggplot(diamonds, aes(carat, price)) %>%
  add(geom_point())
```

cf. https://github.com/tidyverse/ggplot2/issues/4357
cf. https://github.com/tidyverse/ggplot2/pull/4359",https://github.com/tidyverse/ggplot2/pull/4360,ggplot2
MyKo101,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/4359,2021-03-02T15:36:01Z,2021-03-03T15:18:22Z,2021-03-03T15:18:22Z,"Currently, the base pipe is incompatible with ggplot due to the precedence of the syntax surrounding `|>`. Any specially parsed operators (such as `+`) are not permitted on the right hand side of the pipe operator. Since the `%+%` is parsed _after_ the `|>` is parsed, it can be exploited.

It now acts as a ternary function when in a pipeline, the first argument is the piped object (presumably a data.frame), the second argument is all of chain of gg function calls before the last one, and the third argument is the final gg function call.

If the third argument is missing, then the function acts just as the standard `+` operator (using `+.gg()`), meaning it is backwards compatible with prior code and can act as a drop-in when users want to use `|>` instead of `%>%`.

Note that since the `|>` does not use the `.` substitute as the `%>% does, the behaviour of inserting as the _first_ argument (usually in a `ggplot()` call) is consistent.

Examples:

Does not work:
```
mpg |>
  ggplot() +
  aes(displ,hw) +
  geom_point() +
  geom_path()
```

Does work:
```
mpg |>
  ggplot() %+%
  aes(displ,hw) %+%
  geom_point() %+%
  geom_path()
```

Parsed as:
```
`%+%`(
  mpg, 
  ggplot() %+% aes(displ,hw) %+% geom_point(), 
  geom_path()
)
```",https://github.com/tidyverse/ggplot2/pull/4359,ggplot2
hadley,MEMBER,open,1,https://github.com/tidyverse/ggplot2/pull/4342,2021-02-06T15:16:21Z,2021-10-28T02:16:24Z,list(),"Just a 15 minute experiment. I have no recollection of how the facet data structure works, so this is just banging rocks together.

Fixes #4175",https://github.com/tidyverse/ggplot2/pull/4342,ggplot2
larspijnappel,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/4332,2021-01-28T20:49:52Z,2021-03-25T16:15:47Z,2021-03-25T16:15:47Z,"As proposed, here's a PR for the documentation improvement regarding the unsupported `check_overlap` argument for `geom_label()` (#4331).

If this is not sufficient, please advise me on the necessary improvements, as this is my first contribution.",https://github.com/tidyverse/ggplot2/pull/4332,ggplot2
cuixueqin,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4329,2021-01-26T20:17:23Z,2021-01-26T23:45:57Z,2021-01-26T23:45:57Z,Remove leading space in the  document of position_jitterdodge(),https://github.com/tidyverse/ggplot2/pull/4329,ggplot2
dmurdoch,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/4325,2021-01-25T01:13:17Z,2021-01-30T00:36:07Z,2021-01-30T00:35:19Z,,https://github.com/tidyverse/ggplot2/pull/4325,ggplot2
teunbrand,CONTRIBUTOR,open,4,https://github.com/tidyverse/ggplot2/pull/4318,2021-01-16T21:51:27Z,2022-04-13T07:01:33Z,list(),"This PR aims to set straight a small inconsistency in the way the colourbar guide handles linewidths and fixes #4314.
It multiplies the `frame.linewidth` and `ticks.linewidth` parameters with `.pt` before giving these to `gpar()`.
Defaults are inversely transformed to not cause visual changes for users and in tests.",https://github.com/tidyverse/ggplot2/pull/4318,ggplot2
eliocamp,CONTRIBUTOR,open,2,https://github.com/tidyverse/ggplot2/pull/4315,2021-01-12T21:49:23Z,2021-10-28T02:16:24Z,list(),"This will close #4138. 

Works around the issue of duplicated column names by explicitly selecting either data columns or layout columns in the `layout` data.frame when needed. Added tests that pass. 

reprex :)

``` r
library(ggplot2)
mtcars$PANEL <- mtcars$cyl


ggplot(mtcars, aes(hp, mpg)) +
  geom_point() +
  facet_grid(cyl ~  am) 
```

![](https://i.imgur.com/vQ8g8XO.png)

``` r

ggplot(mtcars, aes(hp, mpg)) +
  geom_point() +
  facet_grid(PANEL ~  am) 
```

![](https://i.imgur.com/5euvaDX.png)

<sup>Created on 2021-01-12 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/4315,ggplot2
yutannihilation,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/4311,2021-01-07T14:30:48Z,2021-01-30T00:20:45Z,2021-01-30T00:03:15Z,"It seems sf 0.9-7 (published on CRAN yesterday) introduced a small change on axis labels. This pull request is to update the cases.

### Before
![before](https://user-images.githubusercontent.com/1978793/103903823-bec05f80-513f-11eb-8920-99d5342766ec.png)

### After
![after](https://user-images.githubusercontent.com/1978793/103903957-f4654880-513f-11eb-84c5-011d77378c5a.png)

---
edit: This pull request also fixes the following error on macOS runner due to the recent change on Homebrew

```
Error: Calling brew cask install is disabled! Use brew install [--cask] instead.
Error: Process completed with exit code 1.
```",https://github.com/tidyverse/ggplot2/pull/4311,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4310,2021-01-07T13:22:35Z,2021-01-08T14:38:43Z,2021-01-08T14:38:38Z,"Fix #4293

At the time of implementing #4192, I was afraid that visual tests would be silently ignored on the CI (and we would oversight some bugs), so I chose the following logic:

* When vdiffr is not available, do raise an error unless `VDIFFR_RUN_TESTS` envvar is explicitly set to *`false`*

but this ends up failure on CRAN checks. So, this pull request toggle the logic to the following for safety. This should fix the CRAN checks.

* When vdiffr is not available, do NOT raise an error unless `VDIFFR_RUN_TESTS` envvar is explicitly set to *`true`*",https://github.com/tidyverse/ggplot2/pull/4310,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4307,2021-01-04T08:28:43Z,2021-01-04T08:31:47Z,2021-01-04T08:31:47Z,Merge 3.3.3 release into master,https://github.com/tidyverse/ggplot2/pull/4307,ggplot2
heathgilham,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/4303,2020-12-27T03:44:23Z,2020-12-28T18:59:32Z,2020-12-28T18:59:32Z,Fix #4278 ,https://github.com/tidyverse/ggplot2/pull/4303,ggplot2
klmr,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4299,2020-12-17T09:34:49Z,2021-03-25T13:34:51Z,2021-03-25T12:27:42Z,"As per #1901: [“gray” is the predominant US spelling](https://www.merriam-webster.com/dictionary/gray). The purpose of this PR is to increase discoverability for en-US speakers as well as non-native English speakers whose first exposure is to US English spelling rather than UK/AU/NZ.

This PR keeps the existing, less common spelling `scale_color_grey` for backwards compatibility.",https://github.com/tidyverse/ggplot2/pull/4299,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4294,2020-12-09T14:52:15Z,2020-12-09T23:13:38Z,2020-12-09T23:13:18Z,"(As probably some of you also got the email about this,) `all.equal()` now compares environments on R-devel. And actually the GitHub Action runner on R-devel kept failing from some days ago. This pull request fixes it by narrowing the comparing from the whole ggproto objects to only the meaningful elements.

Note that, this behavior is consistent with that of `expect_equal()` in testthat 3rd edition, which uses `waldo::compare()` and it has no option to ignore the environment generally. If we stick with 2nd edition, we can use `check.environment = FALSE` as a workaround, but probably we will want to move to 3rd edition at some point, so I didn't choose `check.environment`.",https://github.com/tidyverse/ggplot2/pull/4294,ggplot2
eliocamp,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4287,2020-12-07T16:25:03Z,2021-03-25T12:30:04Z,2021-03-25T12:30:03Z,"This is a way to control which guides can be merged together. 

Closes #4280 ",https://github.com/tidyverse/ggplot2/pull/4287,ggplot2
yutannihilation,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/4286,2020-12-07T12:37:34Z,2022-03-16T18:49:16Z,2022-03-16T11:23:43Z,Fix #4285,https://github.com/tidyverse/ggplot2/pull/4286,ggplot2
mdlama,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4282,2020-12-02T16:27:42Z,2020-12-03T11:30:00Z,2020-12-03T11:29:59Z,"Fix #4279

* Was incorrectly set to ""NA""",https://github.com/tidyverse/ggplot2/pull/4282,ggplot2
cpsievert,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/4277,2020-11-30T21:35:35Z,2021-04-08T13:48:11Z,2021-04-08T09:37:59Z,"Closes #4148. 

Could be seen as a follow-up of sorts to #3833, which added the ability to configure qualitative (i.e., non-ordinal) colourscale defaults. This PR adds a similar ability to configure ordinal colourscale defaults via new `ggplot2.ordinal.{colour/fill}` options:

```r
library(ggplot2)

p <- ggplot(diamonds, aes(price, colour = cut, fill = cut)) + geom_density()
p
```

![image](https://user-images.githubusercontent.com/1365941/100668437-87c98380-3321-11eb-89a5-65d16f6a0fe9.png)


```r
withr::with_options(
  list(ggplot2.ordinal.fill = viridisLite::cividis(10)), p
)
```

![image](https://user-images.githubusercontent.com/1365941/100668406-7aac9480-3321-11eb-91c7-b1a42633ab1c.png)
",https://github.com/tidyverse/ggplot2/pull/4277,ggplot2
erictleung,CONTRIBUTOR,closed,10,https://github.com/tidyverse/ggplot2/pull/4274,2020-11-26T00:21:32Z,2020-12-02T01:45:03Z,2020-12-02T00:50:37Z,Attempts to address concerns and more in https://github.com/tidyverse/ggplot2/issues/4213,https://github.com/tidyverse/ggplot2/pull/4274,ggplot2
clauswilke,MEMBER,open,11,https://github.com/tidyverse/ggplot2/pull/4271,2020-11-19T15:56:53Z,2021-10-28T02:16:24Z,list(),"Here is an attempt at fixing #4269. The PR creates a new `scales_params` object type that can be added to ggplot2 objects to collect parameter values that will be added to scales at plot build time. In this way, we can set properties such as expansion or breaks or labels without knowing which scales object is being used for which aesthetic.

Reprex:
    library(ggplot2)

    ggplot(mtcars, aes(disp, mpg, color = hp)) + geom_point() +
      ggplot2:::scales_params(""x"", breaks = c(111, 222, 333, 444), name = ""hello world"") +
      ggplot2:::scales_params(""colour"", name = ""test"") +
      ggplot2:::scales_params(""x"", name = ""displacement"") +
      ggplot2:::scales_params(""y"", name = ""fuel efficiency"", expand = expansion(add = 10)) +
      scale_y_continuous(name = ""test"", expand = expansion(add = 0)) +
      ggplot2:::scales_params(""y"", breaks = c(15, 25, 35))

![](https://i.imgur.com/qXaRNVX.png)

<sup>Created on 2020-11-19 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

One current downside is that parameters directly provided to a scale object have lower priority than parameters added previously (see the y expansion in the example). This can be fixed but will add a bit of complication and clumsiness. Not sure if it's worth it but happy to receive feedback.

@yutannihilation @thomasp85 @hadley Any thoughts?",https://github.com/tidyverse/ggplot2/pull/4271,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4266,2020-11-16T15:07:09Z,2020-11-16T16:41:14Z,2020-11-16T16:35:30Z,"Fix #4247

digest package now requires R >= 3.3, and it seems there's no handy alternatives for it at the moment. We might eventually restore the support in future, but let's drop it for now.",https://github.com/tidyverse/ggplot2/pull/4266,ggplot2
yutannihilation,MEMBER,closed,10,https://github.com/tidyverse/ggplot2/pull/4265,2020-11-15T07:06:07Z,2021-03-25T08:57:26Z,2021-03-25T08:57:22Z,"Fix #4260

~~This feels a bit uneasy to repeat `defaults(layer$mapping, plot$mapping)` everywhere, but I don't come up with a nice idea... Any suggestions are welcome.~~ This pull request moves `defaults(layer$mapping, plot$mapping)` to `setup_layer()` so that we don't need to do it in individual methods that refer to the mapping.

``` r
devtools::load_all(""~/repo/ggplot2"")
#> Loading ggplot2

ggplot(mpg, aes(class, hwy, colour = class, fill = after_scale(alpha(colour, 0.4)))) +
  geom_boxplot()
```

![](https://i.imgur.com/4c51kq6.png)

<sup>Created on 2020-11-15 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/4265,ggplot2
nalimilan,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/4261,2020-11-09T16:46:21Z,2020-11-27T15:29:25Z,2020-11-27T15:20:47Z,It can be surprising that `span` argument has no effect when number of observations is large (cf. https://github.com/tidyverse/ggplot2/issues/3174).,https://github.com/tidyverse/ggplot2/pull/4261,ggplot2
karawoo,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4244,2020-10-20T01:00:54Z,2020-10-28T03:39:56Z,2020-10-28T03:39:56Z,"Fixes #4212. When the `plot.background` itself is NULL, `ggsave()` will set the device bg to `""transparent""`. This seems to work for devices that support transparent backgrounds. JPEGs and PDFs will have a white background, which seems ok.",https://github.com/tidyverse/ggplot2/pull/4244,ggplot2
vinay-swamy,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4243,2020-10-15T16:55:54Z,2020-10-18T23:15:02Z,2020-10-18T23:14:47Z,…ed color vectors,https://github.com/tidyverse/ggplot2/pull/4243,ggplot2
yutannihilation,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/4242,2020-10-15T16:00:35Z,2020-10-22T00:39:03Z,2020-10-22T00:04:26Z,"All visual tests fail on R-devel with this error:

```
 > test_check(""ggplot2"")
── 1. Error: aesthetics are drawn correctly (@test-aes.r#160)  ─────────────────
Graphics API version mismatch
Backtrace:
 1. vdiffr::expect_doppelganger(...)
 2. vdiffr:::writer(fig, testcase, title)
 3. vdiffr:::svglite(file, user_fonts = get_aliases())
 4. vdiffr:::svglite_(...)
```
(<https://github.com/tidyverse/ggplot2/pull/4227/checks?check_run_id=1239216870#step:10:132>)

I tried clearing cache, but it still failed. I bet this is because some binary on RStudio package manager is outdated. This might be solved by just waiting for some package to get rebuilt, but it kept failing at least for this 2 weeks, so I think there's little hope. This pull request removes RStudio Package Manager on R-devel runner and clears cache.

This pull request adds these changes:

* Stop using RStudio Public Package Manager on R-devel runner
* Remove workaround for systemfonts package as it's available again
* Add a workaround for xml2 (it seems not available on R 3.2)",https://github.com/tidyverse/ggplot2/pull/4242,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4240,2020-10-15T07:31:49Z,2021-01-04T05:18:32Z,2021-01-04T05:18:28Z,"Fix #4237 

    devtools::load_all(""~/repo/ggplot2"")
    #> Loading ggplot2

    labs(x = ""x"", )
    #> $x
    #> [1] ""x""
    #> 
    #> attr(,""class"")
    #> [1] ""labels""
    guides(x = ""x"", )
    #> $x
    #> [1] ""x""
    #> 
    #> attr(,""class"")
    #> [1] ""guides""

<sup>Created on 2020-10-15 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/4240,ggplot2
hasandiwan,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/4239,2020-10-14T19:46:26Z,2020-10-15T06:57:29Z,2020-10-15T06:57:29Z,,https://github.com/tidyverse/ggplot2/pull/4239,ggplot2
teunbrand,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4229,2020-10-12T12:13:50Z,2020-10-15T07:41:10Z,2020-10-15T07:23:55Z,This PR aims to fix #4199 by adding `oob` arguments to date and datetime position scales that are passed along to `ggplot2:::datetime_scale()`.,https://github.com/tidyverse/ggplot2/pull/4229,ggplot2
mine-cetinkaya-rundel,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/4227,2020-10-11T20:45:28Z,2020-10-15T15:51:17Z,2020-10-15T15:13:22Z,"The error currently reads something like the following:

```
Error: `data` must be a data frame, or other object coercible by `fortify()`, not an S3 object with class uneval
Did you accidentally pass `aes()` to the `data` argument?
```

This PR adds a period at the end of the first sentence.",https://github.com/tidyverse/ggplot2/pull/4227,ggplot2
teunbrand,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4224,2020-10-08T20:47:45Z,2021-03-27T16:17:05Z,2021-03-27T16:16:52Z,"In response to #4189, I'm creating this PR to see if any checks fail.
They didn't fail when I ran the unit tests locally.

However, there are a few things to note, as just changing `length()` to `NROW()` is not sufficient to allow for tibble aesthetics.
I'll post some details about this in the relevant issue.",https://github.com/tidyverse/ggplot2/pull/4224,ggplot2
teunbrand,CONTRIBUTOR,closed,17,https://github.com/tidyverse/ggplot2/pull/4223,2020-10-08T19:50:02Z,2022-04-19T22:07:05Z,2022-04-19T19:45:35Z,"This should be PR #4125 addressing issue #4118, but I'm clumsy with Github.
I wanted to switch the commits for that PR to a different branch on my fork, but I didn't realise that this would automatically close the old PR. This is the same PR from a different branch.
I'm sorry for the inconvenience.",https://github.com/tidyverse/ggplot2/pull/4223,ggplot2
devdesai16,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/4216,2020-10-01T09:02:50Z,2020-10-02T14:55:13Z,2020-10-02T14:55:13Z,Updated installation process in README,https://github.com/tidyverse/ggplot2/pull/4216,ggplot2
llrs,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/4215,2020-09-30T14:29:22Z,2020-12-14T16:50:37Z,2020-12-14T16:50:00Z,"Following [this gist](https://gist.github.com/hadley/fcfc99dc05478c8ab8e383223d56d099)  I discovered `mean_se`. However I think it is poorly documented.

Also the error is not informative if someone provides a vector for mult:

```r
x <- rnorm(100)
mean_se(x, mult = c(1, 2)
## Error: Elements must equal the number of rows or 1
```

I open this draft PR to know if something like this would be welcomed.",https://github.com/tidyverse/ggplot2/pull/4215,ggplot2
yutannihilation,MEMBER,open,14,https://github.com/tidyverse/ggplot2/pull/4194,2020-09-06T13:40:20Z,2021-10-28T02:16:24Z,list(),"Fix #4155

On https://github.com/tidyverse/ggplot2/issues/4155#issuecomment-673932456, I wrote 

> The staged values should be bypass the transformation as probably it is already transformed

but, I was wrong. The transformation that the data needs to be bypassed is not the one after mapping the calculated variables, but the one *before* mapping. Otherwise, if we do another calculation over the calculated value, the result is still wrong even if it skip the transformation at the end of `Layer$map_statistic()`.

Here's an example. When evaluating `after_stat`, the actual scaled value of `x` is `4`, and the result of `x / 2` will be `2`, which will locate at `4` in sqrt scale. But, in actual, `x / 2` should be `8`.

``` r
d <- data.frame(value = 16)

ggplot(d) +
  geom_point(aes(stage(value, after_stat = x / 2), 0))
```

The transformation we want to bypass is this one. But, the operations that come after this (i.e. training and mapping positions) depends on the scaled values, so we cannot skip this transformation.

https://github.com/tidyverse/ggplot2/blob/6b8dba07cfe2bc7a01d3545c7615a60c984c07c7/R/plot-build.r#L60-L61

After some thinking, I come to a conclusion that the values need to be back-transformed before evaluating `after_stat`. There might be cleaner mechanism for this, but I believe this is a realistic solution at the moment...

-------

``` r
d <- data.frame(value = 16)

devtools::load_all(""~/repo/ggplot2"")

ggplot(d) +
  geom_point(aes(value / 2, 0), colour = ""green"", size = 10) +
  geom_point(aes(stage(value, after_stat = x / 2), 1), colour = ""purple"", size = 10) +
  scale_x_sqrt(limits = c(0, 16), breaks = c(2, 4, 8))
```

![](https://i.imgur.com/kAhyTLX.png)
",https://github.com/tidyverse/ggplot2/pull/4194,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4192,2020-09-06T07:15:46Z,2020-09-06T21:46:18Z,2020-09-06T21:46:11Z,"I'm not sure if systemfonts will be available again on R 3.3 and 3.2 (if we follow the 5 version policy, the support for 3.2 might be dropped), but I think the tests should handle this gracefully anyway, as vdiffr is not actually used for testing on the versions. It seems we also need to skip the ggsave test newly added by #4164 as svglite also depends on systemfonts.

Also, this PR reflects some changes on [r-lib/action's check.full.yaml](https://github.com/r-lib/actions/blob/master/examples/check-full.yaml) (Use RStudio package manager, and use binary packages on R-devel as well).",https://github.com/tidyverse/ggplot2/pull/4192,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/4191,2020-09-06T03:54:41Z,2020-09-06T04:33:52Z,2020-09-06T04:19:34Z,"Fix #4170 

    devtools::load_all(""~/repo/ggplot2"")
    #> Loading ggplot2
    qplot(1:10)
    #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.

![](https://i.imgur.com/UNGG5SM.png)

<sup>Created on 2020-09-06 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/4191,ggplot2
netique,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/4188,2020-09-03T18:18:50Z,2021-05-07T07:59:22Z,2021-05-07T07:59:16Z,"Fix #4173 

second PR, previous one was failing tests... now it should work as intended",https://github.com/tidyverse/ggplot2/pull/4188,ggplot2
netique,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/4187,2020-09-03T15:39:15Z,2020-09-03T18:11:49Z,2020-09-03T18:11:49Z,,https://github.com/tidyverse/ggplot2/pull/4187,ggplot2
ismayc,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/4171,2020-08-13T18:42:20Z,2020-08-14T00:30:38Z,2020-08-14T00:10:51Z,Fix typo in documentation for specification of Arguments of `limits()` function,https://github.com/tidyverse/ggplot2/pull/4171,ggplot2
orrymr,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4166,2020-08-10T08:21:16Z,2021-09-09T15:39:07Z,2021-03-25T13:33:32Z,"…existent stat_bindot()

This is with reference to [#3863](https://github.com/tidyverse/ggplot2/issues/3863)",https://github.com/tidyverse/ggplot2/pull/4166,ggplot2
karawoo,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/4164,2020-08-06T21:02:11Z,2020-08-20T20:39:32Z,2020-08-20T20:39:26Z,"Closes #4057. @clauswilke I took your proposed approach and calculated the theme element to get the background color. I imagine people will still typically want to edit their theme to remove the plot border.

I'm opening this as a draft because I think it needs a test but I'm not sure how best to write one. Is there a way to have vdiffr compare two files rather than comparing a plot object against a file? I imagine there is and that vdiffr is doing this under the hood normally, but I tinkered with it a bit and couldn't figure it out.

``` r
library(""ggplot2"")

p <- ggplot(mtcars, aes(disp, mpg)) +
  geom_point() +
  coord_fixed() + # using coord_fixed() just to emphasize what's the plot and what's the image background
  theme(plot.background = element_rect(fill = ""forestgreen""))

ggsave(""~/p_new.png"", p)
#> Saving 7 x 5 in image
knitr::include_graphics(""~/p_new.png"")
```

![](https://i.imgur.com/C7YTYYF.png)

``` r

ggsave(""~/p_override.png"", p, bg = ""cyan"")
#> Saving 7 x 5 in image
knitr::include_graphics(""~/p_override.png"")
```

![](https://i.imgur.com/NkFBbQE.png)
",https://github.com/tidyverse/ggplot2/pull/4164,ggplot2
burchill,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4161,2020-08-04T15:02:02Z,2020-08-04T15:23:11Z,2020-08-04T15:23:11Z,"Per #4158, the docs used to say that Geoms don't have the `setup_params()` method, which is no longer true (#3506). I've deleted this paragraph.",https://github.com/tidyverse/ggplot2/pull/4161,ggplot2
burchill,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4160,2020-08-04T14:53:50Z,2020-08-04T14:55:01Z,2020-08-04T14:54:51Z,"As per #4158, the docs used to say that Geoms do not have the `setup_params()` method. This change removes that faulty information",https://github.com/tidyverse/ggplot2/pull/4160,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4157,2020-08-02T12:48:16Z,2020-08-02T21:51:26Z,2020-08-02T21:51:19Z,"Sorry, I found I needed to add `git config` also to pr-commands.yaml... This PR updates pr-commands.yaml to [the latest one on r-lib/actions](https://github.com/r-lib/actions/blob/9b0e9a42c639483e129d48f25f338015ef243b3a/examples/pr-commands.yaml). This time, I confirmed `/document` works on my forked repo: https://github.com/r-lib/actions/blob/9b0e9a42c639483e129d48f25f338015ef243b3a/examples/pr-commands.yaml",https://github.com/tidyverse/ggplot2/pull/4157,ggplot2
orrymr,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4156,2020-08-02T09:29:55Z,2020-08-09T14:42:28Z,2020-08-02T12:34:16Z,Noticed a small typo - thought I'd submit the correction as my first contribution!,https://github.com/tidyverse/ggplot2/pull/4156,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4154,2020-07-30T15:20:51Z,2021-03-25T15:07:14Z,2021-03-25T15:07:09Z,Close #4135,https://github.com/tidyverse/ggplot2/pull/4154,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4153,2020-07-30T14:34:26Z,2020-07-30T16:36:30Z,2020-07-30T16:36:25Z,My mistake in #4147...,https://github.com/tidyverse/ggplot2/pull/4153,ggplot2
margoal1,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4152,2020-07-29T22:36:07Z,2020-07-30T14:52:43Z,2020-07-30T14:52:35Z,"Fix #4150 

Replace cyl with factor(cyl) in discrete orientation example of stat_summary",https://github.com/tidyverse/ggplot2/pull/4152,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4151,2020-07-29T00:59:43Z,2020-07-29T05:03:16Z,2020-07-29T04:54:57Z,"pkgdown action now fails with the following error. It seems we now need to configure username and email explicitly (c.f. https://github.com/r-lib/actions/issues/135). Since [the latest `pkgdown.yml`](https://github.com/r-lib/actions/blob/e9e2c876f3578ce790f0242ba27e67a85b3a9081/examples/pkgdown.yaml) already handles this and it contains some other improvements, I copied it and added some tweaks (including `publish` event, installing binary packages, and installing tidytemplate).

<https://github.com/tidyverse/ggplot2/runs/921163458#step:7:520>:
```
── Commiting updated site ──────────────────────────────────────────────────────
Running git add -A .
Running git commit --allow-empty -m \
  'Built site for ggplot2: 3.3.2.9000@8f7b03c'

*** Please tell me who you are.

Run

  git config --global user.email ""you@example.com""
  git config --global user.name ""Your Name""

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'runner@Mac-1595979566438.(none)')

Error: System command 'git' failed, exit status: 128, stdout & stderr were printed
```",https://github.com/tidyverse/ggplot2/pull/4151,ggplot2
yutannihilation,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/4147,2020-07-25T14:58:13Z,2020-07-28T23:47:03Z,2020-07-28T23:40:46Z,"## Summary of the changes

* Skip some tests if quantreg package is not available
* Replace macOS + R-devel runner and with Ubuntu-16.04 + R-devel runner
* Install binary packages only on macOS
* Remove the step to add libgit PPA

## Details of the problems

### quantreg on R < 3.6

As of version 5.61 (released on July 7, 2020), quantreg package imports [conquer package](https://cran.r-project.org/web/packages/conquer/index.html), which requires R >= 3.6. So, quantreg now virtually requires R >= 3.6.

Diff: https://github.com/cran/quantreg/commit/16f49417c4f7ce6308ba660aba56ee70319cd396#diff-35ba4a2677442e210c23a00a5601aba3R31

### macOS

#### R-devel

It fails to setup R for an unknown error. Now that r-lib/actions provide R-devel also to Linux runners, let's use `ubuntu-16.04` for R-devel. I feel the toolchain of macOS is too franky, and as ggplot2 is not a package that needs compilation, I feel the macOS + R-devel is not worth keeping.

https://github.com/r-lib/actions/issues/49#issuecomment-665047147

#### R 4.0

`brew install gdal` fails with the following error. I set the `pkgType` option on macOS to avoid building packages at all.

```
==> Installing gdal dependency: gcc
==> Pouring gcc-10.1.0.catalina.bottle.tar.gz
##[error]Error: The `brew link` step did not complete successfully
The formula built, but is not symlinked into /usr/local
Could not symlink bin/gfortran
Target /usr/local/bin/gfortran
already exists. You may want to remove it:
  rm '/usr/local/bin/gfortran'

To force the link and overwrite all conflicting files:
  brew link --overwrite gcc

To list all files that would be deleted:
  brew link --overwrite --dry-run gcc

Possible conflicting files are:
/usr/local/bin/gfortran -> /usr/local/gfortran/bin/gfortran
```

### libgit2 PPA

(This is not about failures, just for cleanup)

As https://github.com/r-lib/actions/pull/97 is already merged, we can just remove this from the YAML.
",https://github.com/tidyverse/ggplot2/pull/4147,ggplot2
stragu,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4145,2020-07-23T05:47:41Z,2020-07-25T14:19:17Z,2020-07-25T14:19:10Z,"Use ColorBrewer project name rather than obsolete website name.

Not sure what is meant by ""use blender variants"" in the last example. Should it be ""use binned variants""?",https://github.com/tidyverse/ggplot2/pull/4145,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4134,2020-07-12T01:54:16Z,2020-07-13T03:11:17Z,2020-07-13T03:11:12Z,"Followup of #4048

* Regenerate the document to fix the build failure (it complains because there's no alias of `scale_color_viridis_b`)
* Add a test to check if all `scale_colour_*()` have their corresponding `scale_color_*()`.",https://github.com/tidyverse/ggplot2/pull/4134,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4132,2020-07-11T05:48:15Z,2020-07-11T22:59:16Z,2020-07-11T22:59:12Z,"Fix #4131

``` r
devtools::load_all(""~/repo/ggplot2"")
#> Loading ggplot2

ggplot(tibble::tibble(x=c(1, 1e12)), aes(x)) + geom_histogram(binwidth=1)
#> Warning: Computation failed in `stat_bin()`:
#> The number of histogram bins must be less than 1,000,000.
#> Did you make `binwidth` too small?
```

![](https://i.imgur.com/jq7QCMX.png)

<sup>Created on 2020-07-11 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/4132,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4130,2020-07-11T02:54:03Z,2020-07-11T22:59:49Z,2020-07-11T22:59:44Z,"Fix #3522 

Though this pull request introduces no code change (except for a test), I think this is worth adding a NEWS so that the users might notice this hidden feature (but, as I did nothing, I didn't add my name on the NEWS item).",https://github.com/tidyverse/ggplot2/pull/4130,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4129,2020-07-11T02:18:53Z,2020-07-13T00:48:13Z,2020-07-13T00:48:07Z,"I happened to find `scale_{x,y}_binned()` doesn't include `x0` and `y0`, which I think is unintended. Probably we should refer to `ggplot_global` directly in these cases. Hard coding the same list on 4 places is a bit hard to maintain.",https://github.com/tidyverse/ggplot2/pull/4129,ggplot2
yutannihilation,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/4128,2020-07-11T01:55:40Z,2020-07-12T16:02:34Z,2020-07-12T01:18:41Z,"Fix #4124

These four stat have variables whose names differ depending on the orientation.

- `stat_boxplot()`: `middle`, `lower`, and `upper`. This feels a bit tricky at least in two points; the flipped names are asynmetric (e.g. `middle` vs `xmiddle`, not `ymiddle` vs `xmiddle`), and `notchlower` and `notchupper` doesn't have their flipped form.
- `stat_smooth()`: `y`, `ymin`, and `ymax`
- `stat_function()` ~~`stat_ecdf()`~~ : these generate both `x` and `y`, so the documentation would be cryptic like below, so I don't address them in this pull request (at least they don't have undocumented computed variables)

```
#' `stat_function()` computes the following variables:
#' \describe{
#'   \item{x or y}{x or y values along a grid}
#'   \item{y or x}{value of the function evaluated at corresponding x or y}
#' }
```

edit: I just remembered `stat_ecdf()` doesn't support flipping (c.f. #4005)",https://github.com/tidyverse/ggplot2/pull/4128,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4127,2020-07-10T11:24:12Z,2020-07-10T14:45:13Z,2020-07-10T14:45:01Z,"Fix #4122 

Currently, `LayerSf$setup_layer()` uses `as_name(self$mapping$geometry)` in the assumption that `geometry` is a quosure of a symbol, which is not always the case. Possible fix would be

1. actually evaluate it
2. give up guessing the type nicely

and I chose option 2. because option 1. seems too much for this rare use case.

``` r
devtools::load_all(""~/repo/ggplot2"")
#> Loading ggplot2

nc <- sf::st_read(system.file(""shape/nc.shp"", package = ""sf""), quiet = TRUE)
ggplot(nc) +
  geom_sf(aes(fill = AREA, geometry = sf::st_centroid(geometry)))
#> Warning in st_centroid.sfc(geometry): st_centroid does not give correct
#> centroids for longitude/latitude data

#> Warning in st_centroid.sfc(geometry): st_centroid does not give correct
#> centroids for longitude/latitude data
```

![](https://i.imgur.com/8ZZOvYX.png)

<sup>Created on 2020-07-10 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/4127,ggplot2
teunbrand,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/4125,2020-07-09T18:47:05Z,2020-10-08T19:36:59Z,2020-10-08T19:36:59Z,"This PR follows from issue #4118.

I think the changes proposed here are the minimal ones required to go make strip clipping an option from the theme setting.

Briefly, `strip.clip` becomes a defined, logical theme-element in the element tree. Also it has gained a corresponding argument in `theme()`, and has defaults in 'root' themes (theme_grey / theme_void / theme_test). In downstream strip rendering, the clipping argument to `assemble_strips()` is taken from the theme instead of immutably `""on""`.

A thing I was unsure about, was wether to use `calc_element()` for consistency, or to take the strip clipping setting directly from the theme, as there isn't anything really anything to inherit from as far as I could tell.

Here is a code example and visual comparison:

``` r
library(ggplot2)
library(patchwork)

# Default clipping is TRUE
p1 <- ggplot(mpg, aes(displ, hwy)) +
  geom_point() +
  facet_wrap(~ drv) +
  theme(
    strip.background = element_rect(colour = ""red"", size = 5),
    axis.line.y.left = element_line(colour = ""blue"", size = 5)
  )

p2 <- p1 + theme(strip.clip = FALSE)
(p1 / p2)
```

![](https://i.imgur.com/BAtyGc9.png)

<sup>Created on 2020-07-09 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

Thanks for considering!
",https://github.com/tidyverse/ggplot2/pull/4125,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4117,2020-07-04T01:26:45Z,2020-07-04T05:29:11Z,2020-07-04T05:28:48Z,"Close #4116 

Googling the error message ""Graphics API version mismatch"" led me to the possibility that the version of R devel might be bumped up. Clearing the cache seems solve the problem. 

c.f. https://github.com/davidgohel/ReporteRs/issues/126#issuecomment-226176502",https://github.com/tidyverse/ggplot2/pull/4117,ggplot2
eliocamp,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/4115,2020-07-03T18:52:38Z,2020-07-04T04:07:30Z,2020-07-04T04:07:23Z,"I encountered this strange error. It took me a while to get a reprex because it is incredibly elusive. 

``` r
library(ggplot2)

grid <- expand.grid(x = seq(0, 360, by = 2.5), y = seq(-90, -20, by = 2.5))
grid$z <- with(grid, x^2*y)

ggplot(grid, aes(x, y)) +
  geom_contour(aes(z = z)) +
  coord_polar() +
  scale_x_continuous(breaks = seq(0, 360, by = 30), labels = NULL)
#> Error in labels[[n]] <- combined: attempt to select less than one element in integerOneIndex
```

The issue was that `coord_polar()` tries to combine labels even if they are `NULL`. I added a check. All tests succeed and the bug is fixed. ",https://github.com/tidyverse/ggplot2/pull/4115,ggplot2
andrewwbutler,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4112,2020-07-02T02:43:30Z,2020-07-06T01:08:40Z,2020-07-06T01:08:40Z,"Addresses https://github.com/tidyverse/ggplot2/issues/4111

`stat_ydensity` now drops groups with fewer than 2 data points (previously 3) and displays a warning.

``` r
library(ggplot2)
table(mtcars$cyl, mtcars$am)
#>    
#>      0  1
#>   4  3  8
#>   6  4  3
#>   8 12  2
ggplot(mtcars, aes(x = factor(cyl), y = mpg, fill = factor(am))) + 
  geom_violin(scale = ""width"")
```

![](https://i.imgur.com/mhXdAd4.png)

``` r

# warn when fewer than 2 in group
mtcars_sub <- mtcars[-31, ]
table(mtcars_sub$cyl, mtcars_sub$am)
#>    
#>      0  1
#>   4  3  8
#>   6  4  3
#>   8 12  1
ggplot(mtcars_sub, aes(x = factor(cyl), y = mpg, fill = factor(am))) + 
  geom_violin(scale = ""width"")
#> Warning: Groups with fewer than two data points have been dropped.
```

![](https://i.imgur.com/H5RqCd8.png)

<sup>Created on 2020-07-01 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/4112,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4109,2020-07-01T12:42:30Z,2020-07-06T03:41:44Z,2020-07-06T03:33:16Z,"Fix #4097

`guides(... = FALSE)` was a very old syntax and is not mentioned in any documentations. This should be deprecated to inform the users about the recommended way (`guides(... = ""none"")`).",https://github.com/tidyverse/ggplot2/pull/4109,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4104,2020-06-30T13:38:16Z,2021-03-25T14:37:49Z,2021-03-25T14:37:46Z,"Fix #4085

It seems we simply forgot to pass `override.aes` to the guide object. `guide_merge.bins()` and `guide_geom.bins()` seem to handle `override.aes()` properly.

``` r
devtools::load_all(""~/repo/ggplot2"")
#> Loading ggplot2

ggplot(mtcars, aes(x = drat, y = wt, size = hp, fill = cyl)) + 
  geom_point(shape = 21) + 
  scale_size_binned(guide = guide_bins(override.aes = list(colour = ""red"", shape = 21, fill = ""blue"")))
```

![](https://i.imgur.com/1zIPW5R.png)

<sup>Created on 2020-06-30 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/4104,ggplot2
dlependorf,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/4099,2020-06-26T20:48:09Z,2020-06-26T21:01:38Z,2020-06-26T21:01:38Z,"There's a typo in one of the random tips shown when loading the package, ""Cookbook"" is spelled ""Cookbok"".",https://github.com/tidyverse/ggplot2/pull/4099,ggplot2
rjake,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/4098,2020-06-26T19:34:55Z,2020-07-01T04:22:38Z,2020-07-01T03:15:07Z,"Fixes #4092 

This is my first PR for `ggplot2`. This will use the tidyverse style in the example code. I tried to check all docs. It was mentioned that a bigger audit might be done via `styler` at a later date and so I only picked a few types of coding style to change. If the code looked like this
```r
 p + scale_fill_brewer(direction = -1) 
```
I left it be. 
I only moved to new lines when there was more than one pipe present
```r
 p + scale_fill_brewer(direction = -1) + theme_dark()

#becomes 
 p + 
  scale_fill_brewer(direction = -1) + 
  theme_dark()

```
when the arguments weren't indented under the parentheses, or when the line had two functions `ggplot() + geom...`
```r
ggplot(mpg, aes(cty, hwy) + geom_point()

# becomes
ggplot(mpg, aes(cty, hwy) + 
  geom_point()
```
There were some updates that `roxygen2` (dev version) made that I committed at the end
```
\item The default (\code{\link[scales:oob]{scales::censor()}}) replaces out of
\item The default (\code{\link[scales:censor]{scales::censor()}}) replaces out of bounds values with \code{NA}.
```

I also had 2 failed tests that seemed unrelated to my code changes
![image](https://user-images.githubusercontent.com/14003618/85894055-01cd6d80-b7c2-11ea-85e7-02e0ba8a495e.png)
",https://github.com/tidyverse/ggplot2/pull/4098,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4096,2020-06-26T06:17:22Z,2020-06-26T23:41:07Z,2020-06-26T23:41:03Z,"Close #4095 

According to [R-internals](https://cloud.r-project.org/doc/manuals/r-patched/R-ints.html#index-_005fR_005fCHECK_005fRD_005fXREFS_005f), we can avoid the warning by setting  `_R_CHECK_RD_XREFS_` to `FALSE`.",https://github.com/tidyverse/ggplot2/pull/4096,ggplot2
karawoo,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4093,2020-06-26T00:28:33Z,2020-06-26T04:31:48Z,2020-06-26T04:31:43Z,"Closes #4087, specifically the issue where a named palette that didn't match the limits would still get used if too many colors were requested. We now use a more accurate check for whether the palette has names, so if the colors don't match the limits it won't be used. This is the conventional behavior, though as discussed on the issue it can be confusing. This PR makes the behavior consistent, but we might want to separately revisit whether to change the behavior of `scales::manual_pal()`.",https://github.com/tidyverse/ggplot2/pull/4093,ggplot2
clauswilke,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/4091,2020-06-25T18:27:47Z,2020-06-26T03:30:04Z,2020-06-26T03:29:30Z,Closes #4090.,https://github.com/tidyverse/ggplot2/pull/4091,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4081,2020-06-22T08:24:58Z,2020-06-22T14:53:41Z,2020-06-22T14:53:41Z,"When providing a reversed scale along with certain coords the aspect ratio may end up as negative and the panel will get a negative null dimension. This can wreck havoc (see https://github.com/thomasp85/patchwork/issues/195)

This PR fixes it by ensuring the dimension is always positive",https://github.com/tidyverse/ggplot2/pull/4081,ggplot2
yutannihilation,MEMBER,open,0,https://github.com/tidyverse/ggplot2/pull/4079,2020-06-21T06:30:00Z,2021-10-28T02:16:24Z,list(),"Close #3956 

### TODO

- [x] Add `.Deprecate()` to `qplot()`
- [x] Remove `stat` and `position` and throw errors
- [x] Tweak the document of `qplot()`
- [ ] Remove the use of `qplot()` in tests

### Remaining quesitons

- [ ] How should we rewrite `translate_qplot_ggplot` and `translate_qplot_lattice`?
- [ ] Do we need some instruction to get rid of `qplot()`?
- [ ] How should we communicate with the extension package authors?
",https://github.com/tidyverse/ggplot2/pull/4079,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4078,2020-06-21T02:14:46Z,2020-06-24T12:01:17Z,2020-06-24T12:01:12Z,Just happened to find these misuses.,https://github.com/tidyverse/ggplot2/pull/4078,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4077,2020-06-20T08:53:26Z,2020-06-21T02:12:08Z,2020-06-21T02:12:04Z,Fix #4075,https://github.com/tidyverse/ggplot2/pull/4077,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4076,2020-06-20T08:18:10Z,2020-06-21T06:12:13Z,2020-06-21T06:12:09Z,"Close #4063 

What I did to create this PR was:

* update `utils-tidy-eval.R` by `usethis::use_tidy_eval()`
* add `@export quo_name` for backward-compatibility, considering we've been exporting it for 2 years with a documentation using it
* replace `quo_name()` with `as_label()` in the code and the docs

As a result, this PR changes the following two points:

* adds some new re-exported functions `:=`, `as_name()`, and `as_label()`.
* removes some re-exported functions `quo()`, `quos()`, `enexpr()`, `enexprs()`, `ensym()`, `ensyms()`; they are different than `quo_name()` in that no documentations of ggplot2 refer to them, so I believe it's OK to remove them.",https://github.com/tidyverse/ggplot2/pull/4076,ggplot2
tdhock,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/4074,2020-06-20T05:40:36Z,2020-07-06T03:56:19Z,2020-07-05T07:28:14Z,"hi this is my proposed fix for #4072, along with a test that fails using current master.",https://github.com/tidyverse/ggplot2/pull/4074,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4069,2020-06-18T15:27:29Z,2020-06-20T00:35:59Z,2020-06-20T00:35:55Z,The new version of rmarkdown was released on CRAN and it now contains the fix for `tools::vignetteInfo()` errors.  The workaround is no longer needed.,https://github.com/tidyverse/ggplot2/pull/4069,ggplot2
burchill,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4067,2020-06-16T22:31:08Z,2020-06-20T00:54:32Z,2020-06-20T00:54:27Z,Fixed typo in scale_shape documentation.,https://github.com/tidyverse/ggplot2/pull/4067,ggplot2
krlmlr,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4065,2020-06-16T06:52:54Z,2021-12-26T05:42:17Z,2021-12-26T05:41:23Z,"so that vectors can apply their own formatting to a scale. See the labels on the x axis in the example.

Applying the vector class ""after the fact"" on numeric breaks works for this use case. Am I missing a better solution to the problem?

I've also tried maintaining the vector class so that the `breaks` are of the same type as the data, that seems very difficult. Perhaps the `ptype` should be passed to the `labels` function by default instead?

``` r
library(tidyverse)

scale_x_formattable <- function(..., ptype) {
  labels <- function(x) {
    out <- ptype[rep(NA_integer_, length(x))]
    out[] <- x
    out
  }

  ggplot2::scale_x_continuous(..., labels = labels)
}

scale_type.formattable <- function(x) ""formattable""

x <- formattable::percent((1:10) / 100)

data.frame(x = x, y = 1:10) %>%
  ggplot(aes(x = x, y = y)) %>%
  + geom_point()
```

![](https://i.imgur.com/38diedI.png)

<sup>Created on 2020-06-16 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/4065,ggplot2
yutannihilation,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/4062,2020-06-14T03:01:49Z,2020-06-15T07:48:29Z,2020-06-15T06:00:36Z,"(This PR is only for testing if the new document generation can pass the checks on r-devel)

* `devtools::install_github(""r-lib/roxygen2"")`
* ~~Re-generate the document of scales package and installed it~~ (This has been addressed on roxygen2's side)
* Update the documents of `utilities-tidy-eval.R` to [the latest one](https://github.com/r-lib/usethis/blob/master/inst/templates/tidy-eval.R) (Note that I copied only the paragraphs about the functions that are currently re-exported. Let's update it again after the release of v3.3.2. c.f.  #4063)
* Re-generate document of ggplot2",https://github.com/tidyverse/ggplot2/pull/4062,ggplot2
krlmlr,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/4061,2020-06-13T03:36:55Z,2020-06-20T00:53:40Z,2020-06-20T00:53:40Z,"for function names in documentation.

```sh
\grep ""export.[a-z]"" NAMESPACE | sed -r 's/^export.([a-z].*).$/\1/' | paste -d '|' -s | head -c -1 | xclip -se c
# Used for constructing the matcher inside `()`
sed -r -i '/^#'""'""'/ s/`(aes|aes_|aes_all|aes_auto|aes_q|aes_string|after_scale|after_stat|alpha|annotate|annotation_custom|annotation_logticks|annotation_map|annotation_raster|arrow|as_labeller|autolayer|autoplot|benchplot|binned_scale|borders|calc_element|combine_vars|continuous_scale|coord_cartesian|coord_equal|coord_fixed|coord_flip|coord_map|coord_munch|coord_polar|coord_quickmap|coord_sf|coord_trans|cut_interval|cut_number|cut_width|derive|discrete_scale|draw_key_abline|draw_key_blank|draw_key_boxplot|draw_key_crossbar|draw_key_dotplot|draw_key_label|draw_key_path|draw_key_point|draw_key_pointrange|draw_key_polygon|draw_key_rect|draw_key_smooth|draw_key_text|draw_key_timeseries|draw_key_vline|draw_key_vpath|dup_axis|el_def|element_blank|element_grob|element_line|element_rect|element_render|element_text|enexpr|enexprs|enquo|enquos|ensym|ensyms|expand_limits|expand_scale|expansion|expr|facet_grid|facet_null|facet_wrap|find_panel|flip_data|flipped_names|fortify|geom_abline|geom_area|geom_bar|geom_bin2d|geom_blank|geom_boxplot|geom_col|geom_contour|geom_contour_filled|geom_count|geom_crossbar|geom_curve|geom_density|geom_density2d|geom_density2d_filled|geom_density_2d|geom_density_2d_filled|geom_dotplot|geom_errorbar|geom_errorbarh|geom_freqpoly|geom_function|geom_hex|geom_histogram|geom_hline|geom_jitter|geom_label|geom_line|geom_linerange|geom_map|geom_path|geom_point|geom_pointrange|geom_polygon|geom_qq|geom_qq_line|geom_quantile|geom_raster|geom_rect|geom_ribbon|geom_rug|geom_segment|geom_sf|geom_sf_label|geom_sf_text|geom_smooth|geom_spoke|geom_step|geom_text|geom_tile|geom_violin|geom_vline|get_element_tree|gg_dep|ggplot|ggplotGrob|ggplot_add|ggplot_build|ggplot_gtable|ggproto|ggproto_parent|ggsave|ggtitle|guide_axis|guide_bins|guide_colorbar|guide_colorsteps|guide_colourbar|guide_coloursteps|guide_gengrob|guide_geom|guide_legend|guide_merge|guide_none|guide_train|guide_transform|guides|has_flipped_aes|is.Coord|is.facet|is.ggplot|is.ggproto|is.theme|label_both|label_bquote|label_context|label_parsed|label_value|label_wrap_gen|labeller|labs|last_plot|layer|layer_data|layer_grob|layer_scales|layer_sf|lims|map_data|margin|max_height|max_width|mean_cl_boot|mean_cl_normal|mean_sdl|mean_se|median_hilow|merge_element|panel_cols|panel_rows|position_dodge|position_dodge2|position_fill|position_identity|position_jitter|position_jitterdodge|position_nudge|position_stack|qplot|quickplot|quo|quo_name|quos|register_theme_elements|rel|remove_missing|render_axes|render_strips|reset_theme_settings|resolution|scale_alpha|scale_alpha_binned|scale_alpha_continuous|scale_alpha_date|scale_alpha_datetime|scale_alpha_discrete|scale_alpha_identity|scale_alpha_manual|scale_alpha_ordinal|scale_color_binned|scale_color_brewer|scale_color_continuous|scale_color_date|scale_color_datetime|scale_color_discrete|scale_color_distiller|scale_color_fermenter|scale_color_gradient|scale_color_gradient2|scale_color_gradientn|scale_color_grey|scale_color_hue|scale_color_identity|scale_color_manual|scale_color_ordinal|scale_color_steps|scale_color_steps2|scale_color_stepsn|scale_color_viridis_c|scale_color_viridis_d|scale_colour_binned|scale_colour_brewer|scale_colour_continuous|scale_colour_date|scale_colour_datetime|scale_colour_discrete|scale_colour_distiller|scale_colour_fermenter|scale_colour_gradient|scale_colour_gradient2|scale_colour_gradientn|scale_colour_grey|scale_colour_hue|scale_colour_identity|scale_colour_manual|scale_colour_ordinal|scale_colour_steps|scale_colour_steps2|scale_colour_stepsn|scale_colour_viridis_b|scale_colour_viridis_c|scale_colour_viridis_d|scale_continuous_identity|scale_discrete_identity|scale_discrete_manual|scale_fill_binned|scale_fill_brewer|scale_fill_continuous|scale_fill_date|scale_fill_datetime|scale_fill_discrete|scale_fill_distiller|scale_fill_fermenter|scale_fill_gradient|scale_fill_gradient2|scale_fill_gradientn|scale_fill_grey|scale_fill_hue|scale_fill_identity|scale_fill_manual|scale_fill_ordinal|scale_fill_steps|scale_fill_steps2|scale_fill_stepsn|scale_fill_viridis_b|scale_fill_viridis_c|scale_fill_viridis_d|scale_linetype|scale_linetype_binned|scale_linetype_continuous|scale_linetype_discrete|scale_linetype_identity|scale_linetype_manual|scale_radius|scale_shape|scale_shape_binned|scale_shape_continuous|scale_shape_discrete|scale_shape_identity|scale_shape_manual|scale_shape_ordinal|scale_size|scale_size_area|scale_size_binned|scale_size_binned_area|scale_size_continuous|scale_size_date|scale_size_datetime|scale_size_discrete|scale_size_identity|scale_size_manual|scale_size_ordinal|scale_type|scale_x_binned|scale_x_continuous|scale_x_date|scale_x_datetime|scale_x_discrete|scale_x_log10|scale_x_reverse|scale_x_sqrt|scale_x_time|scale_y_binned|scale_y_continuous|scale_y_date|scale_y_datetime|scale_y_discrete|scale_y_log10|scale_y_reverse|scale_y_sqrt|scale_y_time|sec_axis|set_last_plot|should_stop|stage|standardise_aes_names|stat|stat_bin|stat_bin2d|stat_bin_2d|stat_bin_hex|stat_binhex|stat_boxplot|stat_contour|stat_contour_filled|stat_count|stat_density|stat_density2d|stat_density2d_filled|stat_density_2d|stat_density_2d_filled|stat_ecdf|stat_ellipse|stat_function|stat_identity|stat_qq|stat_qq_line|stat_quantile|stat_sf|stat_sf_coordinates|stat_smooth|stat_spoke|stat_sum|stat_summary|stat_summary2d|stat_summary_2d|stat_summary_bin|stat_summary_hex|stat_unique|stat_ydensity|summarise_coord|summarise_layers|summarise_layout|sym|syms|theme|theme_bw|theme_classic|theme_dark|theme_get|theme_gray|theme_grey|theme_light|theme_linedraw|theme_minimal|theme_replace|theme_set|theme_test|theme_update|theme_void|transform_position|unit|update_geom_defaults|update_labels|update_stat_defaults|vars|waiver|wrap_dims|xlab|xlim|ylab|ylim|zeroGrob)`/`\1()`/g' R/*
```",https://github.com/tidyverse/ggplot2/pull/4061,ggplot2
krlmlr,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/4059,2020-06-12T05:11:57Z,2020-06-13T03:05:03Z,2020-06-12T08:15:57Z,"when referring to a function in documentation.

Only looked at `` at the start of a line and at surroundings. I can hunt for other instances if you think it's useful.

```sh
sed -r -i """" 's/(^#'""'""' `[a-z_]+[a-z_0-9]*)`/\1()`/' R/*
```",https://github.com/tidyverse/ggplot2/pull/4059,ggplot2
yutannihilation,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/4053,2020-06-09T11:52:17Z,2020-06-20T00:46:29Z,2020-06-20T00:45:09Z,"It has been 3 months since we enabled GitHub Actions CI (#3862). While we still need to take care GitHub Actions CI time to time, it seems to catch the unintended changes reliably just as Travis CI and AppVeyor have been doing for years. So, I think it's okay to stop using Travis CI and AppVeyor now.",https://github.com/tidyverse/ggplot2/pull/4053,ggplot2
xvrdm,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/4048,2020-06-07T09:14:52Z,2020-07-19T11:53:37Z,2020-07-12T01:28:56Z,Add missing British to American spellings for scale_colour_viridis_b(),https://github.com/tidyverse/ggplot2/pull/4048,ggplot2
johan-ejstrud,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4047,2020-06-07T08:28:24Z,2020-06-08T19:24:34Z,2020-06-08T19:22:52Z,Close #3838,https://github.com/tidyverse/ggplot2/pull/4047,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/4046,2020-06-06T09:27:28Z,2020-06-09T11:35:21Z,2020-06-09T11:35:17Z,"Fix #4045 

We need two fixes here:

* For the macOS (devel) runner, bump cache version to clear the cache
* For the Linux (<3.6) runner, install the dev version of rmarkdown package. This will be unnecessary after the next version of rmarkdown is released on CRAN.",https://github.com/tidyverse/ggplot2/pull/4046,ggplot2
cpsievert,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4043,2020-06-02T14:49:51Z,2020-06-02T14:53:48Z,2020-06-02T14:53:47Z,"Since CRAN is now on 3.3.1, dev version should be 3.3.1.9000",https://github.com/tidyverse/ggplot2/pull/4043,ggplot2
cpsievert,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/4042,2020-06-02T14:46:09Z,2020-06-05T07:47:14Z,2020-06-05T07:47:10Z,This should have been done as a part of #3833 (sorry!),https://github.com/tidyverse/ggplot2/pull/4042,ggplot2
brianrice2,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/4039,2020-06-01T00:03:08Z,2020-06-06T21:12:58Z,2020-06-06T06:25:23Z,"Motivation: current documentation for coord_polar() does not mention that 'start' offset can be applied either clockwise or anticlockwise. Added note in docs that the offset is applied depending on orientation specified by 'direction' parameter (1 = clockwise, -1 = anticlockwise).",https://github.com/tidyverse/ggplot2/pull/4039,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4037,2020-05-28T07:33:07Z,2020-06-06T09:55:21Z,2020-06-06T09:55:21Z,This is a very minor patch release simply fixing the malicious link that got hijacked. No code change at all,https://github.com/tidyverse/ggplot2/pull/4037,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4036,2020-05-28T07:07:48Z,2020-06-08T08:13:10Z,2020-06-08T08:13:10Z,"This PR fixes a bunch of revdep failures because the new `mapped_discrete` class did not allow recycling during data.frame construction. It is a somewhat imperfect solution because it strips away the class, but since we use our own data frame constructor internally it will only affect extension developers, and the effect would be that everything is as before",https://github.com/tidyverse/ggplot2/pull/4036,ggplot2
waltersom,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/4032,2020-05-27T12:12:40Z,2020-06-23T04:55:07Z,2020-06-23T04:36:51Z,"Pass .default to as_labeller even when margin_labeller is null, such as
when using named arguments for a lookup table.

This should make the behaviour match the documentation.

Fixes #4031 ",https://github.com/tidyverse/ggplot2/pull/4032,ggplot2
johan-ejstrud,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/4030,2020-05-26T19:49:18Z,2020-06-09T17:01:07Z,2020-06-09T11:28:04Z,"Close #3946

I have borrowed the parameter description from [geom-contour](https://github.com/tidyverse/ggplot2/blob/2b03e4723f0b91875667ffb4f952ad6e471ac9f8/R/geom-contour.r#L16).

(This is my first pull request for ggplot2, and I'm not familiar with roxygen2, so apologies if I have missed something obvious.)",https://github.com/tidyverse/ggplot2/pull/4030,ggplot2
clauswilke,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4028,2020-05-25T18:50:55Z,2020-06-05T20:12:13Z,2020-06-05T20:12:09Z,Add a few unit tests that should have been there all along.,https://github.com/tidyverse/ggplot2/pull/4028,ggplot2
clauswilke,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4026,2020-05-24T19:02:48Z,2020-05-25T14:08:10Z,2020-05-25T14:08:06Z,Fix a typo in the `geom_text()` documentation and a roxygen2 bug introduced in recent PR #3833.,https://github.com/tidyverse/ggplot2/pull/4026,ggplot2
yutannihilation,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/4025,2020-05-24T10:33:26Z,2020-05-25T08:01:31Z,2020-05-25T08:01:25Z,"Fix #4023

The current implementation squashes the upper and lower lines together and tweaks the lower one's `id` on the assumption that the upper and the lower has the same number of rows as the original data. But, it's not true when the Coord is non-cartesian.

<details>

https://github.com/tidyverse/ggplot2/blob/48268385c414702bc343e46d51144846d39232fa/R/geom-ribbon.r#L131-L135

https://github.com/tidyverse/ggplot2/blob/48268385c414702bc343e46d51144846d39232fa/R/geom-ribbon.r#L139

https://github.com/tidyverse/ggplot2/blob/48268385c414702bc343e46d51144846d39232fa/R/geom-ribbon.r#L158-L164

</details>

This PR fixes this issue by processing the upper and the lower separately.

``` r
devtools::load_all(""~/repo/ggplot2/"")
#> Loading ggplot2

d <- base::data.frame(x = c(1, 2), y = c(3, 4))

ggplot(d) +
  geom_area(aes(x, y), colour = ""black"", fill = ""pink"") +
  coord_polar()
```

![](https://i.imgur.com/scpKe0m.png)

<sup>Created on 2020-05-24 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/4025,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/4016,2020-05-20T23:53:23Z,2020-05-27T15:33:15Z,2020-05-21T14:54:06Z,"``` r
library(RBesT)
#> Warning: package 'RBesT' was built under R version 3.6.2
#> Loading required package: Rcpp
#> This is RBesT version 1.6.0

## a beta mixture
bm <- mixbeta(weak=c(0.2, 2, 10), inf=c(0.4, 10, 100), inf2=c(0.4, 30, 80))

## extract the two most informative components
bm[[c(2,3)]]
#> Univariate beta mixture
#> Mixture Components:
#>   inf   inf2 
#> w   0.4   0.4
#> a  10.0  30.0
#> b 100.0  80.0
## rescaling needed in order to plot
plot(bm[[c(2,3),rescale=TRUE]])
```

![](https://i.imgur.com/jPeFK8x.png)

<sup>Created on 2020-05-20 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/4016,ggplot2
echasnovski,NONE,open,10,https://github.com/tidyverse/ggplot2/pull/4013,2020-05-19T16:30:35Z,2021-10-28T02:16:24Z,list(),"This is a PR for #3387 and serves as a place for discussion and feedback about possible change.

The goal is to **add `bounds` argument to `geom_density()` and `stat_density()`, which will allow users to specify known constraints on data to obtain more ""realistic"" density estimation**. Change to computed output of `stats::density()` is made using relatively simple ""reflection method of boundary correction"" *roughly* taken from ""Simple boundary correction for kernel density estimation” by M.C. Jones, 1993 (you can look at free [pdf-file of presentation based on this article](http://www.buch-kromann.dk/tine/nonpar/Simple%20boundary%20correction,%20Jones%201993.pdf), in particular, page 7).

Currently this PR serves two purposes:

- Show that this is a completely non-breaking update. All previous behavior is explicitly preserved.
- Allow everyone to ""play"" with it.

If agreed that this is a desirable change, at least the following should also be made (which I am happy to do):

- Figure out when and how to notify user about ""bad bounds"". For example, when some or all data points are outside of `bounds` interval, or simply it doesn't represent a valid interval.
- Add examples of `bounds` usage.",https://github.com/tidyverse/ggplot2/pull/4013,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4010,2020-05-19T06:51:54Z,2020-05-19T14:19:05Z,2020-05-19T14:19:05Z,,https://github.com/tidyverse/ggplot2/pull/4010,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4009,2020-05-19T06:31:40Z,2020-05-19T06:36:44Z,2020-05-19T06:36:44Z,Fix #4008,https://github.com/tidyverse/ggplot2/pull/4009,ggplot2
clauswilke,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4006,2020-05-17T06:39:23Z,2020-05-18T14:10:43Z,2020-05-18T14:10:34Z,"Closes #4004.

``` r
library(tidyverse)

ggplot(faithfuld, aes(waiting, eruptions, z = density)) + 
  geom_contour_filled(bins = 2)
```

![](https://i.imgur.com/18HlboW.png)

``` r

ggplot(faithfuld, aes(waiting, eruptions, z = density)) + 
  geom_contour_filled(bins = 5)
```

![](https://i.imgur.com/PHc9tg8.png)

``` r

ggplot(faithful, aes(waiting, eruptions)) +
  geom_density_2d_filled(bins = 3)
```

![](https://i.imgur.com/qo1kKvF.png)

``` r

ggplot(faithful, aes(waiting, eruptions)) +
  geom_density_2d_filled(bins = 4)
```

![](https://i.imgur.com/HLGghso.png)

``` r

ggplot(faithful, aes(waiting, eruptions)) +
  geom_density_2d_filled(bins = 6)
```

![](https://i.imgur.com/I0qkkyR.png)

``` r

df <- volcano %>%
  as_tibble() %>%
  rowid_to_column(var = ""x"") %>%
  gather(key = ""y"", value = ""z"", -1) %>%
  mutate(y = as.numeric(gsub(""V"", """", y)))
#> Warning: `as_tibble.matrix()` requires a matrix with column names or a `.name_repair` argument. Using compatibility `.name_repair`.
#> This warning is displayed once per session.

ggplot(df, aes(x, y, z = z)) + 
  geom_contour_filled(bins = 2)
```

![](https://i.imgur.com/jWmkzd1.png)

``` r

ggplot(df, aes(x, y, z = z)) + 
  geom_contour_filled(bins = 4)
```

![](https://i.imgur.com/gWMhhfx.png)

``` r

ggplot(df, aes(x, y, z = z)) + 
  geom_contour_filled(bins = 8)
```

![](https://i.imgur.com/aX409g7.png)

<sup>Created on 2020-05-17 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/4006,ggplot2
jgjl,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/4005,2020-05-17T03:36:44Z,2020-08-04T14:15:40Z,2020-08-04T14:15:40Z,"- Extend stat_ecdf to detect the input and output aesthetics
- Add simple test for the direction selection mechanism, modeled after stat_density

Not sure about the completeness of the documentation. ",https://github.com/tidyverse/ggplot2/pull/4005,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4002,2020-05-15T12:57:21Z,2020-05-18T07:06:59Z,2020-05-18T07:06:58Z,"This comes out of the discussion in #3860 which surfaced that Stat did not have the same `optional_aes` field as Geom. This PR simply mirrors the Geom implementation so that Stats can declare optional aesthetics.

I'd like to get this into 3.3.1 so I can use it in the book",https://github.com/tidyverse/ggplot2/pull/4002,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/4001,2020-05-15T10:38:19Z,2020-05-15T14:49:31Z,2020-05-15T14:49:31Z,Fix #3891 This PR fixes the oversight of adding the line aesthetics to the polygonGrob for `outline.type = 'full'`,https://github.com/tidyverse/ggplot2/pull/4001,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3999,2020-05-15T09:38:43Z,2020-05-18T08:19:09Z,2020-05-18T08:19:09Z,Fix #3876 This PR makes sure NA are not represented in the guide. Whether these guides (and colourbar) should actually represent `NA` (in a more aesthetically pleasing way) is a discussion for later when a guide rewrite is done,https://github.com/tidyverse/ggplot2/pull/3999,ggplot2
thomasp85,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3998,2020-05-15T09:17:05Z,2020-05-15T14:10:59Z,2020-05-15T14:10:59Z,"Fix #3991, Fix #3957, Fix #3939, Fix #3932, Fix #3873

This PR addresses the many spurious edge cases in orientation determination introduced in 3.3.0. Instead of guessing based on whether the position values are ""discrete-like"", the discrete scale now returns a numeric subclass identifying the values as coming from a discrete mapping. I've implemented the minimal interface for this information to be carried through the data pipeline, but once we adopt vctrs this is a clear case for that.

@hadley can you make sure that my subclassing doesn't commit any cardinal sins",https://github.com/tidyverse/ggplot2/pull/3998,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3996,2020-05-15T07:27:32Z,2020-05-18T07:07:27Z,2020-05-18T07:07:26Z,Fix #3995 This PR also includes some unrelated data doc formatting changes due to a roxygen update,https://github.com/tidyverse/ggplot2/pull/3996,ggplot2
karawoo,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3992,2020-05-11T23:06:27Z,2020-05-12T17:39:23Z,2020-05-12T17:39:19Z,"Fixes a typo and a missing word in the documentation for `has_flipped_aes()`. Rendering the .Rd files also turned up a roxygen/Rd mismatch from #3787. It's just a tiny change, so I've included it here.",https://github.com/tidyverse/ggplot2/pull/3992,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3984,2020-05-02T05:26:38Z,2020-05-15T19:48:56Z,2020-05-15T19:48:49Z,Fixes #3983.,https://github.com/tidyverse/ggplot2/pull/3984,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3982,2020-05-01T15:22:48Z,2020-05-02T04:42:17Z,2020-05-02T04:42:11Z,"A first stab at implementing a `geom_function()`. Closes #3611.

Open questions:
- How much should we rewrite the documentation to `stat_function()`? Can it remain mostly as is, or should it now recommend `geom_function()` over `stat_function()`?
- Is the current warning for multiple groups OK, or should the code filter out the duplicated groups?

``` r
library(tidyverse)

data <- tibble(
  x = 1:50,
  y = x*x - 2*x + 5 + 200*rnorm(50),
  a = sample(letters[1:3], 50, replace = TRUE)
)

ggplot(data, aes(x, y)) +
  geom_point(aes(color = ""data"")) +
  geom_function(aes(color = ""function""), fun = ~.x*.x - 2*.x + 5)
```

![](https://i.imgur.com/RlQd5Eo.png)

``` r

ggplot(data, aes(x, y, color = a)) +
  geom_point(aes()) +
  geom_function(aes(color = ""function""), fun = ~.x*.x - 2*.x + 5)
```

![](https://i.imgur.com/f08K8cq.png)

``` r

ggplot(data, aes(x, y, color = a)) +
  geom_point(aes()) +
  geom_function(aes(), fun = ~.x*.x - 2*.x + 5)
#> Warning: Multiple drawing groups in `geom_function()`. Did you use the correct
#> `group`, `colour`, or `fill` aesthetics?
```

![](https://i.imgur.com/tPK5x7H.png)

``` r

ggplot(data, aes(x, y)) +
  geom_point(aes(color = ""data"")) +
  stat_function(aes(color = ""function""), fun = ~.x*.x - 2*.x + 5)
```

![](https://i.imgur.com/YhqURjy.png)

``` r

ggplot(data, aes(x, y, color = a)) +
  geom_point(aes()) +
  stat_function(aes(color = ""function""), fun = ~.x*.x - 2*.x + 5)
```

![](https://i.imgur.com/dbSYz4D.png)

``` r

ggplot(data, aes(x, y, color = a)) +
  geom_point(aes()) +
  stat_function(aes(), fun = ~.x*.x - 2*.x + 5)
#> Warning: Multiple drawing groups in `geom_function()`. Did you use the correct
#> `group`, `colour`, or `fill` aesthetics?
```

![](https://i.imgur.com/Lt3rctO.png)

<sup>Created on 2020-05-01 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/3982,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3981,2020-05-01T11:31:38Z,2020-05-03T03:56:46Z,2020-05-03T03:56:43Z,"Now test-coverage GitHub action keeps failing due to this error:

```
Error : package ‘rex’ was installed before R 4.0.0: please re-install it
```

This is my fault that I forgot to take care of `test-coverage.yaml` in #3961. This PR fixes it.",https://github.com/tidyverse/ggplot2/pull/3981,ggplot2
gael-millot,NONE,closed,6,https://github.com/tidyverse/ggplot2/pull/3980,2020-05-01T11:10:02Z,2022-03-23T14:18:23Z,2022-03-23T14:18:22Z,news examples that include the specific behavior of geom_dotplot(),https://github.com/tidyverse/ggplot2/pull/3980,ggplot2
fabern,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3979,2020-05-01T05:48:19Z,2020-05-01T12:53:50Z,2020-05-01T08:40:26Z,"This fixes the inconsistent naming in the `gtable` of `facet_grid()` panels to result in the pattern `panel-[row.nr]-[col.nr]`.

Reprex in issue: https://github.com/tidyverse/ggplot2/issues/3978",https://github.com/tidyverse/ggplot2/pull/3979,ggplot2
clauswilke,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3977,2020-05-01T02:45:04Z,2020-05-01T14:27:32Z,2020-05-01T14:27:26Z,Fixes #3938.,https://github.com/tidyverse/ggplot2/pull/3977,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3976,2020-04-30T23:33:57Z,2020-05-15T16:33:27Z,2020-05-01T15:24:38Z,"Fixes #3879.

``` r
library(ggplot2)

p <- ggplot(faithfuld, aes(waiting, eruptions, z = density))

p + geom_contour_filled(bins = 3)
```

![](https://i.imgur.com/61haSKi.png)

``` r
p + geom_contour_filled(bins = 5)
```

![](https://i.imgur.com/CWHkbSe.png)

<sup>Created on 2020-04-30 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3976,ggplot2
Alanocallaghan,NONE,open,4,https://github.com/tidyverse/ggplot2/pull/3973,2020-04-29T22:03:38Z,2021-10-28T02:16:24Z,list(),"Resolve #2691 

Add `default.scales` component of themes.",https://github.com/tidyverse/ggplot2/pull/3973,ggplot2
yutannihilation,MEMBER,open,4,https://github.com/tidyverse/ggplot2/pull/3972,2020-04-29T06:41:11Z,2021-10-28T02:16:24Z,list(),"Fixes #3959

- [x] Move `labels()`, `setup_panel_guides()` and `train_panel_guides()` to `Coord`
- [x] Tweak these methods to support `panel_params` without `ViewScale`s for backward compatibility
- [ ] Modify each `setup_panel_params()` to include `ViewScale`
- [ ] Add tests",https://github.com/tidyverse/ggplot2/pull/3972,ggplot2
burchill,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3970,2020-04-29T02:15:17Z,2020-04-29T03:52:51Z,2020-04-29T03:52:46Z,Resolved the conflict in #3969 by starting over.,https://github.com/tidyverse/ggplot2/pull/3970,ggplot2
burchill,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3969,2020-04-28T23:33:51Z,2020-04-29T02:16:07Z,2020-04-29T02:16:06Z,"I'm assuming this is what the author meant to say?

It was originally (bold added):

> If `na.translate = TRUE`, **what value aesthetic value should missing be** displayed as? Does not apply to position scales where NA is always placed at the far right.

Now it is:

> If `na.translate = TRUE`, **what aesthetic value should the missing values be** displayed as? Does not apply to position scales where NA is always placed at the far right.",https://github.com/tidyverse/ggplot2/pull/3969,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3964,2020-04-26T06:05:20Z,2020-04-27T02:03:18Z,2020-04-27T02:02:23Z,"Fixes #3963.

``` r
library(ggplot2)

nc <- sf::read_sf(system.file(""shape/nc.shp"", package=""sf""))
nc$BIR74_bin <- cut_number(nc$BIR74, 3)
nc_tibble <- tibble::as_tibble(nc)

ggplot(nc_tibble) +
  geom_sf(aes(geometry = geometry, fill = BIR74_bin))
```

![](https://i.imgur.com/5DgIF1M.png)

<sup>Created on 2020-04-26 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3964,ggplot2
yutannihilation,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/3961,2020-04-25T01:25:42Z,2020-04-29T14:28:27Z,2020-04-29T14:28:23Z,"Now R 4.0.0 is released, ~~let's drop support for R 3.2 (c.f. we support only 4 previous versions of R https://www.tidyverse.org/blog/2019/04/r-version-support/).~~ let's add R 4.0 runners on CI

In addition, this PR contains the following tweaks:

* Remove a workaround related to xml2 installation problem, as the new version of xml2 was released on CRAN
* Add `cran:libgit2` PPA to avoid conflicts related to `libcurl4-gnutls-dev` (c.f. https://github.com/r-hub/sysreqsdb/issues/77#issuecomment-620025428)",https://github.com/tidyverse/ggplot2/pull/3961,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3958,2020-04-22T11:17:21Z,2020-05-03T04:19:24Z,2020-05-03T04:19:20Z,"Fix #3952

`ylim` and `xlim` of `coord_cartesian()` can be specified in arbitrary order. But, `ScaleContinuous$get_breaks()` always expects the limits are in the same order to their order. If not, it returns `NA` and we'll see no ticks. So, the limits should be sorted before passing to it.

I think scale should raise more explicit warnings or errors, but it's out of scope of this PR.

``` r
devtools::load_all(""~/repo/ggplot2/"")
#> Loading ggplot2

library(patchwork)

d <- base::data.frame(
  x = 1:4,
  y = 1:4
)

p <- ggplot(d, aes(x, y)) +
  geom_point()

p1 <- p + coord_cartesian(ylim = c(1, 10)) + ggtitle(""(usual plot)"")
p2 <- p + coord_cartesian(ylim = c(10, 1)) + ggtitle(""Coord is reversed"")
p3 <- p + scale_y_reverse() + coord_cartesian(ylim = c(1, 10)) + ggtitle(""Scale is reversed, but Coord is not"")
p4 <- p + scale_y_reverse() + coord_cartesian(ylim = c(10, 1)) + ggtitle(""Scale and Coord are reversed"")

wrap_plots(p1, p2, p3, p4)
```

![](https://i.imgur.com/LRcCtAM.png)

<sup>Created on 2020-04-22 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/3958,ggplot2
hadley,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3953,2020-04-19T14:38:47Z,2020-04-20T12:26:38Z,2020-04-20T12:26:34Z,"* Mark RStudio as funder
* Use second level headings on reference page
* Use new news metadata structure",https://github.com/tidyverse/ggplot2/pull/3953,ggplot2
gael-millot,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/3950,2020-04-16T13:38:39Z,2020-05-01T11:12:04Z,2020-05-01T11:12:04Z,The end of the page points to https://github.com/tidyverse/ggplot2/issues/3839 to describe special behaviors of group,https://github.com/tidyverse/ggplot2/pull/3950,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3947,2020-04-13T12:20:34Z,2020-04-13T14:32:57Z,2020-04-13T14:32:52Z,Fix #3929,https://github.com/tidyverse/ggplot2/pull/3947,ggplot2
s-pace,NONE,closed,9,https://github.com/tidyverse/ggplot2/pull/3943,2020-04-11T09:42:54Z,2020-04-18T19:11:16Z,2020-04-18T15:43:47Z,"👋 team,

I am working on DocSearch. [We have an integration for pkgdown](https://pkgdown.r-lib.org/). We thought it is a shame you can not also used this search.

This PR will add DocSearch to the documentation website. It will allow a user to have a learn-as-you-type experience by displaying results thanks to a dropdown in a live way.

Let me know if you need anything.",https://github.com/tidyverse/ggplot2/pull/3943,ggplot2
clauswilke,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3942,2020-04-11T05:49:29Z,2020-04-16T04:01:33Z,2020-04-16T04:01:25Z,"Fixes #3941.

``` r
library(ggplot2)

nc <- sf::st_read(system.file(""shape/nc.shp"", package = ""sf""), quiet = TRUE)
p <- ggplot(nc[1:3, ]) +
  geom_sf(aes(color = NAME), show.legend = ""point"")
p
```

![](https://i.imgur.com/bsJtGB8.png)

``` r
p
```

![](https://i.imgur.com/DKuyAtl.png)

<sup>Created on 2020-04-11 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3942,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3933,2020-04-08T06:51:36Z,2020-04-19T23:30:04Z,2020-04-19T23:29:59Z,"This PR addresses the following issues:

* ~~Add a workaround for problem about Rcpp on macOS runner (https://github.com/RcppCore/Rcpp/issues/1060).~~ (Rcpp is fixed on CRAN)
* Install xml2 from GitHub on macOS runner (c.f https://github.com/r-lib/xml2/issues/296).
* Install covr from GitHub to enable codecov again (c.f. https://github.com/tidyverse/ggplot2/pull/3862#issuecomment-599557468).
* Add `cache-version` to enable cache clear.",https://github.com/tidyverse/ggplot2/pull/3933,ggplot2
marcmenem,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/3931,2020-04-07T20:32:22Z,2020-04-09T23:40:28Z,2020-04-09T23:40:28Z,"I have created new geoms similar to geom_path, geom_line and geom_step that first draw a shadow beneath the lines to plot in order to get a more aesthecalliy pleasing effect when several lines overlap.

This is my frst time contributing to an open source project, and I am not sure this is the best place to contribute, or whether it would be more apropriate to create an extension with my code rather than contribute to ggplot2, please let me know.",https://github.com/tidyverse/ggplot2/pull/3931,ggplot2
cpsievert,CONTRIBUTOR,closed,11,https://github.com/tidyverse/ggplot2/pull/3922,2020-04-01T14:20:24Z,2020-04-03T12:49:19Z,2020-04-03T12:47:53Z,I'm pretty sure vdiffr hasn't been running on Travis CI since https://github.com/tidyverse/ggplot2/commit/9fdf452d34be3986c778c9f4306ce96c7c14af8e,https://github.com/tidyverse/ggplot2/pull/3922,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3920,2020-04-01T00:12:04Z,2020-04-16T06:01:04Z,2020-04-16T06:00:59Z,"ggplot2 extension site has been moved to exts.ggplot2.tidyverse.org. For more details, see ggplot2-exts/gallery#87.",https://github.com/tidyverse/ggplot2/pull/3920,ggplot2
paleolimbot,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3919,2020-03-31T22:40:18Z,2020-04-30T20:45:50Z,2020-04-30T20:45:49Z,"This PR fixes the case where only continuous values were provided to a discrete scale, which was also provided continuous limits. I introduced this bug in #3380, which changed the way that discrete scales were expanded into continuous limits ([old logic](https://github.com/tidyverse/ggplot2/blob/v3.2.1/R/scale-discrete-.r#L111), [new logic](https://github.com/tidyverse/ggplot2/blob/master/R/scale-expansion.r#L204))

``` r
library(ggplot2)

df <- data.frame(x = 1:14, y = -2:-15)

ggplot(df, aes(x, y)) +
  scale_y_discrete(limits = -1:-16, labels = LETTERS[1:16])
```

![](https://i.imgur.com/jSelhhq.png)

<sup>Created on 2020-03-31 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

Note that `is.discrete()` in this PR is linked to `is.discrete()` in `ScaleDiscretePosition$train()`...I don't think that the discrete scale training logic is likely to change, but the fix in this PR depends on that behaviour. The other approach would be to check `is.null(scale$range$range)`, which is inconvenient the way the expansion code is currently set up (but totally possible if anyone thinks  it matters).",https://github.com/tidyverse/ggplot2/pull/3919,ggplot2
raerickson,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3916,2020-03-30T19:47:24Z,2020-03-30T21:01:05Z,2020-03-30T20:42:19Z,"removed a seemingly  unneeded expect_equal(2 * 2, 4). Please let me know if this test serves a purpose. I was reading through this project to see good examples of testthat.",https://github.com/tidyverse/ggplot2/pull/3916,ggplot2
coolbutuseless,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3912,2020-03-27T06:07:10Z,2020-05-18T07:15:30Z,2020-05-18T07:15:30Z,'discrete_scale' and 'continuous_scale' are both exported.  Can we export 'binned_scale' as well?,https://github.com/tidyverse/ggplot2/pull/3912,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3908,2020-03-22T01:40:21Z,2020-04-30T20:41:55Z,2020-04-30T20:41:50Z,"Closes #3905.

``` r
library(tidyverse)
library(patchwork)

fn <- function(x) {exp(x)}
data <- tibble(x = c(1:10), y = exp(x))

# without data points
p <- ggplot(data, aes(x)) + stat_function(fun = fn)

# with data points
q <- ggplot(data, aes(x, y)) + geom_point() + 
  stat_function(fun = fn)

p / q
```

![](https://i.imgur.com/j4krFoF.png)

``` r
(p + scale_y_log10()) / q + scale_y_log10()
```

![](https://i.imgur.com/9gLJ1QQ.png)

``` r
(p + scale_y_sqrt()) / q + scale_y_sqrt()
```

![](https://i.imgur.com/Z4t37Jx.png)

``` r
(p + scale_y_reverse()) / q + scale_y_reverse()
```

![](https://i.imgur.com/S2iAaIl.png)

``` r
(p + scale_x_log10()) / q + scale_x_log10()
```

![](https://i.imgur.com/RT6txKL.png)

``` r
(p + scale_x_log10() + scale_y_log10()) /
  q + scale_x_log10() + scale_y_log10()
```

![](https://i.imgur.com/XAcvDzv.png)

<sup>Created on 2020-03-21 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3908,ggplot2
clauswilke,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3907,2020-03-22T00:06:58Z,2020-03-22T17:19:17Z,2020-03-22T17:19:10Z,"Closes #3906.

``` r
library(ggplot2)

v <- ggplot(faithfuld, aes(waiting, eruptions, z = density)) +
  geom_point(aes(color = density)) + geom_contour(color = ""white"")

v
```

![](https://i.imgur.com/alqDHnZ.png)

``` r
v + scale_x_log10()
```

![](https://i.imgur.com/BBzsacZ.png)

<sup>Created on 2020-03-21 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3907,ggplot2
clauswilke,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3904,2020-03-21T15:19:53Z,2020-03-21T15:51:04Z,2020-03-21T15:50:49Z,Reverts tidyverse/ggplot2#3902,https://github.com/tidyverse/ggplot2/pull/3904,ggplot2
romainfrancois,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3902,2020-03-20T08:28:54Z,2020-03-20T19:50:48Z,2020-03-20T19:50:48Z,"This seems to address #3900 

I don't really understand why though 🤷‍♂ ",https://github.com/tidyverse/ggplot2/pull/3902,ggplot2
clauswilke,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3896,2020-03-15T15:54:01Z,2020-04-30T20:39:55Z,2020-04-30T20:39:46Z,Closes #3888.,https://github.com/tidyverse/ggplot2/pull/3896,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3895,2020-03-15T14:31:37Z,2020-03-15T14:38:57Z,2020-03-15T14:38:48Z,"`covr::codecov()` keeps failing on GitHub Action CI.

```
Error in curl::curl_fetch_memory(url, handle = handle) : 
  HTTP/2 stream 0 was not closed cleanly: PROTOCOL_ERROR (err 1)
Calls: <Anonymous> ... request_fetch -> request_fetch.write_memory -> <Anonymous>
Execution halted
##[error]Process completed with exit code 1.
```
https://github.com/tidyverse/ggplot2/runs/509138337?check_suite_focus=true#step:13:14

I tried some tweaks on my forked repo (https://github.com/yutannihilation/ggplot2/pull/4/), but none of these worked. As the other repos (e.g. [roxygen2](https://github.com/r-lib/roxygen2/blob/2a068b181bc15ec55545ddd752f5341471f5e74a/.github/workflows/R-CMD-check.yaml#L83-L86)) works without error, this seems specific to ggplot2. So, I think it takes some time to figure out what's happening here, so this should be disabled for now.

Fortunately(?), I forgot to remove the test coverage step on Travis CI in #3862, so we can rely on it for a while.",https://github.com/tidyverse/ggplot2/pull/3895,ggplot2
mitchelloharawild,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/3889,2020-03-12T12:59:24Z,2020-03-13T11:50:35Z,2020-03-13T11:50:34Z,,https://github.com/tidyverse/ggplot2/pull/3889,ggplot2
thomasp85,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/3886,2020-03-11T09:41:00Z,2020-05-15T07:15:06Z,2020-05-15T07:15:06Z,"Fixes #3852 

@clauswilke, @kohske, @yutannihilation, @wch, @lionel-, @karawoo, @paleolimbot can you all please reply with your preferred link, or whether you'd rather not want to link to anything",https://github.com/tidyverse/ggplot2/pull/3886,ggplot2
paleolimbot,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3884,2020-03-10T14:29:32Z,2020-03-10T18:26:15Z,2020-03-10T18:25:43Z,"This is a fix for #3874, which gave warnings when changing the position of a `guide_axis()`. I *think* this is a four character fix (typo in my implementation of `guide_merge.axis()`). The warnings are now gone:

``` r
library(ggplot2)
ggplot(mpg) +
  geom_bar(aes(x = manufacturer)) + 
  guides(x = guide_axis(position = 'top'))
```

![](https://i.imgur.com/6b74gmz.png)

<sup>Created on 2020-03-10 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3884,ggplot2
thomasp85,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/3883,2020-03-10T13:29:12Z,2020-03-11T12:48:48Z,2020-03-11T12:48:47Z,"Fixes #3875 

This PR fixes the issue as discussed in the thread. The issue is also present in the standard `stat_contour` where the levels of the contour lines would not be equivalent across panels

## Old buggy behaviour

``` r
library(ggplot2)
ggplot(faithfuld, aes(waiting, eruptions, z = density)) + 
  geom_contour_filled() + 
  facet_wrap(~waiting < 70)
```

![](https://i.imgur.com/9wyIuMP.png)

<sup>Created on 2020-03-10 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9001)</sup>

## Working example with PR

``` r
library(ggplot2)
ggplot(faithfuld, aes(waiting, eruptions, z = density)) + 
  geom_contour_filled() + 
  facet_wrap(~waiting < 70)
```

![](https://i.imgur.com/z39250C.png)

<sup>Created on 2020-03-10 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9001)</sup>",https://github.com/tidyverse/ggplot2/pull/3883,ggplot2
thomasp85,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3882,2020-03-10T12:18:40Z,2020-04-16T13:43:39Z,2020-04-16T13:43:39Z,"Fixes #3866 

The check for `range_is_orthogonal` in `geom_bar()` was unneeded and resulted in failure with edge cases",https://github.com/tidyverse/ggplot2/pull/3882,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3881,2020-03-10T12:02:41Z,2020-04-30T20:31:03Z,2020-04-30T20:31:03Z,"This PR addresses #3877 without providing a true fix. The `even.steps = FALSE` feature piggybacks on the `guide_colourbar()` rendering which does not work on discrete scales. A complete rewrite of the functionality would be needed which is not a priority before the guide rewrite.

This PR simply emits a warning about the feature not working for that particular case",https://github.com/tidyverse/ggplot2/pull/3881,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3880,2020-03-10T11:26:30Z,2020-03-10T13:07:38Z,2020-03-10T13:07:37Z,"This PR is a performance improvement. It removes the need to split and combine the data inside `compute_*()` and `draw_*()` functions when there is only a single panel (and group)...

It uses the `""n""` attribute assigned by the id function to quickly figure out if the grouping is all a single group. This attribute disappears if the grouping column gets manipulated so it should be safe. For panels it uses the fact the PANEL column is encoded as a factor and simply checks the length of `levels`. Testing indicate that any check that relies on comparing the values in the grouping prior to split-combine, e.g. `all(x[1] == x)` will offset the performance gain, so checking has been confined to the cases where it can be determined instantaneously.

(A side effect of this PR is that it fixes a few edge cases where PANEL did not end up encoded as a factor)

The performance gain of this is very plot dependent, but will especially be seen in single panel plots with large data where it can give a 10-20% performance boost. For other plots the performance gain will be negligible.

As `dapply()` is not exported an no unit tests break, I consider this change fairly safe, but would like to discuss if there is any hesitations as to the approach",https://github.com/tidyverse/ggplot2/pull/3880,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3872,2020-03-09T12:10:42Z,2020-03-10T13:48:39Z,2020-03-10T13:48:31Z,Remove a dot and regenerate docs (It seems some document changes are not reflected to the actual docs yet),https://github.com/tidyverse/ggplot2/pull/3872,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3869,2020-03-08T02:51:39Z,2020-03-08T11:58:20Z,2020-03-08T11:58:14Z,"Fix #3867 

``` r
devtools::load_all(""~/repo/ggplot2"")
#> Loading ggplot2
library(dplyr, warn.conflicts = FALSE)

df <- tibble(x = rep(1:3, 2), y = rep(1:2, 3), z = 1:6) %>% 
  mutate(z = ifelse(x == 1 & y == 1, NA, z))

p <- ggplot(df, aes(x = x, y = y)) +
  geom_tile(aes(fill = z))

p + scale_fill_viridis_b(na.value = ""red"")
```

![](https://i.imgur.com/cRtwg32.png)

<sup>Created on 2020-03-08 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/3869,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3868,2020-03-08T01:52:16Z,2020-04-08T03:18:43Z,2020-04-08T03:18:34Z,"Fix #3853 

This code fails because the facet cannot handle the empty second layer, which should just be ignored.

``` r
library(ggplot2)

ggplot() +
  geom_point(aes(x = Sepal.Width, y = Sepal.Length), data = iris) +
  geom_line() + 
  facet_grid(rows=vars(Species))
#> Error in if (empty(data)) {: missing value where TRUE/FALSE needed
```

I think this is a bug of `empty()`; it should return `TRUE` for `waiver()`, not `NA`, because the `waiver()` represents the absense of data.",https://github.com/tidyverse/ggplot2/pull/3868,ggplot2
clauswilke,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/3864,2020-03-07T03:09:31Z,2020-03-12T20:45:30Z,2020-03-12T20:45:24Z,"The missing feature from 3.3.0, as described in #3846.

This is work in progress. Still to do:

- [x] Implement `geom_density2d_filled()` analogously to `geom_contour_filled()`
- [x] Usage examples
- [x] Make `nlevel` work for `geom_density2d_filled()`.
- [x] Unit tests
- [x] News item
- [x] Fully document computed variables
- [x] Improve documentation of `stat_contour_filled()`",https://github.com/tidyverse/ggplot2/pull/3864,ggplot2
yutannihilation,MEMBER,closed,21,https://github.com/tidyverse/ggplot2/pull/3862,2020-03-06T14:18:36Z,2020-03-16T14:45:37Z,2020-03-15T12:59:51Z,"Fix #3760, also fixes #3702.

## Major changes

* Enable the following GitHub Actions:
    - R-CMD-check: Run `R CMD check` on Windows, macOS, and Ubuntu with the last 5 minor versions of R.
    - pr-command: Commenting `/document` will trigger `devtools::document()` automatically (example: https://github.com/yutannihilation/ggplot2/pull/3#issuecomment-596099457).
    - pkgdown: build the pkgdown site.
* ~~Remove Travis and AppVeyor settings~~ Stop building pkgdown site by Travis (Now I feel it's safe to leave them for now and remove when we confirm GitHub Actions CI does the right thing. But, pkgdown site should not be built twice, so I tweaked `.travis.yml` only about this point)

Diffs between the default YAML files are following:

<details>


``` diff
diff --git a/.github/workflows/R-CMD-check.yaml b/.github/workflows/R-CMD-check.yaml
index 0d76f6e0..075d5167 100644
--- a/.github/workflows/R-CMD-check.yaml
+++ b/.github/workflows/R-CMD-check.yaml
@@ -18,18 +18,23 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - {os: windows-latest, r: '3.6'}
-          - {os: macOS-latest, r: '3.6'}
-          - {os: macOS-latest, r: 'devel'}
-          - {os: ubuntu-16.04, r: '3.2', cran: ""https://demo.rstudiopm.com/all/__linux__/xenial/latest""}
-          - {os: ubuntu-16.04, r: '3.3', cran: ""https://demo.rstudiopm.com/all/__linux__/xenial/latest""}
-          - {os: ubuntu-16.04, r: '3.4', cran: ""https://demo.rstudiopm.com/all/__linux__/xenial/latest""}
-          - {os: ubuntu-16.04, r: '3.5', cran: ""https://demo.rstudiopm.com/all/__linux__/xenial/latest""}
-          - {os: ubuntu-16.04, r: '3.6', cran: ""https://demo.rstudiopm.com/all/__linux__/xenial/latest""}
+          - {os: windows-latest, r: '3.6', vdiffr: true}
+          - {os: macOS-latest, r: '3.6', vdiffr: true}
+          - {os: macOS-latest, r: 'devel', vdiffr: false}
+          - {os: ubuntu-16.04, r: '3.2', vdiffr: false, cran: ""https://demo.rstudiopm.com/all/__linux__/xenial/latest""}
+          - {os: ubuntu-16.04, r: '3.3', vdiffr: false, cran: ""https://demo.rstudiopm.com/all/__linux__/xenial/latest""}
+          - {os: ubuntu-16.04, r: '3.4', vdiffr: false, cran: ""https://demo.rstudiopm.com/all/__linux__/xenial/latest""}
+          - {os: ubuntu-16.04, r: '3.5', vdiffr: false, cran: ""https://demo.rstudiopm.com/all/__linux__/xenial/latest""}
+          - {os: ubuntu-16.04, r: '3.6', vdiffr: true, cran: ""https://demo.rstudiopm.com/all/__linux__/xenial/latest""}
 
     env:
       R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
       CRAN: ${{ matrix.config.cran }}
+      # don't treat missing suggested packages as error
+      _R_CHECK_FORCE_SUGGESTS_: false
+      # Runs vdiffr test only on the latest version of R
+      VDIFFR_RUN_TESTS: ${{ matrix.config.vdiffr }}
+      VDIFFR_LOG_PATH: ""../vdiffr.Rout.fail""
 
     steps:
       - uses: actions/checkout@v2
@@ -40,6 +45,18 @@ jobs:
 
       - uses: r-lib/actions/setup-pandoc@master
 
+      - name: Install XQuartz on macOS
+        if: runner.os == 'macOS'
+        run: brew cask install xquartz
+
+      # To install vdiffr, these three libraries/tools are needed:
+      # - freetype (already installed, needed by systemfonts)
+      # - cairo (not installed, needed by gdtools)
+      # - pkg-config (not installed, needed to set proper build settings)
+      - name: Install pkg-config and cairo on devel macOS
+        if: runner.os == 'macOS' && matrix.config.r == 'devel'
+        run: brew install pkg-config cairo
+
       - name: Query dependencies
         run: |
           install.packages('remotes')
diff --git a/.github/workflows/pkgdown.yaml b/.github/workflows/pkgdown.yaml
index bd7cce52..d80b2236 100644
--- a/.github/workflows/pkgdown.yaml
+++ b/.github/workflows/pkgdown.yaml
@@ -15,6 +15,7 @@ jobs:
         run: |
           install.packages(""remotes"")
           remotes::install_deps(dependencies = TRUE)
+          remotes::install_github(""tidyverse/tidytemplate"")
           remotes::install_dev(""pkgdown"")
         shell: Rscript {0}
       - name: Install package
```

</details>

## Minor fixes

To enable these GitHub actions, I needed to do some tweaks

* `test-conditions.R` errors when it runs in covr, trying to parse a non-R script file `ggplot2.rdb`. Added `pattern` argument to `list.files()` so that only R script files are parsed.
* `test-geom-quantile.R` fails on Ubuntu with R >=3.4. This seems because `all.equal.tbl_df()` doesn't accept tolerance (https://github.com/tidyverse/dplyr/issues/2264). So, use `data.frame` instead of `tibble` to compare them with tolerance.

## Test run

I tested this setting on my forked repo and confirmed they work. Note that `macOS-latest (3.6)` fails only because the token for codecov is not set yet.

https://github.com/yutannihilation/ggplot2/actions/runs/51341080",https://github.com/tidyverse/ggplot2/pull/3862,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3861,2020-03-06T09:18:05Z,2020-03-06T13:07:42Z,2020-03-06T13:07:41Z,"#3783 inadvertently deleted the entire NEWS.md file, along with adding entries to the old NEWS file. This PR hopefully reverses that",https://github.com/tidyverse/ggplot2/pull/3861,ggplot2
clauswilke,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3859,2020-03-06T00:07:12Z,2020-03-06T01:28:42Z,2020-03-06T01:28:39Z,The last PR I merged didn't have all the docs updated to the latest build. This fixes that.,https://github.com/tidyverse/ggplot2/pull/3859,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3858,2020-03-06T00:05:26Z,2020-03-07T02:05:43Z,2020-03-06T08:58:34Z,Closes #3857,https://github.com/tidyverse/ggplot2/pull/3858,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3856,2020-03-05T19:48:24Z,2020-03-06T13:18:02Z,2020-03-06T13:14:02Z,"v3.3.0 is on CRAN 🎉

This PR merges the release branch back into master",https://github.com/tidyverse/ggplot2/pull/3856,ggplot2
SimonGreenhill,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/3855,2020-03-05T18:16:40Z,2020-03-08T04:46:16Z,2020-03-08T04:46:16Z,/instace/ -> /instance/,https://github.com/tidyverse/ggplot2/pull/3855,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3850,2020-03-03T20:06:57Z,2020-03-03T21:08:57Z,2020-03-03T21:08:57Z,This fixes a regression in the `.data` stripping code for default labels that would remove it before evaluation as well,https://github.com/tidyverse/ggplot2/pull/3850,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3845,2020-02-29T09:17:00Z,2020-02-29T09:51:34Z,2020-02-29T09:51:27Z,,https://github.com/tidyverse/ggplot2/pull/3845,ggplot2
lionel-,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/3842,2020-02-28T09:26:19Z,2020-02-29T09:14:13Z,2020-02-28T15:42:46Z,Avoids making assumptions about internals of quosure lists. Fixes a test failure with dev rlang.,https://github.com/tidyverse/ggplot2/pull/3842,ggplot2
teunbrand,CONTRIBUTOR,closed,15,https://github.com/tidyverse/ggplot2/pull/3837,2020-02-26T08:25:19Z,2020-03-08T18:54:12Z,2020-03-08T18:20:04Z,"This PR comes from the discussion over at #3835. 
The change in code does only one thing: it add `inherits(x, ""Vector"")` to the allowed data columns check.
This would allow a large number of classes that exhibit vector-like behaviour from Bioconductor to be valid data columns.

I was experimenting around with this, and realised that this PR is necessary but not sufficient to let the S4 classes reach the scale transforming stage of plot building. I'd like to reach that stage of plot building since the scales are extendable and I can work with the S4 classes from there onwards.

What I would additionally like is to drop/replace the `as_tibble()` in `as_gg_data_frame()` since it also throws errors with S4 classes. Relevant code here: https://github.com/tidyverse/ggplot2/blob/53edc51bee60ae768d54d6d96e6437f44d07a16a/R/utilities.r#L379-L393 
I ran the unit tests with the code changed from `new_data_frame(tibble::as_tibble(x))` to `new_data_frame(x)` and this both didn't seem to break any tests and seemed sufficient for the S4 classes to reach the scales. Disclaimer: I couldn't install the sf package, so these tests were skipped. Relevant issues to consider should be #2609 and #2374.

Thanks for reading and considering!",https://github.com/tidyverse/ggplot2/pull/3837,ggplot2
cpsievert,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3833,2020-02-24T20:33:32Z,2020-06-23T14:42:10Z,2020-05-19T06:36:11Z,"Closes #3826 by:

1. Allowing control over discrete colour scaling defaults (i.e., `scale_[fill/colour]_discrete()`) through a new `type` argument, which defaults to`ggplot2.discrete.[fill/colour]` options.
2. Adding the ability to supply a collection of color codes to `type` and using those codes if (and only if) there are more codes than levels. In addition to a character vector, you can also supply a list of vectors to `type` and it will choose the minimum length vector that can support the number of levels to encode, which provides a convenient way to switch the default palette based on the number of levels (see examples below).
~~3. Having `type` default to a colour-blind safe colour palette, such as Okabe-Ito. This will lead to 'breaking' changes, but those who wish to have the old behavior can do: `options(ggplot2.discrete.fill = scale_fill_hue, ggplot2.discrete.colour = scale_colour_hue)`~~

(**UPDATE:** this PR won't change the default, but a future major release likely will) 

### Examples

``` r
library(ggplot2)
# Template function for creating densities grouped by a variable
cty_by_var <- function(var) {
  ggplot(mpg, aes(cty, colour = factor({{var}}), fill = factor({{var}}))) +
    geom_density(alpha = 0.2)
}

# Define custom palettes for when there are 1-2, 3, or 4-6 levels
opts <- options(
  ggplot2.discrete.fill = list(
    c(""skyblue"", ""orange""),
    RColorBrewer::brewer.pal(3, ""Set2""),
    RColorBrewer::brewer.pal(6, ""Accent"")
  )
)
# Two levels
cty_by_var(year)
```

![](https://i.imgur.com/OtJVGCj.png)

``` r
# Three levels (Set2)
cty_by_var(drv)
```

![](https://i.imgur.com/FYUTrt8.png)

``` r
# Five levels (Accent)
cty_by_var(fl)
#> Warning: Groups with fewer than two data points have been dropped.
#> Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning -
#> Inf
```

![](https://i.imgur.com/IDPtkQQ.png)

``` r
# Seven levels (scale_fill_hue)
cty_by_var(class)
```

![](https://i.imgur.com/ucWWedG.png)

``` r
options(opts)
```

<sup>Created on 2020-02-24 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

### TODO

- [ ] Unit tests (visual and `scale_[fill/colour]_qualitative()`)",https://github.com/tidyverse/ggplot2/pull/3833,ggplot2
jgjl,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/3832,2020-02-23T04:08:22Z,2020-05-03T04:53:32Z,2020-05-03T04:53:31Z,"Add an option to reverse axis y->x instead of x->y to acomodate tail-latency plots, i.e.: https://github.com/ixy-languages/ixy-languages/blob/master/img/latency-hdr-hist-1.png (context: https://github.com/ixy-languages/ixy-languages).
In this kind of plot the probability is plotted along the horizontal axis while the values are plotted along the vertical axis. Hence, in comparison to the default stat_ecdf function, the axis are reversed.
This specific step could also be achived by applying coord_flip. However, in this case the reversed-logarithmic transformation of the x-axis cannot be applied. Hence, in my understanding, switching axis in stat_ecdf is the only way to get there. 

I will supply the complementary transformation object for the x-axis separately outside of the ggplot2 package.

The proposed implementation is a little simplistic in that it just adds a version where input and output variables are reversed. An alternative would be to allow the input and output variables to be freely choosen. I am happy to supply such a version if it would be preferrable.",https://github.com/tidyverse/ggplot2/pull/3832,ggplot2
cpsievert,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3828,2020-02-20T00:28:09Z,2020-06-23T14:42:16Z,2020-04-30T20:31:47Z,See #3827,https://github.com/tidyverse/ggplot2/pull/3828,ggplot2
zeehio,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/3820,2020-02-13T07:42:57Z,2020-02-14T05:07:19Z,2020-02-14T05:07:19Z,"Scales 1.0.0 fixed a bug https://github.com/r-lib/scales/pull/81. The bug can lead to wrong plots when they are defined inside for loops, because some scales 0.5.0 functions  evaluated some arguments when the plot was rendered instead of when the plot was created.

I contributed the fix for that bug some years ago and I hit myself with it last week because an old version of scales was still installed in a computer from a friend.

Most CI tests happen with the latest version of the pkg dependencies, so I guess it may make sense to upgrade to the latest 1.1.0, but that is up to you, I guess.",https://github.com/tidyverse/ggplot2/pull/3820,ggplot2
clauswilke,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3819,2020-02-12T05:08:42Z,2020-02-12T06:00:42Z,2020-02-12T06:00:35Z,"Closes #3809.

``` r
library(ggplot2)

ggplot(iris, aes(x = Sepal.Length)) +
  geom_bar(stat = ""bin"", binwidth = 0.1)
```

![](https://i.imgur.com/8WrK9tC.png)

``` r

ggplot(mtcars, aes(factor(gear))) +
  geom_bar(binwidth = 0.1)
#> Warning: Ignoring unknown parameters: binwidth
```

![](https://i.imgur.com/vpGIFoY.png)

<sup>Created on 2020-02-11 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup> ",https://github.com/tidyverse/ggplot2/pull/3819,ggplot2
schloerke,CONTRIBUTOR,open,9,https://github.com/tidyverse/ggplot2/pull/3818,2020-02-11T20:21:09Z,2022-03-23T17:42:26Z,list(),"Followup to #3815 

I did not have the separation at the correct point and I did not explain it well.  Trying again.

----------------------

## Context

Let's say `foo` is a class defined by a package other than ggplot2. `foo` objects also inherit from `gg`. `bar` objects doc not inherit from `gg`

You can currently perform `gg_obj + foo_obj` as both objects inherit from `gg` and would produce the same `+.gg` method from Opt's double dispatch.

Currently, to control how the right-hand-side (`foo` objects) are added, we can define `ggplot_add.foo`. 

## Problem

However, currently we can not customize how left-hand-side objects (`foo_obj + gg_obj`) are added to `gg` objects.  

Ex: left hand side structures are not ggplot2 objects and will not work with ggplot2 internal methods
```r
x <- ggplot(mtcars, aes(wt, mpg)) + geom_point()
foo_obj <- structure(
 list(x, x), 
  class = c(""foo"", ""gg"")
)
# can not customize how the theme is added
foo_obj + theme_bw()
```

Ex: conflict `+` methods make addition impossible
```r
x <- ggplot(mtcars, aes(wt, mpg)) + geom_point()
bar_obj <- structure(
 list(x, x), 
  class = c(""bar"") # does not inherit from 'gg'
)
`+.bar` <- function(e1, e2) {
  # only add to second plot
  e1[[2]] <- e1[[2]] + e2
  e1
}
# Conflicting `+` methods
bar_obj + theme_bw()
#> Error in bar_obj + theme_bw() : non-numeric argument to binary operator
#> In addition: Warning message:
#> Incompatible methods (""+.bar"", ""+.gg"") for ""+"" 
```


## Goal with PR

Define a `add_gg.foo(e1, e2)` method.  When adding `foo_obj` to `gg_obj`, `+.gg` will be called, which will then call `add_gg`.  `add_gg` will **not** invoke double dispatch (like `+` does), so custom left-hand-side methods can be created.

`ggplot2`'s `+.gg` is not commutative. So I believe this situation has merit. 

``` r
library(ggplot2)
x <- ggplot(mtcars, aes(wt, mpg)) + geom_point()
foo_obj <- structure(
 list(x, x), 
  class = c(""foo"", ""gg"") # does not inherit from 'gg'
)
`add_gg.foo` <- function(e1, e2) {
  # only add to second plot
  e1[[2]] <- e1[[2]] + e2
  e1
}
print.foo <- function(x, ...) {
  gridExtra::grid.arrange(x[[1]], x[[2]], ncol = 2)
}

foo_obj + theme_bw()
```

![](https://i.imgur.com/BsACzIL.png)

<sup>Created on 2020-02-11 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/3818,ggplot2
schloerke,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/3817,2020-02-11T19:06:02Z,2020-02-12T04:06:57Z,2020-02-12T04:06:57Z,Fix partial argument names for `seq` by specifying the full arg name `length.out`.,https://github.com/tidyverse/ggplot2/pull/3817,ggplot2
schloerke,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/3815,2020-02-10T22:13:45Z,2020-02-11T04:14:28Z,2020-02-10T22:41:23Z,"* Situation:
  * GGally has _ggplot2-like_ object `""ggmatrix""`.  I would like to be able to add themes and labels.  
* Issue: 
  * I currently do this by overwriting `+.gg`, which produces a warning.  
``` r
library(ggplot2)
library(GGally)
#> Registered S3 method overwritten by 'GGally':
#>   method from   
#>   +.gg   ggplot2
```

<sup>Created on 2020-02-10 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

* Goal:
  * A way to customize how ggplot2-like objects and the 'right side objects' combine without producing the warning.

----------------


From https://r.789695.n4.nabble.com/quot-Incompatible-methods-quot-for-overloaded-operator-td4633362.html, Martin states that there can not be two `+` methods. 😞 

> from ?groupGeneric under 'Ops' (of which ""+"" is one)

           used.  If different methods are found, there is a warning
           about 'incompatible methods': in that case or if no method is
           found for either argument the internal method is used.

I have tried this with my `ggmatrix` class and can confirm it doesn't work as intended:

```
Error: (converted from warning) Incompatible methods (""+.ggmatrix"", ""+.gg"") for ""+""
```

I propose that that the `add_ggplot` method become an S3 method to allow for other classes to control the left side.  

For my specific case, I would be able to add a method of `add_ggplot.ggmatrix`.  From here, I can have a hook to the _addition_ and not produce a warning.

cc @hafen",https://github.com/tidyverse/ggplot2/pull/3815,ggplot2
evanhaldane,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3813,2020-02-10T16:25:55Z,2020-02-24T04:26:02Z,2020-02-24T04:25:56Z,"`width` is deprecated, yet the documentation for using `center`/`boundary` still reference it instead of `binwidth`.",https://github.com/tidyverse/ggplot2/pull/3813,ggplot2
bwiernik,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3810,2020-02-07T17:17:19Z,2020-02-25T00:34:13Z,2020-02-24T21:49:57Z,"Devices like `devEMF::emf` or `Cairo::CairoSVG` use `file` instead of `filename`. They currently fail when provided in `device` to ggsave. This fixes that.

Closes https://github.com/tidyverse/ggplot2/issues/3807",https://github.com/tidyverse/ggplot2/pull/3810,ggplot2
topepo,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3808,2020-02-07T16:17:27Z,2020-03-03T08:31:35Z,2020-03-03T08:31:35Z,"@thomasp85 

[SQL file](https://www.dropbox.com/sh/y00i50n0hlm7qnm/AABU7WoD-hjfVmsVIb6Jprnza?dl=0)

We checked 3157 reverse dependencies (2685 from CRAN + 472 from BioConductor), comparing R CMD check results across CRAN and dev versions of this package.

 * We saw 30 new problems
 * We failed to check 79 packages

Issues with CRAN packages are summarised below.

### New problems
(This reports the first line of each new failure)

* apyramid
  checking tests ...

* autocogs
  checking examples ... ERROR
  checking tests ...

* bayesdfa
  checking installed package size ... NOTE
  checking for GNU extensions in Makefiles ... NOTE

* benchr
  checking tests ...

* biclustermd
  checking tests ...

* dabestr
  checking examples ... ERROR
  checking tests ...

* DeLorean
  checking installed package size ... NOTE
  checking dependencies in R code ... NOTE
  checking for GNU extensions in Makefiles ... NOTE

* describedata
  checking examples ... ERROR

* ezplot
  checking examples ... ERROR
  checking tests ...

* GGally
  checking examples ... ERROR
  checking tests ...

* ggdag
  checking examples ... ERROR

* ggeasy
  checking tests ...

* ggfortify
  checking tests ...

* ggpol
  checking examples ... ERROR

* ggspectra
  checking examples ... ERROR

* ggstance
  checking tests ...

* gWQS
  checking running R code from vignettes ...

* helda
  checking tests ...

* interactions
  checking tests ...

* lemon
  checking tests ...

* mcStats
  checking tests ...

* plot3logit
  checking examples ... ERROR

* PSCBS
  checking tests ...

* RGraphics
  checking whether package ‘RGraphics’ can be installed ... WARNING
  checking R code for possible problems ... NOTE

* riskRegression
  checking tests ...

* Seurat
  checking examples ... ERROR

* spartan
  checking tests ...

* survsup
  checking examples ... ERROR

* tricolore
  checking examples ... ERROR
  checking tests ...

* xpose
  checking tests ...

### Failed to check

* aslib                    (NA)
* av                       (NA)
* BACA                     (NA)
* BACCT                    (NA)
* bamdit                   (NA)
* BayesPostEst             (NA)
* BayesRS                  (NA)
* BNSP                     (NA)
* BPEC                     (NA)
* bsam                     (NA)
* BTSPAS                   (NA)
* CollapsABEL              (NA)
* crmPack                  (NA)
* Crossover                (NA)
* ctsem                    (NA)
* Deducer                  (NA)
* DistributionOptimization (NA)
* DiversityOccupancy       (NA)
* dynr                     (NA)
* evoper                   (NA)
* ewoc                     (NA)
* fingerPro                (NA)
* fsdaR                    (NA)
* G2Sd                     (NA)
* ggdmc                    (NA)
* ggtern                   (NA)
* GUIgems                  (NA)
* hbbr                     (NA)
* imageData                (NA)
* InSilicoVA               (NA)
* jarbes                   (NA)
* JointAI                  (NA)
* L0Learn                  (NA)
* lilikoi                  (NA)
* llama                    (NA)
* LLSR                     (NA)
* matchingMarkets          (NA)
* mbgraphic                (NA)
* mcmcabn                  (NA)
* MergeGUI                 (NA)
* metaMix                  (NA)
* mfbvar                   (NA)
* MissingDataGUI           (NA)
* mleap                    (NA)
* morse                    (NA)
* mwaved                   (NA)
* nlmixr                   (NA)
* OpenStreetMap            (NA)
* openVA                   (NA)
* petro.One                (NA)
* phase1PRMD               (NA)
* phase1RMD                (NA)
* PortfolioEffectHFT       (NA)
* qdap                     (NA)
* RclusTool                (NA)
* RcmdrPlugin.FuzzyClust   (NA)
* Rdrools                  (NA)
* rmcfs                    (NA)
* rpanel                   (NA)
* rrd                      (NA)
* rrepast                  (NA)
* RSCAT                    (NA)
* rstanarm                 (NA)
* rsvg                     (NA)
* RtutoR                   (NA)
* RxODE                    (NA)
* SeqFeatR                 (NA)
* sf                       (NA)
* simmr                    (NA)
* smartR                   (NA)
* spcosa                   (NA)
* stpp                     (NA)
* TeachingDemos            (NA)
* trialr                   (NA)
* vortexR                  (NA)
* WaveSampling             (NA)
* XLConnect                (NA)
* zenplots                 (NA)
* zooaRchGUI               (NA)
",https://github.com/tidyverse/ggplot2/pull/3808,ggplot2
bkkkk,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/3802,2020-02-06T13:59:53Z,2021-09-08T22:49:33Z,2021-09-08T22:49:33Z,,https://github.com/tidyverse/ggplot2/pull/3802,ggplot2
thomasp85,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3801,2020-02-06T11:04:12Z,2020-02-06T13:21:12Z,2020-02-06T13:21:11Z,"Fixes #3729 

This PR catches any errors happening when applying `after_scale()` modifications to legend keys. If it errors it will simply discard them all with a warning.

It may be done more fine grained, but not without a lot of weird refactoring of the code to accommodate this edge-case. This PR fixes the surprise of the legend disappearing and gives a meaningful warning. If we get a lot of requests for better support (I doubt it) we can revisit it in the future",https://github.com/tidyverse/ggplot2/pull/3801,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3800,2020-02-06T10:19:39Z,2020-02-06T10:54:28Z,2020-02-06T10:54:27Z,"Superseedes #3764 

This PR introduces a new switch in `has_flipped_aes()` which confines the single value check to those requesting it (currently only boxplot)",https://github.com/tidyverse/ggplot2/pull/3800,ggplot2
kent37,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/3794,2020-02-03T23:04:51Z,2020-02-05T01:09:54Z,2020-02-04T23:15:33Z,"Small change to allow passing a `nativeRaster` object to `annotation_raster()`. This is a significant performance improvement for large rasters.

I didn't include an example because I don't see a source for a native raster in `{ggplot2}`. I could use the R logo from `{png}` but that package is not currently used by ggplot2. If you think an example is called for, please advise.",https://github.com/tidyverse/ggplot2/pull/3794,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3792,2020-02-01T05:54:00Z,2020-02-01T08:13:09Z,2020-02-01T07:46:53Z,closes #3791,https://github.com/tidyverse/ggplot2/pull/3792,ggplot2
djnavarro,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3790,2020-02-01T00:34:52Z,2020-02-02T04:34:42Z,2020-02-02T04:34:41Z,Inserts a short section in the ggsave docs on saving graphics files without ggsave. Fixes #3755,https://github.com/tidyverse/ggplot2/pull/3790,ggplot2
Ryo-N7,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3789,2020-02-01T00:26:28Z,2020-03-05T14:32:44Z,2020-03-05T14:31:56Z,improve lims docs: closes #3752,https://github.com/tidyverse/ggplot2/pull/3789,ggplot2
rivaquiroga,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/3788,2020-02-01T00:13:23Z,2020-05-16T17:04:49Z,2020-05-16T17:04:24Z,Closes #3293 ,https://github.com/tidyverse/ggplot2/pull/3788,ggplot2
melimore86,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3787,2020-02-01T00:09:07Z,2020-05-02T23:10:49Z,2020-05-02T23:10:34Z,"#3458 issue, adding font size units in R and documentation",https://github.com/tidyverse/ggplot2/pull/3787,ggplot2
kelseymoty,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3786,2020-01-31T23:56:26Z,2020-05-02T22:13:19Z,2020-05-02T22:12:17Z,Expanded documentation for aes-colour-fill-alpha addresses one of the points raised in issue #3297 ,https://github.com/tidyverse/ggplot2/pull/3786,ggplot2
AliciaSchep,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/3785,2020-01-31T23:34:36Z,2020-01-31T23:44:19Z,2020-01-31T23:44:18Z,"Fixes #3468 -- prints ""function()"" instead of ""NA NA"" for limits when printing scales where limits are set by function.

New result:
``` r
library(ggplot2)
g <- ggplot(iris, aes(Sepal.Width, Sepal.Length,
                      colour = Petal.Width)) +
  geom_point()

goodprint <- g + scale_colour_continuous(limits = range(iris$Petal.Width))
badprint <- g + scale_colour_continuous(limits = function(lims) {1 * lims})

print(goodprint$scales$scales[[1]])
#> <ScaleContinuous>
#>  Range:  
#>  Limits:  0.1 --  2.5

print(badprint$scales$scales[[1]])
#> <ScaleContinuous>
#>  Range:  
#>  Limits: function()
```

<sup>Created on 2020-01-31 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3785,ggplot2
DanielleQuinn,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/3784,2020-01-31T23:14:18Z,2020-01-31T23:42:36Z,2020-01-31T23:36:25Z,"Fixes #2767 
Uncertain if this is clear enough based on discussion in issue; suggestions very welcome! :)",https://github.com/tidyverse/ggplot2/pull/3784,ggplot2
kbodwin,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/3783,2020-01-31T23:12:43Z,2020-03-05T23:18:15Z,2020-03-05T23:18:08Z,"Allows logticks to be outside of plotting pane, when used with `coord_cartesian(clip = ""off"")`

Fixes #3660 ",https://github.com/tidyverse/ggplot2/pull/3783,ggplot2
Ryo-N7,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3782,2020-01-31T22:52:10Z,2020-02-01T00:33:52Z,2020-02-01T00:33:52Z,closes #3294,https://github.com/tidyverse/ggplot2/pull/3782,ggplot2
808sAndBR,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/3781,2020-01-31T22:25:14Z,2020-02-02T04:37:29Z,2020-02-02T04:37:29Z,"Resolves: #3455 

Below is reprex of this working:

```
# sample data
dat <- data.frame(
  x = as.factor(1:10),
  y = c(20,30,13,37,12,50,31,2,40,30),
  z = rep('a', 10)
)

# basic plot
ggplot(dat) +
  geom_segment(
    aes(x = x, xend = x, y = 0, yend = y+15, linetype = z), 
    arrow = arrow(length = unit(0.25, 'cm'), type = 'closed'),
    size = 0.7
  ) 
```

New output:
![image](https://user-images.githubusercontent.com/7990602/73578771-56e49d80-4435-11ea-952e-17d99832f8af.png)

Old output:
![image](https://user-images.githubusercontent.com/7990602/73578812-724fa880-4435-11ea-8e9e-2bfa0766b1d8.png)


",https://github.com/tidyverse/ggplot2/pull/3781,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3780,2020-01-31T22:11:25Z,2020-01-31T23:44:28Z,2020-01-31T22:16:39Z,,https://github.com/tidyverse/ggplot2/pull/3780,ggplot2
melimore86,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3779,2020-01-31T21:56:23Z,2020-01-31T23:44:37Z,2020-01-31T22:55:35Z,Updating text of stat_density to text located in https://www.rdocumentation.org/packages/ggplot2/versions/1.0.1/topics/stat_density. Updated text to show the TRUE and FALSE parameters in the argument `trim`.,https://github.com/tidyverse/ggplot2/pull/3779,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3778,2020-01-31T21:46:45Z,2020-01-31T21:49:25Z,2020-01-31T21:49:24Z,This PR fixes the failing examples from `facet_grid()` in the current master. The fix was only applied to the release branch and has been copied over,https://github.com/tidyverse/ggplot2/pull/3778,ggplot2
kelseymoty,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3777,2020-01-31T21:37:35Z,2022-03-23T14:24:52Z,2022-03-23T14:24:52Z,Possible solution for addressing issue #3533 to point users to `scale_x_date()` ,https://github.com/tidyverse/ggplot2/pull/3777,ggplot2
wendtke,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/3775,2020-01-31T21:23:53Z,2020-01-31T23:44:52Z,2020-01-31T21:47:27Z,Fixes #3602 ,https://github.com/tidyverse/ggplot2/pull/3775,ggplot2
kbodwin,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3774,2020-01-31T21:18:07Z,2020-01-31T23:44:57Z,2020-01-31T23:33:11Z,"Fixes #3135 

(Made via edits to previous PR #3427 )",https://github.com/tidyverse/ggplot2/pull/3774,ggplot2
kelseymoty,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3773,2020-01-31T20:44:55Z,2020-01-31T23:45:18Z,2020-01-31T21:17:41Z,Fixes Issue #3756 ,https://github.com/tidyverse/ggplot2/pull/3773,ggplot2
melimore86,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3772,2020-01-31T20:13:17Z,2020-01-31T23:47:20Z,2020-01-31T21:53:53Z,"updating manual word wrap as per Claus recommendation, updating text for stat_density, the trim argument, found text in https://www.rdocumentation.org/packages/ggplot2/versions/1.0.1/topics/stat_density",https://github.com/tidyverse/ggplot2/pull/3772,ggplot2
tereom,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/3771,2020-01-31T20:08:56Z,2020-01-31T23:47:27Z,2020-01-31T21:57:53Z,Fixes #3753,https://github.com/tidyverse/ggplot2/pull/3771,ggplot2
melimore86,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3770,2020-01-31T19:54:57Z,2020-01-31T23:47:37Z,2020-01-31T20:07:40Z,"updating text for the ggplot 2 stat_density function, trim argument. Updated the text from the website https://www.rdocumentation.org/packages/ggplot2/versions/1.0.1/topics/stat_density",https://github.com/tidyverse/ggplot2/pull/3770,ggplot2
Songeo,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/3769,2020-01-31T19:54:12Z,2020-01-31T23:47:53Z,2020-01-31T21:52:54Z,Fixes #3751 ,https://github.com/tidyverse/ggplot2/pull/3769,ggplot2
sushmitavgopalan16,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/3768,2020-01-31T18:56:00Z,2020-01-31T23:48:31Z,2020-01-31T19:35:28Z,closes #3701 ,https://github.com/tidyverse/ggplot2/pull/3768,ggplot2
yutannihilation,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3764,2020-01-29T09:42:16Z,2020-02-06T10:44:56Z,2020-02-06T10:44:39Z,"These lines are to detect the case ""the axes is a single value,"" but, in actual, they check whether all values are a fixed value`1` or not.

https://github.com/tidyverse/ggplot2/blob/5e6b1e5daa1599661bf5841353a067e9eee88161/R/utilities.r#L594-L600

This causes different behaviours between the case of `1` and that of another value. This PR fixes the check to `zero_range(range())`.

``` r
library(ggplot2)

df <- data.frame(value = 1:3, group = c(""a"", ""a"", ""b""))
l <-  stat_summary(fun = ""mean"", geom = ""bar"", position = ""dodge"")
p1 <- ggplot(df, aes(value, 1, fill = group)) + l
p2 <- ggplot(df, aes(value, 0, fill = group)) + l

patchwork::wrap_plots(p1, p2, ncol = 1)
```

![](https://i.imgur.com/p0SQHuO.png)

<sup>Created on 2020-01-29 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3764,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3763,2020-01-29T08:40:33Z,2020-02-03T23:46:28Z,2020-02-03T23:46:22Z,"Fix #3761

Currently, we try to make a precise guess in `has_flipped_aes()`, but it seems the guess goes wrong in some cases when both axis are discrete like. I don't know what the proper fix would be, but I think it's rather safe to stay unflipped when we are not fully sure it's flippable, considering we want to avoid introducing some big change to the current RC branch.",https://github.com/tidyverse/ggplot2/pull/3763,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3759,2020-01-24T11:45:12Z,2020-01-31T20:55:49Z,2020-01-31T20:55:49Z,"When handling large datasets (>1e6 rows), scale_apply ends up being the main bottleneck (around 50% of the rendering time) This is all due to a call to `factor()` on the vector identifying which positional scale each row belongs two (this happens 8 time in total, as the scales are trained and mapped twice for both x and y).

This PR simplifies the factor construction as well as bypass it completely in the case of only a single scale (which is the predominant case). It speeds up the step 1000-fold for single panel plots and 2-3 fold otherwise",https://github.com/tidyverse/ggplot2/pull/3759,ggplot2
yutannihilation,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3758,2020-01-23T11:52:28Z,2021-03-26T15:06:35Z,2021-03-26T15:06:32Z,"#3526 introduced the static analysis of codes here.

https://github.com/tidyverse/ggplot2/blob/214f3148d8a9a25ce80859645dbef38f9632b4fa/tests/testthat/test-conditions.R#L3-L21

This approach seems very clean and extensive because this catches the misuse of the prohibited function even if it's on the rare code path. I think the check on `data.frame()` should be done in the same way instead of overwriting the function. One bonus of this is that we'll be less likely to face such mysterious issues as #3745.",https://github.com/tidyverse/ggplot2/pull/3758,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3757,2020-01-22T16:17:36Z,2020-01-25T14:40:19Z,2020-01-25T14:40:11Z,"(Cherry-picked version of #3735 for v3.3.0-rc branch)

---

Fix #2963

### Background

Not all variables in a facet spec are available on all the layers. A solution suggested on https://github.com/r-lib/rlang/issues/888#issuecomment-573691024 is:

> bind the same symbols inside each panel, and when the symbols are undefined use an active binding to throw a typed error? And then you'd only catch these particular errors in the `tryCatch()`

### Main change

This PR injects such an active bindings on the column names of all the plot data so that we can let `eval_facet()` fail gracefully.

`eval_facet()` evaluates facet specs in these two steps:

1. When the spec is a symbol (the most common case), check if the layer data contains the same name of column. If it does, subset the column and return it. If it doesn't, return `NULL`. In this case, no error happens even if the symbol is not available on all the layers.
2. When the spec is a expression, evaluate it. In this case, an error is raised on the layer where the symbol is not available.

This PR changes only step 2, so I expect this doesn't affect most of the existing code. Note that, while step 2 can also handle symbols, we still need step 1 to issue a friendly error (""At least one layer must contain all faceting variables"") when no layer contain the variable.

``` r
devtools::load_all(""~/repo/ggplot2/"")
#> Loading ggplot2

# works fine with expressions
ggplot(mtcars, aes(mpg, cyl)) +
  geom_point() +
  geom_vline(xintercept = 20) +
  facet_wrap(vars(2 * am))
```

![](https://i.imgur.com/8TFtDJE.png)

``` r
# works fine with external variables
two <- 2
ggplot(mtcars, aes(mpg, cyl)) +
  geom_point() +
  geom_vline(xintercept = 20) +
  facet_wrap(vars(two * am))
```

![](https://i.imgur.com/f1sWpuv.png)

``` r
# raises an error when the expression refers to some non-existent variable
ggplot(mtcars, aes(mpg, cyl)) +
  geom_point() +
  geom_vline(xintercept = 20) +
  facet_wrap(vars(no_such_variable * am))
#> Error in eval_tidy(facet, mask): object 'no_such_variable' not found

# special case: raises a friendlier error when the expression is a symbol
ggplot(mtcars, aes(mpg, cyl)) +
  geom_point() +
  geom_vline(xintercept = 20) +
  facet_wrap(vars(no_such_variable))
#> Error: At least one layer must contain all faceting variables: `no_such_variable`.
#> * Plot is missing `no_such_variable`
#> * Layer 1 is missing `no_such_variable`
#> * Layer 2 is missing `no_such_variable`

# a data pronoun can be handled
ggplot(mtcars, aes(mpg, cyl)) +
  geom_point() +
  geom_vline(xintercept = 20) +
  facet_wrap(vars(.data$am))
```

![](https://i.imgur.com/X6PSY7o.png)

<sup>Created on 2020-01-23 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

### Minor change

* This PR removes `env` argument of `eval_facet()`. This is not necessary, but done in order to avoid confusion. I believe all facet specs are converted to quosures and bare expressions are not allowed, which means `env` is always ignored on `eval_tidy()`.
",https://github.com/tidyverse/ggplot2/pull/3757,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3747,2020-01-21T14:27:34Z,2020-01-21T15:36:20Z,2020-01-21T15:36:10Z,"* Link to ggplot2 book
* Update link to R Graphics Cookbook",https://github.com/tidyverse/ggplot2/pull/3747,ggplot2
hadley,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3746,2020-01-20T14:10:32Z,2020-01-20T17:46:35Z,2020-01-20T17:46:31Z,"@thomasp85 this ensures that when you use the `.data` pronoun with ggplot2, it doesn't adversely affect the labels.

@paleolimbot — this should make your talk slightly simpler 😄 ",https://github.com/tidyverse/ggplot2/pull/3746,ggplot2
mattsteadman,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3742,2020-01-17T19:18:56Z,2020-02-09T13:02:50Z,2020-02-09T13:02:50Z,Two missing backticks and a several missing newlines were causing incorrect or inconsistent rendering of markdown.,https://github.com/tidyverse/ggplot2/pull/3742,ggplot2
thomasp85,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3740,2020-01-16T11:44:49Z,2020-02-06T13:21:40Z,2020-02-06T13:21:40Z,"This PR addresses an issue in scales. If a label function converts an `NA` break to a `character(0)` label we will get an error later on when we enlist the label list. This is fixed here in the `ScaleContinuous$get_labels()` function by converting such list elements to empty strings (`""""`) instead.

It can be argued that this should get fixed in `scales::label_number_auto()` (and perhaps it should as well), but I think it makes sense to have a guard in ggplot2 as well, since otherwise this problem will be carried all the way to `guide_axis()` and create an unintelligible error there.",https://github.com/tidyverse/ggplot2/pull/3740,ggplot2
yutannihilation,MEMBER,closed,17,https://github.com/tidyverse/ggplot2/pull/3735,2020-01-15T15:18:55Z,2020-01-22T16:37:26Z,2020-01-22T16:37:25Z,"Fix #2963

Not all variables in a facet spec are available on all the layers. A solution suggested on https://github.com/r-lib/rlang/issues/888#issuecomment-573691024 is:

> bind the same symbols inside each panel, and when the symbols are undefined use an active binding to throw a typed error? And then you'd only catch these particular errors in the `tryCatch()`

This PR injects such an active bindings on the column names of all the plot data so that we can let `eval_facet()` fail gracefully.

Note that this PR removes `env` argument of `eval_facet()` to avoid confusion. I believe all facet specs are converted to quosures and bare expressions are not allowed, which means `env` is always ignored on `eval_tidy()`.

``` r
devtools::load_all(""~/repo/ggplot2/"")
#> Loading ggplot2

# works fine with expressions
ggplot(mtcars, aes(mpg, cyl)) +
  geom_point() +
  geom_vline(xintercept = 20) +
  facet_wrap(vars(2 * am))
```

![](https://i.imgur.com/DXE7ycD.png)

``` r

# works fine with external variables
two <- 2
ggplot(mtcars, aes(mpg, cyl)) +
  geom_point() +
  geom_vline(xintercept = 20) +
  facet_wrap(vars(two * am))
```

![](https://i.imgur.com/tWhUCXh.png)

``` r

# raises an error when the expression refers to some non-existent variable
ggplot(mtcars, aes(mpg, cyl)) +
  geom_point() +
  geom_vline(xintercept = 20) +
  facet_wrap(vars(no_such_variable * am))
#> Error in eval_tidy(facet, data): object 'no_such_variable' not found

# special case: raises a friendlier error when the expression is a symbol
ggplot(mtcars, aes(mpg, cyl)) +
  geom_point() +
  geom_vline(xintercept = 20) +
  facet_wrap(vars(no_such_variable))
#> Error: At least one layer must contain all faceting variables: `no_such_variable`.
#> * Plot is missing `no_such_variable`
#> * Layer 1 is missing `no_such_variable`
#> * Layer 2 is missing `no_such_variable`
```

![](https://i.imgur.com/N5jHPCG.png)

<sup>Created on 2020-01-16 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

----
TODO:
- [ ] Add a NEWS bullet
- [ ] Consider using `warn_for_aes_extract_usage()` here as well
- [ ] Consider if it's really OK to add a param to `Facet` (I bet it's OK)",https://github.com/tidyverse/ggplot2/pull/3735,ggplot2
topepo,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3734,2020-01-15T10:45:22Z,2020-01-17T10:53:48Z,2020-01-17T10:53:48Z,"[SQL file](https://www.dropbox.com/s/z2obswdyv81i3sp/data.sqlite?dl=0)

We checked 3116 reverse dependencies (2644 from CRAN + 472 from BioConductor), comparing R CMD check results across CRAN and dev versions of this package.

 * We saw 41 new problems
 * We failed to check 80 packages

Issues with CRAN packages are summarised below.

### New problems
(This reports the first line of each new failure)

* apyramid
  checking tests ...

* auditor
  checking examples ... ERROR
  checking tests ...

* autocogs
  checking examples ... ERROR
  checking tests ...

* bayesdfa
  checking installed package size ... NOTE
  checking for GNU extensions in Makefiles ... NOTE

* benchr
  checking tests ...

* biclustermd
  checking tests ...

* BMSC
  checking installed package size ... NOTE

* dabestr
  checking examples ... ERROR
  checking tests ...

* drake
  checking tests ...

* emmeans
  checking examples ... ERROR

* ezplot
  checking examples ... ERROR
  checking tests ...

* FLightR
  checking examples ... ERROR

* GGally
  checking tests ...

* ggdag
  checking examples ... ERROR

* ggfortify
  checking tests ...

* ggmap
  checking installed package size ... NOTE

* ggmuller
  checking examples ... ERROR

* ggpol
  checking examples ... ERROR

* ggspectra
  checking examples ... ERROR

* ggstance
  checking tests ...

* interactions
  checking tests ...

* lemon
  checking tests ...

* mcStats
  checking tests ...

* obAnalytics
  checking examples ... ERROR

* ormPlot
  checking examples ... ERROR
  checking tests ...

* photobiologyFilters
  checking examples ... ERROR

* photobiologyLEDs
  checking examples ... ERROR

* photobiologySensors
  checking examples ... ERROR

* plot3logit
  checking examples ... ERROR

* plotly
  checking tests ...

* qgcomp
  checking tests ...

* RAM
  checking examples ... ERROR

* RGraphics
  checking whether package ‘RGraphics’ can be installed ... WARNING
  checking R code for possible problems ... NOTE

* rrecsys
  checking examples ... ERROR

* scales
  checking examples ... ERROR

* sentometrics
  checking tests ...

* Seurat
  checking examples ... ERROR

* spartan
  checking tests ...

* survsup
  checking examples ... ERROR

* tricolore
  checking examples ... ERROR
  checking tests ...

* xpose
  checking tests ...

### Failed to check

* aslib                  (NA)
* av                     (NA)
* BACA                   (NA)
* BACCT                  (NA)
* bamdit                 (NA)
* BayesPostEst           (NA)
* BayesRS                (NA)
* BNSP                   (NA)
* BPEC                   (NA)
* bsam                   (NA)
* BTSPAS                 (NA)
* CollapsABEL            (NA)
* crmPack                (NA)
* Crossover              (NA)
* ctsem                  (NA)
* Deducer                (NA)
* DiversityOccupancy     (NA)
* dynr                   (NA)
* evoper                 (NA)
* ewoc                   (NA)
* fingerPro              (NA)
* fsdaR                  (NA)
* G2Sd                   (NA)
* gastempt               (NA)
* ggdmc                  (NA)
* ggtern                 (NA)
* GUIgems                (NA)
* gutenbergr             (NA)
* hbbr                   (NA)
* imageData              (NA)
* InSilicoVA             (NA)
* jarbes                 (NA)
* JointAI                (NA)
* L0Learn                (NA)
* lilikoi                (NA)
* llama                  (NA)
* LLSR                   (NA)
* matchingMarkets        (NA)
* mbgraphic              (NA)
* mcmcabn                (NA)
* MergeGUI               (NA)
* metaMix                (NA)
* mfbvar                 (NA)
* MissingDataGUI         (NA)
* mleap                  (NA)
* morse                  (NA)
* mwaved                 (NA)
* nlmixr                 (NA)
* OpenStreetMap          (NA)
* openVA                 (NA)
* petro.One              (NA)
* phase1PRMD             (NA)
* phase1RMD              (NA)
* PortfolioEffectHFT     (NA)
* qdap                   (NA)
* RclusTool              (NA)
* RcmdrPlugin.FuzzyClust (NA)
* Rdrools                (NA)
* rmcfs                  (NA)
* rpanel                 (NA)
* rrd                    (NA)
* rrepast                (NA)
* RSCAT                  (NA)
* rstanarm               (NA)
* rsvg                   (NA)
* RtutoR                 (NA)
* RxODE                  (NA)
* SeqFeatR               (NA)
* sf                     (NA)
* simmr                  (NA)
* smartR                 (NA)
* spcosa                 (NA)
* stpp                   (NA)
* TeachingDemos          (NA)
* trialr                 (NA)
* vortexR                (NA)
* WaveSampling           (NA)
* XLConnect              (NA)
* zenplots               (NA)
* zooaRchGUI             (NA)
>",https://github.com/tidyverse/ggplot2/pull/3734,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3733,2020-01-15T08:22:19Z,2020-01-17T09:24:37Z,2020-01-17T09:24:37Z,"This issue is based on failing revdep check of ggspectra and its reverse dependencies

Currently aes name standardisation changes every occurrence of ""color"" to ""colour"", not just the exact string ""color"". This has not been a problem before, but with the new aesthetic evaluation we have chosen to substituted names inside the expressions used in `after_stat()` and `after_scale()` and this causes problems if the expression references a US spelling column in the data.

This PR fixes it by only matching exactly to ""color"", but I'm unsure about whether there will be unforeseen consequences of this change. Another approach would be to substitute the names of the columns as well

",https://github.com/tidyverse/ggplot2/pull/3733,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3730,2020-01-14T03:02:53Z,2020-01-16T06:17:34Z,2020-01-16T06:17:31Z,,https://github.com/tidyverse/ggplot2/pull/3730,ggplot2
clauswilke,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3728,2020-01-13T16:05:08Z,2020-02-01T17:14:21Z,2020-01-15T15:08:43Z,Fixes #3727.,https://github.com/tidyverse/ggplot2/pull/3728,ggplot2
atusy,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3724,2020-01-13T03:30:39Z,2020-01-13T12:50:50Z,2020-01-13T12:50:44Z,,https://github.com/tidyverse/ggplot2/pull/3724,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3720,2020-01-10T03:03:22Z,2020-01-10T22:34:34Z,2020-01-10T14:49:11Z,"This fixes #3718. I am confident about this fix. It doesn't touch `merge_element()` at all, only makes a minor change in `draw_axis()`, and simply copies over the relevant properties manually instead of merging the elements. Reprex below shows that things work as expected with this fix.

``` r
library(ggplot2)
library(ggtext)

ggplot(mpg, aes(class)) + 
  geom_bar() +
  scale_x_discrete(
    name = ""vehicle *class*"",
    labels = c(""2seater"", ""*compact*"", ""midsize"", ""**minivan**"", ""pickup"", ""<sub>sub</sub>compact"", ""suv"")
  ) +
  theme(
    axis.title.x = element_markdown(
      linetype = 1, fill = ""cornsilk"", r = unit(5, ""pt""), padding = margin(4, 4, 4, 4)
    ),
    axis.text.x = element_markdown(
      linetype = 1, fill = ""cornsilk"", r = unit(5, ""pt""), padding = margin(4, 4, 4, 4)
    )
  )
```

![](https://i.imgur.com/FcGdHcT.png)

<sup>Created on 2020-01-09 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3720,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3719,2020-01-10T01:08:02Z,2020-01-10T03:42:58Z,2020-01-10T03:42:53Z,,https://github.com/tidyverse/ggplot2/pull/3719,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3715,2020-01-09T11:33:14Z,2020-01-09T12:12:14Z,2020-01-09T12:12:11Z,"(Followup of #3708)

I originally named this option as `""legacy""` to discourage the usage in the hope of deprecating and removing this option eventually. But, this might be needed a bit longer than expected to keep the backward-compatibility of `geom_density()`. This PR

* renames ""legacy"" to ""full"",
* removes a warning, and
* describes about `geom_density()` in the NEWS
",https://github.com/tidyverse/ggplot2/pull/3715,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3714,2020-01-09T11:27:26Z,2020-01-09T12:10:42Z,2020-01-09T12:10:38Z,Same as #3713,https://github.com/tidyverse/ggplot2/pull/3714,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3713,2020-01-09T10:56:57Z,2020-01-09T12:10:31Z,2020-01-09T12:10:25Z,"Fix #3712

The new farver package now raises an error for invalid colour names (c.f. #3644) for example when we typoed `NA` as `""NA""`. This PR fixes the example.",https://github.com/tidyverse/ggplot2/pull/3713,ggplot2
teunbrand,CONTRIBUTOR,closed,9,https://github.com/tidyverse/ggplot2/pull/3711,2020-01-09T09:11:27Z,2020-01-11T16:14:19Z,2020-01-11T16:13:42Z,"This PR follows from the discussion at #3688 in order that the proposed changes could be reviewed here.

In brief:
It could be convenient if scales would be able to work with vectors other than numeric or character, for example S3 vectors based on the vctrs package. To get there in a way that can be useful, these vectors would need to be type stable and preserve attributes. Currently, the only barrier to type stability in not-extendable parts of ggplot is the `scale_apply()` function, as the `unlist()` there drops attributes. The idea is then to replace `unlist()` with a `do.call(""c"", ...)`, which does preserve type and attributes, when the classes of the `pieces` elements have an appropriate `c` and subsetting methods.

It has been hard to design a concise unit test without using the vctrs package and `scale_apply()` being so deeply burrowed into ggplot code, so if anyone has suggestions for improvements feel welcome to share!",https://github.com/tidyverse/ggplot2/pull/3711,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3710,2020-01-08T20:52:47Z,2020-01-09T07:27:17Z,2020-01-09T07:27:16Z,"When I wrote out ply, I inadvertently dropped support for ordered factors. This is such a niche data structure that it didn't set of any alarms, but I noticed it when I wanted `stat_contour_filled()` to return levels as ordered.

This PR fixes the regression by not converting ordered factors into factors when binding data.frames",https://github.com/tidyverse/ggplot2/pull/3710,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3709,2020-01-08T16:01:46Z,2020-01-08T22:19:24Z,2020-01-08T22:19:16Z,,https://github.com/tidyverse/ggplot2/pull/3709,ggplot2
thomasp85,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/3708,2020-01-08T14:36:41Z,2020-01-09T10:02:58Z,2020-01-08T20:54:15Z,The new stroking of `geom_ribbon()` and `geom_area()` didn't make it to `geom_density()` This PR adds it and make it behave like `geom_area()`,https://github.com/tidyverse/ggplot2/pull/3708,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3707,2020-01-08T14:22:55Z,2020-01-09T07:27:40Z,2020-01-09T07:27:40Z,"Currently only `""both""` and `""upper""` settings are valid for the new stroking in `geom_ribbon()`/`geom_area()` While the need for `""lower""`can perhaps be debated, I don't see a reason to not allow it. This PR adds the functionality",https://github.com/tidyverse/ggplot2/pull/3707,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3705,2020-01-08T11:14:14Z,2020-01-08T14:37:34Z,2020-01-08T14:37:34Z,"The current implementation of `stat_contour_filled()` does not respect the presence of holes in the contour as it does not provide a `subgroup` column. This PR fixes this:

Before:
``` r
library(ggplot2)

volcano_long <- data.frame(
  x = as.vector(col(volcano)),
  y = as.vector(row(volcano)),
  z = as.vector(volcano)
)

ggplot(volcano_long, aes(x, y, z = z)) + 
  geom_contour_filled(aes(fill = stat(level)), bins = 8) + 
  scale_fill_brewer()
```

![](https://i.imgur.com/KfBKUVY.png)

<sup>Created on 2020-01-08 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

After:
``` r
library(ggplot2)

volcano_long <- data.frame(
  x = as.vector(col(volcano)),
  y = as.vector(row(volcano)),
  z = as.vector(volcano)
)

ggplot(volcano_long, aes(x, y, z = z)) + 
  geom_contour_filled(aes(fill = stat(level)), bins = 8) + 
  scale_fill_brewer()
```

![](https://i.imgur.com/HJhYX89.png)

<sup>Created on 2020-01-08 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

This PR also makes sure that fill can be partly transparent without building up opacity since contained levels are cut out",https://github.com/tidyverse/ggplot2/pull/3705,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3704,2020-01-08T10:56:31Z,2020-01-08T19:37:28Z,2020-01-08T19:37:28Z,"Currently the `bins` argument in `stat_contour_filled()` is treated as the number of breakpoints, rather than the number of bins. I suspect this is a bug, as most people will use it to set the actual number of bins. This PR fixes it by correcting the bin width from bins calculation",https://github.com/tidyverse/ggplot2/pull/3704,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3703,2020-01-08T10:50:29Z,2020-01-08T20:53:40Z,2020-01-08T20:53:40Z,"This PR makes the new bin guides work with discrete scales if the breaks are given in a `cut()` compliant format (e.g. `(4, 19]`).

This, most importantly, makes the bin guides work with `geom_contour_filled()` but also gives a venue for users to pre-bin their data and still benefit from the new guides.

Example:

``` r
library(ggplot2)

volcano_long <- data.frame(
  x = as.vector(col(volcano)),
  y = as.vector(row(volcano)),
  z = as.vector(volcano)
)

ggplot(volcano_long, aes(x, y, z = z)) + 
  geom_contour_filled(aes(fill = stat(level)), bins = 8) + 
  scale_fill_brewer()
```

![](https://i.imgur.com/jMO7eim.png)

``` r

ggplot(volcano_long, aes(x, y, z = z)) + 
  geom_contour_filled(aes(fill = stat(level)), bins = 8) + 
  scale_fill_brewer(guide = guide_colorsteps())
```

![](https://i.imgur.com/JtCb8bQ.png)

<sup>Created on 2020-01-08 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3703,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3700,2020-01-08T08:24:54Z,2020-01-09T10:22:44Z,2020-01-09T10:22:39Z,"Fixes #3697 

This PR is primarily to fix the following missing topics:

> Warning: Topics missing from index: draw_key, guide_axis, guide_bins, guide_coloursteps, guide_none
(https://travis-ci.org/tidyverse/ggplot2/jobs/633940915#L1365)

In addition, this tweaks the index a bit more:

* Replace `stat()` with `after_stat()`
* Use https URLs",https://github.com/tidyverse/ggplot2/pull/3700,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3694,2020-01-07T10:32:46Z,2020-01-08T00:56:29Z,2020-01-07T20:27:07Z,"I just came across a spectacular failure of the new bin scale in combination with the new axis implementation. This PR adresses the two issues: Make sure guide is set to `waiver()` instead of `""none""`. And make sure that breaks are not mapped by the scale unless it is a discrete scale. The old approach worked before because mapping with a continuous position scale was a no-op, but this is not true for the bin scale and it would throw the axis completely off.",https://github.com/tidyverse/ggplot2/pull/3694,ggplot2
tjmahr,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3692,2020-01-06T15:30:53Z,2020-01-06T22:49:40Z,2020-01-06T22:49:24Z,,https://github.com/tidyverse/ggplot2/pull/3692,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3691,2020-01-03T21:11:20Z,2020-01-03T23:45:58Z,2020-01-03T23:45:54Z,"@hadley As requested. I wasn't sure whether I should use the prefix `ggxyz` in the code example as well, I can think of reasons for both yes and no. ",https://github.com/tidyverse/ggplot2/pull/3691,ggplot2
clauswilke,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3690,2020-01-01T22:38:21Z,2020-01-03T16:39:43Z,2020-01-03T16:39:39Z,Closes #3689.,https://github.com/tidyverse/ggplot2/pull/3690,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3687,2019-12-22T07:30:52Z,2019-12-22T07:53:56Z,2019-12-22T07:53:51Z,Fix #3686,https://github.com/tidyverse/ggplot2/pull/3687,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3685,2019-12-22T04:54:07Z,2020-01-06T11:03:07Z,2020-01-06T11:03:01Z,"Fix #3262

At the time of https://github.com/tidyverse/ggplot2/issues/3262#issuecomment-488263110, I thought this should be fixed in `manual_scale()`. But it turns out this is a bug of `ScaleDiscrete`; the if block below uses `limits` only when `pal` is named:

https://github.com/tidyverse/ggplot2/blob/e6cbcc1b52d3627e21922d2ee297ce3900ac096f/R/scale-.r#L778-L783

I see no reason to ignore `limits` here. (This code has been here since `Scale` was first implemented (https://github.com/tidyverse/ggplot2/commit/1877b6d70a48a4fa6fc5125d20d9ac12620a09c4), so there might have been some limitation?) This PR fixes the issue by limiting the `pal` first before matching it against the supplied values.",https://github.com/tidyverse/ggplot2/pull/3685,ggplot2
thomasp85,MEMBER,closed,18,https://github.com/tidyverse/ggplot2/pull/3683,2019-12-20T10:39:53Z,2020-01-07T11:07:53Z,2020-01-07T11:07:52Z,"Fix #3557 

This PR gets strip rendering in line with the rest of the theming by correctly using `element_render()` to render strip text instead of the current hack. There is still some special considerations to be done, as strips are sized to the largest strip for alignment and this has to be done after the creation of the titleGrob. I don't think there is any way around the current approach of setting width/height directly in the viewport.

The PR also adds explicit theme elements for top, bottom, left, and right strips, which inherits from strip.text.x and strip.text.y. This is necessary to control the angle of vertical strips and is in line with how it is handled for axis titles. We should watch out for any visual breakage downstream that this might affect (I predict none or very few).",https://github.com/tidyverse/ggplot2/pull/3683,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3682,2019-12-19T23:34:51Z,2020-01-03T23:52:51Z,2020-01-03T23:52:45Z,"Fix #3651.

I'm still not sure how these geometries should be handled (or even whether there's a case ggplot2 should handle these or not), but at least `COMPOUNDCURVE` is converted to lines by `sf::st_as_grob()`. So, it seems ggplot2 should follow the way.

``` r
curve <- st_as_sfc(""COMPOUNDCURVE(LINESTRING(0 0, 5 5))"")
g <- sf::st_as_grob(curve)
g
#> (gTree[GRID.gTree.2])
is(g[[1]]$children[[1]])
#> [1] ""lines""
```",https://github.com/tidyverse/ggplot2/pull/3682,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3680,2019-12-19T12:32:46Z,2019-12-20T11:39:12Z,2019-12-20T11:39:12Z,"Fix #3498 This seems to be the last leftover from moving the area/ribbon reorder into setup_data like the rest of the geoms.

This change make sure that data returned from `collide()` is in the same order is it came in.

I think a general rule should be that positions should never change the order of data, only the content. There are situations where this is not possible, but as a general rule of thumb I think it is sane",https://github.com/tidyverse/ggplot2/pull/3680,ggplot2
clauswilke,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/3678,2019-12-18T22:17:03Z,2020-01-03T16:34:30Z,2020-01-03T16:34:17Z,"This closes #3677.

``` r
library(ggplot2)

# define a new coord that includes a panel annotation
coord_annotate <- function(label = ""panel annotation"") {
  ggproto(NULL, CoordCartesian,
          limits = list(x = NULL, y = NULL),
          expand = TRUE,
          default = FALSE,
          clip = ""on"",
          render_fg = function(panel_params, theme) {
            element_render(theme, ""panel.annotation"", label = label)
          }
  )
}

# register a new theme element `panel.annotation`
register_theme_elements(
  panel.annotation = element_text(color = ""blue"", hjust = 0.95, vjust = 0.05),
  element_tree = list(panel.annotation = el_def(""element_text"", ""text""))
)

# change default theme, this now creates a warning of a missing element,
# but things will work fine
theme_set(theme_bw())
#> Warning: New theme missing the following elements: panel.annotation

df <- data.frame(x = 1:3, y = 1:3)
ggplot(df, aes(x, y)) +
  geom_point() +
  coord_annotate(""annotation in blue"")
```

![](https://i.imgur.com/Onsc8Q3.png)

``` r

# revert default to original ggplot2 settings, but don't touch currently active theme
register_theme_elements(reset_all = TRUE, modify_current = FALSE)

ggplot(df, aes(x, y)) +
  geom_point() +
  coord_annotate(""annotation in blue"")
#> Theme element `panel.annotation` missing
```

![](https://i.imgur.com/f22hDlQ.png)

<sup>Created on 2019-12-18 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3678,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3676,2019-12-18T03:50:11Z,2020-01-08T08:28:46Z,2020-01-08T08:28:43Z,"Not sure why, but I see this diff when I regenerate docs on the current master. Probably there's some changes on roxygen's behaviour after #3579...?",https://github.com/tidyverse/ggplot2/pull/3676,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3673,2019-12-16T12:37:57Z,2019-12-17T14:07:23Z,2019-12-17T14:07:23Z,"This PR addresses the problem uncovered in #3529 where position_stack changes the relation of ymin/ymax during stacking, making it difficult to recover the correct line to draw. It is less drastic than what #3607 proposes, and simply ensure minimal changes to the incoming data",https://github.com/tidyverse/ggplot2/pull/3673,ggplot2
thomasp85,MEMBER,open,0,https://github.com/tidyverse/ggplot2/pull/3672,2019-12-16T10:27:16Z,2021-10-28T02:16:24Z,list(),"This is a draft PR that seeks to rename the `size` aesthetic whenever it refers to the width of a stroke. There are two problems with the current setup:

1. It conflates two distinct aesthetics making it difficult to control each one separately when working with geoms that contain both points and lines/polygons, e.g. boxplot, linerange, and sf.

2. As the default size scale is area based, scaling of stroke width is not linear by default, and it is needed to use `scale_radius()` to change that which is super counterintuitive

For the most part we can change this without backward compatibility issues as `size` can be renamed to `linewidth` if present in `setup_data()`. A few geoms have need for both as discussed in 1.) and we can not do any inference there meaning that there might be visual breakage in these cases. The pros outweigh the cons considerably though (IMO).

The aesthetic name `linewidth` has been chosen as both `width` and `stroke` is already in use. `linewidth` also falls in line with the `linetype` aesthetic.

Please use this PR for discussions",https://github.com/tidyverse/ggplot2/pull/3672,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3666,2019-12-12T10:43:57Z,2019-12-13T08:45:31Z,2019-12-13T08:45:30Z,revdepchecks uncovered an edge case in direction detection if position aesthetics are given outside aes(). This PR correctly looks in both data and params when figuring out direction,https://github.com/tidyverse/ggplot2/pull/3666,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3665,2019-12-12T10:09:46Z,2019-12-13T08:37:38Z,2019-12-13T08:37:38Z,revdepchecks uncovered a small issue in direction flipping for position subclasses that hasn't adapted to the new setup. This PR fixes it,https://github.com/tidyverse/ggplot2/pull/3665,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3664,2019-12-12T09:56:46Z,2019-12-13T08:38:34Z,2019-12-13T08:38:34Z,"The ScaleContinuous implementation has never specified a `trans` field, despite its methods referencing the field. This has not really been a problem as it is always subclassed, but recent changes mean that it's `print` method will throw an error now.

This PR adds an identity trans object as it's trans field and makes the error go away",https://github.com/tidyverse/ggplot2/pull/3664,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3663,2019-12-12T00:55:12Z,2019-12-20T18:20:56Z,2019-12-12T21:16:41Z,"I think this fixes #3662. I still want to add a few additional unit tests to prevent future such regressions.

I had to update one vdiffr reference image because it wasn't drawn correctly previously. (Line styling wasn't properly inherited across a blank element.)

``` r
library(ggplot2)

ggplot(mtcars) + 
  geom_point(aes(disp, mpg)) + 
  facet_wrap(~gear) + 
  theme(strip.text = element_blank(), strip.text.x = element_text())
```

![](https://i.imgur.com/DxPaNuT.png)

<sup>Created on 2019-12-11 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3663,ggplot2
clauswilke,MEMBER,closed,65,https://github.com/tidyverse/ggplot2/pull/3659,2019-12-06T16:52:24Z,2020-06-25T15:54:04Z,2020-06-24T23:36:59Z,"Second attempt at implementing the idea proposed in #3654. Based on discussion in #3655.

The main issue that remains to be solved is proper setting of x and y scale limits. 

``` r
library(ggplot2)
library(readr)
library(ggforce)
library(sf)
#> Linking to GEOS 3.7.2, GDAL 2.4.2, PROJ 5.2.0

nc <- sf::st_read(system.file(""shape/nc.shp"", package = ""sf""), quiet = TRUE)

df <- data.frame(
  lat = 35.76667,
  long = -78.63333,
  name = ""Raleigh""
)

ggplot(df, aes(x = long, y = lat)) +
  geom_sf(data = nc, size = 0.1, fill = ""white"", inherit.aes = FALSE) +
  geom_point() +
  geom_text(aes(label = name), hjust = -.1, vjust = 1.1) +
  coord_sf(crs = 2264)
```

![](https://i.imgur.com/gVjlNP2.png)

``` r

ggplot(nc) +
  geom_sf(size = 0.1, fill = ""white"") +
  geom_hline(yintercept = 34:36) +
  geom_vline(xintercept = c(-84, -80, -76)) +
  coord_sf(crs = 2264)
```

![](https://i.imgur.com/IusS5Ha.png)

``` r

df <- read_csv(file = ""name,population,lat,long
Charlotte,827097,35.227,-80.843
Raleigh,451066,35.772,-78.639
Greensboro,285342,36.073,-79.792
Durham,257636,35.994,-78.899
Winston-Salem,241218,36.1,-80.244"")

ggplot(df, aes(x = long, y = lat)) +
  geom_sf(data = nc, size = 0.1, fill = ""white"", inherit.aes = FALSE) +
  geom_point() +
  geom_mark_hull() +
  coord_sf(crs = 2264)
```

![](https://i.imgur.com/X0wNtY0.png)

``` r

ggplot() +
  annotation_map(map_data(""state""), fill = ""antiquewhite"", colour = ""darkgrey"") +
  geom_sf(data = nc) +
  coord_sf(crs = st_crs(3347))
```

![](https://i.imgur.com/Qvk1q9K.png)

``` r

# this works except the scales can't figure out the correct limits

ggplot(nc) +
  geom_sf() +
  stat_sf_coordinates(geom = ""point"") +
  coord_sf(crs = st_crs(3347))
```

![](https://i.imgur.com/tRIU0Ue.png)

``` r

ggplot(nc) +
  stat_sf_coordinates(geom = ""point"") +
    coord_sf(crs = st_crs(3347))
```

![](https://i.imgur.com/nOX3ceb.png)

<sup>Created on 2019-12-06 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3659,ggplot2
carywreams,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3658,2019-12-05T17:45:05Z,2020-02-02T04:39:02Z,2020-02-02T04:39:02Z,"Fix #3640 

```
    changes extension of source files in R/ from .r to .R
    modifies relevant @include statements accordingly
    ran devtools::document to update DESCRIPTION and man/.Rd files
    (the man/.Rd file updates are automated from roxygen, ala
    ""please edit the source file"")
```

Additional questions appear in the comments on issue #3640 
However, they may be out of scope for what this issue intended; so will leave those for another day.

",https://github.com/tidyverse/ggplot2/pull/3658,ggplot2
carywreams,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/3657,2019-12-05T17:26:55Z,2019-12-09T04:40:47Z,2019-12-09T04:40:47Z,"Fix #3618

```
    in utilities-help.r::rd_aesthetics_item, split required
    aesthetics specified with pipe operator (e.g. ""x|y"")
    into separate items so that they may be excluded from
    the list of all aesthetics prior to rendering the
    documentation of parameters.
```

My thoughts on approach included in #3618 comments.
Also have concerns about results of ```testthat``` run, but results are identical to master branch.
",https://github.com/tidyverse/ggplot2/pull/3657,ggplot2
clauswilke,MEMBER,closed,31,https://github.com/tidyverse/ggplot2/pull/3655,2019-12-04T18:59:27Z,2020-04-30T20:44:17Z,2020-04-30T20:43:34Z,"First attempt at implementing the idea proposed in #3654.

``` r
library(ggplot2)

nc <- sf::st_read(system.file(""shape/nc.shp"", package = ""sf""), quiet = TRUE)

df <- data.frame(
  lat = 35.76667,
  long = -78.63333,
  name = ""Raleigh""
)

# doesn't work, non-sf layers are not transformed
ggplot(df, aes(x = long, y = lat)) +
  geom_sf(data = nc, size = 0.1, fill = ""white"", inherit.aes = FALSE) +
  geom_point() +
  geom_text(aes(label = name), hjust = -.1, vjust = 1.1) +
  coord_sf(crs = 2264)
```

![](https://i.imgur.com/7rvoUGQ.png)

``` r

# with_sf() fixes it
ggplot(df, aes(x = long, y = lat)) +
  geom_sf(data = nc, size = 0.1, fill = ""white"", inherit.aes = FALSE) +
  with_sf(geom_point()) +
  with_sf(geom_text(aes(label = name), hjust = -.1, vjust = 1.1)) +
  coord_sf(crs = 2264)
```

![](https://i.imgur.com/KrWMWoe.png)

<sup>Created on 2019-12-04 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3655,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3652,2019-12-04T05:49:55Z,2019-12-06T00:59:52Z,2019-12-06T00:59:48Z,Simplifies and unifies the code that the various guides use to determine which layers to include and exclude. This PR came out of this discussion: https://github.com/tidyverse/ggplot2/pull/3646/files#r353483822,https://github.com/tidyverse/ggplot2/pull/3652,ggplot2
microly,CONTRIBUTOR,open,3,https://github.com/tidyverse/ggplot2/pull/3649,2019-12-01T10:12:27Z,2021-10-28T02:16:24Z,list(),"fix #3648 

This is only a pr draft to show my solution to #3648.
The documemtation is lack, and the codes may need improve.
Any comment is welcome!
I will add documemtation and anything needed later.
",https://github.com/tidyverse/ggplot2/pull/3649,ggplot2
microly,CONTRIBUTOR,closed,33,https://github.com/tidyverse/ggplot2/pull/3646,2019-11-29T12:13:37Z,2019-12-06T23:51:54Z,2019-12-06T21:20:09Z,"fix #3572 and relate to #3636.

This pr works in LayerSf$setup_layer().

The determination rule is:
* 1.Get the all the geometry types of every rows of sf data. 
* 2.If all the rows have the same geometry type, this unique type will be recognised as the geometry type of sf data.
   + 2.1 if the geometry type of sf data %in% c(""POINT"", ""MULTIPOINT""), the legend type of geom_sf will be set to **point**, which indicates that the layer is composed of point(s) only.
   + 2.2 if the geometry type of sf data %in% c(""LINESTRING"", ""MULTILINESTRING"", 
""CIRCULARSTRING"", ""COMPOUNDCURVE"", ""CURVE"", ""MULTICURVE""), the legend type of geom_sf will be set to **line**, which indicates that the layer is composed of line(s) only.
   + 2.3 if the geometry type of sf data is any other type, the legend type of geom_sf will be set to **polygon**. These geometry types can be divided into two groups: the types in the first group are composed of polygon(s), such as ""POLYGON"" and ""MULTIPOLYGON""; the types in the other group is mixtures of more than one type of point, line and polygon, such as ""GEOMETRYCOLLECTION"".   
* 3.If the rows of sf data have different geometry types, the geometry type of sf data will be set to ""blend"" and the legend type of geom_sf will be set to **polygon**.

In short, point is **point**, line is **line**, polygon is **polygon**, any mixture of more than one type is also **polygon**. (please forgive my poor english~)

Moreover, after this pr, users still have full control of the lengend type by setting show.legend to ""point"", ""line"" or ""polygon""; and users also can turn off the legend by setting show.legend to FALSE.",https://github.com/tidyverse/ggplot2/pull/3646,ggplot2
carywreams,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/3645,2019-11-28T17:35:12Z,2019-12-02T17:39:58Z,2019-12-02T17:39:58Z,"Found this while looking to contribute for another Documentation item.
Did not find an open issue for any of these items in the README file.

git log entry: 
```
    Typo: ""the the"" to ""the"" in installation instructions
    Changes Capitalization of Book and Chapter names:
        Data Visualisation chapter ref (anchor only)
        Graphics for communication (anchor only, matches actual)
        R for Data Science book name (anchor and text usage)
```

### Notes
Looked at a couple of other ```README.Rmd``` PRs.

Did not see changes to ```README.md``` in the PR, so making assumption that's somehow automated and out-of-scope for a README PR.  

If needed here, will need instructions of generating an updated ```README.md``` from the ```.Rmd``` file.

",https://github.com/tidyverse/ggplot2/pull/3645,ggplot2
microly,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3643,2019-11-25T16:12:59Z,2019-11-27T15:59:56Z,2019-11-27T05:20:53Z,"Correct a spelling mistake in this line:

https://github.com/tidyverse/ggplot2/blob/5dfe49829d9b0b35f9cf0783d9915c6112f88eec/R/scale-.r#L52

It should be ""scales, which always use [scales::rescale()]. "".",https://github.com/tidyverse/ggplot2/pull/3643,ggplot2
katrinleinweber,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3641,2019-11-25T08:20:14Z,2019-11-26T08:35:48Z,2019-11-26T07:06:10Z,"Hello :-) Is it intended that this link directs to the package-level docu, instead of the relevant function?",https://github.com/tidyverse/ggplot2/pull/3641,ggplot2
hadley,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3639,2019-11-24T18:57:49Z,2019-12-13T13:23:11Z,2019-12-13T13:23:07Z,"Which, most importantly, eliminates an indirect dependency on stringi.",https://github.com/tidyverse/ggplot2/pull/3639,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3638,2019-11-24T02:02:52Z,2019-11-25T00:12:22Z,2019-11-24T18:12:10Z,"It seems these are diffs about coloubar legends, though they doesn't seem different to my eyes.

The latest build passes (https://github.com/tidyverse/ggplot2/commit/cb0eaa0e16063517e7c8f8453bb2a10641d2f0d1) on 6 days ago, so I suspect this might be related to some update of scales.",https://github.com/tidyverse/ggplot2/pull/3638,ggplot2
hadley,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3637,2019-11-23T15:23:09Z,2019-11-24T18:57:03Z,2019-11-24T18:56:05Z,"Including converting all uses of `\%` back to `%`, and removing roxygen2 tags that the new warnings indicated were superfluous.",https://github.com/tidyverse/ggplot2/pull/3637,ggplot2
brwheeler,NONE,open,0,https://github.com/tidyverse/ggplot2/pull/3634,2019-11-19T02:55:22Z,2021-10-28T02:16:24Z,list(),I used the changes proposed in #3458 by explicitly that it's not `mm` and mentioning `.pt`. Also capitalized first letters and added punctuation to be consistent with other text on page.,https://github.com/tidyverse/ggplot2/pull/3634,ggplot2
yutannihilation,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3632,2019-11-18T04:02:13Z,2019-12-13T10:09:49Z,2019-12-13T10:09:42Z,"I see this mixed contents warning on https://ggplot2.tidyverse.org/

<img width=""332"" alt=""screenshot of https://ggplot2.tidyverse.org/"" src=""https://user-images.githubusercontent.com/1978793/69023801-70b04000-0a03-11ea-9ae7-89480e1a9952.png"">
",https://github.com/tidyverse/ggplot2/pull/3632,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3631,2019-11-17T03:56:09Z,2020-05-20T21:54:58Z,2019-11-17T05:24:20Z,Fix #3623,https://github.com/tidyverse/ggplot2/pull/3631,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3630,2019-11-17T01:22:07Z,2019-11-23T15:55:10Z,2019-11-23T15:55:05Z,"Use the latest version of roxygen2 to generate documents, and fix various places due to the change of roxygen2's behaviour.

### Formatting of Usage sections

Most of the diff comes from the fact that roxygen2 now formats usages a bit prettier than before. For example:

```diff
-absoluteGrob(grob, width = NULL, height = NULL, xmin = NULL,
-  ymin = NULL, vp = NULL)
+absoluteGrob(
+  grob,
+  width = NULL,
+  height = NULL,
+  xmin = NULL,
+  ymin = NULL,
+  vp = NULL
+)
```

This diff is harmless and there's nothing we need to do.

### Escape of `%`

Contrary to the previous version where we needed to escape `%` by ourselves, now roxygen2 escapes `%` automatically. As a result, 

``` r
#' 100\%
```

is converted to

``` r
100\\%
```

Here, `\\` is translated as an escaped `\` and `%` is translated as an **unescaped** `%`, which means the Rd comment symbol. This is problematic when it's used in a line containing `}`. For example, 

``` r
 \item{width}{Bar width. By default, set to 90\\% of the resolution of the data.}
```

is translated as ` \item{width}{Bar width. By default, set to 90\\` + comments.

So, we must remove this `\` except when it's used in raw Rd macros (e.g. `\code{}`). For example, 

``` r
#' \code{\%+\%}
```

should be left as is.

### Unused `@inheritParams`

It seems roxygen2 now warns when `@inheritParams` is not used. I removed two` @inheritParams`. This doesn't change the result documents as they ware not used actually.

### Misuse of `@rdname`

I think we misuse `@rdname` in some places where we should use `@name`. I don't understand why `devtools::document()` warns only for `scale-step`, but I guess this is what the following warning suggests:

```
Warning: [.../ggplot2/R/scale-steps.R:46] @rdname May only use one @rdname per block
```
",https://github.com/tidyverse/ggplot2/pull/3630,ggplot2
clauswilke,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3629,2019-11-17T00:46:54Z,2020-05-20T21:46:52Z,2019-11-18T03:34:52Z,"This is an idea for theme caching. We can calculate the entire theme right before rendering, so that we don't have to calculate theme elements on the fly over and over. It makes little difference in speed for rendering a single plot, but it speeds up gganimate by about 5% for a realistic example.

The code I'm using to test:
``` r
library(ggplot2)
library(gganimate)

p <- ggplot(mtcars, aes(factor(cyl), mpg, color = factor(cyl))) + 
  geom_boxplot() + 
  ggtitle(""Title here"", subtitle = ""Subtitle here"") +
  transition_states(gear)
```

The output from benchmarking:
```
> bench::mark(animate(p), iterations = 5)
theme caching turned off
                                                                                 
Frame 100 (100%)
Finalizing encoding... done!
Frame 100 (100%)
Finalizing encoding... done!
Frame 100 (100%)
Finalizing encoding... done!
Frame 100 (100%)
Finalizing encoding... done!
Frame 100 (100%)
Finalizing encoding... done!
Frame 100 (100%)
Finalizing encoding... done!
# A tibble: 1 x 13
  expression   min median `itr/sec` mem_alloc `gc/sec` n_itr  n_gc total_time
  <bch:expr> <bch> <bch:>     <dbl> <bch:byt>    <dbl> <int> <dbl>   <bch:tm>
1 animate(p)   23s  23.6s    0.0425    53.2MB     2.38     5   280      1.96m
# … with 4 more variables: result <list>, memory <list>, time <list>, gc <list>
Warning message:
Some expressions had a GC in every iteration; so filtering is disabled. 

> bench::mark(animate(p), iterations = 5)
theme caching turned on
                                                                                 
Frame 100 (100%)
Finalizing encoding... done!
Frame 100 (100%)
Finalizing encoding... done!
Frame 100 (100%)
Finalizing encoding... done!
Frame 100 (100%)
Finalizing encoding... done!
Frame 100 (100%)
Finalizing encoding... done!
Frame 100 (100%)
Finalizing encoding... done!
# A tibble: 1 x 13
  expression   min median `itr/sec` mem_alloc `gc/sec` n_itr  n_gc total_time
  <bch:expr> <bch> <bch:>     <dbl> <bch:byt>    <dbl> <int> <dbl>   <bch:tm>
1 animate(p) 21.4s  22.7s    0.0447    61.9MB     2.33     5   261      1.87m
# … with 4 more variables: result <list>, memory <list>, time <list>, gc <list>
Warning message:
Some expressions had a GC in every iteration; so filtering is disabled. 
```

Note: gganimate requires a small modification, see here: https://github.com/clauswilke/gganimate/commit/442a471c886fe8bc5880cb2fa3cba93f3c06038a

@thomasp85 Do you think this is worthwhile pursuing? I had hoped for a bigger speed increase, but 5% is not nothing.
",https://github.com/tidyverse/ggplot2/pull/3629,ggplot2
lwjohnst86,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3628,2019-11-16T20:12:01Z,2020-05-20T21:51:04Z,2019-11-18T00:59:48Z,:),https://github.com/tidyverse/ggplot2/pull/3628,ggplot2
batpigandme,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3615,2019-11-06T20:10:57Z,2020-05-06T12:06:06Z,2019-11-08T10:09:35Z,cc @hadley ,https://github.com/tidyverse/ggplot2/pull/3615,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3613,2019-11-05T06:15:47Z,2020-05-05T22:12:11Z,2019-11-06T02:02:49Z," This closes #3606:

``` r
library(ggplot2)
ggplot() + geom_histogram(aes(x= rep(0.25,10)))
#> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
```

![](https://i.imgur.com/i7g0hax.png)

<sup>Created on 2019-11-05 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3613,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3608,2019-11-04T10:29:23Z,2020-05-05T22:14:02Z,2019-11-06T01:15:48Z,"Fix #3589

``` r
library(ggplot2)
library(sf)
#> Linking to GEOS 3.7.2, GDAL 3.0.1, PROJ 6.2.0

d <- data.frame(x = 1:5, y = 1:5)

l <- st_linestring(as.matrix(d))
sf <- st_sf(geometry = st_sfc(l))

p1 <- ggplot(d, aes(x, y)) + geom_line(alpha = 0.1) + ggtitle(""geom_line()"")
p2 <- ggplot(sf) + geom_sf(alpha = 0.1) + ggtitle(""geom_sf()"")

patchwork::wrap_plots(p1, p2)
```

![](https://i.imgur.com/X0xF7hW.png)

<sup>Created on 2019-11-04 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/3608,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3605,2019-11-04T08:03:27Z,2020-05-20T22:09:07Z,2019-11-14T08:50:55Z,Fix #3590,https://github.com/tidyverse/ggplot2/pull/3605,ggplot2
paleolimbot,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3603,2019-11-01T16:19:51Z,2020-05-05T22:19:44Z,2019-11-01T21:02:07Z,"As discussed in #3588, this is a PR adding myself as a core developer. Thanks @yutannihilation for the nomination! Thanks to @hadley for giving me the opportunity to contribute to ggplot2 as an intern, and thanks to everyone for taking the time to review my PRs over the last year. I look forward to contributing more in the future!",https://github.com/tidyverse/ggplot2/pull/3603,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3600,2019-10-31T04:17:23Z,2020-05-05T22:20:55Z,2019-10-31T15:08:27Z,"I made a few improvements to the error messages when plot addition fails, based on recommendations in the tidyverse style guide and also based on feedback from this Twitter thread: https://twitter.com/ClausWilke/status/1189725947508989953?s=20

``` r
library(ggplot2)

ggplot() + 1
#> Error: Can't add `1` to a ggplot object.

ggplot() + geom_point
#> Error: Can't add `geom_point` to a ggplot object.
#> Did you forget to add parentheses, as in `geom_point()`?
```

<sup>Created on 2019-10-30 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3600,ggplot2
paleolimbot,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3599,2019-10-29T23:28:14Z,2020-05-05T22:15:41Z,2019-11-04T12:29:48Z,"This is a PR to fix #3573, a bug whereby guides with repeated labels were merged incorrectly. This bug occurred because the two guides keys were merged using `merge()`, which only works when there are no duplicate values in the `.label` column.

<details>
Current behaviour:

```r
guide1 <- list(
  key = tibble::tibble(
    colour = 1:4, 
    .label = c(""low"", ""low"", ""high"", ""high"")
  )
)

guide2 <- list(
  key = tibble::tibble(
    linetype = 1:4, 
    .label = c(""low"", ""low"", ""high"", ""high"")
  )
)

ggplot2:::guide_merge.legend(guide1, guide2)$key
#>   .label colour linetype
#> 1    low      1        1
#> 2    low      1        2
#> 3    low      2        1
#> 4    low      2        2
#> 5   high      3        3
#> 6   high      3        4
#> 7   high      4        3
#> 8   high      4        4
```

Behaviour after this PR:

``` r
guide1 <- list(
  key = tibble::tibble(
    colour = 1:4, 
    .label = c(""low"", ""low"", ""high"", ""high"")
  )
)

guide2 <- list(
  key = tibble::tibble(
    linetype = 1:4, 
    .label = c(""low"", ""low"", ""high"", ""high"")
  )
)

ggplot2:::guide_merge.legend(guide1, guide2)$key
#>   colour .label linetype
#> 1      1    low        1
#> 2      2    low        2
#> 3      3   high        3
#> 4      4   high        4
```
</details>

In the current implementation of merging, guides are only merged when they have identical `direction`, `key$.label`, `title`, and `name`. Because `key$.label` has to be identical for both guides, it should be safe to use `cbind()` in `guide_merge.guide_legend()` instead of `merge()`. I took the opportunity to write (non-visual) tests for guide merging to make sure it didn't break anything. As always, happy to be convinced otherwise (or that this shouldn't be fixed right now).",https://github.com/tidyverse/ggplot2/pull/3599,ggplot2
paleolimbot,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3598,2019-10-29T21:40:46Z,2020-05-05T22:22:02Z,2019-10-30T13:51:26Z,"This is a pull request to fix downstream package failures when a dependency package uses `stat/geom_contour()`, which after #3439 uses the isoband package. As discussed in #3564, the best solution is probably to add ""isoband"" to `Imports` rather than `Suggests`. This PR implements this change (closes #3564).",https://github.com/tidyverse/ggplot2/pull/3598,ggplot2
yutannihilation,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/3597,2019-10-29T16:24:04Z,2020-05-05T22:23:12Z,2019-10-29T23:04:59Z,"Fix #3552

Currently, `strip_dots()` and `is_calculated()` treat a quosure as a call, and it surprisingly works for now, but it's fragile. A quosure should be treated as a quosure...",https://github.com/tidyverse/ggplot2/pull/3597,ggplot2
yutannihilation,MEMBER,closed,10,https://github.com/tidyverse/ggplot2/pull/3596,2019-10-28T23:23:54Z,2020-04-26T05:14:43Z,2019-10-29T03:13:10Z,"It's a common mistake to forget to run `devtools::documents()`, but it's hard to detect them by reviewing on GitHub. It would be nice if it can be detected on Travis CI. This PR adds an `after_script` for this; the error might be false positive so it can be ignored by manually checking the CI results.",https://github.com/tidyverse/ggplot2/pull/3596,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3595,2019-10-28T23:19:53Z,2020-04-26T05:14:41Z,2019-10-29T03:31:23Z,This simply updates the namespace and man pages to the latest version.,https://github.com/tidyverse/ggplot2/pull/3595,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3594,2019-10-28T16:27:03Z,2020-05-05T22:25:18Z,2019-10-29T16:32:42Z,"This closes #3571:

``` r
library(ggplot2)
ggplot() + geom_point
#> Error: Don't know how to add geom_point to a plot. Did you mean geom_point()?
```

<sup>Created on 2019-10-28 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3594,ggplot2
yutannihilation,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3593,2019-10-28T11:00:47Z,2020-05-05T22:17:09Z,2019-11-04T09:37:14Z,"Fix #3582

The result of `do.call(""cbind"", lapply(guide$geoms, function(g) g$data$size / 10))` can be an empty matrix, which cannot be subsetted. I guess the branch `if (nrow(key_size_mat) == 0 || ncol(key_size_mat) == 0) {` is prepared to handle this.",https://github.com/tidyverse/ggplot2/pull/3593,ggplot2
hadley,MEMBER,open,8,https://github.com/tidyverse/ggplot2/pull/3591,2019-10-27T12:55:43Z,2021-10-28T02:16:24Z,list(),"To pass in both limits and major breaks. This will make it much easier to create useful families of minor break functions in scales.

Fixes #3583

@thomasp85 — if you think this approach is reasonable I'll work on a NEWS bullet. I think documentation will need to happen in a separate PR because all of `breaks`, `labels`, and `minor_breaks` need revision to point to the reader towards the scales package.",https://github.com/tidyverse/ggplot2/pull/3591,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3585,2019-10-25T06:50:04Z,2020-05-20T22:02:20Z,2019-11-14T15:39:42Z,This PR closes #3584 by making sure every theme explicitly defines every possible theme element. The strategy is to simply set every element that hasn't been defined explicitly to `NULL`. This can be done programmatically in a few lines of code. ,https://github.com/tidyverse/ggplot2/pull/3585,ggplot2
Ilia-Kosenkov,NONE,open,2,https://github.com/tidyverse/ggplot2/pull/3581,2019-10-23T12:07:15Z,2021-10-28T02:16:24Z,list(),"This PR suggests a solution that addresses issue #3576.
When plotting the secondary axis, tick positions of the secondary should be transformed to the range of the primary axis (`AxisSecondary$break_info()`). To achieve this, a grid (`old_range`) is generated (of the size `AxisSecondary$detail`, defaulted to `1000`). This grid is then transformed to the secondary axis scale (named `full_range`). Each tick of the secondary axis is transformed to the primary's scale by finding the `index` of the closest value in the `full_range` (`index <- which.min(abs(full_range - x))`) and adopting `old_range[index]` as tick position in the primary axis scale. 

It is easy to understand that if `full_range` does not contain values equal to the secondary axis ticks, transformation is not accurate and the quality of this transformation depends on the grid size. This is observed in #3576, when duplicated axis (`dup_axis`) cannot properly position its ticks.

A simple alternative solution is to introduce linear interpolation. Instead of using the closest grid value, it is better to use two grid values and interpolate in between to increase the quality of the transformation. This works exceptionally well in the case of linear transformations of the secondary axis, including duplicated axes (`dup_axis`).

The method works well for different combinations of primary/secondary transformations, including when one axis is monotonically increasing while another is decreasing. There are no checks for boundary cases, i.e. when ticks are found at the edges of the grid, which I assume never happens.
",https://github.com/tidyverse/ggplot2/pull/3581,ggplot2
microly,CONTRIBUTOR,closed,9,https://github.com/tidyverse/ggplot2/pull/3580,2019-10-21T15:02:26Z,2019-12-13T09:16:25Z,2019-12-13T09:16:25Z,"The default value of ScaleBinned$n.breaks was set to the same as trans objects.
The default value of trans objects can map data to 5 colours in plot and legend, which is a direct-viewing color display.

However, when n.breaks is set to 5, ScaleBinned will map the data to **6 colours**!
6 colours display is not so good as 5 colours. 

This occur in the codes:
https://github.com/tidyverse/ggplot2/blob/115c3960d0fd068f1ca4cfe4650c0e0474aabba5/R/scale-.r#L914
and
https://github.com/tidyverse/ggplot2/blob/115c3960d0fd068f1ca4cfe4650c0e0474aabba5/R/scale-.r#L928

So I think the default value of ScaleBinned$n.breaks should be 4, not 5, then it can works the same way as trans objects.

@thomasp85 , please consider it, thanks!",https://github.com/tidyverse/ggplot2/pull/3580,ggplot2
idno0001,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/3579,2019-10-19T22:04:45Z,2019-12-16T09:35:50Z,2019-12-16T09:35:36Z,"Fixes #2429.

As noted in the issue, currently `values` can be matched with a named vector. The below examples show (1) this as a baseline, (2) how behaviour changes as `breaks` are added, and the new behaviour (3) when `values` is not a named vector.

``` r
library(ggplot2)

df <- data.frame(x = c(""data_red"", ""data_black""))

p <- ggplot(df, aes(x, 1, fill = x)) + 
  geom_col()

# Named values, no breaks
p + scale_fill_manual(values = c(""data_red"" = ""red"", ""data_black"" = ""black""))
```

![](https://i.imgur.com/lmPyhHx.png)

``` r
# Named values with breaks
p + scale_fill_manual(values = c(""data_red"" = ""red"", ""data_black"" = ""black""),
                      breaks = c(""data_red"", ""data_black""))
```

![](https://i.imgur.com/VoBjYAM.png)

``` r
# New behaviour: values matched to breaks
p + scale_fill_manual(values = c(""red"", ""black""),
                      breaks = c(""data_red"", ""data_black""))
```

![](https://i.imgur.com/KhhZk5n.png)

<sup>Created on 2019-10-19 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3579,ggplot2
microly,CONTRIBUTOR,closed,13,https://github.com/tidyverse/ggplot2/pull/3575,2019-10-18T04:46:26Z,2020-05-20T21:58:47Z,2019-11-14T09:18:24Z,"this pull request try to fix the bug in issue #3574 . 

I set n.breaks as the second parameter of breaks function.
if the n.breaks is not set by users, it will set to the default value 5, which is the same default as trans objects.

n.breaks can be set by end users.
So, after this fix, users can get meaningful breaks by set breaks as a function and get meaningful breaks using the values of limits and n.breaks.",https://github.com/tidyverse/ggplot2/pull/3575,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3570,2019-10-14T22:54:26Z,2020-04-25T08:32:48Z,2019-10-23T03:57:15Z,"Here is an attempt at fixing #3039. Recall: That issue shows that adding theme elements piecewise behaves differently from adding them all at once. The problem is that when adding a theme to a plot object, the current implementation pulls missing info from the default theme, but this is not the case when adding a theme to a theme. In my mind, this behavior is inconsistent. The addition should behave the same in both cases. The solution is to delete the plot-specific update function.

This is the reprex from #3039, which now works just fine:
``` r
library(ggplot2)

p <- ggplot(mtcars, aes(wt, mpg)) + geom_point()
p1 <- p + theme_light() + 
  theme(axis.line.x = element_line(color = ""blue"")) +
  theme(axis.ticks.x = element_line(color = ""red""))

p2 <- p + theme_light() +
  theme(axis.line.x = element_line(color = ""blue""),
        axis.ticks.x = element_line(color = ""red""))

identical(p1$theme, p2$theme)
#> [1] TRUE

p1
```

![](https://i.imgur.com/EYZDk2I.png)

``` r
p2
```

![](https://i.imgur.com/QESJWpC.png)

<sup>Created on 2019-10-14 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup> 

However, this is potentially a breaking change (and in fact, some unit tests currently break), because partially updating root elements of a theme doesn't work anymore:
(**Update:** This has now been fixed, see below.)
``` r
library(ggplot2)

# this now breaks but works in current ggplot2 by magically pulling info from default theme
ggplot(iris, aes(Sepal.Length, Sepal.Width)) +
  geom_point() +
  theme(text = element_text(color = ""red""))
#> Error in FUN(X[[i]], ...): Theme element 'text' has NULL property: family, face, size, hjust, vjust, angle, lineheight, margin, debug

# this still works
ggplot(iris, aes(Sepal.Length, Sepal.Width)) +
  geom_point() +
  theme(axis.title = element_text(color = ""red""))
```

![](https://i.imgur.com/y44DTFz.png)

<sup>Created on 2019-10-14 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

I think the new behavior is correct. If we're messing with a root element, we should have to specify it completely. However, if that's considered to be bad, we could also fix the problem at this point in the code:
https://github.com/tidyverse/ggplot2/blob/115c3960d0fd068f1ca4cfe4650c0e0474aabba5/R/theme.r#L558-L565
by pulling values from the ggplot2 default theme where available instead of issuing an error.",https://github.com/tidyverse/ggplot2/pull/3570,ggplot2
dkahle,CONTRIBUTOR,closed,9,https://github.com/tidyverse/ggplot2/pull/3569,2019-10-14T20:27:17Z,2019-12-18T10:47:20Z,2019-12-18T10:47:08Z,,https://github.com/tidyverse/ggplot2/pull/3569,ggplot2
ThomasKnecht,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/3567,2019-10-14T08:34:07Z,2020-04-15T08:04:08Z,2019-10-14T10:11:59Z,"The position_nudgestack() is meant to plot stacked bar-plots between the x-axis tick marks. This is especially useful for time series for styling reasons. position_nudgestack() is a simple combination of the two positions: position_nudge() and position_stack().

I created this position since I needed to create time series plots where it was wished that the stacked bars are between monthly x-axis ticks (mainly because of style reasons). Furthermore, I saw that other people might also be interested in the combination of these two positions:

https://stackoverflow.com/questions/55730693/ggplot2-combine-positioning-commands-position-nudge-and-position-stack

https://stat.ethz.ch/pipermail/r-help/2008-October/178162.html
",https://github.com/tidyverse/ggplot2/pull/3567,ggplot2
paleolimbot,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/3566,2019-10-11T02:20:51Z,2020-01-09T20:04:05Z,2019-11-14T15:24:30Z,"This PR fixes two regressions I introduced in #3398 and #3426. The first affected plots where labels and breaks were specified manually (#3558):

```r
library(ggplot2)
ggplot(mpg, aes(cty, hwy)) +
  geom_point() +
  scale_x_continuous(
    breaks = c(0, 20, 40),
    labels = c(""0"", ""20"", ""40"")
  )
#> Error: Breaks and labels are different lengths
```

This was because I censored breaks at the wrong place when I introduced `ViewScale`s. This is fixed in this PR.

The second involves plots where there is no data and NA limits (#3560). I think NA limits should be considered ""empty"" when there is no data, which is how I implemented it in this PR. I also made sure that functional limits work on all discrete scales (#3448), and that NA limits aren't replaced with data limits on discrete scales (I don't even know what that would look like but probably has induced more than one spurious error). Feel free to debate how I should implement either of these.

```r
library(ggplot2)
ggplot(data.frame(x = numeric(0)), aes(x)) + 
  geom_point() +
  scale_x_continuous(limits = c(0, NA))
#> Warning in rep(yes, length.out = len): 'x' is NULL so the result will be
#> NULL
#> Error in ans[ypos] <- rep(yes, length.out = len)[ypos]: replacement has length zero
```",https://github.com/tidyverse/ggplot2/pull/3566,ggplot2
mine-cetinkaya-rundel,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3562,2019-10-10T09:31:31Z,2020-05-05T22:24:15Z,2019-10-29T18:54:01Z,"""makes it easy to specific colours"" = ""makes it easy to **choose** specific colours""",https://github.com/tidyverse/ggplot2/pull/3562,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3556,2019-10-07T16:40:18Z,2020-04-04T19:26:49Z,2019-10-07T17:38:32Z,Per @clauswilke's [comment on #3548](https://github.com/tidyverse/ggplot2/issues/3548#issuecomment-538767599).,https://github.com/tidyverse/ggplot2/pull/3556,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3555,2019-10-07T12:51:39Z,2020-04-04T16:00:45Z,2019-10-07T14:44:28Z,"Fix #3548 

The old call to `remove_missing()` in `Stat$compute_layer()` did not factor in the new `x|y` notation allowed in `Stat$required_aes` for bidirectional layers. This caused missing data to not be removed correctly. This PR fixes the problem",https://github.com/tidyverse/ggplot2/pull/3555,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3554,2019-10-07T12:05:05Z,2020-04-04T16:00:48Z,2019-10-07T14:44:03Z,Fix #3551 ,https://github.com/tidyverse/ggplot2/pull/3554,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3553,2019-10-07T11:55:55Z,2020-04-15T08:10:28Z,2019-10-09T08:33:48Z,revdepchecks have uncovered a few bugs in the sniffing that has been fixed here,https://github.com/tidyverse/ggplot2/pull/3553,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3550,2019-10-04T22:04:43Z,2020-04-15T08:08:27Z,2019-10-09T15:22:57Z,"This closes #3549.

``` r
library(ggplot2)

# like element_rect but with a meaningless dummy argument
element_dummyrect <- function(dummy) {
  structure(list(
    fill = NULL, colour = NULL, dummy = dummy, size = NULL,
    linetype = NULL, inherit.blank = FALSE
  ), class = c(""element_dummyrect"", ""element_rect"", ""element""))
}

ggplot2:::calc_element(
  ""panel.background"",
  theme(
    rect = element_rect(fill = ""white"", colour = ""black"", size = 0.5, linetype = 1),
    panel.background = element_dummyrect(dummy = 5))
)
#> List of 6
#>  $ fill         : chr ""white""
#>  $ colour       : chr ""black""
#>  $ dummy        : num 5
#>  $ size         : num 0.5
#>  $ linetype     : num 1
#>  $ inherit.blank: logi FALSE
#>  - attr(*, ""class"")= chr [1:3] ""element_dummyrect"" ""element_rect"" ""element""
```

<sup>Created on 2019-10-04 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3550,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/3547,2019-10-01T11:50:49Z,2019-12-17T09:00:33Z,2019-12-17T09:00:32Z,"Fixes #3539

Prior to this tiles in `geom_raster` where not removed if they felt outside the scale limits resulting in a squeezing of the raster (it would keep all ""pixels"" but only occupy the area of the pixels inside the scale limits). This PR fixes it by updating the `non_missing_aes` field to include `xmin`, `xmax`, `ymin`, and `ymax`",https://github.com/tidyverse/ggplot2/pull/3547,ggplot2
thomasp85,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3546,2019-10-01T09:40:59Z,2020-05-05T22:18:29Z,2019-11-04T09:09:51Z,"Fixes #3536

This is an alternative implementation to the fix in #3537 that respects the different geometry types interpretation of NA. As the problem of NA's is unique to the vectorised constructors there is no need to handle geometrycollections in any special way as they will always be treated as scalars and grid accepts a single NA in `gpar()`

``` r
library(ggplot2)
library(sf)
#> Linking to GEOS 3.6.1, GDAL 2.1.3, PROJ 4.9.3

pt <- st_point(1:2)

outer <- matrix(c(0,0,10,0,10,10,0,10,0,0),ncol=2, byrow=TRUE)
pl <- st_polygon(list(outer))

# point is shown
sf1 <- st_sf(geometry = st_sfc(pl, pt))
ggplot(sf1) + geom_sf()
```

![](https://i.imgur.com/Oaanmw4.png)

``` r

# point is still shown as expected
sf2 <- st_sf(geometry = st_sfc(st_geometrycollection(list(pl, pt))))
ggplot(sf2) + geom_sf()
```

![](https://i.imgur.com/EanmKtL.png)

``` r

# NA is handled fine for collections
ggplot(sf2) + geom_sf(colour = NA)
```

![](https://i.imgur.com/RznSwMB.png)

``` r

# as well as for vectorised geometries
sf3 <- st_sf(geometry = st_sfc(pt, st_point(3:4)), one_na = c(1, NA))
ggplot(sf3) + geom_sf(aes(size = one_na))
```

![](https://i.imgur.com/U6bNKvt.png)

<sup>Created on 2019-10-01 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3546,ggplot2
mine-cetinkaya-rundel,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3545,2019-09-30T14:27:13Z,2020-04-02T15:00:15Z,2019-10-01T08:32:09Z,"Minor updates to some of the help files for datasets in the package.

The only ""correction"" is the number of rows in the economics dataset.",https://github.com/tidyverse/ggplot2/pull/3545,ggplot2
hvaret,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/3541,2019-09-25T07:18:57Z,2020-03-27T08:21:28Z,2019-09-25T09:03:28Z,"Hi,

I just came across an error message when trying to use `geom_hex()` while the hexbin package is not installed (already described in #3183).

Instead of installing manually hexbin and then let ggplot2 load the entire package using `try_require()` (as with the maps package in #3126), I slightly modified ggplot2 to only import the required functions, and here is a pull request if you think it could make things smoother.

Best regards",https://github.com/tidyverse/ggplot2/pull/3541,ggplot2
yutannihilation,MEMBER,closed,12,https://github.com/tidyverse/ggplot2/pull/3537,2019-09-23T00:20:00Z,2020-04-02T14:59:33Z,2019-10-01T10:01:38Z,Fix #3536 ,https://github.com/tidyverse/ggplot2/pull/3537,ggplot2
thomasp85,MEMBER,closed,17,https://github.com/tidyverse/ggplot2/pull/3534,2019-09-19T18:43:59Z,2019-12-16T16:34:59Z,2019-12-16T16:34:59Z,"This PR implements a parallel to `stat()`, called `mod()` that allows you to mark aesthetics for evaluation just before they are send to the draw method in the geom. At this point the data has been mapped so expressions inside `mod()` will work with mapped data.

The prime use case for this is for tying colour and fill values together:

```r
library(ggplot2)
library(colourspace) # for lighten()
p <- ggplot(mpg, aes(class, hwy))
p + geom_boxplot(aes(colour = class, fill = mod(lighten(colour, 0.4))))
```
![image](https://user-images.githubusercontent.com/1775316/65271788-218e8180-db1e-11e9-8dc7-d3ad589a0118.png)

As can be seen the legend needs some work, but I open now so we can discuss this feature",https://github.com/tidyverse/ggplot2/pull/3534,ggplot2
yutannihilation,MEMBER,closed,18,https://github.com/tidyverse/ggplot2/pull/3529,2019-09-11T12:57:02Z,2020-01-04T14:46:34Z,2020-01-04T14:46:29Z,"Fix #3503

This PR changes `GeomRibbon` from a normal polygon to a polygon + two lines; while `GeomRibbon` is implemented as a polygon, considering that the nature of this geom is to indicate the upper and the lower range along X axis, I believe it's natural that `GeomRibbon` comes with two lines.

Though this is a breaking change, I expect there's very few users using `GeomRibbon` as a closed line. But, I'm not fully confident... If this expectation would fail, I'll withdraw this PR and create a new geom.

``` r
devtools::load_all(""~/Documents/repo/ggplot2"")
#> Loading ggplot2

df <- tibble::tibble(
  y = c(0, 0, 0, 0, 0, 1, 1.5, 1.7, 1.8), 
  upper_y = y + 0.2, 
  lower_y = y - 0.2,
  year = -4:4
)

# can divide the ribbon
df[4, ""upper_y""] <- NA 
df[4, ""lower_y""] <- NA

ggplot(df, aes(year, y)) + geom_line() + 
  geom_ribbon(aes(ymax = upper_y, ymin = lower_y),
              linetype = 2, fill = ""red"", alpha = 0.1, colour = ""black"")
```

![](https://i.imgur.com/TRMLcUF.png)

<sup>Created on 2019-09-02 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3529,ggplot2
thomasp85,MEMBER,closed,11,https://github.com/tidyverse/ggplot2/pull/3526,2019-09-09T12:31:50Z,2019-12-17T19:42:07Z,2019-12-17T19:37:29Z,This PR changes all calls to `stop()` to `abort()` from rlang. It further removes the last calls to `stopifnot()` in favour of `if (...) abort(...)` which should hopefully result in some better error messages (as well as consistent error tracing across all exceptions),https://github.com/tidyverse/ggplot2/pull/3526,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3521,2019-09-07T15:44:15Z,2020-04-15T08:06:21Z,2019-10-13T06:34:57Z,"Fix #3508 

This PR increases the default nbin of colourbar to 300.

I did some experiments, and `nbin = 300` seems sufficient to me (on Windows device). For performance, `nbin = 300` is might be slower a bit, but I think it's acceptable.

``` r
# current master branch
devtools::load_all(""~/repo/R/ggplot2"")
#> Loading ggplot2

p <- ggplot(base::data.frame(x = 1:3)) +
  geom_point(aes(x, x, colour = x))

get_colourbar <- function(nbin) {
  p <- p + scale_color_gradient(
    paste0(""nbin =\n"", nbin),
    guide = guide_colorbar(barheight = grid::unit(1, ""npc"") - grid::unit(4, ""line""),nbin = nbin)
  )
  data <- ggplot_build(p)
  g <- ggplot_gtable(data)
  g$grobs[[15]]
}

gridExtra::grid.arrange(
  get_colourbar(20),
  get_colourbar(40),
  get_colourbar(60),
  get_colourbar(80),
  get_colourbar(100),
  get_colourbar(150),
  get_colourbar(200),
  get_colourbar(250),
  get_colourbar(300),
  get_colourbar(400),
  get_colourbar(500),
  nrow = 1
)
```

![](https://i.imgur.com/FAn2Py4.png)

``` r
res <- bench::mark(
  `nbin = 020` = grid.draw(get_colourbar(20)),
  `nbin = 100` = grid.draw(get_colourbar(100)),
  `nbin = 200` = grid.draw(get_colourbar(200)),
  `nbin = 300` = grid.draw(get_colourbar(300)),
  `nbin = 500` = grid.draw(get_colourbar(500)),
  check = FALSE,
  min_iterations = 30
)

autoplot(res)
#> Loading required namespace: tidyr
```

![](https://i.imgur.com/tXb2BWD.png)",https://github.com/tidyverse/ggplot2/pull/3521,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3519,2019-09-06T11:33:10Z,2022-03-27T04:57:14Z,2019-09-27T06:57:04Z,"Close #3514.

This PR make `StatDensity` raise a consistent error with other stats like `StatCount`.

``` r
devtools::load_all(""~/Documents/repo/ggplot2/"")
#> Loading ggplot2

library(ggplot2)

d <- base::data.frame(x = 1:3)

ggplot(d) +
  geom_density(aes(x, x))
#> Error: stat_density() must not be used with a y aesthetic.
```",https://github.com/tidyverse/ggplot2/pull/3519,ggplot2
MaraAlexeev,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3515,2019-09-02T20:39:34Z,2020-03-10T19:03:39Z,2019-09-03T12:26:08Z,"Fixes #3477

",https://github.com/tidyverse/ggplot2/pull/3515,ggplot2
thomasp85,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/3511,2019-08-30T06:52:29Z,2020-05-05T22:26:15Z,2019-09-04T06:53:38Z,"This is a PR for discussing if this functionality should be in ggplot2 (otherwise I'll just add it to ggforce).

This PR implements `stat_count_2d()`, an equivalent to to `stat_count()` but for counting values that co-occur on both the x and y axis. This is valuable, both when plotting two discrete variables against each other, but also when working with continuous data that has been discretised by rounding etc. Motivating example:

```r
ggplot(iris) + 
  stat_count_2d(aes(Petal.Length, Petal.Width, colour = Species))
```
![image](https://user-images.githubusercontent.com/1775316/63999221-42f1e400-cb03-11e9-8a26-b4912587c927.png)

Right now the stat will also reorder data so that large points are behind small points, but I'd like to have that as a position adjustment instead (sorta like a `position_stack()` in the z-direction)

what say you?",https://github.com/tidyverse/ggplot2/pull/3511,ggplot2
eliocamp,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3510,2019-08-29T15:46:43Z,2020-02-28T07:30:00Z,2019-08-30T09:35:41Z,This adds missing alternative spelling to `scale_colour_date()` and `scale_colour_datetime()`. ,https://github.com/tidyverse/ggplot2/pull/3510,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3509,2019-08-29T12:53:09Z,2020-02-28T07:30:06Z,2019-08-29T17:12:27Z,"For unknown reasons `Geom` and subclasses doesn't have a `setup_params()` method. It may have not been needed before, but for consistency this PR add's it and calls it right before `setup_data()`

This will make certain parts of #3506 look better/more consistent",https://github.com/tidyverse/ggplot2/pull/3509,ggplot2
thomasp85,MEMBER,closed,47,https://github.com/tidyverse/ggplot2/pull/3506,2019-08-28T07:32:16Z,2020-04-02T14:59:53Z,2019-10-01T09:13:00Z,"Some geoms have directionality constraint, e.g. `geom_histogram()` that requires binning along the x-axis. The gospel has been to use `coord_flip()` if one wanted binning along the y-axis, but that comes with a set of limitations. Further the constraint seems arbitrary from a user perspective. 

This PR explores the possibility of making relevant geoms work in either direction. Hopefully this can completely remove the need for ggstance.

#### Geoms, stats, and positions under consideration

- [x] `geom_bar`
- [x] `geom_histogram`
- [x] `geom_violin`
- [x] `geom_col`
- [x] `geom_linerange()`
- [x] `geom_pointrange()`
- [x] `geom_errorbar()`
- [x] `geom_crossbar()`
- [x] `geom_boxplot()`
- [x] `geom_density()`
- [x] `geom_area()`
- [x] `geom_ribbon()`
- [x] `geom_line()`
- [x] `geom_smooth()`
- [x] `stat_bin()`
- [x] `stat_boxplot()`
- [x] `stat_count()`
- [x] `stat_density()`
- [x] `stat_ydensity()` (consider renaming this for clarity)
- [x] `stat_summary()`
- [x] `position_dodge()`
- [x] `position_dodge2()`
- [x] `position_fill()`
- [x] `position_stack()`
- [x] `position_jitterdodge()`

Please add to this list if anything comes up. @clauswilke when we have settled on this it would be great if ggridges could be updated to reflect this as well",https://github.com/tidyverse/ggplot2/pull/3506,ggplot2
capebulbs,NONE,closed,9,https://github.com/tidyverse/ggplot2/pull/3505,2019-08-27T18:52:48Z,2020-05-03T04:15:52Z,2020-05-03T04:15:51Z,"…plot

To realize the minimalist style of boxplot like the one inside
http://biochemres.com/beautiful-minimalist-boxplots-with-r-and-ggplot2
Instead of adding extra geom_segment over geom_boxplot, now the color of middle bar can be colored separately by setting middle.colo(u)r. And this feature can be turned off by setting separate.middle = FALSE, the middle bar will be colored with the outline of boxplot/crossbar by the col parameter, which acts as what ggplot2 does currently",https://github.com/tidyverse/ggplot2/pull/3505,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3499,2019-08-23T04:08:48Z,2020-02-22T12:39:47Z,2019-08-26T11:17:15Z,"Closes #3489 (I think it should be fixed on tibble's side, though)

As we saw #3048, using tibble internally causes unexpected errors because the existing codes expects a bare data.frame. I think #3489 is just a bug on tibble's side, but, I believe it's better for ggplot2 internals to stick with a bare data.frame for consistency.

Note that this pull request leaves these two `tibble()` uses as is because they don't seem the cases when the result is used internally.

https://github.com/tidyverse/ggplot2/blob/b8420241309c8eea00d7086002c01cdf38a50eac/R/summarise-plot.R#L66-L70
https://github.com/tidyverse/ggplot2/blob/b8420241309c8eea00d7086002c01cdf38a50eac/R/summarise-plot.R#L134-L136",https://github.com/tidyverse/ggplot2/pull/3499,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3495,2019-08-21T06:29:22Z,2020-02-21T22:19:57Z,2019-08-24T14:56:31Z,"This PR removes lazyeval from Imports.

I didn't notice, but lazyeval package is no longer used since v3.1.0. More precisely, we only imports `f_eval()` from lazyeval but it was removed by this commit: https://github.com/tidyverse/ggplot2/commit/d9f2cd4b6848c8b86a78ae63cf2fd52d1e124f9a#diff-43ce5f73e89026d3e9ec337c66087370",https://github.com/tidyverse/ggplot2/pull/3495,ggplot2
clauswilke,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/3494,2019-08-20T02:20:26Z,2020-02-23T18:40:24Z,2019-08-27T14:02:28Z,"Closes #3252.

``` r
library(ggplot2)

p <- ggplot(mpg, aes(x = class)) +
  geom_bar() +
  coord_flip() +
  labs(
    title = ""SUVs are the most popular"",
    subtitle = ""Number of cars of different classes in the mpg dataset"") +
  theme(axis.title.y = element_blank())

p
```

![](https://i.imgur.com/YJc52JJ.png)

``` r

p + theme(plot.title.position = ""plot"")
```

![](https://i.imgur.com/6YvypD6.png)

<sup>Created on 2019-08-19 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3494,ggplot2
clauswilke,MEMBER,closed,11,https://github.com/tidyverse/ggplot2/pull/3493,2019-08-19T23:40:18Z,2020-02-22T20:23:12Z,2019-08-26T18:27:06Z,"This seems to fix #3492.

``` r

library(tidyverse)
library(tibble)
ds <- mtcars %>%
  rownames_to_column() %>%
  select(car = rowname, mpg)

ds_size = rep(8, nrow(ds))
ds_size[10] <- 12

ds %>%
  ggplot(aes(x = car, y = mpg)) +
  coord_flip() +
  theme(axis.text.y = element_text(size = ds_size))
```

![](https://i.imgur.com/5DaunA9.png)

<sup>Created on 2019-08-19 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

<details>

<summary>Session info</summary>

``` r
devtools::session_info()
#> ─ Session info ──────────────────────────────────────────────────────────
#>  setting  value                       
#>  version  R version 3.6.0 (2019-04-26)
#>  os       macOS Mojave 10.14.5        
#>  system   x86_64, darwin15.6.0        
#>  ui       X11                         
#>  language (EN)                        
#>  collate  en_US.UTF-8                 
#>  ctype    en_US.UTF-8                 
#>  tz       America/Chicago             
#>  date     2019-08-19                  
#> 
#> ─ Packages ──────────────────────────────────────────────────────────────
#>  package     * version    date       lib source        
#>  assertthat    0.2.1      2019-03-21 [1] CRAN (R 3.6.0)
#>  backports     1.1.4      2019-04-10 [1] CRAN (R 3.6.0)
#>  broom         0.5.2      2019-04-07 [1] CRAN (R 3.6.0)
#>  callr         3.3.1      2019-07-18 [1] CRAN (R 3.6.0)
#>  cellranger    1.1.0      2016-07-27 [1] CRAN (R 3.6.0)
#>  cli           1.1.0      2019-03-19 [1] CRAN (R 3.6.0)
#>  colorspace    1.4-1      2019-03-18 [1] CRAN (R 3.6.0)
#>  crayon        1.3.4      2017-09-16 [1] CRAN (R 3.6.0)
#>  curl          4.0        2019-07-22 [1] CRAN (R 3.6.0)
#>  desc          1.2.0      2018-05-01 [1] CRAN (R 3.6.0)
#>  devtools      2.0.2      2019-04-08 [1] CRAN (R 3.6.0)
#>  digest        0.6.20     2019-07-04 [1] CRAN (R 3.6.0)
#>  dplyr       * 0.8.3      2019-07-04 [1] CRAN (R 3.6.0)
#>  evaluate      0.14       2019-05-28 [1] CRAN (R 3.6.0)
#>  forcats     * 0.4.0      2019-02-17 [1] CRAN (R 3.6.0)
#>  fs            1.3.1      2019-05-06 [1] CRAN (R 3.6.0)
#>  generics      0.0.2      2018-11-29 [1] CRAN (R 3.6.0)
#>  ggplot2     * 3.2.1.9000 2019-08-19 [1] local         
#>  glue          1.3.1      2019-03-12 [1] CRAN (R 3.6.0)
#>  gtable        0.3.0      2019-03-25 [1] CRAN (R 3.6.0)
#>  haven         2.1.0      2019-02-19 [1] CRAN (R 3.6.0)
#>  highr         0.8        2019-03-20 [1] CRAN (R 3.6.0)
#>  hms           0.4.2      2018-03-10 [1] CRAN (R 3.6.0)
#>  htmltools     0.3.6      2017-04-28 [1] CRAN (R 3.6.0)
#>  httr          1.4.0      2018-12-11 [1] CRAN (R 3.6.0)
#>  jsonlite      1.6        2018-12-07 [1] CRAN (R 3.6.0)
#>  knitr         1.23       2019-05-18 [1] CRAN (R 3.6.0)
#>  labeling      0.3        2014-08-23 [1] CRAN (R 3.6.0)
#>  lattice       0.20-38    2018-11-04 [1] CRAN (R 3.6.0)
#>  lazyeval      0.2.2      2019-03-15 [1] CRAN (R 3.6.0)
#>  lubridate     1.7.4      2018-04-11 [1] CRAN (R 3.6.0)
#>  magrittr      1.5        2014-11-22 [1] CRAN (R 3.6.0)
#>  memoise       1.1.0      2017-04-21 [1] CRAN (R 3.6.0)
#>  mime          0.7        2019-06-11 [1] CRAN (R 3.6.0)
#>  modelr        0.1.4      2019-02-18 [1] CRAN (R 3.6.0)
#>  munsell       0.5.0      2018-06-12 [1] CRAN (R 3.6.0)
#>  nlme          3.1-140    2019-05-12 [1] CRAN (R 3.6.0)
#>  pillar        1.4.2      2019-06-29 [1] CRAN (R 3.6.0)
#>  pkgbuild      1.0.4      2019-08-05 [1] CRAN (R 3.6.0)
#>  pkgconfig     2.0.2      2018-08-16 [1] CRAN (R 3.6.0)
#>  pkgload       1.0.2      2018-10-29 [1] CRAN (R 3.6.0)
#>  prettyunits   1.0.2      2015-07-13 [1] CRAN (R 3.6.0)
#>  processx      3.4.1      2019-07-18 [1] CRAN (R 3.6.0)
#>  ps            1.3.0      2018-12-21 [1] CRAN (R 3.6.0)
#>  purrr       * 0.3.2      2019-03-15 [1] CRAN (R 3.6.0)
#>  R6            2.4.0      2019-02-14 [1] CRAN (R 3.6.0)
#>  Rcpp          1.0.2      2019-07-25 [1] CRAN (R 3.6.0)
#>  readr       * 1.3.1      2018-12-21 [1] CRAN (R 3.6.0)
#>  readxl        1.3.1      2019-03-13 [1] CRAN (R 3.6.0)
#>  remotes       2.1.0      2019-06-24 [1] CRAN (R 3.6.0)
#>  rlang         0.4.0      2019-06-25 [1] CRAN (R 3.6.0)
#>  rmarkdown     1.13       2019-05-22 [1] CRAN (R 3.6.0)
#>  rprojroot     1.3-2      2018-01-03 [1] CRAN (R 3.6.0)
#>  rvest         0.3.4      2019-05-15 [1] CRAN (R 3.6.0)
#>  scales        1.0.0      2018-08-09 [1] CRAN (R 3.6.0)
#>  sessioninfo   1.1.1      2018-11-05 [1] CRAN (R 3.6.0)
#>  stringi       1.4.3      2019-03-12 [1] CRAN (R 3.6.0)
#>  stringr     * 1.4.0      2019-02-10 [1] CRAN (R 3.6.0)
#>  testthat      2.1.1      2019-04-23 [1] CRAN (R 3.6.0)
#>  tibble      * 2.1.3      2019-06-06 [1] CRAN (R 3.6.0)
#>  tidyr       * 0.8.3      2019-03-01 [1] CRAN (R 3.6.0)
#>  tidyselect    0.2.5      2018-10-11 [1] CRAN (R 3.6.0)
#>  tidyverse   * 1.2.1      2017-11-14 [1] CRAN (R 3.6.0)
#>  usethis       1.5.0      2019-04-07 [1] CRAN (R 3.6.0)
#>  withr         2.1.2      2018-03-15 [1] CRAN (R 3.6.0)
#>  xfun          0.8        2019-06-25 [1] CRAN (R 3.6.0)
#>  xml2          1.2.0      2018-01-24 [1] CRAN (R 3.6.0)
#>  yaml          2.2.0      2018-07-25 [1] CRAN (R 3.6.0)
#> 
#> [1] /Library/Frameworks/R.framework/Versions/3.6/Resources/library
```

</details>",https://github.com/tidyverse/ggplot2/pull/3493,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3491,2019-08-18T05:07:28Z,2020-02-21T22:20:03Z,2019-08-24T14:49:50Z,"Fix #3483

Currently, `GeomSf` doesn't have `non_missing_aes`, but it should be set to avoid errors reported on #3483. I chose `shape`, `size` and `colour` here because

* As `GeomSf` is a mix of points, lines, and polygons, it should use the combination of `non_missing_aes` of `GeomPoint`, `GeomLine` and `GeomPolygon`.
    * `GeomPoint` uses `shape`, `size` and `colour`
    * `GeomLine` and `GeomPolygon` don't have their `non_missing_aes`.
* For lines and polygons, `GeomSf` removes rows (e.g. the size is `NA`) that `GeomLine` and `GeomPolygon` won't. But, the result is the same; lines and polygons whose sizes are all `NA` won't be drawn. So, I think it's no problem to remove the whole rows.

``` r
devtools::load_all(""~/repo/R/ggplot2"")
#> Loading ggplot2

pts <- sf::st_sf(
  geometry = sf::st_sfc(sf::st_point(0:1), sf::st_point(1:2)),
  size = c(1, NA),
  shape = c(""a"", NA),
  colour = c(""red"", NA)
)

ggplot(pts) + geom_sf(aes(size = size))
#> Warning: Removed 1 rows containing missing values (geom_sf).
```

![](https://i.imgur.com/cAYOe4R.png)

``` r
ggplot(pts) + geom_sf(aes(shape = shape))
#> Warning: Removed 1 rows containing missing values (geom_sf).
```

![](https://i.imgur.com/kcVNK9P.png)

``` r

# default colour scale maps a colour even to a NA, so identity scale is needed to see if NA is removed
ggplot(pts) + geom_sf(aes(colour = colour)) + scale_colour_identity()
#> Warning: Removed 1 rows containing missing values (geom_sf).
```

![](https://i.imgur.com/fUhXGde.png)

<sup>Created on 2019-08-18 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>
",https://github.com/tidyverse/ggplot2/pull/3491,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3490,2019-08-17T13:25:25Z,2020-02-22T14:51:42Z,2019-08-26T13:48:13Z,"Fix #3461

Currently, `guide_geom.colorbar()` doesn't follow the way how `guide_geom.legend()` handles the case when `show.legend` is a named logical vector. This PR fixes it.

Besides, this PR also fixes `guide_geom.legend()` to handle multiple logicals, which I should have fixed #3163.

``` r
library(dplyr, warn.conflicts = FALSE)

devtools::load_all(""~/repo/R/ggplot2/"")

tribble(
  ~x1, ~y1, ~x2, ~y2, ~id, ~id_int,
  1,   1,   2,   2, ""A"",       1,
  2,   2,   3,   3, ""B"",       2
) %>%
  ggplot(aes(xmin = x1, ymin = y1, xmax = x2, ymax = y2, fill = id_int)) +
  geom_rect(show.legend = c(size = FALSE, fill = TRUE))
```

![](https://i.imgur.com/nnjkMSe.png)",https://github.com/tidyverse/ggplot2/pull/3490,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3488,2019-08-17T07:32:38Z,2020-02-22T12:39:44Z,2019-08-26T11:17:34Z,`ggdep()` -> `gg_dep()`,https://github.com/tidyverse/ggplot2/pull/3488,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3487,2019-08-16T00:56:37Z,2020-02-22T12:39:41Z,2019-08-26T11:18:24Z,"Fix #3463

After #3426, the following fails because `scale$get_limits()` returns `NULL`. This PR fixes this by reverting `if` branches to the previous code while the functional limits are still accepted.

``` r
library(ggplot2)

df <- data.frame(x = c(0, 2, 4), y = 1:3, stringsAsFactors = FALSE)

ggplot(df, aes(x, y)) +
  geom_point() +
  scale_x_discrete()
#> Warning in structure(in_domain, pos = match(in_domain, breaks)): Calling 'structure(NULL, *)' is deprecated, as NULL cannot have attributes.
#>   Consider 'structure(list(), *)' instead.

#> Warning in structure(in_domain, pos = match(in_domain, breaks)): Calling 'structure(NULL, *)' is deprecated, as NULL cannot have attributes.
#>   Consider 'structure(list(), *)' instead.
#> Error in UseMethod(""rescale""): no applicable method for 'rescale' applied to an object of class ""list""
```
<sup>Created on 2019-07-30 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

(As this bug only exists in the dev version, no NEWS bullet is needed here)",https://github.com/tidyverse/ggplot2/pull/3487,ggplot2
atusy,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/3485,2019-08-15T07:26:08Z,2020-02-12T21:50:06Z,2019-08-16T12:02:34Z,"This PR is related to https://github.com/tidyverse/ggplot2/issues/1371

In the discussion in #1371, a change was attempted to apply alpha both on `colour` and `fill`.
In this PR, we can select alpha to be applied on `fill` (default), `colour`, or `both`.
The default selection is `fill` and thus is safe in terms of backward compatibility.

Currently, `alpha_to` is implemented for `geom_polygon`, `geom_rect`, and `geom_ribbon`.
It works in some more (e.g., `geom_density`), but not all (`geom_bar`).
So I need some more to work on.

Before I update other functions, I'd like to ask @hadley if you like my PR.

## Examples

Varying `alpha_to` by `fill`, `colour`, and `both`

``` r
library(ggplot2)
d <- data.frame(xmin = 0, xmax = 1, ymin = 0:4, ymax = 1:5)
g <- ggplot(d) +
  aes(
    xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax,
    colour = ymin, alpha = ymin
  )
g + geom_rect(size = 3) # alpha_to = ""fill""
```

![](https://i.imgur.com/2qgo8yX.png)

``` r
g + geom_rect(size = 3, alpha_to = ""colour"")
```

![](https://i.imgur.com/XacWGAe.png)

``` r
g + geom_rect(size = 3, alpha_to = ""both"")
```

![](https://i.imgur.com/s2Mcwkm.png)

<sup>Created on 2019-08-15 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

",https://github.com/tidyverse/ggplot2/pull/3485,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3478,2019-08-09T18:51:49Z,2020-02-09T03:40:50Z,2019-08-12T13:41:07Z,To be merged once released,https://github.com/tidyverse/ggplot2/pull/3478,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3473,2019-08-06T10:08:29Z,2020-02-05T22:25:22Z,2019-08-09T18:50:49Z,"Closes #3467.

In #2936, I added `.ignore_empty = ""all""` to `rlang::enquos()` in `aes()` and in `qplot()` to remove missing `x` and `y` automatically. But, as `qplot()` generates labels directly from the input, missingness should be kept there. This PR reverts #2936's changes about `qplot()`.

``` r
library(ggplot2)

set.seed(2009)
x <- rnorm(100)
qplot(x, geom = ""histogram"")
#> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
```

![](https://i.imgur.com/pHMqqbs.png)

<sup>Created on 2019-08-06 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>",https://github.com/tidyverse/ggplot2/pull/3473,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3472,2019-08-05T07:50:59Z,2020-02-05T19:48:48Z,2019-08-09T18:39:05Z,This is a cherry-pick of the #3378 commit intended for the 3.2.1 hotfix release,https://github.com/tidyverse/ggplot2/pull/3472,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3471,2019-08-05T07:45:25Z,2020-02-05T19:48:44Z,2019-08-09T18:49:33Z,"fixes #3390 

@karawoo I have checked that this fix does not cause regressions in #1552. Basically what this does is avoid positive and negative y-values to get reordered, not fiddle with the group-based reordering",https://github.com/tidyverse/ggplot2/pull/3471,ggplot2
daniel-barnett,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3469,2019-08-05T04:52:06Z,2020-02-10T07:22:50Z,2019-08-14T05:43:23Z,"""line drawings"" into ""line drawing"".",https://github.com/tidyverse/ggplot2/pull/3469,ggplot2
Myfanwy,NONE,closed,5,https://github.com/tidyverse/ggplot2/pull/3443,2019-07-17T19:32:22Z,2020-01-14T16:57:38Z,2019-07-18T15:55:22Z,"Currently the documentation for `plot.margin` (line 133 of `theme.r`) reads: 

> ""plot.margin | margin around entire plot (`unit` with the sizes of the top, right, bottom, and left margins)"".

Although this suggests that `unit()` is required for the `plot.margin` specification, using it throws an error:
```
ggplot(mtcars) +
  geom_point(aes(x = disp, y = hp)) +
  theme(plot.margin = unit(50, ""pt""))

**> Error in `[.unit`(theme$plot.margin, 2) : 
  index out of bounds ('unit' subsetting)**
```
...while this does not:

```
ggplot(mtcars) +
  geom_point(aes(x = disp, y = hp)) +
  theme(plot.margin = margin(50, 0, 0, 0))
```",https://github.com/tidyverse/ggplot2/pull/3443,ggplot2
paleolimbot,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3439,2019-07-13T01:03:58Z,2020-01-12T15:09:18Z,2019-07-16T13:56:35Z,"This is a PR to address #3044. While the desired behaviour (calculating contours at draw time that can be labeled) can't be done immediately because `Geom`s don't have access to non-position scales, a good start is to use @clauswilke's [isoband package](http://github.com/clauswilke/isoband) to calculate contour lines (as opposed to `grDevices::contourLines()`) in `stat_contour()`. The isoband package also has a function to return contour polygons, which are implemented in this PR as `stat_contour_filled()` and `geom_contour_filled()`. 

Additional refactoring steps were:

- The `complete` parameter is not used in the current calculation and hasn't been used for about 4 years (estimated from the git blame view), so I removed it.
- I added function parameters and documentation for `bins`, `binwidth` and `breaks`. These appeared in examples but were not function arguments and were not documented.

Things I am not sure about:

- The calculation of breaks in this way is different than the calculation of bins and breaks everywhere else in ggplot2, and I wonder if they should be updated in this PR. In particular, letting breaks be a function I think would be helpful.
- I'm not sure about how I implemented `geom_contour_filled()`. There is no `GeomContourFilled`, it just calls `layer()` with `stat = ""contour_filled""` and `geom = ""polygon""`.
- I'm not sure what the corner cases are for `isoband::iso(band|contour)`, but I think I should probably add more tests to make sure inappropriate/weird inputs are handled properly (such as for #2702).",https://github.com/tidyverse/ggplot2/pull/3439,ggplot2
mastropi,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3435,2019-07-11T14:03:22Z,2020-02-02T13:45:15Z,2019-08-06T11:27:31Z,"Fixes bug in PR#2365 which also closes issue #3348 where the new center option is requested.

The fix was done starting off from the forked repository by rmatkins where he had implemented the new feature requested in #3348.

The bug in PR#2365 was fixed by replacing the last line in the `stairstep()` function from:
`data_frame(x, y, data_attr)`
to:
`new_data_frame(c(list(x=x, y=y), data_attr))`",https://github.com/tidyverse/ggplot2/pull/3435,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3431,2019-07-08T16:24:09Z,2020-01-04T20:39:41Z,2019-07-08T16:37:32Z,"* Updates .Rd file for `gg_dep()`
* Creates separate links for `scale_x_discrete()`, `scale_x_continuous()`,  `scale_x_date()` in limits.R",https://github.com/tidyverse/ggplot2/pull/3431,ggplot2
Ahobert,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3430,2019-07-08T15:23:09Z,2020-01-04T20:39:45Z,2019-07-08T16:36:29Z,"
closes issue https://github.com/tidyverse/ggplot2/issues/3422",https://github.com/tidyverse/ggplot2/pull/3430,ggplot2
paleolimbot,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3429,2019-07-08T14:44:11Z,2020-01-04T20:39:39Z,2019-07-08T16:38:11Z,These are a few typo fixes from the last few PRs that might cause automatic checks to fail.,https://github.com/tidyverse/ggplot2/pull/3429,ggplot2
EK-Lee,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/3427,2019-07-08T14:06:20Z,2020-01-31T23:45:35Z,2020-01-31T23:45:34Z,fixes #3135 : add test-geom-quantile.R,https://github.com/tidyverse/ggplot2/pull/3427,ggplot2
AnneLyng,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3426,2019-07-08T13:58:23Z,2020-01-13T14:27:27Z,2019-07-16T18:37:55Z,resolved #3115 ,https://github.com/tidyverse/ggplot2/pull/3426,ggplot2
Maschette,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3425,2019-07-08T13:45:35Z,2020-01-04T20:39:53Z,2019-07-08T13:56:19Z,"This should close #2734 

Ran local test and it seemed to work fine. ",https://github.com/tidyverse/ggplot2/pull/3425,ggplot2
accustodio,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3424,2019-07-08T13:08:28Z,2020-01-12T21:20:36Z,2019-07-16T20:08:49Z,"- Details about modifing binwidths and center/boundary
- Removed repeated word from stat-bin documentation

Closes #3269",https://github.com/tidyverse/ggplot2/pull/3424,ggplot2
sinarueeger,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3423,2019-07-08T13:07:52Z,2020-01-13T09:30:00Z,2019-07-17T01:05:24Z,"
- Added explicit `breaks`, `nbin` and `binwidth` arguments to `stat_contour()` and `geom_contour()`, along with documentation for `stat_contour()`. 

- In the parameter description, I added a default value to `breaks`. Not sure this is ok, as it is the default value to all parameter (when `breaks=NULL`, `nbin=NULL`, `binwidth=NULL`).

Closes #2472.
",https://github.com/tidyverse/ggplot2/pull/3423,ggplot2
jfalip,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3421,2019-07-08T12:52:52Z,2020-01-04T20:39:47Z,2019-07-08T16:25:53Z,"Fixes #2887 

Added an explicit warning in scales documentation about limits sometimes removing data.",https://github.com/tidyverse/ggplot2/pull/3421,ggplot2
accustodio,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3420,2019-07-08T12:46:49Z,2020-01-04T20:40:09Z,2019-07-08T12:52:41Z,"- Details about modifing binwidths and center/boundary
- Removed repeated word from stat-bin documentation

Closes #3269",https://github.com/tidyverse/ggplot2/pull/3420,ggplot2
haleyjeppson,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3419,2019-07-08T12:34:25Z,2020-01-04T20:40:05Z,2019-07-08T12:57:03Z,This PR fixes #2860,https://github.com/tidyverse/ggplot2/pull/3419,ggplot2
CateGitau,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/3418,2019-07-08T12:26:27Z,2020-01-13T02:17:12Z,2019-07-17T01:01:47Z,"issue #2767 

Added some information about position_dodge2() ",https://github.com/tidyverse/ggplot2/pull/3418,ggplot2
Ahobert,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3417,2019-07-08T12:23:12Z,2020-01-04T20:39:57Z,2019-07-08T13:47:16Z,closes https://github.com/tidyverse/ggplot2/issues/2863,https://github.com/tidyverse/ggplot2/pull/3417,ggplot2
ikosmidis,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3416,2019-07-08T12:07:52Z,2020-01-13T19:25:14Z,2019-07-17T18:11:58Z,closes #2709,https://github.com/tidyverse/ggplot2/pull/3416,ggplot2
thiyangt,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/3415,2019-07-08T12:04:14Z,2020-01-05T09:59:11Z,2019-07-09T08:47:18Z,Closes #3362,https://github.com/tidyverse/ggplot2/pull/3415,ggplot2
annennenne,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3414,2019-07-08T11:50:35Z,2020-01-04T20:39:50Z,2019-07-08T14:25:25Z,Changed `theme_grey()` setting for legend key so that it creates no  border (`NA`) rather than drawing a white one. (closes #3180),https://github.com/tidyverse/ggplot2/pull/3414,ggplot2
Shelmith-Kariuki,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3413,2019-07-08T10:46:16Z,2020-01-04T20:40:12Z,2019-07-08T12:48:09Z,"Fixes #3300.

This pull request addresses the first bullet point of #3300. Davis is not sure if we should do anything for the second bullet point.",https://github.com/tidyverse/ggplot2/pull/3413,ggplot2
perezp44,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3412,2019-07-08T10:45:09Z,2020-01-04T20:39:59Z,2019-07-08T13:02:02Z,@hadley it is good for #3382,https://github.com/tidyverse/ggplot2/pull/3412,ggplot2
CateGitau,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3411,2019-07-08T10:27:37Z,2020-01-12T18:52:42Z,2019-07-16T17:43:27Z,"issue #3298 
The third issue on scales::rescale() link not being active seems to have been solved. probably only thing left is to include somewhere in the doc that rescaler() is not a function in ggplot2. ",https://github.com/tidyverse/ggplot2/pull/3411,ggplot2
violetr,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3410,2019-07-08T10:22:37Z,2020-01-04T20:40:15Z,2019-07-08T11:41:28Z,fixes #2776 : data ellipse instead of confidence ellipse ,https://github.com/tidyverse/ggplot2/pull/3410,ggplot2
annennenne,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3409,2019-07-08T10:20:56Z,2020-01-04T20:40:20Z,2019-07-08T11:33:21Z,…eights the default (closes #2902),https://github.com/tidyverse/ggplot2/pull/3409,ggplot2
AnneLyng,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3408,2019-07-08T10:18:53Z,2020-01-04T20:40:18Z,2019-07-08T11:39:24Z,resolves #2873 (documentation added to clarify aesthetics for geom_area compared to geom_ribbon),https://github.com/tidyverse/ggplot2/pull/3408,ggplot2
MeganBeckett,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3407,2019-07-08T10:16:11Z,2020-01-12T16:23:46Z,2019-07-16T15:19:48Z,"Addresses #3299 

Added examples to illustrate the different behaviour when setting `na.value = NA` when used with the fill and colour aesthetics, and data has missing values.

The second suggested bullet point of #3299 is dependent on a bug fix and hence I did not document this.",https://github.com/tidyverse/ggplot2/pull/3407,ggplot2
pridiltal,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3406,2019-07-08T09:51:43Z,2020-01-04T20:40:02Z,2019-07-08T12:58:00Z,Closes #3292,https://github.com/tidyverse/ggplot2/pull/3406,ggplot2
andrasberczi,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3405,2019-07-08T09:38:54Z,2020-01-04T20:40:23Z,2019-07-08T11:17:36Z,Closes #3290 ,https://github.com/tidyverse/ggplot2/pull/3405,ggplot2
jfalip,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3404,2019-07-08T09:38:53Z,2020-01-04T20:40:26Z,2019-07-08T10:19:03Z,"Closes #3295 

Added clarification that path is a path to a directory, and that filename is appended to path to create the fully qualified file name",https://github.com/tidyverse/ggplot2/pull/3404,ggplot2
Maschette,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3403,2019-07-08T08:21:12Z,2020-01-04T20:40:29Z,2019-07-08T09:29:15Z,Closes issue #3301 ,https://github.com/tidyverse/ggplot2/pull/3403,ggplot2
ikosmidis,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3402,2019-07-08T08:18:24Z,2020-01-05T06:39:27Z,2019-07-09T05:43:52Z,Closes issue #2630,https://github.com/tidyverse/ggplot2/pull/3402,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3401,2019-07-08T00:59:26Z,2020-02-01T20:11:50Z,2019-08-05T18:11:59Z,"Fixes #3390 by resetting the data order in `PositionStack` after positive and negative values have been collided. I looked into this and I don't think that it causes downstream problems with plot appearance, but I don't think we can completely avoid messing with ordering in the position without causing breaking changes, as this is where we ensure that stacking order matches the default legend order, and users also have the option to alter stacking order from `position_stack(reverse = TRUE)`. So instead I have `PositionStack()` resetting the order after `collide()`. @thomasp85 does this seem ok to you?

It did cause some test failures that all appear to be false negatives: some regular tests expected the results of `layer_data()` to be in a different order (but the plots look the same), and one visual test failed because the rows in the SVG were in a different order (again, the plot itself looked the same). I fixed these and added a couple extra visual tests as well. I removed the test for ""negative and positive values are handled separately"" as I can't think of a way to test for that after we've sorted the combined data.",https://github.com/tidyverse/ggplot2/pull/3401,ggplot2
paleolimbot,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/3398,2019-07-05T17:05:35Z,2020-04-04T21:43:16Z,2019-09-29T21:26:37Z,"This is a PR to address #3322, and allows the same syntax that is currently used to customize non-position guides to be used for position guides. This allows the strategies for dealing with overlapping labels that were implemented in #3375 to actually be used (closes #3281). Currently, these only work for `CoordCartesian`, but could easily be adapted to `CoordTrans` as well.

The main changes are:

- Added two methods to `Coord`s: `setup_panel_guides()` and `train_panel_guides()`. These are both called from `Layout$setup_panel_guides()` at draw time. Both `Coord` methods return modified versions of the `panel_params`, where the `guides` are kept.
- Added `guide_axis()` and `guide_none()` constructors, which return list S3s similar to the other guides.
- Added S3 methods for `guide_axis()` and `guide_none()` objects that exist for all other guides.
- Added an S3 generic `guide_transform()`, which allows position guides access to the `coord` and `panel_params`. 

Some problems include:

- A circular dependency (the guide object is kept in the panel params, but needs access to it so that it can call `Coord$transform()`). I don't know how to get around this, but am open to suggestions.
- Theoretically one could specify two guides at a single position (e.g., two position guides at the left of the panel). I can't get the `gtable` code to draw this (see [this reprex](https://gist.github.com/paleolimbot/e484639f72f775771bc0e2746e4f1efa) ). Currently the code draws the first guide and issues a warning (there is a test for this).

A reprex giving the main syntax:

<details>

``` r
library(ggplot2)

# plot with overlapping text
p <- ggplot(mpg, aes(cty * 100, hwy * 100)) +
  geom_point() +
  facet_wrap(vars(class))

# axis guides can be customized in the scale_* functions or
# using guides()
p + scale_x_continuous(guide = guide_axis(n_dodge = 2))
```

![](https://i.imgur.com/Pw0i25b.png)

``` r
p + guides(x = guide_axis(n_dodge = 2))
```

![](https://i.imgur.com/x1utF89.png)

``` r

# can also be used to add a duplicate guide
p + guides(x = guide_axis(n_dodge = 2), y.sec = guide_axis())
```

![](https://i.imgur.com/0dmOqP5.png)

<sup>Created on 2019-07-05 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>

</details>
",https://github.com/tidyverse/ggplot2/pull/3398,ggplot2
eliocamp,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/3397,2019-07-05T14:59:51Z,2021-03-30T18:55:46Z,2021-03-30T18:55:45Z,"I realised that implementing #3379 needed only the slightest change, so I could do it :). ",https://github.com/tidyverse/ggplot2/pull/3397,ggplot2
moredatapls,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/3395,2019-07-05T09:43:50Z,2020-02-16T15:22:21Z,2019-08-20T13:17:26Z,"Adds `NULL` as a default value for the `label` parameter of `xlab()` and `ylab()`, making it easier to remove axis labels from plots.

Resolves #3393 ",https://github.com/tidyverse/ggplot2/pull/3395,ggplot2
paleolimbot,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3381,2019-06-24T12:22:27Z,2019-12-21T16:44:54Z,2019-06-24T14:37:13Z,"The latest update of the `draw_axis()` code (#3375) broke the ability of `element_text()` subclasses to be rendered as axis labels. This PR fixes this, such that any S3 element inheriting from `element_text()` is rendered correctly. This is important for gridtext integration, which uses `element_text()` subclasses extensively (#3373). An excellent reprex for this is available here: https://github.com/clauswilke/gridtext/blob/master/examples/ggplot2-integration.R",https://github.com/tidyverse/ggplot2/pull/3381,ggplot2
paleolimbot,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3380,2019-06-23T22:47:32Z,2019-12-28T22:55:56Z,2019-07-01T22:20:08Z,"This is a PR to address coordinate scale expansion and limiting using a single approach, implementing several feature requests and fixing several bugs in the process (closes #2990, closes #2907, closes #3056, closes #3336). The inspiration for this PR was a collection of issues that @hadley collected when issue triaging that were related to the interface between scales and coordinate systems (#3371). I'd be happy to split this up into a few different PRs if it is easier to review (one for expansion, one for coord limiting, one for sprucing up coord_trans).

- All scale expansion code now lives in `scale-expansion.r`, and is tested independently of the scales/coords. All `Coord` objects now use these expansion functions. Previously, some form of scale expansion code lived in `utilities.r`, `scale-.r`, `coord-sf.r`, `coord-cartesian.r`, `scale-discrete.r`, and `coord-transform.r`. This led to at least one issue of inconsistent expansion between coords (#3338), and was thought to cause several other issues, although it turns out that #2990 was unrelated, #3270 had already been fixed before this PR, and nothing about this PR addressed #980.

- All `coord_*()` functions with `xlim` and `ylim` arguments now accept vectors with `NA` as a placeholder for the minimum or maximum value (e.g., `ylim = c(0, NA)` would zoom the y-axis from 0 to the maximum value observed in the data). This mimics the behaviour of the `limits` argument in continuous scale functions (#2907).

``` r
library(ggplot2)
ggplot(mpg, aes(cty, hwy)) + 
  geom_point() +
  coord_cartesian(xlim = c(20, NA), ylim = c(NA, 40))
```

![](https://i.imgur.com/rDJdc6Y.png)

- `coord_trans()` now draws second axes (#2990) and accepts `xlim`, `ylim`, and `expand` arguments to bring it up to feature parity with `coord_cartesian()`. This also closes #3056, which is an abandoned PR that deprecated `limx` and `limy` in favour of `xlim` and `ylim`. This PR does the same, and also fully removes `xtrans` and `ytrans`, which have been deprecated long enough that using them resulted in an error anyway.

- `coord_trans()` now calculates breaks using the expanded range (previously these were calculated using the unexpanded range, which resulted in differences between plots made with `coord_trans()` and those made with `coord_cartesian()`. The expansion for discrete axes in `coord_trans()` was also updated such that it behaves identically to that in `coord_cartesian()` (see #3338 - this was already closed by the OP, but it is the best discussion of this topic).

``` r
library(ggplot2)

p <- ggplot(mpg, aes(class, hwy)) + geom_boxplot() 

# these two plots didn't used to align and sometimes had
# different breaks on the y-axis
p + scale_y_log10()
p + 
  coord_trans(y = ""log10"") + 
  scale_y_continuous(breaks = scales::log_breaks())
```

- Added regression tests for `coord_trans()`, for which previously there were none.
",https://github.com/tidyverse/ggplot2/pull/3380,ggplot2
paleolimbot,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3378,2019-06-21T13:48:52Z,2019-12-28T21:52:40Z,2019-07-01T20:43:39Z,"After r-spatial/sf#1083 (which addressed #3365), several expectations in the `coord_sf()` test suite will fail with the next version of sf. This PR splits the affected test into several, small, well-labeled tests, and updates the expectations such that they will pass with the new version of sf (and the current version). This PR fixes #3365.",https://github.com/tidyverse/ggplot2/pull/3378,ggplot2
larmarange,NONE,closed,10,https://github.com/tidyverse/ggplot2/pull/3376,2019-06-20T10:57:46Z,2020-03-24T12:32:49Z,2020-02-01T16:51:43Z,"fix #3369 

Will allow to easily display percentages as labels when using `position_fill()`.

An example:

```r
ggplot(mpg, aes(x = class, fill = drv)) + 
  geom_bar(position = ""fill"") + 
  geom_text(aes(label = scales::percent(..cprop..)), stat = ""count"", position = position_fill(.5))
```

![image](https://user-images.githubusercontent.com/966307/59844349-fd72a700-935a-11e9-907f-c49be73b04b7.png)
",https://github.com/tidyverse/ggplot2/pull/3376,ggplot2
paleolimbot,MEMBER,closed,14,https://github.com/tidyverse/ggplot2/pull/3375,2019-06-19T20:20:17Z,2019-12-19T15:26:12Z,2019-06-22T14:43:45Z,"This is a PR as part of #3322 to build in some basic strategies to the default axis renderer (`draw_axis()`). The inspiration for this PR is #3281, although the issue can't be closed until there is actually a way to change the arguments to `draw_axis()`, which is the almost next step for #3322.

The three strategies are (1) recursively prioritize the ""middle"" label, and pass `check.overlap = TRUE` to `textGrob()`, (2) rotate the axis text, and (3) dodge the text into multiple rows/columns. These are the strategies I chose because they can operate independent of each other, don't require overhauling the existing axis code, and don't cause any visual changes with the default parameters. There are probably better strategies that can be implemented when axis guides are extensible (I imagine that @clauswilke's gridtext would introduce a number of alternatives).

A reprex so that any/all can play around with the new options:

``` r
library(ggplot2)
library(grid)
library(gtable)

# theme with which axes should be tested
theme_test_axis <- theme_test() + theme(axis.line = element_line(size = 0.5))

# function to test several axes at once
test_draw_axis <- function(n_breaks = 10,
                           # make long labels
                           labels = function(breaks) scales::comma(breaks * 1e7),
                           positions = c(""top"", ""bottom""),
                           theme = theme_test_axis,
                           ...) {
  
  break_positions <- seq_len(n_breaks) / (n_breaks + 1)
  break_labels <- labels(seq_len(n_breaks))
  
  # create the axes
  axes <- lapply(positions, function(position) {
    ggplot2:::draw_axis(break_positions, break_labels, axis_position = position, theme = theme, ...)
  })
  axes_grob <- gTree(children = do.call(gList, axes))
  
  # arrange them so there's some padding on each side
  gt <- gtable(
    widths = unit(c(0.05, 0.9, 0.05), ""npc""),
    heights = unit(c(0.05, 0.9, 0.05), ""npc"")
  )
  gt <- gtable_add_grob(gt, list(axes_grob), 2, 2, clip = ""off"")
  plot(gt)
}

test_draw_axis(check.overlap = TRUE)
```

![](https://i.imgur.com/iYJBiqb.png)

``` r
test_draw_axis(angle = 45)
```

![](https://i.imgur.com/SvDgzWM.png)

``` r
test_draw_axis(n_dodge = 2)
```

![](https://i.imgur.com/nRnrZkh.png)

<sup>Created on 2019-06-19 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3375,ggplot2
batpigandme,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3374,2019-06-19T17:17:24Z,2019-12-16T18:18:38Z,2019-06-19T17:28:32Z,"Per @hadley 1-on-1…

* Wasn't actually searching the right site.
* Was harshing our vibe in the navbar.",https://github.com/tidyverse/ggplot2/pull/3374,ggplot2
batpigandme,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3370,2019-06-18T14:58:44Z,2019-12-15T23:43:17Z,2019-06-18T22:28:02Z,* Fixes #2789,https://github.com/tidyverse/ggplot2/pull/3370,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3366,2019-06-17T18:48:07Z,2019-12-15T13:23:44Z,2019-06-18T11:20:11Z,"Closes #3285

This PR should not be squashed, but merged into the master to ensure the release tag stays part of the master branch",https://github.com/tidyverse/ggplot2/pull/3366,ggplot2
paleolimbot,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/3361,2019-06-12T18:27:16Z,2019-12-15T13:23:50Z,2019-06-18T12:31:52Z,"In the `draw_axis()` rewrite (#3349), I neglected a piece of code that allowed `list()`s of `language` objects to be passed as labels. This is only used in `coord_sf()` to draw degree signs next to labels, and because the `coord_sf()` tests are all skipped, I didn't notice that I had missed this piece of code. This PR fixes the regression so that `coord_sf()` plots have degree signs in axis labels once more.",https://github.com/tidyverse/ggplot2/pull/3361,ggplot2
paleolimbot,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3356,2019-06-06T15:15:42Z,2019-12-15T13:23:47Z,2019-06-18T12:56:00Z,"In order for position guides to act like other guides (#3322), there needs to be a scale-like object for the position guides to be trained on. This PR is one experiment on how to do this.

Currently, the `panel_params` are the only valid representation of the position scales that is available at draw time, as scales are not expanded in place, but temporarily expanded by the Coord as part of the `Coord$setup_panel_params()`. The `panel_params` for most coordinate systems is based on `Scale$break_info()`, which is only ever used in coordinate systems. The `panel_params` serve as the source of information for the `Coord` transformation functions, range functions, axis guides, and panel guides (the panel grid/grill). Some layers (like `geom_dotplot()`, `annotation_logticks()`, and `ggspatial::annotation_scale()`) also use the `x.range` and `y.range` elements of the `panel_params`.

Expanded position scales used by coordinate systems serve a different purpose than scales used for training, and at first I tried [coercing the existing scales to serve as both](https://github.com/tidyverse/ggplot2/compare/master...paleolimbot:scales-refactoring) but even though it sort of works, it's messy and causes at least two tests to fail.

This PR introduces an internal class, `ViewScale`, that serves as the definitive source of truth for coordinate systems (and potentially layers) regarding the expanded position scale. To demonstrate how it would be used, I refactored `CoordCartesian` to use view scales instead of a composite of `Scale$break_info()` `list()`s. Ideally, the `break_info()` function should be moved to the `ViewScale()` constructor to separate the concerns of `Scale` objects (transforming, censoring, training, and calculating limits/breaks/labels) from the concerns of the `Coord`/`Geom` (transforming position aesthetics from transformed data space to coordinate space) from the concerns of the guide (what are the break values, break labels, and break positions in coordinate space). Only `CoordCartesian` has a 1-to-1 mapping between a `ViewScale` and a future `guide_axis()`, but all the `Coord`s need information about the expanded `x` and `y` scales and could potentially be refactored to use them.

The main questions I have are:

- Is this a reasonable way to write a scale-like object with which to train a future `guide_axis()`
- Should `CoordCartesian` use `ViewScales` for anything except guides?
- If so, should other coordinate systems use `ViewScales`?
",https://github.com/tidyverse/ggplot2/pull/3356,ggplot2
jeroen,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3354,2019-06-05T13:26:33Z,2020-01-24T11:44:39Z,2019-07-24T20:23:44Z,"Using declarative installation of `apt` packages will result in better caching. Also `sudo` is deprecated and `dist: trusty` is EOL soon, it's better to use the default linux distribution.",https://github.com/tidyverse/ggplot2/pull/3354,ggplot2
topepo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3352,2019-06-04T14:06:00Z,2019-12-08T08:24:33Z,2019-06-11T07:20:06Z,DB at https://www.dropbox.com/s/llilyu97detb5xv/data.sqlite?dl=0,https://github.com/tidyverse/ggplot2/pull/3352,ggplot2
paleolimbot,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3349,2019-05-31T16:30:29Z,2019-12-01T20:54:45Z,2019-06-04T20:26:27Z,"This is a PR to prepare for improvements in axis guides as part of #3322. This PR  renames the internal function `guide_axis()` to `draw_axis()` and includes a complete rewrite of (what is now) `draw_axis()`.

Renaming `guide_axis()` to `draw_axis()` is necessary to make way for an exported `guide_axis()` function that returns a guide (instead of a grob). I used the term ""draw"" because it is used in many places in ggplot2 for functions that return grobs.

The rewrite of `draw_axis()` is necessary because the current code is difficult to read and contains much duplication. This makes it difficult to change or improve, as is planned for #3322. The rewrite does not introduce any visual changes in the current tests, and I didn't add any new tests because I couldn't find any part of axis appearance that wasn't already tested between the guides and themes.",https://github.com/tidyverse/ggplot2/pull/3349,ggplot2
soopo,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/3347,2019-05-31T13:03:29Z,2019-11-27T13:49:38Z,2019-05-31T13:07:40Z,,https://github.com/tidyverse/ggplot2/pull/3347,ggplot2
paleolimbot,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3346,2019-05-30T21:30:57Z,2019-12-01T23:55:23Z,2019-06-04T23:33:29Z,"This is a PR that implements warnings when the layer `mapping` contains syntax like `data$column` instead of `.data$column` or (even better) `column`. This PR also implements an experimental and very open to discussion warning about layers that never map any columns from the data. Collectively, this is designed to encourage the correct usage of data and mappings, particularly in packages where this is sometimes done to avoid non-standard evaluation. This PR fixes #2693.

Warnings for `$` and `[[` usage in `aes()`:

``` r
library(ggplot2)

build <- function(p) invisible(ggplot_build(p))

p <- ggplot(mpg, aes(cty, hwy)) + geom_point()

# these do not issue warnings
build(p)
build(p + aes(.data$cty))
build(p + aes(.data[[""cty""]]))

# these issue warnings
build(p + aes(mpg$cty))
#> Warning: Use of `mpg$cty` is discouraged. Use `cty` instead.
build(p + aes(mpg[[""cty""]]))
#> Warning: Use of `mpg[[""cty""]]` is discouraged. Use `.data[[""cty""]]`
#> instead.
mpg2 <- mpg
build(p + aes(mpg2$cty))
#> Warning: Use of `mpg2$cty` is discouraged. Use `cty` instead.
```

<sup>Created on 2019-05-30 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>

As discussed in #2693, it is probably going too far to check for zero column mappings. I implemented it here just for discussion...it causes 5 warnings in the test cases (all of which fit the description of zero mapped columns from data).

``` r
library(ggplot2)

build <- function(p) invisible(ggplot_build(p))

p <- ggplot(mpg, aes(cty)) + geom_histogram(bins = 30)

# these do not issue warnings
build(p)
build(p + aes(.data$cty))
build(p + aes(.data[[""cty""]]))
build(p + aes(cty, fill = 1))

# this doesn't issue a warning about the mappings
build(p + aes(mpg$cty))
#> Warning: Use of `mpg$cty` is discouraged. Use `cty` instead.

# these issue warnings
build(p + aes(1))
#> Warning: Mapping contains zero mapped columns from data
build(p + aes(runif(nrow(mpg))))
#> Warning: Mapping contains zero mapped columns from data
```

<sup>Created on 2019-05-30 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>

",https://github.com/tidyverse/ggplot2/pull/3346,ggplot2
paleolimbot,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3344,2019-05-30T16:28:33Z,2019-12-01T18:54:27Z,2019-06-04T18:28:38Z,"This is a first draft of a vignette that gives guidance on best-practices related to ggplot2 use in packages (fixes #3319). I am sure that there are are things I expand on too much, things that I forgot to cover, or things that I got wrong! I wrote it based on seeing what code failed in the latest round of revdep checks (and what problems that code was trying to solve).",https://github.com/tidyverse/ggplot2/pull/3344,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3340,2019-05-23T16:58:50Z,2019-11-30T08:50:16Z,2019-06-03T08:41:04Z,"The default behavior was changed in #2386 but the example wasn't updated.

I've opened this against master, but maybe it could go in the 3.2.0 release? @thomasp85 let me know if you want this PR against the release candidate branch instead.",https://github.com/tidyverse/ggplot2/pull/3340,ggplot2
paleolimbot,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3331,2019-05-15T14:54:00Z,2019-11-11T18:48:20Z,2019-05-15T18:21:03Z,"This is a PR to fix #3313, where packages that subclass `GeomPolygon` were giving install warnings with the new version of ggplot2 in the revdep checks (#3303).

I was hesitant to prepare this PR, because I don't understand why this works, and because I can't replicate the install warning that occurred in the revdep checks, I can't verify that this PR fixes the problem. I can verify that it doesn't cause any CMD check failures for either ggplot2 or ggspatial, which was one of the packages affected by the revdep check issue.",https://github.com/tidyverse/ggplot2/pull/3331,ggplot2
paleolimbot,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3330,2019-05-15T14:02:53Z,2019-11-16T21:48:30Z,2019-05-20T20:54:16Z,"In previous versions of ggplot2, it was possible to facet by a date variable. This was temporarily broken (#3313) and will be fixed by #3327. It should always be possible to use `facet_wrap()` and `facet_grid()` with date variables, and as @yutannihilation pointed out, there is no test to enforce this behaviour. This PR adds such a test (there are already similar tests in `tests/testthat/test-facet-map.r`). This test currently fails as #3327 isn't merged.",https://github.com/tidyverse/ggplot2/pull/3330,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3327,2019-05-14T09:09:33Z,2019-11-16T21:48:33Z,2019-05-20T20:52:49Z,"Fixes #3313 and #3315 

This fixes the differences in ordering between plyr and the replacement functions. Some notes

- the plyr ordering in `ddply()` is based on a pretty weird heuristic but I think I've nailed it
- the difference in `join_keys()` is the result of differences in `rbind_dfs()` and `plyr::rbind.fill()`. I honestly think the current ggplot2 approach is more correct, but I've made Date handling even with plyr to unbreak revdeps... If that fixes everything we should leave it at that instead of pursuing other parity with other weird vector formats

I probably don't have a head for more work this week, so bear with me if there are any problems with the PR",https://github.com/tidyverse/ggplot2/pull/3327,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3324,2019-05-10T21:51:05Z,2019-11-07T17:48:16Z,2019-05-11T17:28:49Z,"I added a paragraph about visual changes to the release notes, as discussed in #3304.

@hadley @batpigandme Could you review? I wasn't entirely sure where to place the paragraph, but I feel it should be up on top so people see it even if they don't read through the entire set of notes.",https://github.com/tidyverse/ggplot2/pull/3324,ggplot2
paleolimbot,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/3321,2019-05-09T16:43:52Z,2019-11-05T21:48:14Z,2019-05-09T21:22:29Z,"This is a PR to fix #3316, where group data with more than 1 row in `GeomBoxplot$draw_layer()` was causing an error that was difficult to diagnose. This may occur when using `geom_boxplot(stat = ""identity"")`, and is likely to occur if a user wants to draw several boxplots at specific locations on a plot in a boxplot/scatter mashup situation.

```r
library(ggplot2)
ggplot(
  data.frame(x = ""one value"", y = 3, value = 4:6),
  aes(x, ymin = 0, lower = 1, middle = y, upper = value, ymax = 10)
) + 
  geom_boxplot(stat = ""identity"", position = ""identity"")
#> Error: Elements must equal the number of rows or 1
```

",https://github.com/tidyverse/ggplot2/pull/3321,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3320,2019-05-08T16:22:27Z,2019-11-12T14:48:23Z,2019-05-16T14:28:42Z,"This fixes #3317, and likely some other current issues.

``` r

library(ggplot2)
ggplot() +
  annotate(""point"", x = numeric(0), y = numeric(0), colour = ""red"")
```

![](https://i.imgur.com/yc4alZY.png)

<sup>Created on 2019-05-08 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3320,ggplot2
lionel-,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3309,2019-05-07T11:36:44Z,2019-11-30T08:50:20Z,2019-05-20T20:51:20Z,"Required for #3308.

I also added the missing R versions to the Travis files. Please let me know if you prefer to leave (some of) them out.",https://github.com/tidyverse/ggplot2/pull/3309,ggplot2
lionel-,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/3308,2019-05-07T08:57:20Z,2020-02-22T13:45:41Z,2019-08-26T12:50:35Z,"New template from usethis.

The main changes are to export `as_label()` and `as_name()`, and to undocument stuff that should no longer be exported, but that we keep exporting for compatibility (`enexpr()`, `quo()`, `quo_name()`, etc).",https://github.com/tidyverse/ggplot2/pull/3308,ggplot2
bfgray3,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3307,2019-05-07T03:43:23Z,2020-04-02T15:00:47Z,2019-09-30T10:54:58Z,fixes #3205,https://github.com/tidyverse/ggplot2/pull/3307,ggplot2
bfgray3,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3306,2019-05-07T03:22:59Z,2019-11-05T23:48:16Z,2019-05-09T22:55:55Z,"```
> ""lm"" %in% ls(""package:base"")
[1] FALSE
> ""loess"" %in% ls(""package:base"")
[1] FALSE
> ""lm"" %in% ls(""package:stats"")
[1] TRUE
> ""loess"" %in% ls(""package:stats"")
[1] TRUE
```",https://github.com/tidyverse/ggplot2/pull/3306,ggplot2
topepo,MEMBER,closed,18,https://github.com/tidyverse/ggplot2/pull/3303,2019-05-04T11:58:19Z,2019-12-01T16:53:54Z,2019-06-04T15:58:32Z,"[database file](https://www.dropbox.com/s/llilyu97detb5xv/data.sqlite?dl=0)

We checked 2622 reverse dependencies (2212 from CRAN + 410 from BioConductor), comparing R CMD check results across CRAN and dev versions of this package.

 * We saw 30 new problems
 * We failed to check 70 packages

Issues with CRAN packages are summarised below.

### New problems
(This reports the first line of each new failure)

* bayesAB
  checking examples ... ERROR

* breathteststan
  checking examples ... ERROR

* CSTools
  checking tests ...

* esmisc
  checking examples ... ERROR

* fergm
  checking examples ... ERROR

* fingertipscharts
  checking examples ... ERROR
  checking tests ...

* ggalt
  checking whether package ‘ggalt’ can be installed ... WARNING

* ggforce
  checking whether package ‘ggforce’ can be installed ... WARNING

* ggpol
  checking whether package ‘ggpol’ can be installed ... WARNING

* ggpolypath
  checking whether package ‘ggpolypath’ can be installed ... WARNING

* ggsolvencyii
  checking whether package ‘ggsolvencyii’ can be installed ... WARNING

* ggspatial
  checking whether package ‘ggspatial’ can be installed ... WARNING

* ggstance
  checking tests ...

* ggstatsplot
  checking tests ...

* ggtern
  checking whether package ‘ggtern’ can be installed ... WARNING

* heatmaply
  checking installed package size ... NOTE

* HistDAWass
  checking examples ... ERROR

* incR
  checking examples ... ERROR

* interflex
  checking examples ... ERROR

* jcolors
  checking examples ... ERROR

* lime
  checking tests ...

* mlr
  checking examples ... ERROR

* MTLR
  checking tests ...

* SCORPIUS
  checking tests ...

* shiny
  checking tests ...

* ssMousetrack
  checking installed package size ... NOTE
  checking for GNU extensions in Makefiles ... NOTE

* stats19
  checking tests ...

* trialr
  checking installed package size ... NOTE
  checking dependencies in R code ... NOTE
  checking for GNU extensions in Makefiles ... NOTE

* vdiffr
  checking tests ...

* xpose
  checking examples ... ERROR
  checking tests ...

### Failed to check

* aslib                  (NA)
* BACA                   (NA)
* BACCT                  (NA)
* bamdit                 (NA)
* BayesRS                (NA)
* BNSP                   (NA)
* BPEC                   (NA)
* bsam                   (NA)
* BTSPAS                 (NA)
* CaliCo                 (NA)
* CollapsABEL            (NA)
* colorednoise           (NA)
* crmPack                (NA)
* Crossover              (NA)
* Deducer                (NA)
* DeLorean               (NA)
* DiversityOccupancy     (NA)
* dynfrail               (NA)
* dynr                   (NA)
* evoper                 (NA)
* ewoc                   (NA)
* fingerPro              (NA)
* fsdaR                  (NA)
* G2Sd                   (NA)
* gastempt               (NA)
* imageData              (NA)
* imbalance              (NA)
* InSilicoVA             (NA)
* jarbes                 (NA)
* joineRML               (NA)
* JointAI                (NA)
* likeLTD                (NA)
* lilikoi                (NA)
* llama                  (NA)
* LLSR                   (NA)
* matchingMarkets        (NA)
* mbgraphic              (NA)
* mcmcabn                (NA)
* mleap                  (NA)
* morse                  (NA)
* mwaved                 (NA)
* NPflow                 (NA)
* OpenStreetMap          (NA)
* openVA                 (NA)
* petro.One              (NA)
* phase1PRMD             (NA)
* phase1RMD              (NA)
* pimeta                 (NA)
* poppr                  (NA)
* PortfolioEffectHFT     (NA)
* qdap                   (NA)
* RcmdrPlugin.FuzzyClust (NA)
* Rdrools                (NA)
* rmcfs                  (NA)
* robustHD               (NA)
* rpanel                 (NA)
* rpf                    (NA)
* rrepast                (NA)
* RSCAT                  (NA)
* rstanarm               (NA)
* rsvg                   (NA)
* RtutoR                 (NA)
* SeqFeatR               (NA)
* simmr                  (NA)
* sitmo                  (NA)
* spcosa                 (NA)
* TeachingDemos          (NA)
* vortexR                (NA)
* XLConnect              (NA)
* zooaRchGUI             (NA)",https://github.com/tidyverse/ggplot2/pull/3303,ggplot2
paleolimbot,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3302,2019-05-03T18:42:25Z,2019-12-01T21:55:02Z,2019-06-04T20:51:36Z,"This PR fixes #2810, which describes the unusual failure of `facet_wrap()` when used with layers containing different numbers of facet variables.

``` r
library(ggplot2)

df_all_vars <- expand.grid(letter = c(""a"", ""b""), number = c(1, 2), x = 1, y = 1)
df_some_vars <- data.frame(letter = c(""a"", ""b""), x = 2, y = 2)

ggplot() +
  geom_point(aes(x, y), data = df_all_vars) +
  geom_point(aes(x, y), data = df_some_vars) +
  facet_wrap(vars(letter, number))
#> Error in gList(structure(list(x = structure(0.5, class = ""unit"", valid.unit = 0L, unit = ""npc""), : only 'grobs' allowed in ""gList""
```

This took a very long time to track down. In the end, `FacetWrap$compute_layout()` was generating a layout with 12 rows, when there are only four panels computed by `FacetWrap$map_data()`. This resulted in some `NULL` grobs due to index recycling, which are not valid but don't generate errors until render time (r-lib/gtable#80). This layout is computed by `combine_vars()`, which has incorrect handling when there are different numbers of facet variables in each layer's data.

``` r
library(ggplot2)
df <- expand.grid(letter = c(""a"", ""b""), number = c(1, 2))
combine_vars(list(df, df[""letter""]), vars = vars(letter = letter, number = number))
#>    letter number
#> 1       a      1
#> 2       b      1
#> 3       a      2
#> 4       b      2
#> 5       a      1
#> 6       a      1
#> 7       a      2
#> 8       a      2
#> 9       b      1
#> 10      b      1
#> 11      b      2
#> 12      b      2
```

This PR fixes this behaviour (by wrapping the line that generates too many combinations with `unique()`) and adds tests to verify the existing behaviour of `combine_vars()`. There some odd behaviour when using the `drop = FALSE` argument, notably that NAs are dropped (unless they are factor values), and that missing combinations of multiple facet variables are included (in addition to missing factor levels). 

This function could probably be rewritten to be clearer, but I didn't do this because I didn't want to break the existing behaviour.",https://github.com/tidyverse/ggplot2/pull/3302,ggplot2
mcguinlu,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3288,2019-05-02T12:08:42Z,2019-12-01T16:53:51Z,2019-06-04T15:59:52Z,"Moving the CODE_OF_CONDUCT.md document to the main directory (https://github.com/tidyverse/ggplot2/pull/2973) has broken the link to it within the CONTRIBUTING.md document.

This PR fixes an identical issue to one of the commits in https://github.com/tidyverse/ggplot2/pull/2973 (https://github.com/tidyverse/ggplot2/pull/2973/commits/027a0ddc28f58685ecffa5464999d46b04308737) which fixed a broken link in the GOVERNANCE.md document.",https://github.com/tidyverse/ggplot2/pull/3288,ggplot2
yutannihilation,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3287,2019-05-02T03:25:12Z,2019-12-21T15:42:05Z,2019-06-19T13:45:50Z,"(Since this PR is just about testing, I think it's safe to merge. But, I'll wait for the release of v3.2.0)

Fix #3284",https://github.com/tidyverse/ggplot2/pull/3287,ggplot2
paleolimbot,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3286,2019-05-01T15:57:43Z,2019-12-01T17:54:15Z,2019-06-04T16:52:20Z,"This is a pull request to address #3090, and in part overwrites the work from #2950. This PR ensures that:

- An informative warning is issued when `mapping` and one or more of `yintercept`/`xintercept`/`slope`/`intercept` are provided. 
- An informative warning is issued when `data` and one or more of `yintercept`/`xintercept`/`slope`/`intercept` are provided. 

It is also worth noting that I changed the test for ""data is provided"" from `missing(data)` to `is.null(data)`. I am not sure if there was a good reason for it to have been `missing(data)` in the first place, as something like

```r
data <- NULL
geom_hline(yintercept = 3, data = data)
```

would possibly not issue a warning.

I may have gone overboard on the gramatically-correct informative warning message function (`warn_ovewritten_args()`), but was trying make all the messages informative without duplicating code.",https://github.com/tidyverse/ggplot2/pull/3286,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3280,2019-04-30T10:11:50Z,2019-10-27T17:36:04Z,2019-04-30T17:28:53Z,"Fixes #3279

The new random number generator introduced in R 3.6 caused failure in the visual tests that applied sampling to build up the dataset. This PR updates the reference images to match the output on 3.6",https://github.com/tidyverse/ggplot2/pull/3280,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3278,2019-04-29T08:31:01Z,2019-10-27T17:36:02Z,2019-04-30T17:33:05Z,"Fixes #3185 

This PR adds correct scaling of the secondary axis when used with `CoordPolar()` as proposed by @linzi-sg",https://github.com/tidyverse/ggplot2/pull/3278,ggplot2
baderstine,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/3277,2019-04-27T22:11:53Z,2019-12-16T14:00:29Z,2019-06-18T15:07:44Z,"This is an initial attempt to address #3214 
Only applies to `predict.lm` calls.

Example usage where 'prediction' interval is used:
```
ggplot(mtcars, aes(x=hp, y=disp)) + 
  geom_point() + 
  geom_smooth(formula = y ~ poly(x,2), method=""lm"", se=T, interval=""p"") 
```
![image](https://user-images.githubusercontent.com/2738299/56855498-94982100-690d-11e9-91e3-b02e74fa06c7.png)

A potentially unfortunate side effect is that the following warning is always printed:

> Warning message:
> In predict.lm(model, newdata = new_data_frame(list(x = xseq)), se.fit = se,  :
>   Assuming constant prediction variance even though model fit is weighted

From the predict.lm documentation: ""If the fit was weighted and newdata is given, the default is to assume constant prediction variance, with a warning.""  
This warning _always_ displays because both `weights` and `newdata` are always provided:

https://github.com/tidyverse/ggplot2/blob/cd6f7cac7b1e27341cf2d08791f9c2e8bca90437/R/stat-smooth.r#L137

 https://github.com/tidyverse/ggplot2/blob/cd6f7cac7b1e27341cf2d08791f9c2e8bca90437/R/stat-smooth-methods.r#L13 

I could remove the warning message by conditionally passing a weight argument, however, it is not entirely clear what the weight values would be except in the simple case when all the weights were set to 1 by stat-smooth.r:
https://github.com/tidyverse/ggplot2/blob/cd6f7cac7b1e27341cf2d08791f9c2e8bca90437/R/stat-smooth.r#L112
It think it makes sense to address this specific case but I haven't done so yet:

For non-predict.lm models, I added a warning message to let the user know that `interval=""prediction""` isn't supported and fall back on the default confidence interval:

> interval = 'prediction' not supported, using interval = 'confidence'


",https://github.com/tidyverse/ggplot2/pull/3277,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3276,2019-04-26T22:15:23Z,2019-10-26T15:36:10Z,2019-04-29T14:38:50Z,"This is a minimal fix for #2943. It guarantees that plot legends look fine when `legend.title = element_blank()`, but otherwise doesn't change the appearance of the legend. In the future, this should be refactored, because the same variables control the overall spacing between the legend title and the legend keys and the spacing between individual legend items. There should be two separate variables for that.

``` r
library(ggplot2)

df <- reshape2::melt(outer(1:4, 1:4), varnames = c(""X1"", ""X2""))
p1 <- ggplot(df, aes(X1, X2)) + geom_tile(aes(fill = value))

p1 + scale_fill_continuous(guide = guide_legend())
```

![](https://i.imgur.com/ANFu1EI.png)

``` r
p1 + scale_fill_continuous(guide = guide_legend()) +
  theme(legend.title=element_blank())
```

![](https://i.imgur.com/XGKAEmE.png)

``` r

p1
```

![](https://i.imgur.com/BTg25pQ.png)

``` r
p1 + theme(legend.title=element_blank())
```

![](https://i.imgur.com/FKuM31k.png)

<sup>Created on 2019-04-26 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3276,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3275,2019-04-26T19:53:12Z,2019-10-26T15:36:07Z,2019-04-29T15:20:17Z,"Fixes #3233

Two instances were observed and moved too `.onLoad()` after going through the full source code",https://github.com/tidyverse/ggplot2/pull/3275,ggplot2
malcolmbarrett,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3264,2019-04-24T05:15:48Z,2019-10-21T06:24:58Z,2019-04-24T05:56:28Z,"Currently, `ggplot_build()` and `layer_data()` return a `data.frame`. This seems a little inconsistent with the rest of the tidyverse. This is little PR (motivated by some recent work with `layer_data()` that filled up my console) changes `ggplot_build()` to convert the data for the layers to `tibble`s., which is also reflected in `layer_data()`. 

I also had to make a few tweaks to the tests due to some subtle differences with using a `tibble`. However, I think these are mostly technical and that the spirit of each test is unchanged.

",https://github.com/tidyverse/ggplot2/pull/3264,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3263,2019-04-24T01:17:12Z,2019-10-21T15:25:02Z,2019-04-24T14:50:15Z,"(This is a follow up of #2934)

* Reflect the changes to `man/theme.Rd`.
* Generate a new visual case",https://github.com/tidyverse/ggplot2/pull/3263,ggplot2
lwjohnst86,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3261,2019-04-23T17:16:43Z,2019-10-21T16:42:32Z,2019-04-24T14:51:42Z,,https://github.com/tidyverse/ggplot2/pull/3261,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3258,2019-04-23T11:11:21Z,2019-10-21T08:25:14Z,2019-04-24T07:57:25Z,"Fixes #3095

This adds the stat aesthetics to the documentation of contour thus properly showing the required `z` aesthetic... I don't really like the look of stacking calls to `rd_aesthetics()` but this is what we got right now...",https://github.com/tidyverse/ggplot2/pull/3258,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3257,2019-04-23T10:09:59Z,2019-10-20T13:25:00Z,2019-04-23T12:35:59Z,"Fixes #2983

Prior to this, `guide_axis()` would return a `zeroGrob` when no break position where provided. This meant that axis lines were not drawn in these situations. This fix changes the behaviour so that axis lines always will be drawn (if allowed by the theme)

@hadley I've asked you to review as the old behaviour may have been deliberate",https://github.com/tidyverse/ggplot2/pull/3257,ggplot2
thomasp85,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3256,2019-04-23T09:45:24Z,2019-10-21T18:25:07Z,2019-04-24T18:18:41Z,"Fixes #2932

This adds a warning when `geom_raster()` can't truthfully represent the provided data. To avoid recompilation the call to `resolution()` has been changed to direct calculation.

@batpigandme can you have a look at the wording of the warning?",https://github.com/tidyverse/ggplot2/pull/3256,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3255,2019-04-23T09:27:32Z,2019-10-21T08:25:11Z,2019-04-24T07:57:49Z,"Fixes #2914 

This PR makes adding an empty `guides()` a no-op (from the outside look)",https://github.com/tidyverse/ggplot2/pull/3255,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3254,2019-04-23T08:46:11Z,2019-10-21T18:25:04Z,2019-04-24T18:19:12Z,"Fixes #2885 

In certain instances quantiles will have `NA` coordinates and the computed aesthetics will not match the number of lines to draw, leading to grid errors",https://github.com/tidyverse/ggplot2/pull/3254,ggplot2
clauswilke,MEMBER,open,5,https://github.com/tidyverse/ggplot2/pull/3251,2019-04-19T15:41:22Z,2021-10-28T02:16:24Z,list(),"Here is a first stab at fixing #3250, which is the silent dropping of mapped aesthetics. The code works in most cases, but there are false positives when the stat purposefully drops an aesthetic. For example, `stat_boxplot()` takes `y` and turns it into `ymin`, `ymax`, etc., and the current code doesn't know that.

One way to fix this would be to add a mechanism so that stats can declare aesthetics that are expected to be dropped, something like `Stat$dropped_aesthetics`, and the warning message would ignore those.

``` r
library(ggplot2)

# fill aesthetic is dropped, emit warning
ggplot(mtcars, aes(mpg, fill = am)) + geom_density(alpha = 0.5)
#> Warning: 1 aesthetic(s) dropped during statistical transformation: fill.
#> Did you forget to define a group aesthetic or to convert a numeric variable into a factor?
```

![](https://i.imgur.com/fqfuvG9.png)

``` r

# fill aesthetic is not dropped because color sets up
# a grouping, no warning
ggplot(mtcars, aes(mpg, fill = am, color = factor(am))) + geom_density(alpha = 0.5)
```

![](https://i.imgur.com/bv4SMby.png)

``` r

# false positive, y aesthetic is dropped because it is converted
# to ymin, ymax, etc.
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot()
#> Warning: 1 aesthetic(s) dropped during statistical transformation: y.
#> Did you forget to define a group aesthetic or to convert a numeric variable into a factor?
```

![](https://i.imgur.com/2L8FT8g.png)

<sup>Created on 2019-04-19 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3251,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3246,2019-04-13T06:07:53Z,2019-10-23T20:24:58Z,2019-04-23T23:44:18Z,Add layer_sf() constructor. Closes #3232.,https://github.com/tidyverse/ggplot2/pull/3246,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3245,2019-04-13T06:00:17Z,2019-10-21T16:25:03Z,2019-04-24T15:35:28Z,"Fix #3138

`data` is processed by `fortify()` once and stored in layer. Then, if it's a function, it's applied to the plot data when the plot is built,

https://github.com/tidyverse/ggplot2/blob/475042e9ce209e1279d77d46288315f801150d4d/R/layer.r#L191-L192

So, all we have to do is to define a `fortify()` method that converts a formula to a function.

## Usages

``` r
devtools::load_all(""~/repo/R/ggplot2/"")
#> Loading ggplot2

ggplot(iris, aes(Sepal.Length, Sepal.Width)) + 
  geom_point(data = ~ head(., 10))
```

![](https://i.imgur.com/Dp72vky.png)

<sup>Created on 2019-04-13 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
",https://github.com/tidyverse/ggplot2/pull/3245,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3244,2019-04-13T03:41:39Z,2019-10-21T01:25:02Z,2019-04-24T00:39:35Z,"Fixes #3202

`Stat*$compute_layer()` and `Position*$compute_layer()` have various names of formals, which seems for no valid reason; just because the common formals were so at that time (c.f. https://github.com/tidyverse/ggplot2/issues/3202#issuecomment-478307143). 

It seems these methods are not passed parameters by name, but by positions only, so I think this is safe to fix:

``` r
$ git grep ""compute_layer(""
R/layer.r:    self$stat$compute_layer(data, params, layout)
R/layer.r:    self$position$compute_layer(data, params, layout)
R/position-.r:#'   - `compute_layer(self, data, params, panel)` is called once
R/stat-.r:#'     `compute_layer(self, data, scales, ...)`,
R/stat-.r:#'     `compute_layer()` is called once per layer, `compute_panel_()`
R/stat-bindot.r:    ggproto_parent(Stat, self)$compute_layer(data, params, panels)
man/ggplot2-ggproto.Rd:\code{compute_layer(self, data, scales, ...)},
man/ggplot2-ggproto.Rd:\code{compute_layer()} is called once per layer, \code{compute_panel_()}
man/ggplot2-ggproto.Rd:\item \code{compute_layer(self, data, params, panel)} is called once
```

This PR fixes the inconsistency. I expect this would break nothing, but changing the argument names is (technically) a breaking change. So, I added a NEWS item for this.",https://github.com/tidyverse/ggplot2/pull/3244,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3243,2019-04-13T02:39:31Z,2019-10-21T01:25:05Z,2019-04-24T00:36:44Z,"Fixes #3219

* Add missing topics (c.f. https://travis-ci.org/tidyverse/ggplot2/jobs/512667960#L2175)
    * `expand_scale`
    * `stat`
    * `stat_sf_coordinates`
    * `vars`
* Mark `summarise_plot` as internal",https://github.com/tidyverse/ggplot2/pull/3243,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3242,2019-04-13T02:18:30Z,2019-10-20T23:25:00Z,2019-04-23T22:47:24Z,"Fixes #3195 

Since it's common practice to import whole rlang package, ggplot2 should follow it. This PR adds `import(rlang)` to `NAMESPACE` and removes all `rlang::`.",https://github.com/tidyverse/ggplot2/pull/3242,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3241,2019-04-13T00:00:32Z,2019-10-10T09:09:04Z,2019-04-13T08:19:08Z,to reflect the change of #3223.,https://github.com/tidyverse/ggplot2/pull/3241,ggplot2
smouksassi,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/3240,2019-04-12T10:06:44Z,2019-12-15T19:35:57Z,2019-06-18T19:00:16Z,"I tried to follow the procedures to the best of my knowledge this is the first time I do a PR.
I modified the examples to show the usage of se and n. fullrange = TRUE will issue a message telling the user that fullrange = FALSE is forced ( better than erroring out in my opinion)",https://github.com/tidyverse/ggplot2/pull/3240,ggplot2
karawoo,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3239,2019-04-11T22:25:17Z,2019-10-09T17:09:09Z,2019-04-12T16:28:44Z,I think what was just released in 3.1.1 should be separate from whatever gets merged between now and the next release.,https://github.com/tidyverse/ggplot2/pull/3239,ggplot2
cderv,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3238,2019-04-11T20:36:21Z,2019-10-09T08:09:11Z,2019-04-12T07:18:02Z,"This fixes #3055 

I added also a small example but not test as there were none for `cut_*` functions. 

Tell me if you need some.",https://github.com/tidyverse/ggplot2/pull/3238,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3237,2019-04-11T18:25:27Z,2019-10-09T08:09:17Z,2019-04-12T07:14:26Z,"reverse dependency check catched an instance of an extension storing multiple font settings in a title element, which broke the `font_descent()` assumption about only being provided a single setting to calculate descent on. This PR vectorises the function and mitigate the revdep break",https://github.com/tidyverse/ggplot2/pull/3237,ggplot2
clauswilke,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/3236,2019-04-11T18:21:18Z,2019-10-23T22:25:00Z,2019-04-26T22:10:45Z,"This PR implements customizable legend key glyphs, as discussed in #3145.

``` r
library(ggplot2)

base <- ggplot(data.frame(x = 1:3, y = 3:1), aes(x, y))

cowplot::plot_grid(
  base + geom_line(aes(color = ""default"")),
  base + geom_line(aes(color = ""modified""), key_glyph = ""timeseries""),
  base + geom_line(aes(color = ""modified""), key_glyph = ""vpath""),
  base + geom_line(aes(color = ""modified""), key_glyph = ""abline"")
)
```

![](https://i.imgur.com/ZrQmZ6F.png)

<sup>Created on 2019-04-11 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>

@hadley @thomasp85 @yutannihilation I think this is the simplest and minimally invasive implementation. However, it does some shuffling around with the `params` parameter in `layer()`, so I'd like to hear your perspective. The alternative would require modifications in every geom, and would not automatically work in extension packages until they modify their geoms also.",https://github.com/tidyverse/ggplot2/pull/3236,ggplot2
thomasp85,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3235,2019-04-11T18:20:36Z,2019-10-27T07:35:58Z,2019-04-30T07:35:29Z,reverse dependency check picked up an issue with the new sorting of `geom_ribbon()` in `setup_data()`. When `ymin` is set outside `aes()` it would fail as it wouldn't have access to the variable at setup time. This PR mitigates that.,https://github.com/tidyverse/ggplot2/pull/3235,ggplot2
thomasp85,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3234,2019-04-11T18:16:08Z,2019-10-21T08:25:07Z,2019-04-24T07:58:32Z,Latest CRAN release showed a couple of reverse dependency problems. One is that we have exported our own implementation of `empty()` which creates namespace conflicts if people import both plyr and ggplot2. This PR undoes that,https://github.com/tidyverse/ggplot2/pull/3234,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3231,2019-04-11T10:00:00Z,2019-10-09T08:09:13Z,2019-04-12T07:14:49Z,"Fix #3189

This PR add a menu item that links to the extension site... @Hadley is this what you had in mind?",https://github.com/tidyverse/ggplot2/pull/3231,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3230,2019-04-11T07:57:47Z,2019-10-08T09:09:11Z,2019-04-11T09:01:10Z,This puts devel ahead of CRAN again,https://github.com/tidyverse/ggplot2/pull/3230,ggplot2
batpigandme,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3229,2019-04-10T17:48:39Z,2019-10-07T18:09:07Z,2019-04-10T18:02:18Z,,https://github.com/tidyverse/ggplot2/pull/3229,ggplot2
Eli-Berkow,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3226,2019-04-08T08:09:23Z,2019-10-08T10:09:11Z,2019-04-11T08:02:27Z,Spelling,https://github.com/tidyverse/ggplot2/pull/3226,ggplot2
flying-sheep,CONTRIBUTOR,closed,9,https://github.com/tidyverse/ggplot2/pull/3223,2019-04-02T11:25:17Z,2019-10-12T13:09:04Z,2019-04-11T08:01:44Z,"The function signature is `compute_panel(self, data, params, scales) -> data`",https://github.com/tidyverse/ggplot2/pull/3223,ggplot2
LuffyLuffy,NONE,closed,5,https://github.com/tidyverse/ggplot2/pull/3221,2019-04-02T02:16:42Z,2019-09-30T03:09:03Z,2019-04-02T03:57:24Z,"Dear ggplot2 authors,
Thanks for your awesome job at data visualization!
There is only one parameters to set for panel background color, and I read the theme_grey() function, the element_rect is set only with one color setting. No idea how to set a strip color.
Although it is possible to add a geom_rect layer by hand, however, the categorical axis is hard to present a better outlook. 
Hopefully, there is an theme choice for color band background.

",https://github.com/tidyverse/ggplot2/pull/3221,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3218,2019-03-29T21:01:00Z,2019-10-08T18:09:07Z,2019-04-11T18:08:10Z,"**THIS IS NOT TO BE MERGED**

This PR represents a hot fix on top of v3.1.0 that applies the commits related to supporting the new unit spec in grid",https://github.com/tidyverse/ggplot2/pull/3218,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3211,2019-03-27T23:12:00Z,2019-09-24T01:09:04Z,2019-03-27T23:52:23Z,Suggested by @clauswilke here: https://github.com/tidyverse/ggplot2/issues/3207#issuecomment-477293511,https://github.com/tidyverse/ggplot2/pull/3211,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3209,2019-03-27T18:47:23Z,2019-09-24T20:09:03Z,2019-03-28T19:18:38Z,This PR polishes the NEWS file in preparation for the 3.2 release (#3207),https://github.com/tidyverse/ggplot2/pull/3209,ggplot2
thomasp85,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3208,2019-03-27T18:38:22Z,2019-09-23T23:09:03Z,2019-03-27T19:14:11Z,Fix #3158 This will undo the export of `LayerSf`,https://github.com/tidyverse/ggplot2/pull/3208,ggplot2
topepo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3206,2019-03-27T09:19:59Z,2019-09-24T10:09:03Z,2019-03-28T09:24:30Z,"## revdepcheck results

We checked 2539 reverse dependencies (2130 from CRAN + 409 from BioConductor), comparing R CMD check results across CRAN and dev versions of this package.

 * We saw 0 new problems
 * We failed to check 11 packages

Issues with CRAN packages are summarised below.

### Failed to check

* Bclim                  (NA)
* clusternomics          (NA)
* HTSSIP                 (NA)
* lime                   (NA)
* onemap                 (NA)
* phylosim               (NA)
* pmc                    (NA)
* RcmdrPlugin.FuzzyClust (NA)
* sdmpredictors          (NA)
* simulator              (NA)
* TeachingDemos          (NA)",https://github.com/tidyverse/ggplot2/pull/3206,ggplot2
mine-cetinkaya-rundel,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3201,2019-03-23T14:46:35Z,2019-09-21T00:09:03Z,2019-03-24T23:34:01Z,"There was an unnecessary apostrophe in the text, I removed it",https://github.com/tidyverse/ggplot2/pull/3201,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3194,2019-03-19T11:14:20Z,2020-02-28T07:30:04Z,2019-03-22T12:43:35Z,"Fix #3142

Currently, `geom_bar()` does ignore `width` mapping, but `geom_col()` does not. Here's my thinking:

* We want to enforce a constant bar width within a panel, so `width` cannot be an aesthetic.
* Yet, the widths can vary among panels, so we need to pass `width`s per bar via `data`, not a single value via `param`.
* `data$width` should be used only when it's a calculated value by Stat. But, as `geom_col()` is not the case, it should ignore `data$width`.

Note that, this doesn't prevent variable widths when `geom_bar()` uses such Stat as

* `StatIdentity`
* some Stat that actually returns variable widths

but I think `geom_col()` should ignore `width` for consistency at least.

### Current HEAD

``` r
library(ggplot2)
library(patchwork)

d <- data.frame(x = c(1,2,3,3,3))

p1 <- ggplot(d) + geom_bar(aes(x, width = x / 2), alpha = 0.7) + ggtitle(""bar"")
#> Warning: Ignoring unknown aesthetics: width
p2 <- ggplot(d) + geom_col(aes(x, x, width = x / 2), alpha = 0.7) + ggtitle(""col"")
#> Warning: Ignoring unknown aesthetics: width

p1 / p2
#> Warning: position_stack requires non-overlapping x intervals
```

![](https://i.imgur.com/Z03hehR.png)

<sup>Created on 2019-03-19 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1.9000)</sup>

### This PR

``` r
library(ggplot2)
library(patchwork)

d <- data.frame(x = c(1,2,3,3,3))

p1 <- ggplot(d) + geom_bar(aes(x, width = x / 2), alpha = 0.7) + ggtitle(""bar"")
#> Warning: Ignoring unknown aesthetics: width
p2 <- ggplot(d) + geom_col(aes(x, x, width = x / 2), alpha = 0.7) + ggtitle(""col"")
#> Warning: Ignoring unknown aesthetics: width

p1 / p2
```

![](https://i.imgur.com/dOtwrkN.png)

<sup>Created on 2019-03-19 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1.9000)</sup>",https://github.com/tidyverse/ggplot2/pull/3194,ggplot2
yutannihilation,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3192,2019-03-18T15:02:40Z,2019-09-16T05:09:03Z,2019-03-20T04:53:24Z,"Fix #3184 

In ggplot2, `Inf` might mean continuous value or discrete value. But, currently, the plot fails in the following case

* the first layer's data is all `Inf`
* the second layer's data is discrete

It seems better to skip picking a scale for the layer that has only infinite values. Note that, if all layers are such ones, the plot fails no matter we ignore them or not, because we cannot get a range for plots. So, I think this change is fine.",https://github.com/tidyverse/ggplot2/pull/3192,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3179,2019-03-07T02:12:25Z,2019-09-03T13:08:59Z,2019-03-07T12:11:27Z,"(See https://github.com/tidyverse/ggplot2/pull/3177#issuecomment-470349699)

R-devel introduced a check for future file timestamps. The check tries to verify the system click is correct by accessing world clock API, but it seems not stable enough to rely on. This PR avoid the check by setting `_R_CHECK_SYSTEM_CLOCK_` to false.

Not sure we'll need this also on the release version of R, but for now let's set only on r-devel.",https://github.com/tidyverse/ggplot2/pull/3179,ggplot2
thomasp85,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3177,2019-03-06T13:24:04Z,2019-09-03T13:09:02Z,2019-03-07T11:55:21Z,"I've uncovered another ""bad"" assumption in ggplot2's handling of units. The margin constructor will drop any unit subclasses when subclassing the unit it creates. This PR fixes it and makes it work with the experimental unit implementation in https://github.com/thomasp85/grid/pull/1 in a back-compatible way",https://github.com/tidyverse/ggplot2/pull/3177,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3173,2019-03-05T00:02:53Z,2019-09-01T06:08:59Z,2019-03-05T05:49:59Z,Fixes #2696 ,https://github.com/tidyverse/ggplot2/pull/3173,ggplot2
ppanko,CONTRIBUTOR,closed,8,https://github.com/tidyverse/ggplot2/pull/3172,2019-03-04T20:07:05Z,2019-09-18T13:09:03Z,2019-03-22T12:44:41Z,Hello! This pull request is attempting to address a change to the documentation of `geom_histogram` as laid out in #2828.  Not entirely certain about my use of nomenclature here; please advise if there are issues. ,https://github.com/tidyverse/ggplot2/pull/3172,ggplot2
paleolimbot,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3170,2019-03-01T17:13:53Z,2019-12-04T23:14:53Z,2019-06-04T20:54:38Z,"This is a PR addressing #3116, and allows access to the trained scales at draw time through a new `layer_params` argument to `Geom$draw_layer()`. This enables geometries that may require extensive loading of data to be drawn lazily (among other things). The overall structure of using a new argument to `Geom$draw_layer()` was discussed at length in the issue, but the details of the implementation and testing could definitely use the keen eye of those more familiar with the ggplot2 internals. Cheers!",https://github.com/tidyverse/ggplot2/pull/3170,ggplot2
thomasp85,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3168,2019-02-28T13:51:54Z,2019-08-31T14:08:58Z,2019-03-04T13:48:06Z,"This PR extends the recognised positional aesthetics to include `x0` and `y0`. This is needed for a range of geoms/stats in ggforce to make sure they play nice with scale transformations. `x0` and `y0` are traditionally used to denote center values and a natural fit for many parametrised geometries...

Such a change has happened before in c9f276b60c so it should be fairly safe",https://github.com/tidyverse/ggplot2/pull/3168,ggplot2
thomasp85,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3164,2019-02-25T08:44:53Z,2019-09-01T10:08:58Z,2019-03-05T09:26:45Z,"This PR adapts `geom_sf` and `coord_sf` to make use of the improvements in performance introduced in sf v0.7-3. The changes are as follows:

- Use `st_normalize` during rescaling to greatly speed up `coord_sf
- Construct a single grob from the geometry and let `sf` decide on how/if to split it up to multiple grobs

This PR introduces a new version dependency on sf as it does not make much sense to support both implementations simultaneously",https://github.com/tidyverse/ggplot2/pull/3164,ggplot2
yutannihilation,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3163,2019-02-24T13:23:57Z,2019-08-24T05:08:58Z,2019-02-25T04:51:18Z,"It seems the failure on r-devel is related to `R_CHECK_LENGTH_1_LOGIC2`, an option to raise error when multiple logicals are passed to `||` or `&&`.

```
 --- failure: length > 1 in coercion to logical ---
```

I'm not sure the next version of R will be released with this strict behaviour, but it's a nice chance to fix inappropriate if conditions.",https://github.com/tidyverse/ggplot2/pull/3163,ggplot2
yutannihilation,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/3162,2019-02-23T06:57:18Z,2019-10-08T09:09:09Z,2019-04-11T08:00:04Z,"Fix #3070, fix #2986.

### Summary

This PR compacts facet specs automatically (#2986) and allow empty specs (#3070).

I admit this makes the implementation of `FacetGrid` and `FacetWrap` a bit complicated in that it needs some special treatments for the case of 0-variable. But, on the other hand, accepting empty specs makes the process of building facet specs simpler and clearer. So, I believe this change is worth making.

### Major changes (visible to users)

* Compact facet specs automatically.
    * If the input is `NULL`, treat it as an empty quosures object (`quos()`).
    * If the input is a quosures object, remove `NULL`s in it. 
* Allow empty specs. When the spec is empty,
    * `facet_wrap()` generates a single plot with a strip. A string `(all)` is used for the strip label.
    * `facet_grid()` generates a single plot without a strip.   

### Internal changes

To make the major changes, I want to define the internal facet specs more strictly as following:

* `FacetWrap` requires **a quosures object** (e.g. `quos(foo, bar)`)
* `FacetGrid` requires **a list of two quosures objects, `rows` and `cols`** (e.g. `list(rows = quos(foo), cols = quos(bar))`)

Accordingly, the corresponding functions below return these specs. 

* `grid_as_facet_list()`
* `wrap_as_facet_list()` (new)

Under these functions, `as_facet_list()` is responsible for translating a spec (e.g. a quosures object, a formula, and a character) to a list of quosures. It's also responsible for the basic validation (e.g. raise an error when the spec is an `uneval` object), so the upper functions should always use this for the input even it's just a simple quosures object.

Note that the results of `as_facet_list()` are not compacted; compacting these specs is basically the role of the upper functions, `grid_as_facet_list()` and `wrap_as_facet_list()`. For convenience, a new internal function `compact_facets()` can be used as a short cut of flattening and compacting the spec.

### Minor changes

* `facet_wrap()` and `facet_grid()` now properly rejects `aes()`

### Example usages

``` r
library(ggplot2)

d <- data.frame(x = 1:10, g = rep(c(""a"", ""b""), each = 5))
p <- ggplot(d, aes(x, x)) + geom_point()

# NULLs are compacted automatically
p + facet_wrap(vars(NULL, g, NULL))
```

![](https://i.imgur.com/yxu83vQ.png)

``` r

# accepts empty specs
p + facet_wrap(NULL)
```

![](https://i.imgur.com/Gp167p6.png)

``` r

# accepts empty specs
p + facet_grid(NULL, NULL)
```

![](https://i.imgur.com/cEHdMTt.png)

<sup>Created on 2019-03-03 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
",https://github.com/tidyverse/ggplot2/pull/3162,ggplot2
yutannihilation,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3161,2019-02-23T03:08:54Z,2019-09-15T08:09:03Z,2019-03-19T03:16:48Z,"Though `quos()` are imported in `utilities-tidy-eval.R`, I think it's good practice to stick with the fully qualified forms in package code (I'm tolerant for test code). There are a few places that lacks `rlang::`, so this PR added them.

In addition, I want to remove this line to make it clear that we don't encourange the unqualified forms of `quo()` and `quos()`. I guess this was added by mistake.

https://github.com/tidyverse/ggplot2/blob/033fb521a084447c15178c591ab96a158f3b1e1e/R/ggplot2.r#L6",https://github.com/tidyverse/ggplot2/pull/3161,ggplot2
dkahle,CONTRIBUTOR,closed,12,https://github.com/tidyverse/ggplot2/pull/3160,2019-02-22T20:14:48Z,2019-09-04T02:08:59Z,2019-03-08T01:16:48Z,Closes #3159.,https://github.com/tidyverse/ggplot2/pull/3160,ggplot2
hadley,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3154,2019-02-20T00:37:02Z,2019-10-21T08:25:04Z,2019-04-24T08:00:12Z,A few small improvements to the aesthetic specifications vignette,https://github.com/tidyverse/ggplot2/pull/3154,ggplot2
llendway,NONE,closed,5,https://github.com/tidyverse/ggplot2/pull/3151,2019-02-19T01:56:47Z,2020-04-15T15:55:48Z,2019-10-18T14:34:45Z,Changed documentation to reflect computing data ellipses rather than confidence ellipses. Fixes documentation portion of issue #2776,https://github.com/tidyverse/ggplot2/pull/3151,ggplot2
Henrik-P,NONE,closed,8,https://github.com/tidyverse/ggplot2/pull/3148,2019-02-18T12:35:22Z,2019-08-19T13:08:58Z,2019-02-19T15:11:25Z,,https://github.com/tidyverse/ggplot2/pull/3148,ggplot2
jrnold,CONTRIBUTOR,closed,9,https://github.com/tidyverse/ggplot2/pull/3146,2019-02-16T04:32:13Z,2019-09-03T14:08:58Z,2019-03-07T13:50:44Z,"The current `color` variable in the `diamonds` dataset is an ordered factor, but the levels are in decreasing order of color quality rather than increasing order.

``` r
library(""ggplot2"")
class(ggplot2::diamonds)
#> [1] ""tbl_df""     ""tbl""        ""data.frame""
levels(ggplot2::diamonds$color)
#> [1] ""D"" ""E"" ""F"" ""G"" ""H"" ""I"" ""J""
```

<sup>Created on 2019-02-15 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>

The factor order of `diamonds$color`is currently `D < ... < J`. However, since ""D"" is the best grade and ""J"" the words, the levels should be `J < ... < D`. See https://en.wikipedia.org/wiki/Diamond_color#Grading_fancy_color_diamonds.

This pull request puts the factor levels in the correct order. 
",https://github.com/tidyverse/ggplot2/pull/3146,ggplot2
thomasp85,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/3141,2019-02-13T19:36:19Z,2019-08-17T10:09:13Z,2019-02-18T09:27:28Z,"The recent addition of polygon holes did not consider the munching done when using a polar coordinate system... This PR factors `subgroup` in when dividing parts to be munched, thus avoiding to connect holes to the main polygon",https://github.com/tidyverse/ggplot2/pull/3141,ggplot2
StefanBRas,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3140,2019-02-13T18:43:17Z,2019-08-13T11:08:57Z,2019-02-14T10:09:54Z,"The second edition of the The R Graphics Cookbook has been released, but the READMEs links to the first edition. This pull request should fix this and remove the text stating that a new version is due in 2018.

I have no experience with the amzn.to URL shortener so the link is the full URL obtained by following the current link and then the link to the updated version. ",https://github.com/tidyverse/ggplot2/pull/3140,ggplot2
clauswilke,MEMBER,closed,10,https://github.com/tidyverse/ggplot2/pull/3134,2019-02-12T23:22:28Z,2019-08-14T03:08:57Z,2019-02-15T02:14:11Z,"This is work in progress, as discussed in #3126. There are a few cases where we attach external packages. Ideally, we would never attach external packages.",https://github.com/tidyverse/ggplot2/pull/3134,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3131,2019-02-11T18:32:50Z,2019-08-11T21:08:59Z,2019-02-12T21:05:45Z,"This PR closes #3127 by adding a proper check for the presence or absence of a guide in the identity scales.

``` r
devtools::load_all(""~/github/ggplot2"")
#> Loading ggplot2

d <- base::data.frame(
  week = seq(1, 52, 1), 
  revenue = round(runif(52, 0, 100))
)

# discrete identity scale
ggplot(data = d, aes(x = week, y = revenue, fill = 'lightskyblue')) + 
  geom_col() + 
  scale_fill_identity(guide = guide_legend())
```

![](https://i.imgur.com/KfRsCCF.png)

``` r

# continuous identity scale
ggplot(data = d, aes(x = week, y = 1, size = revenue/20)) + 
  geom_point() + 
  scale_size_identity(guide = guide_legend())
```

![](https://i.imgur.com/O0L9Qd6.png)

<sup>Created on 2019-02-11 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3131,ggplot2
thomasp85,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3128,2019-02-11T12:00:48Z,2019-08-11T19:08:59Z,2019-02-12T18:39:58Z,"This PR adds the ability to draw polygons with holes to `geom_polygon`. It does so by adding a new, optional, aesthetic called `subgroup`. If provided, and R >= 3.6 the geom will use the new improved pathGrob to draw the polygons.

Questions to mull over:
- Do you agree on the `subgroup` name. I've elected for a generic name so it can be reused elsewhere if secondary grouping is needed, rather than using something that signifies the ""hole""-ness of it
- Currently the geom will draw the path using the ""evenodd"" rule as this is how most people will probably think it works (winding order is quite specialised knowledge). It could be made a parameter of the geom, but isn't currently as I think it would just muddy the waters

Example:
```r
ids <- factor(c(""1.1"", ""2.1"", ""1.2"", ""2.2"", ""1.3"", ""2.3""))

values <- data.frame(
  id = ids,
  value = c(3, 3.1, 3.1, 3.2, 3.15, 3.5)
)

positions <- data.frame(
  id = rep(ids, each = 4),
  x = c(2, 1, 1.1, 2.2, 1, 0, 0.3, 1.1, 2.2, 1.1, 1.2, 2.5, 1.1, 0.3,
        0.5, 1.2, 2.5, 1.2, 1.3, 2.7, 1.2, 0.5, 0.6, 1.3),
  y = c(-0.5, 0, 1, 0.5, 0, 0.5, 1.5, 1, 0.5, 1, 2.1, 1.7, 1, 1.5,
        2.2, 2.1, 1.7, 2.1, 3.2, 2.8, 2.1, 2.2, 3.3, 3.2)
)
datapoly <- merge(values, positions, by = c(""id""))

holes <- do.call(rbind, lapply(split(datapoly, datapoly$id), function(df) {
  df$x <- df$x + 0.5 * (mean(df$x) - df$x)
  df$y <- df$y + 0.5 * (mean(df$y) - df$y)
  df
}))
datapoly$subid <- 1L
holes$subid <- 2L
datapoly <- rbind(datapoly, holes)

p <- ggplot(datapoly, aes(x = x, y = y)) +
  geom_polygon(aes(fill = value, group = id, subgroup = subid))
p
```
![image](https://user-images.githubusercontent.com/1775316/52561909-07a8f580-2dfd-11e9-82e6-7e206eda15e1.png)
",https://github.com/tidyverse/ggplot2/pull/3128,ggplot2
mitchelloharawild,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/3124,2019-02-11T03:15:13Z,2019-10-26T15:36:12Z,2019-04-29T14:38:20Z,"As requested from @earowang 's rstudioconf19 talk: https://slides.earo.me/rstudioconf19/#26

Background shade is not included because it is representative of the associated interval.

``` r
library(ggplot2)
ggplot(economics_long, aes(date, value01, colour = variable)) +
  geom_line()
```

![](https://i.imgur.com/pfTt3a9.png)

``` r

devtools::load_all(""~/github/ggplot2"")
#> Loading ggplot2
ggplot(economics_long, aes(date, value01, colour = variable)) +
  geom_line()
```

![](https://i.imgur.com/wfssrrP.png)

<sup>Created on 2019-02-11 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3124,ggplot2
mitchelloharawild,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3123,2019-02-11T02:54:37Z,2019-08-10T04:08:54Z,2019-02-11T03:21:20Z,,https://github.com/tidyverse/ggplot2/pull/3123,ggplot2
yutannihilation,MEMBER,open,21,https://github.com/tidyverse/ggplot2/pull/3121,2019-02-10T07:47:22Z,2021-10-28T02:16:24Z,list(),"Fix  #3120

This PR does fix these two annotations to have `xmin`, `xmax`, `ymin` and `ymax` as `data` so that scale transformations takes effect (this is the same strategy as `annotate()`).

* `annotation_raster()`
* `annotation_custom()`

On the other hand, this PR doesn't modify `annotation_map()` and `annotation_logstick()` because:

* `annotation_map()`: we don't know what to do with the reversed scales for map yet (c.f. scale transformations won't work for `coord_sf()` or `coord_map()`). Besides, annotation itself should not be transformed, but I don't know how to implement this for maps.
* `annotation_logstick()`: the document says ""These tick marks probably make sense only for base 10""

``` r
library(ggplot2)
library(patchwork)

data <- data.frame(x = c(20, 85, 42, 78, 33, 74),
                   y = c(43, 40, 52, 56, 44, 71))

p <- ggplot(data) +
  geom_point(aes(x = x, y = y)) +
  annotate(geom = ""rect"", xmin = 8, xmax = 12, ymin = 38, ymax = 42) +
  annotation_custom(
    grob = grid::circleGrob(
      r  = grid::unit(1, ""npc""),
      gp = grid::gpar(col  = ""black"",
                      fill = ""white"",
                      lwd = 2)),
    xmin = 48, xmax = 52, ymin = 48, ymax = 52
  )

p * (p + scale_x_reverse())
```

![](https://i.imgur.com/GaGPj7v.png)

``` r


rainbow <- matrix(hcl(seq(0, 360, length.out = 50 * 50), 80, 70), nrow = 50)
p <- ggplot(mtcars, aes(mpg, wt)) +
  geom_point() +
  annotation_raster(rainbow, 15, 20, 3, 4)

p * (p + scale_x_reverse())
```

![](https://i.imgur.com/q7haBws.png)

<sup>Created on 2019-02-14 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
",https://github.com/tidyverse/ggplot2/pull/3121,ggplot2
ismayc,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3114,2019-02-02T23:37:58Z,2019-08-02T01:08:54Z,2019-02-03T00:16:27Z,,https://github.com/tidyverse/ggplot2/pull/3114,ggplot2
clauswilke,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/3113,2019-02-01T17:00:25Z,2019-08-11T21:08:56Z,2019-02-12T18:34:12Z,"This PR makes `coord_sf()` behave more similarly to `coord_cartesian()` when drawing the panel grid, by applying the same line-width correction and by respecting `element_blank()`. Closes #2991 and #2525.

Reprex 1:

``` r
library(ggplot2)

df <- data.frame(x = c(1, 2, 3), y = c(1, 2, 3))
p <- ggplot(df, aes(x, y)) + geom_point()

# default grid
cowplot::plot_grid(
  p + coord_fixed() + theme(panel.grid.minor = element_blank()) +
    ggtitle(""coord_fixed()""),
  p + coord_sf() +
    ggtitle(""coord_sf()"")
)
```

![](https://i.imgur.com/hy8fdbO.png)

``` r

# different theme
cowplot::plot_grid(
  p + coord_fixed() + theme_bw() + theme(panel.grid.minor = element_blank()) +
    ggtitle(""coord_fixed()""),
  p + coord_sf() + theme_bw() + 
    ggtitle(""coord_sf()"")
)
```

![](https://i.imgur.com/OexJgXc.png)

``` r

# setting grid lines to element_blank()
cowplot::plot_grid(
  p + coord_fixed() + theme(panel.grid = element_blank()) +
    ggtitle(""coord_fixed()""),
  p + coord_sf() + theme(panel.grid = element_blank()) +
    ggtitle(""coord_sf()"")
)
```

![](https://i.imgur.com/b7kluDa.png)

<sup>Created on 2019-02-01 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>


Reprex 2:

``` r
library(sf) 
#> Linking to GEOS 3.6.1, GDAL 2.1.3, PROJ 4.9.3
library(ggplot2)

nc <- st_read(system.file(""gpkg/nc.gpkg"", package = ""sf""), quiet = TRUE) 

ggplot(nc) + 
  geom_sf(data = nc, aes(fill = AREA)) + 
  theme_void()
```

![](https://i.imgur.com/9Nz7FCR.png)

<sup>Created on 2019-02-01 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3113,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3111,2019-01-30T06:06:46Z,2019-07-31T17:08:55Z,2019-02-01T16:21:49Z,"This PR breaks `sf.R` into four separate files, `coord-sf.R`, `geom-sf.R`, `layer-sf.R`, and `stat-sf.R`, so individual pieces of sf code become easier to find. No other changes to the code were done.",https://github.com/tidyverse/ggplot2/pull/3111,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3110,2019-01-30T04:50:40Z,2019-08-06T00:08:54Z,2019-02-07T00:02:49Z,(This is a followup of #3108),https://github.com/tidyverse/ggplot2/pull/3110,ggplot2
daniel-wells,CONTRIBUTOR,closed,12,https://github.com/tidyverse/ggplot2/pull/3109,2019-01-29T13:49:48Z,2019-09-01T01:08:58Z,2019-03-04T22:31:01Z,"``` r
library(ggplot2)

# current behaviour with default rug length
ggplot(airquality,
       aes(x = Ozone,
           y = Solar.R)) + 
  geom_point() +
  geom_rug()
#> Warning: Removed 42 rows containing missing values (geom_point).
```

![](https://i.imgur.com/lK0aWhx.png)

``` r

# with smaller rug lengths
ggplot(airquality,
       aes(x = Ozone,
           y = Solar.R)) + 
  geom_point() +
  geom_rug(length=0.015)
#> Warning: Removed 42 rows containing missing values (geom_point).
```

![](https://i.imgur.com/zyoJs1Y.png)

``` r

# with larger rug lengths
ggplot(airquality,
       aes(x = Ozone,
           y = Solar.R)) + 
  geom_point() +
  geom_rug(length=0.05) +
  scale_x_continuous(expand=c(0.1,0.1)) +
  scale_y_continuous(expand=c(0.1,0.1))
#> Warning: Removed 42 rows containing missing values (geom_point).
```

![](https://i.imgur.com/lNR6CXe.png)

<sup>Created on 2019-01-29 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3109,ggplot2
dvcv,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3108,2019-01-29T07:38:48Z,2019-07-29T05:08:54Z,2019-01-29T14:42:59Z,,https://github.com/tidyverse/ggplot2/pull/3108,ggplot2
JohnMount,NONE,closed,9,https://github.com/tidyverse/ggplot2/pull/3106,2019-01-26T22:13:31Z,2019-07-28T04:08:55Z,2019-01-28T15:44:13Z,"Add ggplot_add.function() to plot-construction.r. This allows examples such as ""ggplot(mtcars, aes(x = disp, y = mpg)) + geom_point"".  This follows the pattern in magrittr of allowing both ""5 %>% sin"" and ""5 %>% sin()"".  This increased regularity may be helpful for new users.  New example worked and tests passed after change.",https://github.com/tidyverse/ggplot2/pull/3106,ggplot2
thomasp85,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/3102,2019-01-25T09:30:07Z,2020-05-20T22:05:49Z,2019-11-14T11:39:29Z,"This is following thoughts and discussion in #3096 and implement an `n_breaks` argument in `continuous_scale()` to allow guiding the number of major breaks that gets created. Before you'd had to make the breaks manually if you wanted to have a different number of breaks (or construct your own trans object by hand)...

The implementation can feel a bit hacky as it modifies the parent environment of the breaks method of the trans object. I make sure to reset the parent environment on exit so there should be no side effects, but a more elegant approach is if scales allowed dynamic setting of `n` in `trans$breaks()`

Anyway, consider this PR as discussion ground for the feature and we can figure out the best implementation later if we want it...

example use:

``` r
library(ggplot2)

ggplot(mtcars) + 
  geom_point(aes(mpg, disp))
```

![](https://i.imgur.com/RtGBRHz.png)

``` r

ggplot(mtcars) + 
  geom_point(aes(mpg, disp)) + 
  scale_x_continuous(n_breaks = 10)
```

![](https://i.imgur.com/5P95Wbc.png)

<sup>Created on 2019-01-25 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3102,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3101,2019-01-25T08:39:43Z,2019-07-24T20:32:33Z,2019-01-25T20:06:15Z,"Fixes #3099 

Make scale_id a factor before splitting to make sure all levels are part of the output despite not being part of the data",https://github.com/tidyverse/ggplot2/pull/3101,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3098,2019-01-23T11:11:06Z,2019-07-24T10:32:35Z,2019-01-25T09:32:56Z,"This PR addresses several small problems with how ggplot2 treats units that have come up during my rewrite of the unit object. They all centre around the assumptions that units are a numeric vector with attributes, which are only true for freshly created unit objects.

These changes makes ggplot2 work with the new unit spec without breaking backward compatibility with old grid versions.",https://github.com/tidyverse/ggplot2/pull/3098,ggplot2
thomasp85,MEMBER,closed,55,https://github.com/tidyverse/ggplot2/pull/3096,2019-01-22T20:00:35Z,2020-04-02T15:00:32Z,2019-10-01T07:03:07Z,"This PR is created in advance to allow for discussion of a potential new fundamental scale (that is, something at the same level as continuous and discrete). The purpose of scale_binned is to discretise continuous data for use with discrete palettes (e.g. shape or brewer colours), or with geoms expecting discrete positions (e.g. `geom_bar()`)...

The main advantage of this setup is that it allows the guides to automatically place ticks at the border between bins, rather than at the middle of each bin - something that has been requested before (e.g. #2673)

Currently the scale work for positions, but the main holdback for the other aesthetics is the creation of a new type of legend that supports the desired output.

```r
ggplot(mtcars) + 
  geom_bar(aes(mpg)) + 
  scale_x_binned()
```
![image](https://user-images.githubusercontent.com/1775316/51561179-d5a01580-1e86-11e9-86be-e51723b853f3.png)

as can be seen, the ticks are between the bars which provide a much more intuitive understanding of the range of each bin compared to using `geom_histogram()` where the scale remain continuous and thus has tick marks at ""nice"" locations from a numerical point of view... For colour scales as desired in #2673 this effect is also of great use.

### Open questions
- what should the naming be for the shorthand scales for colour? `scale_colour_brewer()` etc are already taken (for good reasons) — is there a pattern that can be applied to all? The most graceful thing would be to have discrete scales that are used on continuous data be binned automatically, but I don't think this is doable (and the magic might be limiting in other ways)
- should the outer ticks be shown (e.g. the limits of the data)?
- can we support non-linear binning gracefully (e.g. have a bin twice as wide as the others and have the bar expand to that size automatically)
- Currently the behaviour is to default to 10 bins - is this a reasonable choice or is there anything better?
- whatever questions and suggestions you have @Hadley, @clauswilke, @karawoo, @yutannihilation ",https://github.com/tidyverse/ggplot2/pull/3096,ggplot2
connorlewis,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3092,2019-01-19T22:13:25Z,2019-07-19T05:32:33Z,2019-01-20T04:32:46Z,"Added note about including percentage sign in the filename. Also removed extra ""be"" from devices. 
Fixes #3016 ",https://github.com/tidyverse/ggplot2/pull/3092,ggplot2
clairemcwhite,CONTRIBUTOR,closed,19,https://github.com/tidyverse/ggplot2/pull/3091,2019-01-19T22:00:36Z,2019-10-26T15:36:15Z,2019-04-29T14:37:24Z,"Fixes #3060

Previously, if a stat wasn't valid for layers, the error message was confusing
```{r}
# wrong, `fill` aesthetic mapped to stat-generated data column that
# doesn't exist in `geom_point()` layer
ggplot(mtcars, aes(mpg, 1, fill = stat(density))) +
  geom_tile(stat = ""density"") +
  geom_point(position = ""jitter"")
#> Error in is.finite(x): default method not implemented for type 'closure'
```

The new error message for this code is now
```{r}
 #> Error: Aesthetics must be valid computed stats: fill. Did you map your stat in the wrong layer? 
```
In the same vein, if a function like density was used as an aesthetic, the error message is clarified  from the old:

```{r}
# wrong, `fill` aesthetic mapped to data column that doesn't exist
ggplot(mtcars, aes(mpg, 1, fill = density)) +
  geom_tile(stat = ""density"") +
  geom_point(position = ""jitter"")
#> Don't know how to automatically pick scale for object of type function. Defaulting to continuous.
#> Error: Column `fill` must be a 1d atomic vector or a list
```

to the new error message below that prompts the user to use stat(density)

```{r}
#> Don't know how to automatically pick scale for object of type function. Defaulting to continuous.
#> Error: Aesthetics must be valid data columns: fill. Did you forget to add stat()? 
```

This was done by adding two checks in R/layer.r 

For the first change:
```{r}
    # Check that all columns in aesthetic stats are valid data
    nondata_stat_cols <- check_nondata_cols(stat_data)
    if(length(nondata_stat_cols) > 0){
      msg <- paste0(
        ""Aesthetics must be valid computed stats: "", nondata_stat_cols,
        "". Did you map your stat in the wrong layer?""
      )
      stop(msg, call. = FALSE)
    }
```

and for the second change:

```{r}
    nondata_cols <- check_nondata_cols(evaled) 
    if(length(nondata_cols) > 0){
      msg <- paste0(
        ""Aesthetics must be valid data columns: "", nondata_cols,
        "". Did you forget to add stat()?""
      )
      stop(msg, call. = FALSE)
      }
```

Both use a new R/utilities.R function `check_nondata_cols()`
```{r}
# This function checks that all columns of a dataframe `x` are data and
# returns the names of any columns that are not.
# We define ""data"" as atomic types or lists, not functions or otherwise
check_nondata_cols <- function(x) {
  idx <- (vapply(x, function(x) rlang::is_atomic(x) || rlang::is_list(x), logical(1)))
  names(x)[which(!idx)]
}
```

There are two test in tests/testthat/test-layer.r for these two situations
```{r}

test_that(""function aesthetics are wrapped with stat()"", {
  df <- data_frame(x = 1:10)
  expect_error(
    ggplot_build(ggplot(df, aes(density)) + geom_tile(stat = ""density"")),
    ""Aesthetics must be valid data columns:""
  )
})

test_that(""computed stats are in appropriate layer"", {
  df <- data_frame(x = 1:10)
  expect_error(
    ggplot_build(ggplot(df, aes(x = x, stat(density))) + geom_tile(stat = ""density"") + geom_point()),
    ""Aesthetics must be valid computed stats:""
  )
})
```


",https://github.com/tidyverse/ggplot2/pull/3091,ggplot2
connorlewis,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3089,2019-01-19T21:53:11Z,2019-07-18T22:32:33Z,2019-01-19T22:02:28Z,"Added documentation for the use of the % symbol in the filename. 
Also deleted an extra ""be"" in the device description. 
Fixes #3016 ",https://github.com/tidyverse/ggplot2/pull/3089,ggplot2
connorlewis,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3087,2019-01-19T20:52:06Z,2019-07-19T22:32:33Z,2019-01-20T22:16:01Z,"Changed the use of revalue (from the plyr package) to base in the don't test example of labeller. 
-fixes #3083 ",https://github.com/tidyverse/ggplot2/pull/3087,ggplot2
dariyasydykova,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3086,2019-01-19T19:54:29Z,2019-07-18T22:32:39Z,2019-01-19T21:57:01Z,"This pull request closes issue #3072.

The issue has been fixed by changing the number of colors generated by `brewer_pal` from 6 to 7. The mid-point now has a color that matches the mid-point on the color scale. This change was implemented in `scale_color_distiller()`. The function `scale_fill_distiller()` also had this issue and was also fixed.

``` r
library(ggplot2)

dat <- data.frame(x = -1:1)

ggplot(dat) + geom_point(aes(x = x, y = 1, color = x), size = 12) +
 scale_color_distiller(palette = 'RdBu', direction = 1, limits = c(-1, 1))
```

![](https://i.imgur.com/KYinBaZ.png)

``` r

ggplot(dat) + geom_raster(aes(x = x, y = 1, fill = x)) +
  scale_fill_distiller(palette = 'RdBu', direction = 1, limits = c(-1, 1))
```

![](https://i.imgur.com/Pz5vMEO.png)

<sup>Created on 2019-01-19 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3086,ggplot2
njtierney,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/3085,2019-01-19T19:48:33Z,2019-07-18T21:32:35Z,2019-01-19T19:58:24Z,…ls to outside the plot area,https://github.com/tidyverse/ggplot2/pull/3085,ggplot2
karawoo,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3084,2019-01-19T19:27:52Z,2019-07-20T17:32:33Z,2019-01-21T17:15:21Z,"Closes #2960. Reorders core devs to match GOVERNANCE (this is alphabetical order, not chronological as stated in #2960 -- @hadley can you confirm this is the order you want?). Leaving RStudio at the end made sense to me but I can also put it in the middle.",https://github.com/tidyverse/ggplot2/pull/3084,ggplot2
sowla,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3082,2019-01-19T18:24:37Z,2019-07-18T22:32:36Z,2019-01-19T22:05:59Z,"Fixes #3064

- show all examples in fortify-map.r, annotation-map.r, coord-map.r (using a lot of if statements instead of the suggested `plot(last_plot())` so plots appear with code)
- fix bug in Iowa example",https://github.com/tidyverse/ggplot2/pull/3082,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3081,2019-01-19T18:10:45Z,2019-07-24T14:32:33Z,2019-01-25T14:07:48Z,As discussed with @hadley - `stat_bin()` can end up creating a huge number of bins depending on data and settings and end up freezing the session. This PR errors when the number of bins exceed 1e6 which should be more than enough for any reasonable use ,https://github.com/tidyverse/ggplot2/pull/3081,ggplot2
amysheep,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/3080,2019-01-19T17:03:15Z,2019-07-18T18:32:41Z,2019-01-19T18:24:02Z,closing issue #2995,https://github.com/tidyverse/ggplot2/pull/3080,ggplot2
hlendway,CONTRIBUTOR,closed,8,https://github.com/tidyverse/ggplot2/pull/3079,2019-01-19T17:02:10Z,2019-08-18T02:08:58Z,2019-01-21T15:03:45Z, Updated the definition of scale_color_continuous to be scale_colour_continous instead of gradient so that it functions as the documentation states. Fixes issue #3053 ,https://github.com/tidyverse/ggplot2/pull/3079,ggplot2
paleolimbot,MEMBER,closed,10,https://github.com/tidyverse/ggplot2/pull/3078,2019-01-19T16:42:03Z,2019-07-20T01:32:33Z,2019-01-21T01:01:55Z,"In the issue discussion there is talk of having this be a `stroke` parameter, but naming it `size` is possibly more consistent with the use of `lwd`/`size` in the rest of ggplot2. I implemented as an aesthetic rather than a param to take advantage of auto-renaming of `lwd`/`lty` (even though it looks questionable).",https://github.com/tidyverse/ggplot2/pull/3078,ggplot2
JamesCuster,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/3077,2019-01-19T16:39:01Z,2019-07-18T17:32:43Z,2019-01-19T16:54:59Z,"Closes #3071 

citation url is now the current ggplot2 webpage.",https://github.com/tidyverse/ggplot2/pull/3077,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3076,2019-01-19T16:26:03Z,2019-07-18T18:32:50Z,2019-01-19T17:36:39Z,,https://github.com/tidyverse/ggplot2/pull/3076,ggplot2
malcolmbarrett,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/3075,2019-01-19T16:05:26Z,2019-07-18T18:32:46Z,2019-01-19T18:14:00Z,"Closes #3029

This PR fixes an issue where `scale_shape_identity` was producing an error with `guide = ""legend""`

``` r
library(ggplot2)

df2 <- data.frame(x = 1:5 , y = 1:10, z = 1:10)
s <- ggplot(df2, aes(x = x, y = y))
s + 
  geom_point(aes(shape = z), size = 4) + 
  scale_shape_identity(guide = 'legend')
```

![](https://i.imgur.com/BgPThqI.png)

<sup>Created on 2019-01-19 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3075,ggplot2
malcolmbarrett,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/3074,2019-01-19T15:47:55Z,2019-07-18T17:32:42Z,2019-01-19T17:30:57Z,"Closes #2818.

This PR adds documentation for the `i` and `j` arguments in `layer_scales`, `layer_data`, and `layer_grob`.",https://github.com/tidyverse/ggplot2/pull/3074,ggplot2
beckymaust,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3073,2019-01-19T15:41:46Z,2019-07-18T17:32:49Z,2019-01-19T16:41:08Z,…. Fixes #2697.,https://github.com/tidyverse/ggplot2/pull/3073,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3069,2019-01-15T22:24:10Z,2019-07-18T20:32:33Z,2019-01-19T19:36:32Z,"Fixes #3042 by adding `x.arrange` and `y.arrange` as panel params that reflect the primary/secondary axes. The order of the `axes` list elements needed to be swapped because `scale_x$axis_order()` gives the top first, then the bottom.",https://github.com/tidyverse/ggplot2/pull/3069,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3068,2019-01-15T19:41:47Z,2019-07-18T18:32:48Z,2019-01-19T17:56:25Z,Fixes #2772 and #3061.,https://github.com/tidyverse/ggplot2/pull/3068,ggplot2
billdenney,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/3056,2019-01-04T17:29:54Z,2019-12-28T22:55:59Z,2019-07-01T22:20:08Z,The `limx` and `limy` arguments to `coord_trans()` don't align with most other commands.  I've suggested deprecating them and using the more standard `xlim` and `ylim`.,https://github.com/tidyverse/ggplot2/pull/3056,ggplot2
yutannihilation,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/3054,2019-01-03T05:56:56Z,2019-07-05T22:48:24Z,2019-01-06T14:34:43Z,"Since vdiffr 0.3.0 is released, let's

* ~~switch vdiffr from the GitHub version to the CRAN version and~~ (Travis already uses CRAN version of vdiffr since this commit: https://github.com/tidyverse/ggplot2/commit/9f1904df332096f9336c663c38980aa718c24a47)
* rely on `VDIFFR_RUN_TESTS` envvar, which vdiffr checks directly, instead of `USE_VDIFFR` envvar

~~Note that it seems still better to check the version of vdiffr since we ignore the installation failure of suggested packages by `_R_CHECK_FORCE_SUGGESTS_=false`.~~",https://github.com/tidyverse/ggplot2/pull/3054,ggplot2
coolbutuseless,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3052,2018-12-30T21:33:12Z,2019-12-27T05:39:47Z,2018-12-31T02:30:17Z,2 trivial documentation fixes.,https://github.com/tidyverse/ggplot2/pull/3052,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3051,2018-12-27T08:30:02Z,2019-06-26T02:09:50Z,2018-12-27T10:53:55Z,"For so so long, I've been wondering why `devtools::document()` fails on my Windows if I don't change my locale to `C`:

```
==> devtools::document(roclets = c('rd', 'collate', 'namespace'))

Updating ggplot2 documentation
Writing NAMESPACE
Loading ggplot2
Writing aes_group_order.Rd
Error in gsub(""\n"", ""\r\n"", contents, fixed = TRUE) : 
  input string 1 is invalid in this locale
Calls: suppressPackageStartupMessages ... roclet_output.roclet_rd -> mapply -> <Anonymous> -> same_contents -> gsub
Execution halted

Exited with status 1.
```

But, at last, I found the cause! Let's say goodbye to LEFT SINGLE QUOTATION MARK (U+2018) and RIGHT SINGLE QUOTATION MARK (U+2019).",https://github.com/tidyverse/ggplot2/pull/3051,ggplot2
yutannihilation,MEMBER,closed,17,https://github.com/tidyverse/ggplot2/pull/3050,2018-12-27T04:58:14Z,2019-10-28T13:35:59Z,2019-05-01T12:51:54Z,"Fix #3037 

Just as #2132 for `geom_segment()`, this PR changes 

1. `geom_rect()`'s default of `linejoin` from `""butt""` to `""square""`, and 
2. makes it configurable via `linejoin` parameter by users.
3. `draw_key_polygon()` is changed as well.

In addition, as a workaround for Windows, this PR 

4. specifies the `lineend` parameter.

Note that I expect this breaks many visual tests as `geom_rect()` and `draw_key_polygon()` are used in many places.

``` r
library(ggplot2)


l <- function(linejoin) {
  geom_tile(aes(x = !!linejoin, y = 0), fill = NA, size = 5, width = 0.7, height = 0.7, linejoin = linejoin, colour = ""black"")
}

ggplot() +
  l(""mitre"") +
  l(""round"") +
  l(""bevel"") +
  ylim(-1, 1)
```

![](https://i.imgur.com/UQxN8KV.png)

<sup>Created on 2019-05-01 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
",https://github.com/tidyverse/ggplot2/pull/3050,ggplot2
yutannihilation,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/3049,2018-12-27T03:57:59Z,2019-08-17T10:09:10Z,2019-02-18T09:48:58Z,"Fix #3045 

When `theme$strip.placement` is `NULL`, it should be treated as `""inside""`. It might be better if that default value is set when theme is created, but I just want to fix the apparent inconsistency for now.

``` r
library(ggplot2)

ggplot(mtcars, aes(disp, mpg)) +
  geom_point() +
  facet_wrap(~cyl, ncol = 2L, strip.position = ""bottom"") +
  theme_void()
```

![](https://i.imgur.com/JZyVa2K.png)

<sup>Created on 2018-12-27 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
",https://github.com/tidyverse/ggplot2/pull/3049,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3048,2018-12-27T02:45:25Z,2019-07-19T03:32:33Z,2019-01-20T03:04:35Z,"❗️  Do NOT MERGE THIS ❗️ 

This is an attempt to use tibble internally as discussed on #3018, but currently I feel this is going to be a tough job. Although this is still at the very early stage of work in progress, I already see several dificulties:

* `$.tbl_df` warns when there is no such column. So, everytime we extract a column by `$`, we need to check if the name exists rather than check the result is `NULL` (c.f. https://github.com/tidyverse/tibble/issues/450).
* Not all functions respect the `tbl_df` class. For example, `transform()` and `cbind()` returns `data.frame`. Besides, in some places the users can supply arbitrary functions, which meams we have to convert the result from those user-input functions to tibble very frequently. I'm afraid this not only does harm on performance, but also makes the code error-prone.
* Many unexpected test failures...",https://github.com/tidyverse/ggplot2/pull/3048,ggplot2
yutannihilation,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/3047,2018-12-27T02:05:31Z,2019-07-25T01:32:33Z,2019-01-26T01:21:49Z,"Fixes #3043.

`stat_bin()` uses the width of the range of `x` to calculate the binwidth. So, it fails when `x` contains only one unique value, because the range is 0-width. Similaly to `resolution()`, we need to treat zero-ranges specially.

https://github.com/tidyverse/ggplot2/blob/7f13dfafccea19304ae140eb14a6cdfd5b5275ec/R/utilities-resolution.r#L20-L22

As suggested in https://github.com/tidyverse/ggplot2/pull/3047#issuecomment-450584147, the width of the range should be 0.1, for consistency with the width of the expansion `expand_default()` gives for the 0-width range.

``` r
library(ggplot2)

d <- data.frame(x = rep(1, 100))
ggplot(d, aes(x = x)) +
  geom_histogram()
#> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
```

![](https://i.imgur.com/WdMyrNr.png)

<sup>Created on 2019-01-03 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
",https://github.com/tidyverse/ggplot2/pull/3047,ggplot2
coolbutuseless,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/3046,2018-12-25T09:58:43Z,2019-06-28T21:33:15Z,2018-12-30T21:28:24Z,Fix an unescaped % sign.,https://github.com/tidyverse/ggplot2/pull/3046,ggplot2
ptoche,NONE,closed,6,https://github.com/tidyverse/ggplot2/pull/3041,2018-12-18T16:53:06Z,2020-05-03T04:11:21Z,2020-05-03T04:11:21Z,"Work In Progress.

Objective: extend ``stat_ellipse()`` to make ""confidence ellipses"" in addition to ""data ellipses"".

Followed/Borrowed code from the ``car`` library. First version. Runs, but does not appear to produce the correct values. Leaving it out there for any interested parties to motivate discussion. Hopefully someone will spot the errors. ",https://github.com/tidyverse/ggplot2/pull/3041,ggplot2
dpseidel,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/3040,2018-12-16T18:30:15Z,2019-11-04T16:48:16Z,2019-04-11T09:11:43Z,"### Version 3.1.0 introduced significant regressions in regards to the secondary axis API. 
These regressions have been jointly documented in issue #2978 ad PR #3004 with reprexes but I will just briefly review them here. 

1) changes made in #2796, eliminated the rescaling of the secondary axis to that of the primary axis, 
introducing tick alignment issues when non-linear secondary transformations were called.

2) changes made in #2805, reversed the order in which range transformation and sampling were completed, introducing poorly aligned ticks in the secondary axis in the case of non-linear transformations. 

These two regressions taken together, break the expected sec.axis tick positioning for some [custom transformation functions](https://github.com/tidyverse/ggplot2/issues/2978#issuecomment-435487510). 

3) Finally, in a more fundamental change, changes made in 2796 to inherit the transformation of the primary scale when creating the secondary axis (allowing for simple implementation of secondary axes with date and datetime scales, and transformed break defaults), introduced the assumption/requirement that the two axes shared a transformation, breaking [any use cases that would treat the two axes as independent](https://github.com/tidyverse/ggplot2/issues/2978#issuecomment-442651113). 

PR #3004 provided a fix for the first two issues, but would leave plots implementing independent primary and secondary scale transformations broken. In its stead, this PR reverts both 2796 and 2805 implementing a more conservative fix for the original motivating issue (log transformed breaks #2729) in the `init()` function of `AxisSecondary`. 

https://github.com/dpseidel/ggplot2/blob/fded720827358ad0012fa635a5af5292f45f4c1c/R/axis-secondary.R#L139

I believe this is the best course of action in light of the nature of all the regressions, but this fix opens two new issues:

#### 1. Renewed spurious monotonicity test failures given power transformations with data near 0. (present in 3.0.0)

Upon digging into it, I realized the monotonicity issue is one we have chosen not to remedy in the past (#2008) simply offering a work-around: users should specify `expand = c(0,0)`. From a users perspective it is rather unexpected that a duplicate secondary axis would fail for a primary that does not, but because the range passed to the sec.axis is already expanded, there does not appear to be a simple solution. 


#### 2. lost functionality for secondary date/datetime axes (datetime scales)
To preserve the current functionality of sec.axis with date and date time scales introduced in 3.1, I have opted for a bit of a hack: a conditional that passes the datetime transformation to the sec.axis scale preserving the current (inheritance) behavior in 3.1 only for date and datetime scales. I don't think this is a permanent solution and would appreciate advice or suggestion. At the very least we need to better document the expected functionality and limitations of sec.axis with all continuous scales, perhaps  explicitly supporting more limited sec.axis functionality with datetime scales. 

It seems to me that if we are preserving independent transformations for all other secondary axes, we should do so for date and datetime scales too. It's not implausible that users of datetime axes would want independent scales either: for example, one might want to create a ""Time since event"" secondary axis, which is currently only doable by passing custom labels to a sec.axis with a time/date transformation. However, the current rescaling framework, as well as the way init values are set via the primary scale, throws errors when POSIX values used with an identity transformation. Short of committing to a complete retooling, I did not find a way to work with POSIX objects in the current framework that would not require some special handling, at least to reformat labels, and this seemed, at least for now, the cleanest way to approach it with the obvious downfall that it makes independent axis transformations impossible. I can't immediately think of a use case where a nonlinear transformation would be appropriate with date time scale - so I don't forsee tick misalignment issues with this current patch. Regardless,  please consider the current patch a place to start the discussion not necessarily an appropriate final solution. 

### Wrap up 
In preparing this PR, I've reviewed all open issues regarding sec.axis and added a host of visual and other tests to prevent new regressions. Note that I have commented out the tests for the monotonicity issue which at this point still cause a failing build - if we opt not to fix this issue these can be removed. Any ideas, thoughts, or advice from others, especially the core-developers, are appreciated. Please let me know if I can clarify anything.

@thomasp85, I would specifically appreciate your comments/review when you get a minute. I'm not 100% happy with where this is at but I figure getting this open gives us a place to start from. 

Fixes #2978.",https://github.com/tidyverse/ggplot2/pull/3040,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3038,2018-12-14T23:54:44Z,2019-10-10T02:09:04Z,2019-04-13T01:40:57Z,"Fixes #3031

``` r
library(ggplot2)

p <- ggplot(mtcars, aes(cyl, mpg)) +
  geom_point()

# existing notation
p1 <- p + scale_y_continuous(sec.axis = sec_axis(~ . + 10))

# purrr-style notation (might be confusing to use .x for Y axis...)
p2 <- p + scale_y_continuous(sec.axis = sec_axis(~ .x + 10))

# normal function
add_10 <- function(y) y + 10
p3 <- p + scale_y_continuous(sec.axis = sec_axis(add_10))


patchwork::wrap_plots(p1, p2, p3)
```

![](https://i.imgur.com/6KQaQqv.png)

<sup>Created on 2019-04-13 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
",https://github.com/tidyverse/ggplot2/pull/3038,ggplot2
lionel-,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3035,2018-12-13T10:19:48Z,2019-06-26T02:09:21Z,2018-12-14T22:28:43Z,"And depend on rlang >= 0.3.0

Closes r-lib/rlang#669",https://github.com/tidyverse/ggplot2/pull/3035,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3034,2018-12-12T20:23:44Z,2019-06-12T00:15:48Z,2018-12-13T16:29:07Z,"As part of my rewrite of the grid unit system I came upon these two cases where units are constructed, but then subsequently treated as numeric vectors. Apart from the unneeded overhead, this can potentially mess up unit construction downstream if the units are not in the expected structure",https://github.com/tidyverse/ggplot2/pull/3034,ggplot2
batpigandme,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3033,2018-12-10T17:43:29Z,2019-11-06T20:08:03Z,2018-12-12T15:34:11Z,"Per https://github.com/tidyverse/ggplot2/issues/2890#issuecomment-445902471, adding link to the post for ggplot2 3.1.0 to News section of the pkgdown site.

@hadley, I didn't run `build_site()`, since I'm not yet clear on how the automated pkgdown build is handling this. 😬 ",https://github.com/tidyverse/ggplot2/pull/3033,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3030,2018-12-08T04:20:02Z,2019-07-19T23:32:33Z,2019-01-20T22:35:08Z,"This is an example implementation of the feature I proposed in https://github.com/tidyverse/ggplot2/issues/3026#issuecomment-444925166. Not sure whether this is the right way to go or not.

``` r
library(ggplot2)

df <- data.frame(
  x = c(1,3,2,5),
  y = 1:4,
  label = c(""a"",""c"",""d"",""c"")
)

# new implementation, using parameters/aesthetics
p1 <- ggplot(df, aes(x, y)) +
  geom_point() +
  geom_text(aes(label = label), nudge_y = c(-0.1, 0.1, -.5, -0.1))

# current implementation, using position adjustment
p2 <- ggplot(df, aes(x, y)) +
  geom_point() +
  geom_text(aes(label = label), position = position_nudge(y = c(-0.1, 0.1, -.5, -0.1)))

# results are identical
cowplot::plot_grid(p1, p2)
```

![](https://i.imgur.com/7SYFvah.png)

``` r
cowplot::plot_grid(p1 + scale_y_log10(), p2 + scale_y_log10())
```

![](https://i.imgur.com/hF0BXrB.png)

``` r
cowplot::plot_grid(p1 + coord_polar(), p2 + coord_polar())
```

![](https://i.imgur.com/WJmNgeI.png)

``` r
cowplot::plot_grid(p1 + coord_trans(y = ""sqrt""), p2 + coord_trans(y = ""sqrt""))
```

![](https://i.imgur.com/jDyYeGK.png)

``` r

# providing nudge values as aesthetics works
df <- data.frame(
  x = c(1,3,2,5),
  y = 1:4,
  nudge_y = c(-0.1, 0.1, -.5, -0.1),
  label = c(""a"",""c"",""d"",""c"")
)
ggplot(df, aes(x, y)) +
  geom_point() +
  geom_text(aes(label = label, nudge_y = nudge_y))
```

![](https://i.imgur.com/qkfUOXL.png)

``` r

# incorrect length causes error as expected
ggplot(df, aes(x, y)) +
  geom_point() +
  geom_text(aes(label = label), nudge_y = c(-0.1, 0.1, -.5))
#> Error: Aesthetics must be either length 1 or the same as the data (4): nudge_y

# can specify both aesthetic and position, both nudgings are applied
ggplot(df, aes(x, y)) +
  geom_point() +
  geom_text(
    aes(label = label),
    nudge_y = c(-0.1, 0.1, -.5, -0.1),
    position = position_nudge(y = c(-0.1, 0.1, -.5, -0.1))
  )
```

![](https://i.imgur.com/0KpFmtR.png)

<sup>Created on 2018-12-07 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3030,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3028,2018-12-06T15:17:46Z,2019-09-21T00:09:06Z,2019-03-24T23:31:32Z,"Fixes #3025 

Currently, `geom_raster()` tries to spread tiles all over the plot, but it's not appropriate for discrete values, since neibouring values are very different ones and cannot be merged into one tile.

`ScaleDiscretePosition` maps `x` and `y` to integers and `ScaleContinuousPosition` maps them to numerics. So, I think it's possible to assume integer means discrete.

``` r
library(ggplot2)

d <- data.frame(x = factor(letters[1:4]))
d2 <- data.frame(x = c(1L, 3L), y = c(1L, 3L))

p <- ggplot(data.frame(), aes(x, x, fill = x)) + 
  geom_raster()

p_discrete <- p +
  scale_x_discrete(drop = F) + 
  scale_y_discrete(drop = F) +
  scale_fill_discrete(drop = F)

patchwork::wrap_plots(
  p_discrete %+% d,
  p_discrete %+% d[c(1,3), , drop = FALSE],
  # continuous integers are not sparse
  p %+% d2
)
```

![](https://i.imgur.com/cyEQozN.png)

<sup>Created on 2018-12-07 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
",https://github.com/tidyverse/ggplot2/pull/3028,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3024,2018-12-05T15:52:19Z,2019-06-04T02:10:31Z,2018-12-06T01:41:04Z,"Fix spurious warning in `position_nudge()`, as described in #2977.

``` r
library(ggplot2)

df <- data.frame(
  x = c(1,3,2,5),
  y = c(""a"",""c"",""d"",""c"")
)

ggplot(df, aes(x, y)) +
  geom_point() +
  geom_text(aes(label = y), nudge_y = c(-0.1, 0.1, -0.1, -0.1))
```

![](https://i.imgur.com/GHLUZ3d.png)

<sup>Created on 2018-12-05 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/3024,ggplot2
thomasp85,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/3023,2018-12-04T20:52:02Z,2019-06-02T23:11:07Z,2018-12-04T21:57:46Z,"This PR streamlines the handling of data in line-like gloms where an implicit sorting of data along the x-axis is happening. Previously GeomLine had the sorting happening in `setup_data` while GeomRibbon (and by extension GeomArea) had it inside `draw_group`.

The motivation is that it solves some issues in gganimate that couldn't be fixed outside of ggplot2, but I also think that conceptually this is the right approach, and we should be consistent in how we treat data operations across kindred geoms/stats",https://github.com/tidyverse/ggplot2/pull/3023,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3015,2018-11-26T08:07:47Z,2019-05-25T15:24:15Z,2018-11-26T14:39:30Z,force col_names to make sure it is calculated before x is converted to a list,https://github.com/tidyverse/ggplot2/pull/3015,ggplot2
thomasp85,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/3013,2018-11-23T11:23:20Z,2019-07-01T11:36:16Z,2018-12-13T15:32:10Z,"This PR writes out all ply dependencies from ggplot2. The following strategies has been used:

#### **ply
Except for `ddply` all use of `**ply` functions has been substituted with base equivalents. `ddply` has been substituted with the new `dapply` function that mimics its API and behaviour. It is ~40% faster in normal use by avoiding the `as.quoted` call.

#### Utility functions
Use of `split_indices`, `summarise`, and `colwise` has been substituted with base equivalent approaches.

`quickdf` has been substituted with the already existing `new_data_frame`

`empty` is now exported so the vignette doesn't need to depend on the plyr version

`defaults`, `unrowname`, `rename`, `revalue`, `id`, `count`, `join.keys`, `as.quoted`, `round_any`, and `rbind.fill` has all been reimplemented. In a few circumstances they have been lifted as-is from plyr, but often they have been rewritten to reduce complexity by only targeting use in ggplot2. All reimplementations are either on par or slightly faster than the plyr counterparts

Currently, a selection of reimplementations has been exported as internal functions to make it easier for extension developers to write out plyr as well.

All rewritten functions are currently collected in `compat-plyr.R` but I think it makes sense to distribute them into files guided by their use rather than keep them there for historical reasons.

There are no unit tests yet but these will come once we have agreed on the implementations and approaches.",https://github.com/tidyverse/ggplot2/pull/3013,ggplot2
yutannihilation,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/3011,2018-11-19T15:20:42Z,2019-05-19T13:19:08Z,2018-11-20T13:05:50Z,"Fix #3000 

Turkish has two versions of i; dotted and dotless. Accordingly, the capital of `i` is `İ`, not `I`, which make ggplot2 to fail to find `PositionIdentity` and `StatIdentity`. The same thing can happen on dotless `ı` and `I` (c.f. http://www.i18nguy.com/unicode/turkish-i18n.html)

This seems a well-known problem, and ICU has a flag for this, but unfortunately, there's no way to use this via R's `toupper()`.

> It is also not language-sensitive, although there is a flag for whether to apply special mappings for use with Turkic (Turkish/Azerbaijani) text data.
(http://userguide.icu-project.org/transforms/casemappings)

After googling around, I found several options to fix this:

1. Use `chartr()` instead of `toupper()` and `tolower()` (This PR)
2. Use `stringi::stri_trans_toupper()` and `stringi::stri_trans_tolower()`, where we can specify `locale`.
3. Modify the locale temporarily

For 2., stringi is cool, but adding it to the dependency is a bit heavy. For 3., it seems dangerous to mess the user's locale. So, from these, I think option 1 is rather reasonable, although not very cool. `chartr()` is around 4x slower than `toupper()`, but I hope this is acceptable considering that people in Turkish locale probably almost cannot use ggplot2... (I'm not familiar with this problem, so I might be wrong.)

```r
bench::mark(
  chartr(""abcdefghijklmnopqrstuvwxyz"", ""ABCDEFGHIJKLMNOPQRSTUVWXYZ"", ""a""),
  toupper(""a"")
)
#> # A tibble: 2 x 10
#>   expression     min   mean median   max `itr/sec` mem_alloc  n_gc n_itr
#>   <chr>      <bch:t> <bch:> <bch:> <bch>     <dbl> <bch:byt> <dbl> <int>
#> 1 ""chartr(\~   3.3us 7.03us  3.8us 732us   142357.        0B     0 10000
#> 2 ""toupper(~   700ns 2.24us    1us 291us   446879.        0B     0 10000
#> # ... with 1 more variable: total_time <bch:tm>
```
",https://github.com/tidyverse/ggplot2/pull/3011,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3009,2018-11-19T10:24:09Z,2019-05-18T14:12:46Z,2018-11-19T13:44:55Z,"To fix this NOTE:

```
* checking DESCRIPTION meta-information ... NOTE
Package listed in more than one of Depends, Imports, Suggests, Enhances:
  ‘grDevices’
A package should be listed in only one of these fields.
```
https://travis-ci.org/tidyverse/ggplot2/jobs/455860461#L2326",https://github.com/tidyverse/ggplot2/pull/3009,ggplot2
Bisaloo,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/3006,2018-11-16T10:37:30Z,2019-05-19T16:19:06Z,2018-11-20T15:26:02Z,"The current sitemap of ggplot docs website (https://ggplot2.tidyverse.org/sitemap.xml) is not valid because URLs must begin with a protocol, as stated in the description of the standard (https://www.sitemaps.org/protocol.html).",https://github.com/tidyverse/ggplot2/pull/3006,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/3005,2018-11-16T09:10:19Z,2019-05-18T15:12:57Z,2018-11-19T15:11:18Z,This PR implements a simple and performant modifyList alternative that is ~5 times faster. It will mainly speed up element rendering where modifyList was used to apply theme settings and consistently showed up in profilings as the slowest part of the ggplot2 code,https://github.com/tidyverse/ggplot2/pull/3005,ggplot2
dpseidel,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/3004,2018-11-15T23:05:48Z,2019-06-14T18:56:18Z,2018-12-16T18:31:13Z,"Simplification of the secondary axis in #2796 dropped the necessary range rescaling procedure to properly position secondary axis ticks relative to their primary axis. A partial reversion of #2796 , this PR reintroduces proper scaling while maintaining the transformation inheritance that currently supports sec.axis with date and datetime scales and proper breaks for log transformed scales. 

This PR also reverts changes made in #2805, reversing the order in which the range of the secondary axis is sampled and inverted. For proper positioning of secondary ticks relative to the primary scale, the data range must be sampled *before* taking the inverse (or else the range may be too large to get a sufficiently fine sample for position matching, e.g. with log-transformed data). This reversion does reintroduce some spurious monotonicity test failures present in 3.0.0 which will be addressed in a separate issue. 

I have added new tests to check positioning, not simply correct transformation. 2 new visual tests are added and 2 are updated. In some cases, I opted to use code from user reprexes for tests, but these could be simplified if preferred. 

Fixes #2978
",https://github.com/tidyverse/ggplot2/pull/3004,ggplot2
thomasp85,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/3003,2018-11-15T20:57:23Z,2019-05-18T14:12:51Z,2018-11-19T13:20:09Z,Some tests were added between the new_data_frame implementation and it's merge that used the now masked data.frame constructor. This PR fixes these so tests now passes,https://github.com/tidyverse/ggplot2/pull/3003,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/3002,2018-11-15T10:55:44Z,2019-05-18T14:12:49Z,2018-11-19T13:28:03Z,"This PR treats the data frame in `transform_position` as a list for the duration of the call, speeding up `ggplot_build` up by some 30% for a simple faceted boxplot of mtcars",https://github.com/tidyverse/ggplot2/pull/3002,ggplot2
dpseidel,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2998,2018-11-13T18:43:54Z,2019-05-12T21:07:57Z,2018-11-13T20:57:47Z,"The changes to descent in #2996 broke numerous vdiffr tests by slightly altering plot height (see screenshots below). This PR updates the svg files. 

@thomasp85, I've gone through and inspected the mismatches, all containing the same slight shift, but perhaps you should review to confirm this shift is an expected and acceptable change in plot behavior before we update the test case files. 

See slight shift in the xaxis height:
<img width=""522"" alt=""vdiffr before/after 2996"" src=""https://user-images.githubusercontent.com/16724456/48433649-7dcd8b80-e72c-11e8-8731-6cde4544b167.png"">

The differences are much more pronounced in the ""theme-large"" tests, e.g. :
<img width=""783"" alt=""theme-large vdiffr before/after 2996"" src=""https://user-images.githubusercontent.com/16724456/48434987-1e717a80-e730-11e8-8f04-f65c04a741cd.png"">
",https://github.com/tidyverse/ggplot2/pull/2998,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2997,2018-11-13T15:28:20Z,2019-05-13T00:35:43Z,2018-11-13T23:08:14Z,"It's common practice to wrap unsafe calculations with `tryCatch()` and return `NULL`, which allows us to use the result when available and skip when unavailable. But, currently, ggplot2 doesn't accept this in `aes()`:

``` r
library(ggplot2)

df <- data.frame(x = 1:10, y = 1:10)
wrap <- function(...) tryCatch(..., error = function(e) NULL)

ggplot(df, aes(x, y, colour = wrap(no_such_column))) +
  geom_point()
#> Error: Aesthetics must be either length 1 or the same as the data (10): colour
```

This is because `Layer$compute_aesthetics()` removes `NULL` aes here BEFORE evaluation:

https://github.com/tidyverse/ggplot2/blob/f5a88a71e7b60b6531ef6c4a936370b5e3c4ef92/R/layer.r#L221-L223

Considering the following facts, I think it's safe to move `compact()` after evaluation

- `ggplot2::compact()` removes only `NULL`
- `NULL` will be still `NULL` after evaluation",https://github.com/tidyverse/ggplot2/pull/2997,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2996,2018-11-13T12:25:08Z,2019-05-12T14:08:00Z,2018-11-13T13:15:18Z,"Fix #2687

As per discussion in #2687, using `descentDetail()` will get the graphic parameters from the viewport and not from the grob itself. This PR implements the suggestion from @pmur002 in the thread by using `grobDescent()` instead.",https://github.com/tidyverse/ggplot2/pull/2996,ggplot2
thomasp85,MEMBER,closed,14,https://github.com/tidyverse/ggplot2/pull/2994,2018-11-12T14:25:23Z,2019-05-14T22:30:40Z,2018-11-15T20:16:00Z,"This is a very sweeping PR, that changes almost all `data.frame()` and `as.data.frame()` calls to use the included `new_data_frame()` constructor.

unit tests and examples does not show any problems with this, but it is possible that reverse dependency check will surface some places where this PR introduces errors, so we have to look out for that (or run a revdep check on this branch before merging)",https://github.com/tidyverse/ggplot2/pull/2994,ggplot2
thomasp85,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/2993,2018-11-12T10:40:24Z,2019-05-12T16:07:56Z,2018-11-12T14:08:48Z,"The current caching of descentDetails calls is based on the device in use, along with all relevant font specifications.

I believe @clauswilke has looked into something similar but unsure what he ended up with suggesting - this works well, though...",https://github.com/tidyverse/ggplot2/pull/2993,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2989,2018-11-09T12:00:42Z,2019-05-08T13:24:51Z,2018-11-09T13:21:11Z,A vignette describing profiling procedures and performance focused changes going forward,https://github.com/tidyverse/ggplot2/pull/2989,ggplot2
has2k1,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2988,2018-11-09T11:41:44Z,2019-05-10T06:09:56Z,2018-11-11T05:51:30Z,"The rugs in `geom_rug` are drawn along an axis depending the
`sides` parameter. Since the coordinate system does not alter
the `geom` parameters, the `geom` has to alter any parameters
that determine where the geoms are plotted.

fixes #2987 

----

``` r
library(ggplot2)

df <- data.frame(x = 1:10, y = (1:10)^3)
g <- ggplot(df, aes(x, y)) + geom_point() + geom_rug(sides = 'l')

# Normal plot
g
```

![](https://i.imgur.com/332csm1.png)

``` r

# The rugs are flipped
g + coord_flip()
```

![](https://i.imgur.com/UP8i1S6.png)

<sup>Created on 2018-11-09 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/2988,ggplot2
yutannihilation,MEMBER,closed,26,https://github.com/tidyverse/ggplot2/pull/2981,2018-11-05T16:04:33Z,2019-05-10T08:09:48Z,2018-11-11T07:29:56Z,"Fix #2975 

### Problem

Currently, ggplot2 makes labels in three different ways:

1. `make_labels()` uses `quo_text()`. This handles the cases where `aes()` is passed to `ggplot()` or `geom_*()`.
2.  [`ggplot_add.uneval()`](https://github.com/tidyverse/ggplot2/blob/1c09bae2aa24320bcb4891c664cccc16efc86a8a/R/plot-construction.r#L126) uses `quo_name()`. This handles the case where `aes()` is `+`ed to the plot.
3. [`qplot()`](https://github.com/tidyverse/ggplot2/blob/1c09bae2aa24320bcb4891c664cccc16efc86a8a/R/quick-plot.r#L90) uses `quo_name()`, (but the implementation is yet different from `ggplot_add.uneval()`). This handles `qplot()`.

Consequently, we see some inconsistencies among them. For example,

* `make_labels()` adds backticks to invalid symbols (e.g. `` `a b` ``), while others don't.
* If the mapping is `NULL`, `make_labels()` uses the aesthetic name, `ggplot_add.uneval()` removes the label, and `qplot()` uses `""NULL""`.

### Scope of this PR

The backticks can be easily removed if we stop using `quo_text()` for symbols. So, at least we can and should fix `make_labels()`.

Next, ideally, we should use `make_label()` for making labels everywhere. But, in order to keep this PR small, this PR does only these:

* Make `make_labels()` to follow the disirable behaviours (below).
* Use `make_labels()` in `ggplot_add.uneval()`.

and I leave these issues:

* `qplot()` uses different implementation
* Facetting also uses different implementation, which uses `deparse()` (https://github.com/tidyverse/ggplot2/issues/2975#issuecomment-436285746)

### Desirable Behaviours

* For quosures of a symbol, use symbols as is whether or not the symbol is valid by the R's parser (i.e. do not add backticks). Use `as_string(quo_get_expr())` for this.
* For other types of quosures, deparse them as R's expressions (i.e. add backticks if necessary). If the expression is long, the label should be abbreviated with a tailing `...`. Use `quo_text()` and `gsub()` for this.
* For literals, use the aesthetic name instead.
* For `NULL`, use the aesthetic name instead.
",https://github.com/tidyverse/ggplot2/pull/2981,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2976,2018-11-01T15:00:04Z,2019-05-01T03:47:57Z,2018-11-02T03:44:48Z,"Again, thanks for inviting me to the core team. I'll do my best to contribute to the development of ggplot2!",https://github.com/tidyverse/ggplot2/pull/2976,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2973,2018-11-01T02:09:49Z,2019-05-01T22:15:19Z,2018-11-02T17:42:01Z,"Fixes #2979

The link to Code of Conduct in `GOVERNANCE.md` seems broken.",https://github.com/tidyverse/ggplot2/pull/2973,ggplot2
yutannihilation,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/2972,2018-10-31T21:49:17Z,2019-05-26T00:40:02Z,2018-11-26T23:39:37Z,"Fixes #2971 (and r-spatial/sf#879)

It seems `CoordSf`, `CoordMap`, and `CoordPolar` don't follow the convention of treating `Inf` as the edge of the range. This PR fixes it.

### `CoordSf`

It seems `CoordSf$transform()` just forget to squish infinite values to range as `coord_cartesian()` does. 

### `CoordMap`

In `CoordMap`, `Inf` can be converted to `NA` by `mapproj:: mapproject()`. So, just applying `squish_infinite()` is not enough; we need to restore the `Inf` from the original data.

### `CoordPolar`

For angle (`theta`), `Inf` and `-Inf` are squashed into `0`, which is both the start and the end of the circle. For radius (`r`), `Inf` is squashed to `0.4`, the hardcoded value in `r_rescale()`, and `-Inf` is squashed to `0`.

## Results

``` r
library(ggplot2)

ggplot(sf::st_point(c(0, 0))) +
  geom_sf() +
  annotate(""text"", -Inf, Inf, label = ""Top-left"", hjust = 0, vjust = 1)
```

![](https://i.imgur.com/r2HA6EK.png)

``` r

ggplot(data.frame(x = 0, y = 0)) +
  geom_point(aes(x,y)) +
  annotate(""text"", -Inf, Inf, label = ""Top-left"", hjust = 0, vjust = 1) +
  coord_map()
```

![](https://i.imgur.com/MJ3HUv7.png)

``` r

ggplot(data.frame(x = ""a"", y = 1), aes(x, y)) +
  geom_col(fill = ""white"") +
  coord_polar() +
  annotate(""text"", Inf, Inf, label = ""Top-Center"") +
  annotate(""text"", -Inf, -Inf, label = ""Center-Center"")
```

![](https://i.imgur.com/JWmLj20.png)

<sup>Created on 2018-11-26 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
",https://github.com/tidyverse/ggplot2/pull/2972,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2968,2018-10-29T21:44:09Z,2019-04-28T14:40:41Z,2018-10-30T13:43:34Z,I think this is what @batpigandme was talking about in #2961 ,https://github.com/tidyverse/ggplot2/pull/2968,ggplot2
hadley,MEMBER,closed,22,https://github.com/tidyverse/ggplot2/pull/2962,2018-10-25T15:55:55Z,2019-12-15T12:21:45Z,2019-03-06T02:21:02Z,"* Define col_types for read_csv
* Pin time series to fix end date
* Use usethis::use_data

Also ungroups economics-long. This was already present in the code, but not in the saved data set.",https://github.com/tidyverse/ggplot2/pull/2962,ggplot2
hadley,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/2961,2018-10-25T15:50:02Z,2019-04-27T21:47:08Z,2018-10-29T21:35:19Z,"I've removed some duplication, and attempted to refine the description of the different categories of community member. I've also moved away from the ""benevolent dictator"" language in favour of ""project lead"".

What other important parts of the ggplot2 governance process have I forgotten?",https://github.com/tidyverse/ggplot2/pull/2961,ggplot2
hadley,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/2959,2018-10-24T21:57:59Z,2019-04-24T12:55:58Z,2018-10-25T14:55:39Z,How does this process sound to everyone?,https://github.com/tidyverse/ggplot2/pull/2959,ggplot2
yutannihilation,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2957,2018-10-23T05:33:48Z,2019-04-21T22:51:07Z,2018-10-23T21:45:22Z,"Fixes #2956 

This PR provides two workarounds:

1. Install dev version of `vdiffr` only when `USE_VDIFFR=true` since vdiffr now requires R >= 3.2.0, which means builds with R 3.1 fails.
2. Use `R_REMOTES_NO_ERRORS_FROM_WARNINGS=true` to avoid errors converted from warnings raised by `devtools::install_deps()`, which didn't seem to exist before devtools 2.0.",https://github.com/tidyverse/ggplot2/pull/2957,ggplot2
rsaporta,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/2955,2018-10-22T21:54:52Z,2019-04-22T13:36:02Z,2018-10-23T21:46:37Z,"Minor edits to the `CONTRIBUTING.md` file:

1. Typo in motivate
2. Cleaned up bulleted-list
3. Define `PR` & format the paragraph",https://github.com/tidyverse/ggplot2/pull/2955,ggplot2
rsaporta,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2954,2018-10-22T21:53:10Z,2019-04-22T13:36:04Z,2018-10-23T18:43:06Z,small typo in the documentation for `ggplot_gtable`:  had a straggling `link{}`,https://github.com/tidyverse/ggplot2/pull/2954,ggplot2
RichardJActon,CONTRIBUTOR,closed,9,https://github.com/tidyverse/ggplot2/pull/2950,2018-10-19T16:01:40Z,2019-07-22T17:32:34Z,2019-01-23T16:50:50Z,"This pull request addressed issue #2945

geom_hline / vline / abline will now throw a warning if the user supplies both a x|y|intercept/slope value and a mapping such as this:

    geom_hline(yintercept = 3, aes(colour = colour))

As the above will cause the user supplied mapping to be ignored/overwritten

Users might resaonably expect the above to work as other geoms do not have this behaviour. The warning messages suggest that the x|y|intercept/slope value(s) be moved inside the aes call thus:

    geom_hline(aes(yintercept = 3,colour = colour))
",https://github.com/tidyverse/ggplot2/pull/2950,ggplot2
stragu,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2948,2018-10-18T01:14:46Z,2019-04-16T09:59:54Z,2018-10-18T09:38:09Z,"Remove useless word: ""if you your plot"" -> ""if your plot"".",https://github.com/tidyverse/ggplot2/pull/2948,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2942,2018-10-15T23:57:47Z,2019-05-14T22:30:42Z,2018-10-23T21:43:32Z,"This PR closes #2938.

Example:

``` r
library(ggplot2)

nc <- sf::st_read(system.file(""shape/nc.shp"", package = ""sf""), quiet = TRUE)
p <- ggplot(nc) +
  geom_sf(aes(fill = AREA)) +
  geom_text(x = -80, y = 37, label = ""label outside limits"", inherit.aes = FALSE)

p
```

![](https://i.imgur.com/vMvICQU.png)

``` r

p + coord_sf(clip = ""off"")
```

![](https://i.imgur.com/RxwAu2d.png)

<sup>Created on 2018-10-15 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/2942,ggplot2
batpigandme,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2939,2018-10-14T14:47:54Z,2019-04-13T23:52:02Z,2018-10-15T23:29:47Z,"* Add movebot config file
Since an issue was filed in reprex that belonged in ggplot2, it seems to me it's worth adding movebot to the repos for easier management.",https://github.com/tidyverse/ggplot2/pull/2939,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2936,2018-10-12T11:28:40Z,2019-06-16T02:07:27Z,2018-12-18T00:37:25Z,"I saw `aes()` is mentioned here: https://github.com/r-lib/rlang/pull/643. It says `enquos()` will get `""all""` option for `.ignore_empty`, which ignores named missing arguments as well, in rlang v0.3.0 . This PR uses it to simplify the code.

Besides, https://github.com/r-lib/rlang/issues/430 seems fixed, so the workaround is no longer needed.",https://github.com/tidyverse/ggplot2/pull/2936,ggplot2
pank,CONTRIBUTOR,closed,11,https://github.com/tidyverse/ggplot2/pull/2934,2018-10-11T16:59:31Z,2019-10-13T18:09:05Z,2019-04-16T17:43:26Z,"Hi,

I would like to add support for different ticks length for different axes.
My main motivation is to match an Excel theme that I have been given, which features upwards ticks on the x-axis. I don't want inwards ticks on the y-axis though.

It was first requested in issue #1319.

I have not submitted patches to `ggplot2` before, neither am I too familiar with the `tidyverse` style guide normally, nor the github pull interface (I normally use `git format-patch`.  If I have broken any conventions let me know and I will try to fix the mistake.

It was not clear to me what to do where the names I added were longer than the length of other nearby names.  The problem is that the alignment goes wrong. 
[Here](https://github.com/pank/ggplot2/commit/8340ec76fdaafe153713f1a2672ac786e1fdc3ee#diff-aac553f8bf010ed911dab683e9090a18) is an example.

Should I,
- Fix the alignment issues in a subsequent commit?  (still bad for `git blame`...)?
- Or find shorter names?
- Or just leave it be?

Also, I have not used visual tests before, but it seems to work. (I just ran `devtools::test()` and saw no more errors; the documentation is a bit sparse on visual tests).

Finally, [this bit](https://github.com/pank/ggplot2/commit/8340ec76fdaafe153713f1a2672ac786e1fdc3ee#diff-348ffaa265a58dc2db9470750b00523b) is pretty crude:

```r
  theme$axis.ticks.length.x <- theme$axis.ticks.length.x %||% theme$axis.ticks.length
  theme$axis.ticks.length.x.bottom <- theme$axis.ticks.length.x.bottom %||% theme$axis.ticks.length.x
  theme$axis.ticks.length.x.top <- theme$axis.ticks.length.x.top %||% theme$axis.ticks.length.x
  theme$axis.ticks.length.y <- theme$axis.ticks.length.y %||% theme$axis.ticks.length
  theme$axis.ticks.length.y.left <- theme$axis.ticks.length.y.left %||% theme$axis.ticks.length.y
  theme$axis.ticks.length.y.right <- theme$axis.ticks.length.y.right %||% theme$axis.ticks.length.y
```
I just followed the example of `legend.spacing.x`, but if desired I can try to cut it down.

Below is a minimal example of a somewhat of useful thing that could be done after applying the patch.  Notice the ticks on the button is sort-of enclosing the bar and the ones on the right axis serve as an explanation of the graph. (I'm not saying this is the best way to explain what is going on in this graph!)

Thanks,
Rasmus

![min_example](https://user-images.githubusercontent.com/666845/46819309-b2dc6c00-cd83-11e8-9469-c1965330b868.png)
```r
library(ggplot2) # or load via devtools
theme_set(theme_light()+
          theme(axis.ticks.length.x = unit(-.25, ""cm""),
                axis.ticks.length.y.right=unit(.5, ""cm""),
                panel.border=element_blank(),
                panel.grid.major.x = element_blank(),
                panel.grid.minor.x = element_blank(),
                axis.text.x = element_text(hjust=-7,
                                           margin=margin(t=.5, , unit=""cm""))))

set.seed(123)
d <- data.frame(t=rep(1:5, each=2),
                y = abs(rnorm(10)),
                type=rep(c(""realized"", ""add-on""), 5))
p <- ggplot(d) +
    geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=.25, ymax=2), fill=""gray"", alpha=.1) +
    geom_col(aes(t+.5, y, fill=type), position=""stack"", width=.5) +
    geom_hline(aes(yintercept=x), linetype=""dashed"",
               data=data.frame(x=c(.25,2))) + 
    coord_cartesian(expand=FALSE, ylim=c(0,2.5), xlim=c(1,5.75)) +
    guides(fill=FALSE) + xlab(NULL) + ylab(NULL) + 
    scale_y_continuous(sec.axis=sec_axis(~.*1,
                                         breaks=c(.25, 2, cumsum(tail(d$y, 2))),
                                         labels=c(""minimum value"",
                                                  ""maximum value"",
                                                  ""current value"",
                                                  ""addon"")))
p
```
",https://github.com/tidyverse/ggplot2/pull/2934,ggplot2
JHonaker,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/2926,2018-10-03T01:25:09Z,2020-05-03T04:08:53Z,2020-05-03T04:08:53Z,"Referencing #2472, I added the parameters bins, binwidth, and breaks to the stat_contour and geom_contour parameter lists. For some reason they were undocumented (except in the examples), but still available for use.

There was also an unused parameter ""complete."" I couldn't find any reference to it in either function, so I removed it as well. If there's a reason that it shouldn't be removed, like a future feature, I can revert it.",https://github.com/tidyverse/ggplot2/pull/2926,ggplot2
batpigandme,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2925,2018-10-01T22:08:53Z,2019-03-30T23:08:47Z,2018-10-01T22:16:13Z,* Per #2890,https://github.com/tidyverse/ggplot2/pull/2925,ggplot2
yutannihilation,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/2924,2018-10-01T21:24:05Z,2019-05-13T00:35:41Z,2018-11-14T00:11:09Z,"Fixes #2922 

Currently, `element_grob.element_line()` doesn't specify `fill` in `gpar()`. This PR specifies it to fill arrows.

``` r
library(ggplot2)

arrow = arrow(angle=10, type = ""closed"")
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) +
  geom_point() +
  theme(axis.line = element_line(arrow=arrow)) +
  annotate(""segment"", x = 3, xend = min(iris$Sepal.Length), y = 4, yend = 3, arrow=arrow)
```

![](https://i.imgur.com/pSnv8eP.png)

<sup>Created on 2018-10-02 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>

Note that, for consistency with `geom_segment()` and `geom_curve()`, `element_line()` might needs `arrow.fill` parameter, but it seems a bit harder to introduce a new parameter to theme. So, users need to rely on [this workaround](https://github.com/tidyverse/ggplot2/issues/2922#issuecomment-425943633) if they want different colours.",https://github.com/tidyverse/ggplot2/pull/2924,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2923,2018-10-01T21:17:49Z,2019-03-30T23:08:52Z,2018-10-01T22:15:35Z,"I decided I should send out anyway, since that's policy.",https://github.com/tidyverse/ggplot2/pull/2923,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2921,2018-09-30T22:46:17Z,2019-03-30T18:08:42Z,2018-10-01T17:37:54Z,"I have taken a first stab at NEWS.md.

@hadley According to the [style guide](http://style.tidyverse.org/news.html#before-release), package authors should not be listed for items they wrote. Do you want me to remove @clauswilke and @karawoo from all 3.1.0 news items? (I think no other contributors are official authors.)

 ",https://github.com/tidyverse/ggplot2/pull/2921,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2920,2018-09-30T21:31:01Z,2019-05-04T18:58:14Z,2018-11-05T17:58:42Z,"For after the 3.1.0 release: This small change enables legend drawing for scales that take lists of complex objects.

Example:

``` r
library(ggplot2)
library(ggtextures)
library(magick)
#> Linking to ImageMagick 6.9.9.39
#> Enabled features: cairo, fontconfig, freetype, lcms, pango, rsvg, webp
#> Disabled features: fftw, ghostscript, x11

images <- list(
  giraffe = image_read_svg(""http://steveharoz.com/research/isotype/icons/giraffe.svg""),
  elephant = image_read_svg(""http://steveharoz.com/research/isotype/icons/elephant.svg""),
  horse = image_read_svg(""http://steveharoz.com/research/isotype/icons/horse.svg"")
)

data <- data.frame(
  count = c(5, 3, 6),
  animal = c(""giraffe"", ""elephant"", ""horse"")
)

ggplot(data, aes(animal, count, image = animal)) +
  geom_isotype_col() +
  scale_image_manual(values = images) +
  theme_minimal()
```

![](https://i.imgur.com/irIblyq.png)

<sup>Created on 2018-09-30 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>",https://github.com/tidyverse/ggplot2/pull/2920,ggplot2
topepo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2919,2018-09-29T13:21:16Z,2019-03-28T15:48:43Z,2018-09-29T15:10:08Z,,https://github.com/tidyverse/ggplot2/pull/2919,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2916,2018-09-28T14:36:13Z,2019-03-27T17:43:39Z,2018-09-28T16:50:57Z,,https://github.com/tidyverse/ggplot2/pull/2916,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2913,2018-09-26T22:16:35Z,2019-03-26T13:46:00Z,2018-09-27T13:31:00Z,This PR keeps the currently released ggtern working with ggplot2.,https://github.com/tidyverse/ggplot2/pull/2913,ggplot2
topepo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2912,2018-09-26T11:13:08Z,2019-03-25T14:57:25Z,2018-09-26T14:14:26Z,,https://github.com/tidyverse/ggplot2/pull/2912,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2898,2018-09-18T20:33:38Z,2019-03-18T14:07:19Z,2018-09-19T13:43:22Z,This PR closes #2893.,https://github.com/tidyverse/ggplot2/pull/2898,ggplot2
dpseidel,MEMBER,closed,10,https://github.com/tidyverse/ggplot2/pull/2886,2018-09-08T05:34:20Z,2019-03-12T19:57:36Z,2018-09-13T19:08:52Z,This PR regenerates the visual test case files using the development version of vdiffr which now uses `ggplot2::theme_test()` rather than an internal function to allow for easy editing. The shift changes plot dimensions slightly for all plots for which `theme_test()` is applied because of minor differences between the theme specifications -- see lionel-/vdiffr#40 for more details. ,https://github.com/tidyverse/ggplot2/pull/2886,ggplot2
clauswilke,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2881,2018-09-04T22:23:54Z,2019-03-12T22:57:34Z,2018-09-13T22:27:45Z,"Thanks to @slowkow's work on label parsing, I can now see how to make parsing of labels configurable in `coord_sf()`. With this PR, labels are only autoparsed if they were actually generated by `sf::st_graticule()`. Otherwise, they only get parsed if explicitly requested in `coord_sf()`.
",https://github.com/tidyverse/ggplot2/pull/2881,ggplot2
yutannihilation,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/2878,2018-09-04T05:05:59Z,2019-03-03T20:48:58Z,2018-09-04T16:34:35Z,"Minor document fix. This closes #2877.

`geom_path()` (and its family functions) handles `NA` in this manner:

* If `NA` is at the middle of the line, it breaks the line and doesn't show any warnings (so, `na.rm` doesn't matter here)
* If `NA` is at the start or the end of the line and `na.rm` is `FALSE` (default), it removes the `NA` with a warning.
* If `NA` is at the start or the end of the line and `na.rm` is `TRUE`, it silently removes the `NA`.

This PR is intended to improve the document of `geom_path()` to illustrate this behaviour well.",https://github.com/tidyverse/ggplot2/pull/2878,ggplot2
clauswilke,MEMBER,closed,15,https://github.com/tidyverse/ggplot2/pull/2875,2018-08-30T15:11:03Z,2019-05-14T22:30:44Z,2018-11-15T21:35:35Z,"This PR creates a general framework for custom layers that have access to the global plot data. It provides a solution to the problem that we're combining layers with `+` instead of `%>%`, and it closes #2872. ",https://github.com/tidyverse/ggplot2/pull/2875,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2874,2018-08-29T14:51:11Z,2019-02-28T20:00:03Z,2018-09-01T19:09:42Z,"This closes #2733.

``` r
library(ggplot2)

df <- data.frame(
  x = c(1,3,2,5),
  y = c(""a"",""c"",""d"",""c"")
)

ggplot(df, aes(x, y)) +
  geom_point() +
  geom_text(aes(label = y), position = position_nudge(x = 0.2, y = -0.1))
```

![](https://i.imgur.com/66SSFxR.png)

``` r

df <- data.frame(x = factor(""x""), y = 1:10)
ggplot(df, aes(x = x, y = y)) +
  geom_boxplot(position = position_nudge(x = -0.2, y = 0)) +
  geom_vline(xintercept = 1)
```

![](https://i.imgur.com/nnvB0IW.png)

``` r
  
df <- data.frame(
  x = factor(c(""preop"", ""3m"", ""1w"", ""1d"", ""1w"", ""3w"", ""1d"",
               ""1d"", ""1w"", ""3m"", ""1d"", ""1w"", ""6m"", ""preop"",
               ""6m"", ""6w"", ""6w"", ""preop"", ""3w"", ""6m""),
             levels = c(""preop"", ""1d"", ""1w"", ""3w"", ""6w"",
                        ""3m"", ""6m"")),
  y = c(14, 10, 13, 12, 10, 11, 7, 14, 15, 18, 15, 9, 17,
        26, 8, 8, 14, 23, 21, 13)
)
ggplot(df, aes(x = x, y = y)) +
  geom_boxplot(width = .3, position = position_nudge(x = -0.2, y = 0),
               outlier.shape=NA) +
  geom_dotplot(binaxis = ""y"", binwidth = 0.5, dotsize = 0.7)
```

![](https://i.imgur.com/x1d72sf.png)

Created on 2018-08-29 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).",https://github.com/tidyverse/ggplot2/pull/2874,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2871,2018-08-29T05:05:02Z,2019-02-25T14:04:48Z,2018-08-29T13:22:58Z,"Validate mapping before data in layer(). Closes #2862

``` r
library(ggplot2)
library(magrittr)

ggplot(mtcars, aes(mpg, cyl)) %>%
  geom_point()
#> Error: `mapping` must be created by `aes()`
#> Did you use %>% instead of +?

ggplot(mtcars) %>%
  geom_point(aes(mpg, cyl))
#> Error: `mapping` must be created by `aes()`
#> Did you use %>% instead of +?

ggplot(mtcars) +
  geom_point(aes(mpg, cyl), list())
#> Error: `data` must be a data frame, or other object coercible by `fortify()`, not a list
```

Created on 2018-08-29 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).",https://github.com/tidyverse/ggplot2/pull/2871,ggplot2
slowkow,CONTRIBUTOR,closed,22,https://github.com/tidyverse/ggplot2/pull/2867,2018-08-28T16:19:50Z,2019-03-03T17:49:00Z,2018-09-04T16:30:09Z,"The built in `parse()` function silently drops items:

    length(parse(text = c(""alpha"", """", ""gamma"")))

We expect the length to be 3, but instead it is 2.

So, we add a new function `parse_safe()` that keeps all items.

This addresses issue #2864",https://github.com/tidyverse/ggplot2/pull/2867,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2858,2018-08-26T03:07:25Z,2019-02-23T19:53:06Z,2018-08-27T19:28:05Z,"This PR closes #2857. It enables most ways in which axis tick labels can normally be set for `coord_sf()`. The main limitation is that it can only accept character vectors. Parsed expressions will not work. (However, strings that contain the degree symbol will automatically be parsed into expressions.)

``` r
library(sf)
#> Linking to GEOS 3.6.1, GDAL 2.1.3, proj.4 4.9.3
library(ggplot2) 

nc <- st_read(system.file(""gpkg/nc.gpkg"", package=""sf""))
#> Reading layer `nc.gpkg' from data source `/Library/Frameworks/R.framework/Versions/3.5/Resources/library/sf/gpkg/nc.gpkg' using driver `GPKG'
#> Simple feature collection with 100 features and 14 fields
#> geometry type:  MULTIPOLYGON
#> dimension:      XY
#> bbox:           xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965
#> epsg (SRID):    4267
#> proj4string:    +proj=longlat +datum=NAD27 +no_defs

# explicitly supply label values
ggplot() + 
  geom_sf(aes(fill = AREA), data=nc) + 
  coord_sf() +
  scale_x_continuous(labels = letters[1:5]) +
  scale_y_continuous(
    breaks = c(34, 34.5, 35.7),
    labels = c(""A"", ""B"", ""C"")
  )
```

![](https://i.imgur.com/mU8fmPa.png)

``` r

# set to NULL to remove labels
ggplot() + 
  geom_sf(aes(fill = AREA), data=nc) + 
  coord_sf() +
  scale_x_continuous(labels = NULL) +
  scale_y_continuous(
    breaks = c(34, 34.5, 35.7),
    labels = NULL
  )
```

![](https://i.imgur.com/cXEjVQL.png)

``` r

# format via function
ggplot() + 
  geom_sf(aes(fill = AREA), data=nc) + 
  coord_sf() +
  scale_x_continuous(
    breaks = c(-84, -80, -76),
    labels = function(x) paste0(x, ""*degree*East"")
  ) +
  scale_y_continuous(
    breaks = c(34, 34.5, 35.7),
    labels = function(x) paste0(x, ""*degree*North"")
  )
```

![](https://i.imgur.com/krbIuqp.png)

``` r

# error if length mismatch
ggplot() + 
  geom_sf(aes(fill = AREA), data=nc) + 
  coord_sf() +
  scale_x_continuous(labels = letters[1:4])
#> Error: Breaks and labels along x direction are different lengths
```
Created on 2018-08-25 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).

",https://github.com/tidyverse/ggplot2/pull/2858,ggplot2
clauswilke,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/2856,2018-08-25T14:48:41Z,2019-02-28T22:00:03Z,2018-09-01T21:48:58Z,"As discussed under #2842. I have purposefully committed a breaking visual test, so if everything is right with this initial PR then the release build will fail and all others will succeed.",https://github.com/tidyverse/ggplot2/pull/2856,ggplot2
yutannihilation,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/2854,2018-08-24T14:05:16Z,2019-03-17T02:55:06Z,2018-09-18T02:38:57Z,"This is suggested in https://github.com/tidyverse/ggplot2/pull/2761#discussion_r211114877.

The current error messages are like:

> Specify either `position` or `nudge_x`/`nudge_y`

@clauswilke's suggestion is:

> `position` and `width`/`height` cannot both be specified. Please specify only one

I feel the latter follows [the tidyverse style](http://style.tidyverse.org/error-messages.html) of error messages; it consists of ""problem statement"" + ""hint"".",https://github.com/tidyverse/ggplot2/pull/2854,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2853,2018-08-23T22:26:49Z,2019-02-20T18:01:59Z,2018-08-24T14:44:29Z,"Found when looking at #2850. The error message in `compute_aesthetics()` should show the names of aesthetics with mismatched lengths, but as written it showed the names of all aesthetics.",https://github.com/tidyverse/ggplot2/pull/2853,ggplot2
clauswilke,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2849,2018-08-23T18:13:11Z,2019-03-14T17:07:08Z,2018-09-15T16:14:04Z,"This PR makes graticule labeling configurable. This closes #2846.

**Edit 9/14/2018: I've removed outdated examples. New examples are provided below.**
",https://github.com/tidyverse/ggplot2/pull/2849,ggplot2
alistaire47,CONTRIBUTOR,closed,8,https://github.com/tidyverse/ggplot2/pull/2847,2018-08-22T21:55:23Z,2019-02-19T15:18:54Z,2018-08-23T15:02:38Z,"This closes #2826, allowing `lineend`, `linejoin`, and `linemitre` arguments to be passed through `geom_sf`. I copied the defaults directly from `geom_path`, so this shouldn't alter the results of current code.

The only change I had to make beyond what Claus mentioned on the issue was assigning the parameters to `coord` so they get passed through to `sf_grob`. There may be a simpler way to structure that. If so, let me know and I'll refactor.

For now, I decided against adding them as explicit parameters to `geom_sf`, as while it would make sense for lines, it would sound like they'd apply to polygons, too, which they wouldn't, and thus may cause more confusion than it'd remove.

This builds and performs fine. I didn't add any tests, as the `geom_sf` tests don't currently test its line behavior, but can if you like. I do get an error when checking due to the `economics_long` dataset. I didn't touch it, but it gives me a C++ error when printed, even though `str` works fine: 

```r
> economics_long
Error: Not compatible with STRSXP: [type=list].
```
I suspect this means I've got a dependency issue with tibble or something, but I can't figure out what. I presume that if it has been working in CI builds, it will continue to do so.

Apologies for the extra commits in there; I realized too late that I didn't rebase fully. They shouldn't do anything at this point, so if there's some git-fu to clean them out, I'd be happy to remove them.",https://github.com/tidyverse/ggplot2/pull/2847,ggplot2
dpseidel,MEMBER,closed,16,https://github.com/tidyverse/ggplot2/pull/2842,2018-08-20T16:31:26Z,2019-03-07T05:11:12Z,2018-08-21T22:34:41Z,Closes #2824 ,https://github.com/tidyverse/ggplot2/pull/2842,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2841,2018-08-18T21:38:14Z,2019-02-14T23:37:00Z,2018-08-18T22:43:18Z,"This PR is meant to run a test on travis, not for merging.",https://github.com/tidyverse/ggplot2/pull/2841,ggplot2
brodieG,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/2840,2018-08-18T19:55:33Z,2019-02-18T03:22:32Z,2018-08-22T02:49:23Z,"The 'palette' parameter has different usage in continuous
vs discrete scales, and the documentation described the
discrete usage.",https://github.com/tidyverse/ggplot2/pull/2840,ggplot2
clauswilke,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/2836,2018-08-18T03:57:44Z,2019-02-16T14:33:33Z,2018-08-20T13:39:15Z,This PR adds the calling environment to the transformation evaluation in the secondary axis. This closes #2835.,https://github.com/tidyverse/ggplot2/pull/2836,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2834,2018-08-17T23:51:08Z,2019-02-14T17:37:01Z,2018-08-18T16:37:35Z,,https://github.com/tidyverse/ggplot2/pull/2834,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2833,2018-08-17T18:16:06Z,2019-02-14T00:52:35Z,2018-08-17T22:59:14Z,This PR updates .Rd files. No other changes were made.,https://github.com/tidyverse/ggplot2/pull/2833,ggplot2
clauswilke,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2832,2018-08-17T02:43:07Z,2019-02-19T20:42:55Z,2018-08-23T19:43:24Z,"This PR fixes #2149 and #2812. It is essentially the same as PR #2821, except here the `range()` function is not renamed. This makes this a non-breaking fix that should be good for 3.0.1. I'm keeping PR #2821 open for its API cleanup, which I think is still appropriate but should be done later.",https://github.com/tidyverse/ggplot2/pull/2832,ggplot2
jimhester,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2823,2018-08-10T15:45:46Z,2019-02-06T20:23:40Z,2018-08-10T19:59:26Z,Fixes #2822,https://github.com/tidyverse/ggplot2/pull/2823,ggplot2
clauswilke,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/2821,2018-08-10T14:23:05Z,2019-03-24T15:14:05Z,2018-09-25T14:26:16Z,"This is a starting point for a conversation of how to fix #2149 and #2812. I realize the regression tests don't pass yet.

The key to fixing these bugs is to recognize that the `range()` function in `Coord` is meant to back-transform transformed ranges into data coordinates. It is only ever used in this way:
```
wilke$ grep -e '$range(' R/*
R/coord-munch.r:  ranges <- coord$range(range)
R/geom-abline.r:    ranges <- coord$range(panel_params)
R/geom-hline.r:    ranges <- coord$range(panel_params)
R/geom-vline.r:    ranges <- coord$range(panel_params)
```
and the API only makes sense with this interpretation: The function takes panel ranges as argument and returns ranges. If it doesn't back-transform, what else should it do? Also, it is written in this way for `coord_flip()` and `coord_polar()` already.

To make the meaning of the function more explicit, I have renamed it from `range()` to `backtransform_range()`. However, this is a breaking change if any geoms out in the world use this function. Alternatively, we could keep the current (confusing) name and just document better.

Reprex with fixed examples follows below. These geoms don't work at all yet with `coord_sf()`, but there appears to be a separate issue that needs to be fixed first (#2820).

``` r
library(ggplot2)
library(scales)
library(tibble)

# original example from #2149
df <- data.frame(x=1:6, y=10^(1:6))
ggplot(df, aes(x, y)) +
  geom_point() +
  geom_vline(xintercept=3, color='red') +
  coord_trans(y='log10')
```

![](https://i.imgur.com/mpODPJt.png)

``` r

# original example from #2812
mydf <- data.frame(x = 0L:20,
                   y = -10:10)
ggplot(data = mydf, aes(x, y)) + 
  geom_point() + 
  coord_trans(x = ""log1p"") +
  geom_hline(yintercept = c(-10, 10))
```

![](https://i.imgur.com/FrxzLQE.png)

``` r

# original example from #2340
log_modulus_trans <- function() 
  trans_new(name = ""log_modulus"", 
            transform = function(x) sign(x) * log(abs(x) + 1), 
            inverse = function(x) sign(x) * ( exp(abs(x)) - 1 ))

set.seed(1)
d <- data_frame(
  tt = rep(1:10, 3),
  cc = rep(LETTERS[1:3], each = 10),
  xx = c(rnorm(10, mean = 100, sd = 10), 
         rnorm(10, mean = 0, sd = 10),
         rnorm(10, mean = -100, sd = 10)))

ggplot(data = d, 
       mapping = aes(x = tt, y = xx, group = cc)) +
  geom_line() + 
  geom_vline(xintercept = 5) +
  coord_trans(y = ""log_modulus"")
```

![](https://i.imgur.com/oxi8J3R.png)

``` r

# examples with geom_line(), from #2149
df <- data.frame(x = c(-Inf, Inf), y = c(1, 2))
p <- ggplot(df, aes(x, y)) + geom_line() + xlim(1, 2)
p + coord_polar()
```

![](https://i.imgur.com/ae5UAAM.png)

``` r
p + coord_trans(y = ""log10"")
```

![](https://i.imgur.com/w9MTpJw.png)

``` r
p + coord_trans(x = ""log10"")
```

![](https://i.imgur.com/C7TtMmz.png)

Created on 2018-08-10 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).",https://github.com/tidyverse/ggplot2/pull/2821,ggplot2
dpseidel,MEMBER,closed,15,https://github.com/tidyverse/ggplot2/pull/2817,2018-08-09T21:15:04Z,2020-08-13T12:30:25Z,2020-08-13T12:30:24Z,"This PR is a WIP. Inspired by [this article](http://rnotr.com/ggplot/plotly/arabic-plots/), I have begun playing around with how to implement RtL plotting in ggplot2. Though there seems to be some debate about what is a [correct](https://www.quora.com/In-right-to-left-languages-are-chart-axes-drawn-differently) [implementation](https://ux.stackexchange.com/questions/42895/right-to-left-graph-labels-for-right-to-left-languages) of RtL axes and it seems many RtL languages plot LtR anyhow, I think the functionality is really neat and ggplot2 should consider adding features that make it possible for the audiences that would use it. In that vein.... 

Currently this implementation was really quite simple.  I simply adapted `coord_flip()` to create a new `coord_mirror()` and then added a new `theme_rtl()`. This doesn't yet deal with the text encoding issue mentioned in the original article but as they note much of that is OS specific so possibly/probably outside the scope of ggplot2. 

As currently implemented, a RtL plot requires 3 specifications: the new theme, the new coord, and (at least for continuous data) `scale_x_reverse()`. I wonder if there is a better way to go about this or a way to bundle these three elements together in some sort of default. Example below:
``` r
library(ggplot2)
library(tibble)
df <- tibble(x = 1:10, y = 1:10, z = rep(c(""A"", ""B""), 5))
ggplot(df, aes(x, y, col = z)) + 
  geom_point() + 
  coord_mirror() + 
  theme_rtl() + 
  scale_x_reverse() +
  ggtitle(""Right Aligned Title"")
```

![](https://i.imgur.com/YcyG5it.png)

``` r

df2 <- tibble(x = letters[1:10], y = 1:10, z = rep(c(""A"", ""B""), 5))
ggplot(df2, aes(x, y, col = z)) + 
  geom_point() + 
  coord_mirror() + 
  theme_rtl() +
  ggtitle(""Right Aligned Title"")
```

![](https://i.imgur.com/YgAPJol.png)

@isteves has been super helpful in thinking about this, and may have some opinions to add to any discussion or iteration so I'm tagging her here. ",https://github.com/tidyverse/ggplot2/pull/2817,ggplot2
dpseidel,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2816,2018-08-09T20:35:32Z,2019-02-06T23:23:40Z,2018-08-10T23:13:21Z,"This PR implements tidy eval in benchplot(). Or tries to 🤣.

This implementation, using `enquo()` before the evaluation supports the original use case of `benchplot()` and matches it's current behaviour, and now works if passed an unquoted expression. Note that passing ggplot object `p` instead of a call or an expression leads to incorrect construct estimates because the call is previously evaluated.

``` r
library(ggplot2)
p <- ggplot(mtcars, aes(mpg, cyl)) + geom_point()
benchplot(p)
#>        step user.self sys.self elapsed
#> 1 construct     0.001    0.000   0.000
#> 2     build     0.044    0.001   0.045
#> 3    render     0.076    0.007   0.091
#> 4      draw     0.073    0.012   0.105
#> 5     TOTAL     0.194    0.020   0.241

q <- expr(ggplot(mtcars, aes(mpg, cyl)) + geom_point())
benchplot(!!q)
#>        step user.self sys.self elapsed
#> 1 construct     0.002    0.000   0.002
#> 2     build     0.010    0.000   0.011
#> 3    render     0.053    0.004   0.063
#> 4      draw     0.069    0.011   0.101
#> 5     TOTAL     0.134    0.015   0.177
```

Is this more what you had in mind @hadley? If so, I'll add some tests for good measure, and an example or two to the documentation. If not, I'll take another stab at it with your feedback 😄. I vow to develop proper intuition about tidy eval eventually! I kept the original commit/formulation without proper quotation just for posterity and in case you want a full look at my original implementation. Of course if you prefer I can rewrite history (i.e. rebase and drop some commits) for a clean PR.

This will close #2699. ",https://github.com/tidyverse/ggplot2/pull/2816,ggplot2
clauswilke,MEMBER,closed,12,https://github.com/tidyverse/ggplot2/pull/2813,2018-08-08T16:06:11Z,2019-03-11T22:38:00Z,2018-09-12T22:28:33Z,"This is an attempt at fixing #2801. Not sure this is ready to merge yet. One problem I see is that the violins are always moved to the left of the reference point, even if they should be moved to the right. Not sure how `position_dodge()` could know how to do this right.

Also, does a similar problem occur in `position_dodge2()`?

``` r
library(ggplot2)
p <- ggplot(mtcars, aes(factor(cyl), mpg))

# effect on geom_boxplot()
p + geom_boxplot(aes(fill = factor(vs)), position = ""dodge"")
```

![](https://i.imgur.com/8BgzWdz.png)

``` r
p + geom_boxplot(aes(fill = factor(vs)), position = position_dodge(preserve = ""single""))
```

![](https://i.imgur.com/SNxSQsM.png)

``` r

# effect on geom_violin()
p + geom_violin(aes(fill = factor(vs)), position = ""dodge"")
```

![](https://i.imgur.com/cUurBJ1.png)

``` r
p + geom_violin(aes(fill = factor(vs)), position = position_dodge(preserve = ""single""))
```

![](https://i.imgur.com/6Y00YUj.png)

Created on 2018-08-08 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).",https://github.com/tidyverse/ggplot2/pull/2813,ggplot2
krlmlr,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2808,2018-08-07T17:15:54Z,2019-03-16T10:30:20Z,2018-09-15T15:32:33Z,"The `default` argument appears to be unused, this PR updates the documentation.",https://github.com/tidyverse/ggplot2/pull/2808,ggplot2
krlmlr,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/2807,2018-08-07T17:14:29Z,2019-03-16T10:30:22Z,2018-09-15T15:54:11Z,"The reprex below triggered the investigation that led to possible instances where ""brittle closures"" are returned. I have no idea if the other instances I found have an effect, but it feels like good practice to force arguments that are used by closures.

Happy to add tests as necessary.

``` r
library(tidyverse)

scale <- c(""red"", ""green"", ""blue"")

p <-
  ggplot(iris, aes(Petal.Length, Petal.Width, color = Species)) +
  geom_point() +
  scale_color_manual(values = unlist(scale), labels = levels(iris$Species))

scale <- scale[-1]

p
```

![](https://i.imgur.com/ulYQCdH.png)

> Created on 2018-08-07 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).",https://github.com/tidyverse/ggplot2/pull/2807,ggplot2
dpseidel,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/2806,2018-08-06T23:50:27Z,2019-03-17T17:31:28Z,2018-09-18T17:00:29Z,"This PR implements secondary axes for date, time, datetime scales. Closes #2244.",https://github.com/tidyverse/ggplot2/pull/2806,ggplot2
dpseidel,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2805,2018-08-06T23:17:36Z,2019-02-06T17:23:38Z,2018-08-10T16:35:57Z,"PR #2095 changed the order in which the range a secondary axis was transformed, sampled, and tested for monotonicity. Sampling over the transformed space rather than the original scale caused the monotonicity test on the secondary axis to fail for certain transformations. This PR fixes those failures by sampling on the original scale rather than the transformed scale, effectively a partial reversal of PR #2095 whose motivating problem was fixed in an alternative way by #2796. ",https://github.com/tidyverse/ggplot2/pull/2805,ggplot2
dpseidel,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2797,2018-08-02T20:35:14Z,2019-02-04T17:53:00Z,2018-08-06T20:58:06Z,"This PR make a small change to the evaluation of the transform formula of secondary axes to support plots created with tidy evaluation when calling `sec_axis()`. Fixes #2788. 

This PR solves the original issue, and does not break any other secondary axis transformations, but if there is a better way to implement this or something this might break downstream that I'm not seeing, please advise. ",https://github.com/tidyverse/ggplot2/pull/2797,ggplot2
dpseidel,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2796,2018-08-02T20:15:04Z,2019-02-04T17:52:58Z,2018-08-06T21:27:20Z,"This PR simplifies the creation of secondary axes to use the transformation of the primary axis when setting breaks and labels rather than relying on an identity transform in all cases. This is a fix for #2729 which was caused by the identity trans calling `extended_breaks()` by default while the breaks on the primary axis were created by `log_breaks()` as is default for log-transformed axes. 

@thomasp85 As I mentioned this morning, my original fix just used a simple conditional to force log transformed axes to use `log_breaks()` but after you mentioned the identity trans this morning I decided to take another look at setting the new scale's `trans` argument by the primary transformation.  Ultimately this solves the problem at its source, and is a much more general fix. For instance, `dup.axis()` should now respect any custom breaks function fed to a custom transformation used on the primary axis. Plus it  drastically simplifies the code for building a secondary axis and makes implementation for `scale_*_date()`/`scale_*_datetime()` fairly straightforward. In fact I have already implemented sec.axis for these scales on a separate branch and will create a separate PR when this or some iteration of this is merged. Thanks again for making the time this morning, especially given my tardiness. 

I've added some new tests, examined numerous plots, and not yet found a case where this breaks anything or significantly changes behavior, but a careful review is warranted.",https://github.com/tidyverse/ggplot2/pull/2796,ggplot2
dpseidel,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2792,2018-07-31T22:43:50Z,2019-03-12T19:57:34Z,2018-09-13T19:25:13Z,"This PR should be considered a WIP and a place for discussion as we decide whether or not to pursue silver and gold badging from CII.

This first commit adds a code of conduct (`usethis::use_tidy_coc`) and makes explicit the policy of adding tests for each new feature in our CONTRIBUTING.md

Next documentation updates to achieve silver would be:
- [x] code of conduct
- [x] document testing policy 
- [x] document governance model
    could be as simple as ""Project owner makes all final decisions""
- [x] document roles and responsibilities
    maintainer/author/contributor designation on description could possibly suffice, if we added/linked to definition of those roles somewhere. 
- [ ] document security requirements 
    ""what the user can and cannot expect in terms of security from the software produced""
- [ ] document vulnerability report process
- [ ] document security assurance case 
- [ ] posting of the passing badge on our front page

gold requires 
- [ ]  documentation of code review practices/standards
- [ ] a copyright statement added to each source file
- [ ] a license statement added to each source file 

among other things related to security or testing practices. This PR only relates to the necessary documentation changes. See the boiled down list of remaining requirements for ggplot2 at #2700, which also contains a link to the full badging checklist.

If it is determined that we should not pursue beyond a passing badge, this PR can be closed, or merged as is, given the updates to contributing.md and the additional of a COC are probably desirable in their own right. 

It's perhaps worth noting there is still at least one hurdle keeping us from a passing badge and which is a requirement for any higher level badge. Read more at #2700 ",https://github.com/tidyverse/ggplot2/pull/2792,ggplot2
dpseidel,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2791,2018-07-31T22:19:31Z,2019-02-04T17:52:55Z,2018-08-07T19:10:21Z,"This is a PR to update the `theme()` documentation with feedback from #2727 and as a part of #2553 

includes:
- linking `element_*()` throughout doc
- documenting parameters together according to inheritance to reduce cognitive load
- updating the intro paragraph 
- linking to aesthetics vignette. ",https://github.com/tidyverse/ggplot2/pull/2791,ggplot2
jiho,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/2786,2018-07-29T12:20:46Z,2019-10-08T10:09:13Z,2019-04-11T09:21:52Z,"Facets are meant to display different subsets of the same data.

However, with data in the ""long"" format (i.e. several variables stacked
in the same column and an additional column indicating which is which),
they can also be used to create the same plot for several variables
(e.g. a histogram). In that case, the scales are often free (the
variables are different and hence often do not have the same unit).

The problem with that approach is that the axis title is often a generic,
uninformative word (e.g. ""values"") while the real labels for the axis
are the facet labels, which are on the wrong side of the plot.

These functions use `facet_wrap` and `facet_grid` to create subplots and
adjust the position and aspect of the facet labels to make them look like
axis titles.",https://github.com/tidyverse/ggplot2/pull/2786,ggplot2
clauswilke,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/2784,2018-07-28T13:59:16Z,2020-01-12T03:26:58Z,2019-11-15T21:17:39Z,"This PR addresses issue #2540, enabling of user-defined theme elements.

I have added the option to change the element tree of the theme through the theme itself. The main change I had to make to make this happen is that I had to move theme validation from the `theme()` function to plot rendering. This means that with this PR the `theme()` function takes pretty much anything without complaint, the error happens only once we have the entire theme for rendering:

``` r
library(ggplot2)

# not an error anymore, validation has been moved to
# final plot rendering
t <- theme_gray() + theme(text = 0)

# error
ggplot() + t
#> Error: Theme element `text` must be an `element_text` object.

# without validation, we get a different error
ggplot() + theme(text = 0, validate = FALSE)
#> Error in FUN(X[[i]], ...): text should have class element_text
```

Created on 2018-07-28 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).

Now, as an example of how this works, we create a new element type and use it instead of `element_text()` for the x axis title:
``` r
library(ggplot2)
library(rlang)

# define a new text element that rotates text 90 degrees relative to the angle provided.
# this could be done more easily by making ""element_rot_text"" derive from ""element_text"", 
# but the point here is to show that this can now be done without inheritance.
element_rot_text <- function(family = NULL, face = NULL, colour = NULL,
                             size = NULL, hjust = NULL, vjust = NULL, angle = NULL, lineheight = NULL,
                             color = NULL, margin = NULL, debug = NULL, inherit.blank = FALSE) {
  
  if (!is.null(color))  colour <- color
  structure(
    list(family = family, face = face, colour = colour, size = size,
         hjust = hjust, vjust = vjust, angle = angle, lineheight = lineheight,
         margin = margin, debug = debug, inherit.blank = inherit.blank),
    class = c(""element_rot_text"", ""element"")
  )
}

element_grob.element_rot_text <- function(element, angle = NULL, ...) {
  angle <- (angle %||% 0) + 90
  ggplot2:::element_grob.element_text(element, angle = angle, ...)
}

merge_element.element_rot_text <- function(new, old) {
  if (!inherits(old, ""element_rot_text"") && 
      !inherits(old, ""element_text"")) {
    stop(""Can't merge elements"", call. = FALSE)
  }
  # Override NULL properties of new with the values in old
  # Get logical vector of NULL properties in new
  idx <- vapply(new, is.null, logical(1))
  # Get the names of TRUE items
  idx <- names(idx[idx])
  
  # Update non-NULL items
  new[idx] <- old[idx]
  
  new
}

# make plot
p <- ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species)) +
  geom_point()

# error, we haven't changed the element tree
p + theme(axis.title.x = element_rot_text())
#> Error: Theme element `axis.title.x` must be an `element_text` object.

# it works if we change the element tree appropriately
p + theme(
  axis.title.x = element_rot_text(),
  element_tree = list(
    axis.title.x = el_def(""element_rot_text"", ""text"")
  )
)
```

![](https://i.imgur.com/jjdXSL8.png)

Created on 2018-07-28 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).
",https://github.com/tidyverse/ggplot2/pull/2784,ggplot2
gregrs-uk,CONTRIBUTOR,closed,9,https://github.com/tidyverse/ggplot2/pull/2782,2018-07-27T14:34:31Z,2019-01-27T20:56:10Z,2018-07-31T18:20:23Z,"Specify non-support of '`angle` aesthetic' rather than '`rot` parameter', as this is clearer.

It is indeed the case that the `angle` aesthetic isn't supported. You can see below that `geom_text` is rotated but `geom_label` isn't, despite the same aesthetics. Perhaps it's worth adding a warning if you try to use the `angle` aesthetic with `geom_label`, although I'm less sure how you'd go about this.

Do I need to render the file for the `man/` directory?

``` r
library(tidyverse)
#> Warning: package 'dplyr' was built under R version 3.5.1

data <- tibble(
  text = c('one', 'two', 'three'),
  angle = c(0, 45, 90),
  x = c(1, 2, 3)
)

ggplot(data, aes(x)) +
  geom_text(aes(y = 2, label = text, angle = angle)) +
  geom_label(aes(y = 1, label = text, angle = angle))
```

![](https://i.imgur.com/S5nlxRI.png)

Created on 2018-07-27 by the [reprex
package](http://reprex.tidyverse.org) (v0.2.0).",https://github.com/tidyverse/ggplot2/pull/2782,ggplot2
ilarischeinin,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/2781,2018-07-27T09:56:03Z,2019-10-08T16:09:07Z,2019-04-11T15:20:09Z,"This PR adds a new parameter `preset` for `ggsave()` that allows plot width and height (and units) to be specified at once. It recognizes common paper sizes (such as ""a4"" and ""letter""), common screen resolutions (""4k""), and resolution specifications such as ""1920x1080"".

All presets default to landscape orientation, and portrait can be specified by appending an ""r"" (for rotated) to the end of the string. This is similar to the `paper` option for `grDevices::pdf()`, but with landscape being the default as it's probably a more common choice for plots.

(Naturally this new parameter could also be called `paper` instead of `preset`, but 1) that felt a bit too old-fashioned, and 2) might seem odd when making a plot that is to be placed on a sheet of paper together with other elements like text. `size` is another name I considered, but as the function already has a parameter called `limitsize`, I think they would be an odd pair. Anyways, `preset` is just one suggestion and I can rename it as wished.)

For now, some selected [paper sizes](https://en.wikipedia.org/wiki/Paper_size) and [screen resolutions](https://en.wikipedia.org/wiki/Computer_display_standard) are included, but I'm happy to make the list more comprehensive if that seems reasonable.

### Example Usage

```r
library(ggplot2)
p <- ggplot(data.frame(x = rnorm(100), y = rnorm(100)), aes(x, y)) + geom_point()

ggsave(""letter.pdf"", p, preset = ""letter"")
ggsave(""a4r.pdf"", p, preset = ""a4r"")
ggsave(""hd.png"", p, preset = ""HD"")
ggsave(""1920x1080.png"", p, preset = ""1920x1080"")
```",https://github.com/tidyverse/ggplot2/pull/2781,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2780,2018-07-26T21:49:56Z,2019-01-22T23:00:08Z,2018-07-26T22:12:18Z,This fixes #2779.,https://github.com/tidyverse/ggplot2/pull/2780,ggplot2
dpseidel,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2768,2018-07-21T00:01:39Z,2019-02-04T17:52:53Z,2018-08-07T18:46:27Z,"A second round of minor doc fixes throughout stack.  Most of the changes are just towards consistently adding `()` at the end of function names throughout. 

Themes documentation has required the most reworking and will be contained in a separate PR. 

@batpigandme, any chance you would take a look through this 2nd massive PR of mine??? 🙏",https://github.com/tidyverse/ggplot2/pull/2768,ggplot2
yutannihilation,MEMBER,closed,40,https://github.com/tidyverse/ggplot2/pull/2761,2018-07-16T23:27:15Z,2019-02-20T14:36:39Z,2018-08-24T12:59:35Z,"This PR closes #2742.

## Background

It's very convenient that `geom_sf()` automatically chooses the proper geometries (point, line or polygon) based on the type of the simple feature in the data. But, we sometimes want to choose different type of geoms, for example, texts and labels.

However, adding flexibility to `geom_sf()` (or underlying `sf::st_as_grob()`) leads to unmaintainable complexity as discussed in #2111. So, we need to implement it as separate geoms/stats for code simplicity. Here, I propose `geom_sf_label()` and `geom_sf_text()`, and their corresponding stat `stat_sf_coordinates()`.

## Design

### `StatSfCoordinates`

Texts and labels need pairs of `x` and `y`. `StatSfCoordinates` is a stat to provide these via computed variable `x` and `y` (lower letters). `stat_sf_coordinates()` is the `stat_` function corresponding to this.

`X` and `Y` dimensions of  a `sf` object can be retrieved by `sf::st_coordinates()`. But, we cannot simply use `sf::st_coordinates()` texts and labels require exactly one coordinate per geometry whereas it returns multiple locations for a polygon or a line. Instead, these two steps are needed:

1. Choose one point per geometry by some function like `sf::st_centroid()` and `sf::st_point_on_surface()`.
2. Retrieve coordinates from the points by `sf::st_coordinates()`.

For the first step, users can pass arbitrary function via parameter `fun.geometry`. By default, `function(x) sf::st_point_on_surface(sf::st_zm(x))` is used; I think `sf::st_point_on_surface()` is more appropriate than `sf::st_centroid()` since labels and texts usually are intended to be put within the polygon or the line.

### `geom_sf_label()` and `geom_sf_text()`

`geom_sf_label()` and `geom_sf_text()` are basically same with `geom_label()` and `geom_text()` for each, except that:

* they uses `StatSfCoordinates` for `stat`
* they set `geometry` aesthetic automatically just as `geom_sf()` does
* they accept `fun.geometry` argument

## Considerations

### `Z` and `M` dimension

Simple feature objects may have `Z` and/or `M` dimension in addition to `X` and `Y`. These dimensions may be useful, but sometimes they are problematic:

* `M` dimension makes functions like `sf::st_point_on_surface()` and `sf::st_centroid()` fail.
* `Z` dimension may do no harm, but `Z` dimension is not always available in the results.

For simplicity, we simply drop `Z` and `M` and use only `X` and `Y`.

### Warning for longitude/latitude data

Functions that does calculation based on the distances may warn if the on data is in unprojected coordinate system. Though the warnings should not be suppressed, we need to be careful to use `geom_sf_label()` in examples. Otherwise, the tests fail.


## TODOs

- [x] Add tests
- [x] Write more docs about `stat_sf_coordinates()`
- [x] Write more docs about argument `fun.geometry`
    - [x] Write some notes about warnings for longitude/latitude data
- [x] Do we really support `Z` and `M` dimension? (*no*)

## Usages

``` r
library(ggplot2)

nc <- sf::st_read(system.file(""shape/nc.shp"", package = ""sf""), quiet = TRUE)

# texts and labels
p <- ggplot(nc[1:3, ]) +
  geom_sf(aes(fill = AREA))

p + geom_sf_text(aes(label = NAME), colour = ""white"")
#> Warning in st_point_on_surface.sfc(data$geometry): st_point_on_surface may
#> not give correct results for longitude/latitude data
```

![](https://i.imgur.com/X5MmGN5.png)

``` r

p + geom_sf_label(aes(label = NAME))
#> Warning in st_point_on_surface.sfc(data$geometry): st_point_on_surface may
#> not give correct results for longitude/latitude data
```

![](https://i.imgur.com/y5W6gAT.png)

``` r

# using the stat
p + stat_sf_coordinates(colour = ""white"", size = 10)
#> Warning in st_point_on_surface.sfc(data$geometry): st_point_on_surface may
#> not give correct results for longitude/latitude data
```

![](https://i.imgur.com/4DjmZK3.png)

``` r

p +
  geom_errorbarh(
    aes(geometry = geometry,
        xmin = stat(x) - 0.1,
        xmax = stat(x) + 0.1,
        y = stat(y),
        height = 0.04),
    colour = ""white"",
    stat = ""sf_coordinates""
  )
#> Warning in st_point_on_surface.sfc(data$geometry): st_point_on_surface may
#> not give correct results for longitude/latitude data
```

![](https://i.imgur.com/APyqmKz.png)

Created on 2018-08-19 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).
",https://github.com/tidyverse/ggplot2/pull/2761,ggplot2
clauswilke,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2758,2018-07-13T21:48:24Z,2019-02-12T08:41:34Z,2018-08-07T23:20:00Z,Don't create a new graphics device on exist in ggsave(). This should address the remaining issue in #2363 and likely also the issue observed in #2752.,https://github.com/tidyverse/ggplot2/pull/2758,ggplot2
dpseidel,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2755,2018-07-12T22:43:23Z,2019-01-09T19:54:18Z,2018-07-13T02:26:52Z,"Fixes #2717 on the ggplot2 end. Will still need to be updated in tidyverse/style, original issue tidyverse/style#80",https://github.com/tidyverse/ggplot2/pull/2755,ggplot2
dpseidel,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2754,2018-07-11T21:21:53Z,2019-02-03T19:28:30Z,2018-08-07T18:45:01Z,"Fixes #2637 ; Fixes #2706 

This is a minor change switching the order of calls in `layer$compute_geom_1` to call `check_required_aesthetics()` before `geom*$setup_data()` in order to catch missing aesthetics and offer informative error messages. 

This fixes cryptic error messages from `GeomArea`, `GeomCol`, `GeomCrossbar`, `GeomErrorbar`, `GeomErrorbarh`, `GeomLine`, `GeomRaster`, `GeomSpoke`, and `GeomTile`. 

From my analysis this should have no adverse side effects. 

The other Geoms'  were appropriately handled for one of two reasons:

1. their `setup_data()` functions simply return `data` unchanged and therefore did not call any potentially missing aesthetics which caused the cryptic errors before `check_required_aesthetics` was originally called (e.g. GeomPoint, GeomText, GeomRibbon, ...). 

Or,

2.  the missing aesthetics are caught by `stat_*$compute_layer()` and the appropriate warning returned earlier (e.g. GeomBoxplot, GeomSmooth, GeomHex, GeomBar...).


All tests pass and I have checked the new behaviour of all Geoms, but I am open to considering other ways to test this or potential side effects I have not foreseen. I was unsure if the NEWS bullet was warranted but as it fixes two user facing issues I figured it was potentially useful. 
",https://github.com/tidyverse/ggplot2/pull/2754,ggplot2
bjreisman,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2753,2018-07-11T21:16:46Z,2019-01-07T21:31:20Z,2018-07-11T21:27:18Z,small typo correction.,https://github.com/tidyverse/ggplot2/pull/2753,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2750,2018-07-11T11:28:37Z,2019-02-03T23:28:23Z,2018-07-23T15:14:48Z,"This PR closes #2649. It has two parts: (i) It reworks and simplifies renaming of aesthetic names. (ii) It uses the reworked code in the scale functions, to address issues such as #2674.

Part II is straightforward. Part I needs a few words of explanation.

Most importantly, I deleted code that supposedly does partial matching of aesthetic names:
https://github.com/tidyverse/ggplot2/blob/5f49fb4a7b5624f9cc5b8011fc98909d7dbb23fe/R/aes.r#L148-L150
As far as I can tell, this code does not do anything, and certainly does not do partial matching. The reason is that `match()` does not do partial matching:
``` r
match(c(""col"", ""color""), ""color"")
#> [1] NA  1
```

Indeed, in my testing, the current ggplot2 does not do partial matching. It does convert `col` to `colour`, but only because that particular match is listed among the base-to-ggplot conversions:
``` r
library(ggplot2)
# col is renamed to colour. this is special-cased
aes(col = x)
#> Aesthetic mapping: 
#> * `colour` -> `x`

# colo is not renamed. there is no partial matching
aes(colo = x)
#> Aesthetic mapping: 
#> * `colo` -> `x`
```

Second, I've exported a new internal function, `standardise_aes_names()`. This function is needed by anybody who wants to implement their own scales and take advantage of aes standardisation.

With this patch, the following is possible:

``` r
library(ggplot2)
# Create a scale using base-R naming
ggplot(iris, aes(Sepal.Length, Sepal.Width, pch = Species)) +
  geom_point(size = 3) +
  scale_discrete_manual(aesthetics = ""pch"", values = c('+', ""-"", '*'))
```

![](https://i.imgur.com/t3hD7jm.png)

``` r

# The previous example is equivalent to this:
ggplot(iris, aes(Sepal.Length, Sepal.Width, pch = Species)) +
  geom_point(size = 3) +
  scale_shape_manual(values = c('+', ""-"", '*'))
```

![](https://i.imgur.com/B5ti2B7.png)

``` r

# The example from #2674 that doesn't work there works now
ggplot(iris, aes(x = Sepal.Length, y = Petal.Length, color = Sepal.Length, fill = Petal.Length)) +
  geom_point(shape = 21, size = 3, stroke = 2) +
  scale_color_viridis_c(name = ""Length"", option = ""B"", aesthetics = c(""color"", ""fill""))
```

![](https://i.imgur.com/pSPGAdM.png)

Created on 2018-07-11 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0). ",https://github.com/tidyverse/ggplot2/pull/2750,ggplot2
dpseidel,MEMBER,open,28,https://github.com/tidyverse/ggplot2/pull/2749,2018-07-11T05:20:33Z,2021-10-28T02:16:23Z,list(),"## Motivation
The goal of this PR is to allow certain default aesthetics to be set by the plot theme. This can be used to achieve better default behaviours (e.g. plotting white points by default, instead of black, when using `theme_dark()`) and to allow user created themes to more easily control default aesthetics. This PR addresses #2239. 

## Basic Approach
The basic approach is to alter each Geom's `default_aes` from something like:
``` r
# alpha must default to NA to respect RGBA color specification
default_aes = aes(colour = ""black"", size = 0.5, linetype = 1, alpha = NA)
```
to something more like:
``` r
default_aes = aes(
  colour = theme$geom$col,
  fill = theme$geom$fill,
  linetype = 1,
  alpha = NA
)
```
and then evaluate the `default_aes` mappings in an environment conscious of `plot$theme`. Since `aes()` quotes all arguments, I currently I do this by wrapping `default_aes` in `expr()` and evaluating it inside `geom$use_defaults`.  This in turn gets called to build each layer and the guides. Some minor adjustments were also made to handle incomplete themes (I'm confident there is a better way, consider this a temporary patch) and to maintain `update_geom_defaults()` functionality. 

@hadley, I think this is *still* slightly different from the algorithm we originally discussed. You originally indicated that we should evaluate the mappings within the plot environment and then call something like `on.exit(set_geom_theme(NULL))`, to reset to the default expression. I so far have been unable to make this work, and I think it may require our evaluation to happen earlier in the code. If this is still what you have in mind, I can reconsider and refactor the code. I agree it could be more streamline to evaluate these defaults upfront rather than at multiple points in the build, I simply have yet to make that work. 

## Next Steps
This PR is a work in progress. Currently I have only added theme elements `colour` and `fill` and only updated the `default_aes` for `GeomPoint` and `GeomRect`, eventually all geoms will need to be updated.  This will mean making some decisions about how to handle variability across geom defaults.  For example, looking just at `colour`: the default for `geom_smooth()`, `geom_contour()`, `geom_density2d()`, and `geom_quantile()` is all `#3366FF` and the rest of the geoms default to `colour = ""black""` (or `grey20` for boxplots and violins but this can and probably should be `black` also). It would make sense to set the default to `black` in `theme_grey()`, but that either means that `geom_smooth()` et al. should not be coded to inherit from `colour` from `theme()` ever, or these geoms will also be forced to default to black. I lean towards leaving these special defaults hardcoded in these cases as to not change expected behaviour.  This may also influence exactly which elements should be set in themes (eg. `size` has more meaningful variability across geoms that we may want to preserve). A full list of geom defaults is [here](https://gist.github.com/dpseidel/57f28ccc034ccfdd0cf25b6c6c82a635). From my analysis, I suspect we will want to allow `theme()` to set at least `colour`, `fill`,  and `alpha`, potentially also `shape`, `size` and `linetype`. Font `family` and `size` should also be considered but likely should inherit from other text elements set by `theme()`. 

I have not yet updated documentation, added a NEWS bullet, or additional tests as all of this will be done further down the line. This branch does successfully build and pass tests. Running through existing package examples was very useful for finding side effects. 

## Visualizing the changes:
``` r
# theme_grey() is still our default and delivers expected defaults
ggplot(mpg, aes(displ, hwy)) + geom_point()
```

![](https://i.imgur.com/HiEPEuC.png)

``` r
# custom themes can be added to change default colour and fill (other aesthetics may be added in the future)
my_theme <- theme(geom = element_geom(colour = ""purple"", fill = ""darkblue""))
ggplot(mpg, aes(displ, hwy)) + geom_point() + my_theme
```

![](https://i.imgur.com/WSQ6eod.png)

``` r
ggplot(mpg, aes(displ, hwy)) + geom_col() + my_theme
```

![](https://i.imgur.com/bVf4OyY.png)

``` r
# theme dark now stands out automatically with lighter fill and colour defaults
ggplot(mtcars, aes(cyl, mpg)) + geom_col() + theme_dark() 
```

![](https://i.imgur.com/iZ0b0pJ.png)

``` r
# theme had to be fed to guides to be able to handle discrete legends properly
ggplot(mpg, aes(displ, hwy, shape = drv)) + geom_point() + theme_dark()
```

![](https://i.imgur.com/wCUpq7G.png)

``` r
# note that the mapping still overrides theme defaults
ggplot(mpg, aes(displ, hwy, colour = drv)) + geom_point() + my_theme
```

![](https://i.imgur.com/b9UxvGE.png)

``` r
# and params still override all mapped and theme aesthetics
ggplot(mpg, aes(displ, hwy, colour = drv)) + geom_point(colour = ""red"") + my_theme
```

![](https://i.imgur.com/YGeiNAD.png)

Created on 2018-07-10 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).",https://github.com/tidyverse/ggplot2/pull/2749,ggplot2
dpseidel,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2748,2018-07-11T00:02:23Z,2019-01-16T15:51:11Z,2018-07-20T15:49:24Z,Building theme docs after #2721. A couple link fixes to scales documentation came along for the ride. ,https://github.com/tidyverse/ggplot2/pull/2748,ggplot2
zeehio,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/2747,2018-07-10T13:16:57Z,2019-01-07T09:43:30Z,2018-07-11T09:22:06Z,"# Motivation

The ability to use different scales in different facets has been a long time feature request (e.g. two years ago in #1613) and back in 2010 [here](https://groups.google.com/forum/#!topic/ggplot2/cDzL_yHew0I).

The main reason to ask for this feature is to be able to compare different magnitudes, as would be desired for instance in this plot:

![imatge](https://user-images.githubusercontent.com/75441/42507162-76f76178-8444-11e8-9e32-4d0ccb868a53.png)

This kind of plots are usual in scientific environments (for instance for comparing concentrations, https://github.com/tidyverse/ggplot2/issues/1613#issuecomment-319985331) and currently require a lot of fine tuning, using `grid.arrange` and playing with legends to make sure each subplot is aligned.

# Example of use:

``` r
  library(dplyr)
#> 
#> Attaching package: 'dplyr'
#> The following objects are masked from 'package:stats':
#> 
#>     filter, lag
#> The following objects are masked from 'package:base':
#> 
#>     intersect, setdiff, setequal, union
  library(scales)
  library(ggplot2)
# Simple tidy data frame, with 4 subjects. We measure three variables on each
# subject (namely: SomeValue, Percent and Scientific).
mydf <- dplyr::data_frame(Subject=rep(c(""Alice"", ""Bob"", ""Charlie"", ""Diane""), each=3),
                          Magnitude=rep(c(""SomeValue"", ""Percent"", ""Scientific""), times=4),
                          Value=c(c(170,0.6,2.7E-4),
                                  c(180, 0.8, 2.5E-4),
                                  c(160, 0.71, 3.2E-4),
                                  c(159, 0.62, 3E-4)),
                          Gender=rep(c(""Female"", ""Male"", ""Male"", ""Female""), each=3))

# This is how the df looks like:
head(mydf)
#> # A tibble: 6 x 4
#>   Subject Magnitude      Value Gender
#>   <chr>   <chr>          <dbl> <chr> 
#> 1 Alice   SomeValue  170       Female
#> 2 Alice   Percent      0.6     Female
#> 3 Alice   Scientific   0.00027 Female
#> 4 Bob     SomeValue  180       Male  
#> 5 Bob     Percent      0.8     Male  
#> 6 Bob     Scientific   0.00025 Male
#  Subject  Magnitude   Value Gender
#1   Alice  SomeValue 1.7e+02 Female
#2   Alice    Percent 6.0e-01 Female
#3   Alice Scientific 2.7e-04 Female
#4     Bob  SomeValue 1.8e+02   Male
#5     Bob    Percent 8.0e-01   Male
#6     Bob Scientific 2.5e-04   Male

scales_y <- list(
  Percent = scale_y_continuous(labels=percent_format()),
  SomeValue = scale_y_continuous(),
  Scientific = scale_y_continuous(labels=scientific_format())
)

# Here the percent (top) is well written, the other ones don't make sense
ggplot(mydf) +
  geom_point(aes(x=Subject, y=Value, color=Gender)) +
  facet_grid(Magnitude~., scales = list(y = scales_y))
```

![](https://i.imgur.com/lOXbFmO.png)

Created on 2018-07-10 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).

# Merge vs not merge reasons:

- Merge:
    - The diff is small.
    - Backwards compatibility is preserved.
- Not merge:
    - This feature could fit in another package, providing a custom facet. There would be some code duplication, but it looks easy to do (I have a proof of concept).

",https://github.com/tidyverse/ggplot2/pull/2747,ggplot2
dpseidel,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2744,2018-07-09T16:18:09Z,2019-01-05T17:15:18Z,2018-07-09T16:39:09Z,rebuild theme docs,https://github.com/tidyverse/ggplot2/pull/2744,ggplot2
clauswilke,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2741,2018-07-08T05:01:17Z,2020-01-12T03:29:11Z,2018-07-09T03:19:31Z,"This is the first step towards user-defined theme elements as discussed in #2540. This particular PR doesn't add any features yet, it just reorganizes the code so that global variables live in an environment. It could be merged as is, but mostly I'd want quick feedback to make sure I'm on the right track.",https://github.com/tidyverse/ggplot2/pull/2741,ggplot2
malcolmbarrett,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/2738,2018-07-07T05:49:16Z,2019-01-03T18:20:59Z,2018-07-07T14:27:07Z,"It's common for packages to include wrapper functions for ggplots that include themes. In those cases, `theme_set()` and friends don't work, and you need to manually add a theme. This PR adds a simple, hard override option to `theme_set/replace/update()` to allow it to apply under all circumstances.

``` r
qp <- function(data = mtcars) {
  ggplot(data, aes(x = hp, y = mpg)) +
    geom_point() +
    theme_bw()
}

qp()
```

![](https://i.imgur.com/fteIDV4.png)

``` r

# nothing happens because of internal function theme
theme_set(theme_dark())
qp()
```

![](https://i.imgur.com/q9xmASU.png)

``` r

# override the theme
theme_set(theme_dark(), override = TRUE)
qp()
```

![](https://i.imgur.com/RhaP5z5.png)

``` r

# reset override to FALSE
theme_set(theme_gray()) 
# returns to normal behavior 
qp() 
```

![](https://i.imgur.com/OjDjllG.png)

``` r

# need to explicitly override to work
theme_set(theme_gray(), override = TRUE) 
qp()
```

![](https://i.imgur.com/dtfhH2a.png)

``` r

# also ignores non-complete theme elements
# it's a complete override of the theme
qp() + theme(text = element_text(size = 20))
```

![](https://i.imgur.com/dm709SA.png)

I did think to add a softer version of the override that doesn't ignore non-complete but it seemed better to not do that, because if you're adding theme elements to the call, you might as well just change the theme manually. ",https://github.com/tidyverse/ggplot2/pull/2738,ggplot2
dpseidel,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2735,2018-07-06T15:34:13Z,2019-01-02T19:34:49Z,2018-07-06T17:48:40Z,Fixes issues like #2732 ,https://github.com/tidyverse/ggplot2/pull/2735,ggplot2
dpseidel,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2727,2018-06-29T17:08:19Z,2019-01-09T19:54:16Z,2018-07-10T23:46:28Z,"A PR for various minor edits to documentation as I review and update the top 20 most visited webpages (#2553). 

As this grows we may need to break it up into separate PRs. For now, I'm purposely holding off on committing updated .Rd files because edits like my removing a single unnecessary period in `layer.r` propagate into 20+ pages and will clutter the PR. ",https://github.com/tidyverse/ggplot2/pull/2727,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2725,2018-06-29T00:35:20Z,2019-01-05T16:15:16Z,2018-07-09T01:20:47Z,"Closes issue #2723.

One thing I wasn't sure about was whether I should add all the missing legend theme parameters in `theme_void()`. There are more than just `legend.box`. I tried copying them over from `theme_grey()` but that caused changed spacing in two visual tests so I reverted. ",https://github.com/tidyverse/ggplot2/pull/2725,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2722,2018-06-28T00:42:34Z,2018-12-25T23:58:16Z,2018-06-28T23:16:51Z,"(Originally reported on #2718 )

`geom_sf()` converts an `sf` object by `lapply()`ing `st_as_grob()` on its features one by one because `st_as_grob()` accepts only one `sfg`. While this approach seems simple and clean, it is considerably slow (e.g. it takes about 10 seconds for 1000 `POINT`s). 

In this PR, I use `st_combine()` to combine `POINT`s into one `MULTIPOINT` so that `st_as_grob()` is needed only once per panel.",https://github.com/tidyverse/ggplot2/pull/2722,ggplot2
jrnold,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2721,2018-06-27T20:38:27Z,2019-01-07T16:31:20Z,2018-07-10T23:48:07Z,"Update the example used in the ""complete themes"" help page (`ggtheme`). I extended the current `mtcars` example to use more (all?) of the features which themes affect: title, subtitle, tag, caption, and both x- and y-facets.

There are now two plot examples. One with no facets, and one with 2x2 facets. The latter is enclosed in `\donttest{}` to keep R CMD check from complaining about the runtime.

The `mtcars` dataset may not be the best for this, but I wanted to keep it close to the orginal example, and the data isn't as important in this example.",https://github.com/tidyverse/ggplot2/pull/2721,ggplot2
clauswilke,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/2719,2018-06-27T02:23:17Z,2019-01-05T16:15:18Z,2018-07-09T01:20:15Z,Define non_missing_aes for GeomCol and GeomBar. Closes #2715.,https://github.com/tidyverse/ggplot2/pull/2719,ggplot2
batpigandme,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2714,2018-06-25T16:25:24Z,2019-11-06T20:07:18Z,2018-07-08T22:48:59Z,"* Fixes #2713
* Stop lockbot from marking issues as resolved.
* See https://github.com/dessant/lock-threads/issues/7 re. new `setLockReason` param.
* Add lockComment explaining why issue locked.",https://github.com/tidyverse/ggplot2/pull/2714,ggplot2
topepo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2704,2018-06-16T14:50:18Z,2018-12-13T21:21:58Z,2018-06-16T21:19:19Z,"`data.sqlite` is at https://www.dropbox.com/s/xv1hxct2446a9vs/ggplot2_data.sqlite.zip?dl=0

We checked 2105 reverse dependencies (1715 from CRAN + 390 from BioConductor), comparing R CMD check results across CRAN and dev versions of this package.

 * We saw 101 new problems
 * We failed to check 63 packages",https://github.com/tidyverse/ggplot2/pull/2704,ggplot2
clauswilke,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2694,2018-06-10T22:47:25Z,2019-01-06T15:44:59Z,2018-07-10T13:26:59Z,"This addresses the underlying reason for #2693, data are reordered during faceting. With this patch, data order is not changed anymore in `facet_grid()` or `facet_wrap()`. This enables data vectors to be provided via `aes()` or as parameters.

``` r
library(ggplot2)

df <- data.frame(x = 1:4,
                 y = 1:4,
                 label1 = c(""a"", ""b"", ""a"", ""b""),
                 label2 = c(""c"", ""c"", ""d"", ""d""),
                 colour =  c(""magenta"", ""green"", ""red"", ""cyan""))

ggplot(df, aes(x, y, colour = df$colour)) +
  geom_point(size = 3) +
  facet_wrap(~label1) +
  scale_colour_identity()
```

![](https://i.imgur.com/myrT99F.png)

``` r

ggplot(df, aes(x, y, colour = df$colour)) +
  geom_point(size = 3) +
  facet_grid(label1~label2) +
  scale_colour_identity()
```

![](https://i.imgur.com/Y2GOGiV.png)

``` r

# things still work if some data points are removed by scale limits
ggplot(df, aes(x, y, colour = df$colour)) +
  geom_point(size = 3) +
  facet_wrap(~label1) +
  scale_x_continuous(limits = c(1.5, 3.5)) +
  scale_colour_identity()
#> Warning: Removed 2 rows containing missing values (geom_point).
```

![](https://i.imgur.com/esIbidn.png)

``` r

ggplot(df, aes(x, y, colour = df$colour)) +
  geom_point(size = 3) +
  facet_grid(label1~label2) +
  scale_x_continuous(limits = c(1.5, 3.5)) +
  scale_colour_identity()
#> Warning: Removed 2 rows containing missing values (geom_point).
```

![](https://i.imgur.com/MnhGKP2.png)

Created on 2018-06-10 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).",https://github.com/tidyverse/ggplot2/pull/2694,ggplot2
batpigandme,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2686,2018-06-06T18:38:24Z,2018-12-15T18:39:43Z,2018-06-18T18:28:10Z,"* Add lock bot <https://probot.github.io/apps/lock/>.
* Add \.github to .Rbuildignore.",https://github.com/tidyverse/ggplot2/pull/2686,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2685,2018-06-05T21:44:59Z,2018-12-03T00:27:27Z,2018-06-05T23:29:53Z,"It happens often that an `sf` object is converted to `sfc` as the result of some operation (e.g. UNION).

``` r
library(ggplot2)
library(sf)
#> Linking to GEOS 3.6.1, GDAL 2.2.3, proj.4 4.9.3

nc <- st_read(system.file(""shape/nc.shp"", package = ""sf""), quiet = TRUE)

nc_outer_lines <- nc %>%
  st_union() %>%
  st_boundary()

nc_inner_lines <- nc %>%
  st_boundary() %>%
  st_union() %>%
  st_line_merge()

ggplot() +
  geom_sf(data = nc, colour = ""transparent"", fill = ""lightgreen"") +
  geom_sf(data = nc_inner_lines, colour = ""black"",  linetype = ""11"", size = 1) +
  geom_sf(data = nc_outer_lines, colour = ""black"", size = 1.5) +
  theme_minimal()
#> Error: `data` must be a data frame, or other object coercible by `fortify()`, not an S3 object with class sfc_MULTILINESTRING/sfc
```

Created on 2018-06-06 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).

It's not a big deal to convert them back to `st_sf()` manually like below, but it's nice and handy if they are converted automatically. As `plot()` can plot `sfc` and `sfg` objects, I expect ggplot2 can plot these as well.

```r
ggplot() +
  geom_sf(data = nc, colour = ""transparent"", fill = ""lightgreen"") +
  geom_sf(data = st_sf(nc_inner_lines), colour = ""black"",  linetype = ""11"", size = 1) +
  geom_sf(data = st_sf(nc_outer_lines), colour = ""black"", size = 1.5) +
  theme_minimal()
```

(The expected result:)

![image](https://user-images.githubusercontent.com/1978793/41004356-8d6d21b4-6954-11e8-8234-009ef0a59eba.png)
",https://github.com/tidyverse/ggplot2/pull/2685,ggplot2
jemus42,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2683,2018-06-05T14:48:56Z,2018-12-22T21:47:09Z,2018-06-25T20:53:42Z,rentangle -> rectangle,https://github.com/tidyverse/ggplot2/pull/2683,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2681,2018-06-01T19:04:40Z,2018-11-28T20:51:58Z,2018-06-01T20:24:29Z,See discussion on #1931.,https://github.com/tidyverse/ggplot2/pull/2681,ggplot2
bjreisman,CONTRIBUTOR,closed,11,https://github.com/tidyverse/ggplot2/pull/2680,2018-06-01T15:57:51Z,2019-01-07T21:31:21Z,2018-07-11T20:02:52Z,"I added 'scaled' statistics to the `stat_bin2d`, `stat_binhex`, ` stat_density_2d`, and  `stat_contour` functions for plotting 2d distributions normalized to a common height. This would be very useful for faceted 2d plots, where the maximum density/count can vary greatly between panels. 

(This is my attempt to add the feature I had requested in issue #2679.)

---
I tried my best to mirror the corresponding statistics from the 1d functions:

stat_bin | stat_bin2d | stat_binhex |  stat_bin2d (updated) | stat_binhex (updated) 
--- | --- | --- | ---| ---
`count `| `count` | `count` | `count` | `count` 
`ncount` | | | `ncount` | `ncount`
`density`|  `density` | `density` | `density` | `density`
`ndensity`|   | | `ndensity` | `ndensity`


It was a little bit harder to get things to match-up one-to-one for the density based function, so some adjustment to the syntax may be needed. 

stat_density| stat__contour | stat_density2d  | stat__contour (updated) | stat_density2d (updated)
--- | --- | --- | ---| ---
`count` | - | - | - |
`density` | - | `density` | - | `density`
`scaled` | - | - | - | `scaled`
-|`pieces`| - |`pieces`| -
 -|`level`| - |`level`| -
 -| - | - | `nlevel` | -  

---

Here is an example of the revised functions in action:
```{r}
library(ggplot2)
library(dplyr)
library(viridis)

ggplot(diamonds, aes(x=x, y= depth)) +
  stat_density_2d(aes(fill = stat(level)),
                  geom = ""polygon"",
                  n = 100,
                  bins = 10,
    contour = T) +
  facet_wrap(clarity~.) +
  scale_fill_viridis(option = ""A"")
```
![plot6](https://user-images.githubusercontent.com/22528952/40850126-6af9ee1a-6589-11e8-90d0-d1e95b430cee.png)

```{r}
ggplot(diamonds, aes(x=x, y= depth)) +
  stat_density_2d(aes(fill = stat(nlevel)),
                  geom = ""polygon"",
                  n = 100,
                  bins = 10,
    contour = T) +
  facet_wrap(clarity~.) +
  scale_fill_viridis(option = ""A"")
```
![plot7](https://user-images.githubusercontent.com/22528952/40850196-a202172a-6589-11e8-81dc-5677d51a9467.png)
",https://github.com/tidyverse/ggplot2/pull/2680,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2677,2018-05-31T22:05:53Z,2018-11-28T14:07:16Z,2018-06-01T13:28:06Z,Fixes #2676,https://github.com/tidyverse/ggplot2/pull/2677,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2672,2018-05-30T04:58:44Z,2018-11-26T16:49:49Z,2018-05-30T14:39:25Z,"This closes issue #2671.

I think it's sufficient to treat everything as a parameter that is not in the complete list of aesthetics. This is a heuristic that is not guaranteed to be always right, but it is going to be mostly right. And in any case, it's the heuristic that was used prior to 2.3.0.",https://github.com/tidyverse/ggplot2/pull/2672,ggplot2
mikmart,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/2670,2018-05-29T09:47:56Z,2019-01-05T23:15:18Z,2018-07-09T23:01:41Z,"Fixes #2488: `size` (and additionally `linetype`) can now be used in `geom_hex()` to control the bordering lines of the hexagons.

```
ggplot(diamonds, aes(carat, price)) +
  geom_hex(col = ""red"", size = 2)
```
![](https://i.imgur.com/0NpzmZh.png)
",https://github.com/tidyverse/ggplot2/pull/2670,ggplot2
yutannihilation,MEMBER,closed,34,https://github.com/tidyverse/ggplot2/pull/2669,2018-05-29T00:01:46Z,2019-02-21T00:02:00Z,2018-08-24T21:35:10Z,"As suggested in https://github.com/tidyverse/ggplot2/pull/2663#issuecomment-392542114, making them as the named arguments let us organize the document easier.

Note that one difficulty I found is that `NULL` should be distinguished from missing; `NULL` indicates the user's intent to remove the label. For example, the code below doesn't show the title:

``` r
ggplot() +
  labs(title = ""foo"") +
  labs(title = NULL)
```

So, I chose to use `missing()`. But, if there is some better way to do this with rlang, please point it out.

Besides, I slightly suspect `ggtitle()` may not do the right thing; the code below doesn't show the subtitle since `ggtitle()` sets `subtitle` to `NULL`. Is this valid for the user's intent?

``` r
ggplot() +
  labs(subtitle = ""bar"") +
  ggtitle(title = ""foo"")
```

If this should also be changed, I'll incorporate in this PR as well.",https://github.com/tidyverse/ggplot2/pull/2669,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2667,2018-05-27T21:14:23Z,2018-11-24T22:27:07Z,2018-05-28T14:26:58Z,"The error message is now ""`coord_*` doesn't support free scales"".

``` r
library(ggplot2)
df <- data.frame(x = c(1, 2))
ggplot(df, aes(x, x)) + facet_wrap(~x, scales = ""free"") + coord_fixed()
#> Error: coord_fixed doesn't support free scales
```",https://github.com/tidyverse/ggplot2/pull/2667,ggplot2
yutannihilation,MEMBER,closed,12,https://github.com/tidyverse/ggplot2/pull/2664,2018-05-27T09:09:09Z,2018-12-22T21:47:05Z,2018-06-25T20:54:54Z,"Since viridis is already the default colour scale for ordered factors, these first two examples in http://ggplot2.tidyverse.org/reference/scale_viridis.html#examples make no differences.

``` r
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
(d <- ggplot(dsamp, aes(carat, price)) +
  geom_point(aes(colour = clarity)))
```

``` r
d + scale_colour_viridis_d()
```

Maybe it is proper to use some other data that has factor or character columns, but using `diamond` seems the widespread manner among examples of `scale_colour_*()`. So, I choose converting `clarity` column.",https://github.com/tidyverse/ggplot2/pull/2664,ggplot2
yutannihilation,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/2663,2018-05-27T06:52:00Z,2018-11-24T20:27:09Z,2018-05-28T14:29:20Z,"`tag` argument seems not documented in `?labs` yet. Since `tag` is intended to be specified by `labs()`, I think this should be described here.",https://github.com/tidyverse/ggplot2/pull/2663,ggplot2
yutannihilation,MEMBER,closed,12,https://github.com/tidyverse/ggplot2/pull/2661,2018-05-27T04:46:46Z,2018-12-22T21:47:07Z,2018-06-25T20:54:20Z,,https://github.com/tidyverse/ggplot2/pull/2661,ggplot2
clauswilke,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/2658,2018-05-25T06:34:41Z,2018-11-27T22:02:09Z,2018-05-31T18:30:22Z,"Since there are already at least 4-5 different ways of hiding  outliers, I don't see the need to add a new parameter to the API. Instead, I think updating the documentation is sufficient. I didn't list `outlier.size = -1`, because that option is only guaranteed to work if the stroke value hasn't been modified.

I also fixed the problem where `geom_point()` was trying to match an empty string against the shape names.",https://github.com/tidyverse/ggplot2/pull/2658,ggplot2
clauswilke,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/2654,2018-05-23T22:53:57Z,2018-11-21T06:08:33Z,2018-05-24T23:29:16Z,See #2653 for details.,https://github.com/tidyverse/ggplot2/pull/2654,ggplot2
clauswilke,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2652,2018-05-22T22:14:18Z,2018-11-21T06:08:35Z,2018-05-24T15:32:11Z,This PR adds an `is_free()` function to `CoordSf`. This closes #2651.,https://github.com/tidyverse/ggplot2/pull/2652,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2645,2018-05-21T18:01:11Z,2018-11-17T20:46:51Z,2018-05-21T20:29:39Z,Prepare for revdep emails,https://github.com/tidyverse/ggplot2/pull/2645,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2644,2018-05-21T17:46:12Z,2018-11-17T20:46:57Z,2018-05-21T20:28:49Z,,https://github.com/tidyverse/ggplot2/pull/2644,ggplot2
dongzhuoer,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2643,2018-05-21T07:42:01Z,2019-01-06T02:15:21Z,2018-07-09T15:36:22Z,,https://github.com/tidyverse/ggplot2/pull/2643,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2642,2018-05-21T01:07:19Z,2018-11-17T18:28:05Z,2018-05-21T17:33:29Z,Fixes #2640,https://github.com/tidyverse/ggplot2/pull/2642,ggplot2
topepo,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/2639,2018-05-20T19:05:58Z,2018-11-17T01:23:27Z,2018-05-21T00:34:00Z,"## revdepcheck results

We checked 2105 reverse dependencies (1715 from CRAN + 390 from BioConductor), comparing R CMD check results across CRAN and dev versions of this package.

 * We saw 101 new problems
 * We failed to check 63 packages

Issues with CRAN packages are summarised below.

### New problems
(This reports the first line of each new failure)

* bayesAB
  checking tests ...

* bayesplot
  checking examples ... ERROR
  checking tests ...

* benchmark
  checking whether package ‘benchmark’ can be installed ... WARNING

* benchr
  checking tests ...

* billboarder
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING

* BioPET
  checking examples ... ERROR

* cellWise
  checking re-building of vignette outputs ... WARNING

* census
  checking re-building of vignette outputs ... WARNING

* choroplethr
  checking examples ... ERROR

* civis
  checking tests ...

* clustree
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING

* colorplaner
  checking examples ... ERROR
  checking tests ...
  checking re-building of vignette outputs ... WARNING

* cosinor2
  checking examples ... ERROR

* countytimezones
  checking re-building of vignette outputs ... WARNING

* cowplot
  checking tests ...

* cricketr
  checking whether package ‘cricketr’ can be installed ... WARNING

* dartR
  checking examples ... ERROR

* DendroSync
  checking examples ... ERROR

* dgo
  checking tests ...

* directlabels
  checking examples ... ERROR
  checking tests ...

* dMod
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING

* dpcR
  checking re-building of vignette outputs ... WARNING

* drugCombo
  checking tests ...
  checking re-building of vignette outputs ... WARNING

* eeptools
  checking whether package ‘eeptools’ can be installed ... WARNING

* emojifont
  checking re-building of vignette outputs ... WARNING

* expss
  checking re-building of vignette outputs ... WARNING

* extracat
  checking examples ... ERROR

* fastR2
  checking examples ... ERROR
  checking whether package ‘fastR2’ can be installed ... WARNING

* fiftystater
  checking re-building of vignette outputs ... WARNING

* forecast
  checking examples ... ERROR

* ForecastComb
  checking whether package ‘ForecastComb’ can be installed ... WARNING

* foreSIGHT
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING

* fpp2
  checking whether package ‘fpp2’ can be installed ... WARNING

* GeomComb
  checking whether package ‘GeomComb’ can be installed ... WARNING

* ggedit
  checking examples ... ERROR

* ggetho
  checking examples ... ERROR
  checking tests ...

* ggFacetSample
  checking examples ... ERROR

* ggfan
  checking re-building of vignette outputs ... WARNING

* ggforce
  checking examples ... ERROR
  checking for code/documentation mismatches ... WARNING
  checking re-building of vignette outputs ... WARNING

* ggformula
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING

* ggfortify
  checking tests ...

* gggenes
  checking examples ... ERROR
  checking tests ...
  checking re-building of vignette outputs ... WARNING

* gghighlight
  checking examples ... ERROR
  checking tests ...

* ggiraphExtra
  checking examples ... ERROR
  checking tests ...
  checking re-building of vignette outputs ... WARNING

* ggmap
  checking examples ... ERROR

* ggmosaic
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING
  checking Rd \usage sections ... NOTE

* ggpol
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING

* ggpubr
  checking examples ... ERROR

* ggpval
  checking examples ... ERROR
  checking tests ...
  checking re-building of vignette outputs ... WARNING

* ggraph
  checking examples ... ERROR
  checking S3 generic/method consistency ... WARNING
  checking re-building of vignette outputs ... WARNING
  checking Rd \usage sections ... NOTE

* ggseas
  checking examples ... ERROR
  checking tests ...
  checking re-building of vignette outputs ... WARNING

* ggstance
  checking tests ...

* ggtern
  checking examples ... ERROR

* ggthemes
  checking examples ... ERROR

* healthcareai
  checking tests ...

* heatmaply
  checking tests ...

* hurricaneexposure
  checking examples ... ERROR

* hyperSpec
  checking examples ... ERROR

* imputeTestbench
  checking whether package ‘imputeTestbench’ can be installed ... WARNING

* incidence
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING

* jcolors
  checking examples ... ERROR

* jtools
  checking tests ...
  checking re-building of vignette outputs ... WARNING

* knitrBootstrap
  checking re-building of vignette outputs ... WARNING

* lavaSearch2
  checking whether package ‘lavaSearch2’ can be installed ... WARNING

* lime
  checking tests ...

* mafs
  checking whether package ‘mafs’ can be installed ... WARNING

* model4you
  checking examples ... ERROR

* mosaic
  checking examples ... ERROR

* mosaicModel
  checking re-building of vignette outputs ... WARNING

* munsell
  checking examples ... ERROR

* oddsratio
  checking examples ... ERROR
  checking tests ...
  checking re-building of vignette outputs ... WARNING

* OECD
  checking re-building of vignette outputs ... WARNING

* penaltyLearning
  checking tests ...

* phyloseqGraphTest
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING

* platetools
  checking examples ... ERROR

* plotly
  checking tests ...

* plotROC
  checking re-building of vignette outputs ... WARNING

* propr
  checking re-building of vignette outputs ... WARNING

* quanteda
  checking tests ...

* quickpsy
  checking examples ... ERROR

* RBesT
  checking re-building of vignette outputs ... WARNING

* reghelper
  checking tests ...

* robustbase
  checking running R code from vignettes ...

* rotations
  checking installed package size ... NOTE

* RStoolbox
  checking examples ... ERROR

* rusk
  checking examples ... ERROR

* scatterpie
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING

* Seurat
  checking tests ...

* sugrrants
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING

* surveillance
  checking examples ... ERROR

* sValues
  checking examples ... ERROR

* svdvis
  checking examples ... ERROR
  checking re-building of vignette outputs ... WARNING

* synthpop
  checking examples ... ERROR

* trackr
  checking examples ... ERROR
  checking tests ...

* ukgasapi
  checking examples ... ERROR

* usmap
  checking tests ...

* vdmR
  checking examples ... ERROR

* voxel
  checking examples ... ERROR

* WRTDStidal
  checking whether package ‘WRTDStidal’ can be installed ... WARNING

* xkcd
  checking examples ... ERROR

* xpose
  checking examples ... ERROR
  checking tests ...
  checking re-building of vignette outputs ... WARNING
  checking installed package size ... NOTE

### Failed to check

* aslib                  (failed to install)
* BACA                   (failed to install)
* BACCT                  (failed to install)
* bamdit                 (failed to install)
* BayesRS                (failed to install)
* BNSP                   (failed to install)
* BPEC                   (failed to install)
* broom                  (check timed out)
* bsam                   (failed to install)
* BTSPAS                 (failed to install)
* classify               (failed to install)
* CollapsABEL            (failed to install)
* crmPack                (failed to install)
* Crossover              (failed to install)
* Deducer                (failed to install)
* dendroTools            (failed to install)
* DiversityOccupancy     (failed to install)
* dynr                   (failed to install)
* evoper                 (failed to install)
* ewoc                   (failed to install)
* Fgmutils               (failed to install)
* fingerPro              (failed to install)
* G2Sd                   (failed to install)
* imageData              (failed to install)
* InSilicoVA             (failed to install)
* llama                  (failed to install)
* magick                 (failed to install)
* matchingMarkets        (failed to install)
* mbgraphic              (failed to install)
* microplot              (failed to install)
* mleap                  (failed to install)
* morse                  (failed to install)
* mwaved                 (failed to install)
* OpenStreetMap          (failed to install)
* openVA                 (failed to install)
* pcaPA                  (failed to install)
* petro.One              (failed to install)
* phase1RMD              (failed to install)
* phylosim               (check timed out)
* PortfolioEffectHFT     (failed to install)
* qdap                   (failed to install)
* RcmdrPlugin.FuzzyClust (check timed out)
* ReporteRs              (failed to install)
* RJafroc                (failed to install)
* rmcfs                  (failed to install)
* rpanel                 (failed to install)
* rrepast                (failed to install)
* rsvg                   (failed to install)
* RtutoR                 (failed to install)
* seewave                (failed to install)
* SensMap                (failed to install)
* SeqFeatR               (failed to install)
* sf                     (failed to install)
* sgmcmc                 (check timed out)
* simmr                  (failed to install)
* simulator              (check timed out)
* spcosa                 (failed to install)
* subspaceMOA            (failed to install)
* TeachingDemos          (check timed out)
* thinkr                 (failed to install)
* vortexR                (failed to install)
* XLConnect              (failed to install)
* zooaRchGUI             (failed to install)",https://github.com/tidyverse/ggplot2/pull/2639,ggplot2
krlmlr,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2638,2018-05-19T19:33:16Z,2018-11-19T00:37:40Z,2018-05-21T20:28:23Z,"The behavior in the dev version is much better than in the CRAN version, but I think we can be even clearer here.

## With this PR

``` r
library(ggplot2)
+ geom_point()
#> Error: There's nothing on the left-hand side of `+`. Did you forget to add this object to a ggplot object?
```

> Created on 2018-05-19 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).

## With 582acfec

``` r
library(ggplot2)
+ geom_point()
#> Error: Cannot add ggproto objects together. Did you forget to add this object to a ggplot object?
```

> Created on 2018-05-19 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).",https://github.com/tidyverse/ggplot2/pull/2638,ggplot2
lionel-,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2635,2018-05-19T11:12:29Z,2018-11-15T13:48:24Z,2018-05-19T13:18:24Z,"Fixes #2609 

Tested on a couple of packages that failed the revdepchecks.",https://github.com/tidyverse/ggplot2/pull/2635,ggplot2
pkq,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2634,2018-05-18T20:06:18Z,2018-11-17T17:28:03Z,2018-05-20T13:16:39Z,"I'm not sure how useful or important this is, but I went ahead and edited the testthat tests to consistently use lower case to name tests, make test names grammatically correct, and apply consistent whitespace rules. Happy to make further revisions as needed.",https://github.com/tidyverse/ggplot2/pull/2634,ggplot2
dvcv,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2633,2018-05-18T19:59:23Z,2018-12-12T22:14:22Z,2018-06-15T21:39:29Z,,https://github.com/tidyverse/ggplot2/pull/2633,ggplot2
pkq,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2632,2018-05-18T19:21:33Z,2018-11-17T17:28:05Z,2018-05-20T13:15:15Z,,https://github.com/tidyverse/ggplot2/pull/2632,ggplot2
dvcv,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2631,2018-05-18T18:38:15Z,2018-11-16T13:36:45Z,2018-05-20T13:15:37Z,,https://github.com/tidyverse/ggplot2/pull/2631,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2629,2018-05-18T14:26:39Z,2018-11-15T17:09:35Z,2018-05-18T14:32:48Z,Closes #2615,https://github.com/tidyverse/ggplot2/pull/2629,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2628,2018-05-18T08:10:44Z,2018-11-14T15:35:49Z,2018-05-18T13:49:38Z,"Fix #2622

This PR fixes a bug in facet_wrap that would throw an error during certain axis and strip settings",https://github.com/tidyverse/ggplot2/pull/2628,ggplot2
clauswilke,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/2626,2018-05-17T18:17:44Z,2018-11-17T20:46:55Z,2018-05-18T14:33:19Z,This closes #2621 and reopens #2535. I don't know how to close both.,https://github.com/tidyverse/ggplot2/pull/2626,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2625,2018-05-17T14:10:09Z,2018-11-13T18:47:25Z,2018-05-17T18:47:03Z,"Fixes #2618; moved from #2624 

@brodieG — I tried to push the roxygen docs back to your branch, but failed. ",https://github.com/tidyverse/ggplot2/pull/2625,ggplot2
brodieG,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2624,2018-05-17T14:02:01Z,2018-11-13T14:47:26Z,2018-05-17T14:10:12Z,"The one substantive change is changing `reparameterise` to `setup_data` as AFAICT that change happened in the code but not the docs.

The rest is mostly re-ordering text blocks that seem like they got out of order, removing a stray word, and minor tweaks to avoid repetition in the intro to a bullet list and the bullet list.

Other notes:

* I omit the NEWS entry as this doesn't seem to rise to the level of worth-mentioning.
* I did not regenerate the man pages as it looks like there are lots of other roxygen updates that have not been generated as well.",https://github.com/tidyverse/ggplot2/pull/2624,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2623,2018-05-17T10:45:37Z,2018-11-13T14:47:24Z,2018-05-17T13:47:03Z,"fixes #2578 

This PR removes `ggplot.data.frame()` and `ggplot.grouped_df()` so that all `data` passed to `ggplot()` get `fortify()`ed. Then, `fortify.grouped_df()` can take care of fortifying `grouped_df`s.

------

Note that one possible downside of this PR is this change of behaviour of `ggplot()`:

|     | before | after|
|:---|:-------|:-----|
| `data.frame` |  not fortified  |  **fortified**  |
| others         |   fortified  |  fortified   |

`fortify.data.frame()` returns the original `data.frame` as is, but some objects inheriting from `data.frame` might be fortified if it has its own method of `fortify()`.

But, I bet this will be rarely a problem; I cannot imagine the design where both the fortified version and unfortified version of the class are needed. If the method of `fortify()` is defined, it is probably supposed to be used.",https://github.com/tidyverse/ggplot2/pull/2623,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2620,2018-05-17T02:35:58Z,2018-11-13T14:47:30Z,2018-05-17T13:47:58Z,Closes #2614. I _think_ I got all the relevant places where `calc()` was used.,https://github.com/tidyverse/ggplot2/pull/2620,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2619,2018-05-17T01:56:59Z,2018-11-13T14:47:28Z,2018-05-17T13:48:22Z,Closes #2610,https://github.com/tidyverse/ggplot2/pull/2619,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2617,2018-05-16T20:25:09Z,2018-11-14T15:35:47Z,2018-05-18T13:59:50Z,Fixes #2598,https://github.com/tidyverse/ggplot2/pull/2617,ggplot2
cpsievert,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/2616,2018-05-16T19:15:53Z,2018-11-14T15:35:45Z,2018-05-18T14:32:51Z,,https://github.com/tidyverse/ggplot2/pull/2616,ggplot2
schloerke,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2613,2018-05-16T02:19:39Z,2018-11-12T14:13:47Z,2018-05-16T13:27:18Z,"current:
```r
aes(short = 1, veryveryverylong = 2)
# Aesthetic mapping: 
# * `short           ` -> 1
# * `veryveryverylong` -> 2
```

PR
```r
aes(short = 1, veryveryverylong = 2)
# Aesthetic mapping: 
# * `short`            -> 1
# * `veryveryverylong` -> 2
```

The back ticks should not contain the white space around the variable names.  This change keeps the spacing, just moves the back ticks to be directly around the name.",https://github.com/tidyverse/ggplot2/pull/2613,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2612,2018-05-15T22:45:50Z,2018-11-12T00:36:27Z,2018-05-16T00:21:09Z,"I don't know what caused this, but it's likely the scale is now being used in some way it wasn't previously. It only affects two packages.

Fixes #2596",https://github.com/tidyverse/ggplot2/pull/2612,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2611,2018-05-15T22:31:50Z,2018-11-12T23:12:02Z,2018-05-16T23:09:39Z,Fixes #2607,https://github.com/tidyverse/ggplot2/pull/2611,ggplot2
hadley,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2606,2018-05-15T20:14:19Z,2018-11-11T21:36:34Z,2018-05-15T21:10:59Z,Fixes revdep failure in ggthemes,https://github.com/tidyverse/ggplot2/pull/2606,ggplot2
hadley,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2605,2018-05-15T20:05:15Z,2018-11-11T21:36:32Z,2018-05-15T21:15:38Z,@hrbrmstr can you please double check? I think this is just a simple omission.,https://github.com/tidyverse/ggplot2/pull/2605,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2604,2018-05-15T19:38:55Z,2018-11-11T21:36:36Z,2018-05-15T21:09:52Z,"Fixes #2594

I’ve added coord_transform to support free scales as I think it simply has been left out in an error. If that is wrong I’ll change it back",https://github.com/tidyverse/ggplot2/pull/2604,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2603,2018-05-15T18:45:02Z,2018-11-11T21:36:30Z,2018-05-15T21:16:11Z,Fixes #2595,https://github.com/tidyverse/ggplot2/pull/2603,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2602,2018-05-15T18:26:33Z,2018-11-11T22:36:27Z,2018-05-15T22:33:25Z,Improvements to breaking changes,https://github.com/tidyverse/ggplot2/pull/2602,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2601,2018-05-15T18:06:42Z,2018-11-11T18:36:24Z,2018-05-15T18:25:23Z,,https://github.com/tidyverse/ggplot2/pull/2601,ggplot2
hadley,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/2600,2018-05-15T17:51:03Z,2018-11-12T20:49:46Z,2018-05-16T20:19:44Z,"Fixes #2599

@karawoo any ideas why this behaviour changed?",https://github.com/tidyverse/ggplot2/pull/2600,ggplot2
hadley,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2593,2018-05-15T16:57:49Z,2018-11-13T01:12:02Z,2018-05-17T00:37:58Z,Fixes #2585,https://github.com/tidyverse/ggplot2/pull/2593,ggplot2
pkq,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2592,2018-05-15T16:57:41Z,2018-11-11T17:36:24Z,2018-05-15T17:03:14Z,"Reverse inadvertent deletion of 'not' in 'aesthetics that are not length one'

Apologies for the typo!",https://github.com/tidyverse/ggplot2/pull/2592,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2590,2018-05-15T16:33:06Z,2018-11-12T15:13:49Z,2018-05-16T14:57:29Z,Fixes #2586. Regression introduced in 4c1964bc650028acaa8c606de341dcbd6cfb2e78,https://github.com/tidyverse/ggplot2/pull/2590,ggplot2
eliocamp,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2589,2018-05-15T14:30:39Z,2018-11-14T15:26:44Z,2018-05-15T14:50:51Z,Fixes a small typo in documentation of ggproto.,https://github.com/tidyverse/ggplot2/pull/2589,ggplot2
pkq,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2588,2018-05-14T23:55:17Z,2018-11-11T01:00:29Z,2018-05-15T00:23:29Z,Includes minor wording changes throughout to improve alignment to http://style.tidyverse.org/news.html,https://github.com/tidyverse/ggplot2/pull/2588,ggplot2
topepo,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/2580,2018-05-12T17:11:41Z,2018-11-10T16:00:28Z,2018-05-14T14:33:39Z,The revdep process had to be restarted twice and I don't know if that impacted any package checks. I slacked @gaborcsardi about this.  ,https://github.com/tidyverse/ggplot2/pull/2580,ggplot2
clauswilke,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/2577,2018-05-11T23:37:35Z,2018-11-17T20:46:59Z,2018-05-15T14:01:18Z,"Correct text justification works now for rotated text. Do you want me to add a visual test for this?

``` r
library(ggplot2)
df <- reshape2::melt(outer(1:4, 1:4), varnames = c(""X1"", ""X2""))

p1 <- ggplot(df, aes(X1, X2)) + geom_tile(aes(fill = value))
p1 + scale_fill_continuous(
  breaks = c(5, 10, 15),
  labels = paste(""long"", c(5, 10, 15)),
  guide = guide_legend(
    direction = ""horizontal"",
    title.position = ""top"",
    label.position = ""bottom"",
    label.theme = element_text(angle = 90, hjust = 1, vjust = 0.5)
  )
)
```

![](https://i.imgur.com/9MsgYsE.png)

Created on 2018-05-11 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).",https://github.com/tidyverse/ggplot2/pull/2577,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2575,2018-05-11T20:37:16Z,2018-11-11T21:36:28Z,2018-05-15T21:18:14Z,Since R CMD check requires <5s,https://github.com/tidyverse/ggplot2/pull/2575,ggplot2
hadley,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2572,2018-05-11T14:28:59Z,2018-11-07T17:07:04Z,2018-05-11T16:54:46Z,"* scales was historical; needed version already on CRAN
* dev rlang needed for `as_quosures()` and vector `parse_exprs()`

(Plus I accidentally included some smaller spurious changes 😬 )",https://github.com/tidyverse/ggplot2/pull/2572,ggplot2
batpigandme,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2571,2018-05-11T11:23:08Z,2018-11-07T14:07:04Z,2018-05-11T12:59:54Z,"* sf section now has a bullet, so that it's inline with everything else
* minor typo fixes
* consistent period at the end of each item AFTER `(@author)`",https://github.com/tidyverse/ggplot2/pull/2571,ggplot2
hadley,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2569,2018-05-11T00:40:25Z,2018-11-07T13:07:03Z,2018-05-11T12:52:07Z,,https://github.com/tidyverse/ggplot2/pull/2569,ggplot2
clauswilke,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2567,2018-05-10T19:08:56Z,2018-11-17T20:47:01Z,2018-05-10T22:11:05Z,"I think the way to fix this issue is to give `geom_smooth()` a first-class `se` parameter that is considered when drawing the panel. This allows the geom and the legend drawing code to always be in synch. See resulting behavior in the examples below.

One note: Currently one regression test fails because the `geom_smooth()` and `draw_group()` functions have different default arguments and the test checks for that. I think the test is wrong in this particular case, but I wanted to bring this up for discussion. Relevant lines in the code, with explanation for why it should be this way:
https://github.com/clauswilke/ggplot2/blob/ed016144c97cf67424498453a2f4e06925fdba92/R/geom-smooth.r#L119-L126

Examples of `geom_smooth()` with `stat_summary()`:
``` r
library(ggplot2)
ggplot(mtcars, aes(cyl, mpg, fill = factor(am))) +
  geom_smooth(stat = ""summary"")
#> No summary function supplied, defaulting to `mean_se()
```

![](https://i.imgur.com/T1NIgn7.png)

``` r

ggplot(mtcars, aes(cyl, mpg, fill = factor(am))) +
  geom_smooth(stat = ""summary"", se = FALSE)
#> No summary function supplied, defaulting to `mean_se()
```

![](https://i.imgur.com/q1bfbuN.png)

``` r

# stat_summary doesn't have an `se` parameter, hence
# default is `se = FALSE`
ggplot(mtcars, aes(cyl, mpg, fill = factor(am))) +
  stat_summary(geom = ""smooth"")
#> No summary function supplied, defaulting to `mean_se()
```

![](https://i.imgur.com/9qzn74l.png)

``` r

ggplot(mtcars, aes(cyl, mpg, fill = factor(am))) +
  stat_summary(geom = ""smooth"", se = TRUE)
#> No summary function supplied, defaulting to `mean_se()
```

![](https://i.imgur.com/7buwIW5.png)

And, for completeness, all combinations of `geom_smooth()` / `stat_smooth()` with `se = TRUE` / `se = FALSE` work as expected:

``` r
library(ggplot2)
ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species, fill = Species)) +
  geom_smooth()
#> `geom_smooth()` using method = 'loess' and formula 'y ~ x'
```

![](https://i.imgur.com/T0acn22.png)

``` r

ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species, fill = Species)) +
  geom_smooth(se = FALSE)
#> `geom_smooth()` using method = 'loess' and formula 'y ~ x'
```

![](https://i.imgur.com/gGn6HGV.png)

``` r

ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species, fill = Species)) +
  stat_smooth()
#> `geom_smooth()` using method = 'loess' and formula 'y ~ x'
```

![](https://i.imgur.com/RylFjCL.png)

``` r

ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species, fill = Species)) +
  stat_smooth(se = FALSE)
#> `geom_smooth()` using method = 'loess' and formula 'y ~ x'
```

![](https://i.imgur.com/RxuwOfy.png)

Created on 2018-05-10 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).",https://github.com/tidyverse/ggplot2/pull/2567,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2566,2018-05-10T17:22:30Z,2018-11-17T20:47:03Z,2018-05-10T17:23:42Z,The current documentation for `coord_cartesian()` has an incomplete sentence in the description of the parameter `default`. This PR fixes that.,https://github.com/tidyverse/ggplot2/pull/2566,ggplot2
batpigandme,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2565,2018-05-10T16:29:35Z,2018-11-11T14:03:57Z,2018-05-10T16:45:59Z,* Fixes #2457,https://github.com/tidyverse/ggplot2/pull/2565,ggplot2
hadley,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2564,2018-05-09T22:27:13Z,2018-11-06T15:42:16Z,2018-05-10T15:41:36Z,"Fixes #2563

@karawoo can you please take a look at this one too - I'm going to refactor `position_dodge2()` shortly as I think I see a way to make the code cleaner.",https://github.com/tidyverse/ggplot2/pull/2564,ggplot2
hadley,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2562,2018-05-09T21:49:36Z,2018-11-06T23:28:46Z,2018-05-10T22:43:33Z,"Fixes #2493 

@karawoo can you please double check my logic? I think this makes sense as we should only be considering the maximum number of overlapping groups within a panel.",https://github.com/tidyverse/ggplot2/pull/2562,ggplot2
lionel-,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2561,2018-05-09T18:45:00Z,2018-11-05T20:09:14Z,2018-05-09T19:37:46Z,"- On Travis add R 3.1 now that tidyr/tidyselect are fixed on 3.1
- On Appveyor use `ggplot_build()` instead of vdiffr until the latter is fixed on Windows platforms",https://github.com/tidyverse/ggplot2/pull/2561,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2560,2018-05-08T21:32:45Z,2018-11-05T00:27:18Z,2018-05-09T00:10:06Z,#2559 breaks support for rgba colour values. This undos the changes reinstating support,https://github.com/tidyverse/ggplot2/pull/2560,ggplot2
thomasp85,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/2559,2018-05-07T20:45:55Z,2018-11-04T22:36:12Z,2018-05-07T22:26:01Z,"Fix #2558

This PR changes all the default values for the alpha aesthetic to 1 in the cases where it is currently set to `NA`. Any colour are currently passed through `scales::alpha()` if it should be modified with transparency and this function treats `NA` as 1, so there should be no practical effect of this change.",https://github.com/tidyverse/ggplot2/pull/2559,ggplot2
clauswilke,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2557,2018-05-07T17:25:00Z,2018-11-06T16:42:14Z,2018-05-07T17:27:14Z,"This closes #2544.

```{r}
library(ggplot2)                                                                                                                                                       
ggplot(iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +                                                                                               
  geom_point() +                                                                                                                                                         
  scale_color_discrete(guide = guide_legend(label.theme = element_text(face = ""italic"")))                                                                                
```
<img width=""627"" alt=""screen shot 2018-05-07 at 12 12 05 pm"" src=""https://user-images.githubusercontent.com/4210929/39714788-c2fdea46-51f0-11e8-9cc2-e42bc4fff1c9.png"">


```{r}
ggplot(iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +                                                                                               
  geom_point() +                                                                                                                                                         
  scale_color_discrete(guide = guide_legend(title.theme = element_text(face = ""italic"")))     
```
<img width=""627"" alt=""screen shot 2018-05-07 at 12 12 17 pm"" src=""https://user-images.githubusercontent.com/4210929/39714801-cb403eb6-51f0-11e8-8649-d6ff956b8987.png"">

Both examples look a bit weird because the font size isn't specified. Once we specify font size as well, things look as expected.",https://github.com/tidyverse/ggplot2/pull/2557,ggplot2
clauswilke,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/2556,2018-05-07T02:53:11Z,2018-11-06T16:42:12Z,2018-05-08T19:06:55Z,"This pull request, while not completely solving https://github.com/tidyverse/ggplot2/issues/2465, makes it much easier to work around it, by enabling `margin`, `hjust`, and `vjust` for the theme element `legend.title`. This enables fine-grained justification control over the location of the legend title, which is needed for plots with more than one legend.

Examples:

```{r}
library(ggplot2)
p <- ggplot(mtcars, aes(hp, disp, color = mpg, shape = factor(cyl))) +
  geom_point(size = 2) +
  theme(legend.position = ""top"",
        legend.title = element_text(vjust = 1, margin = margin(t = 4.5)),
        legend.spacing.y = grid::unit(3, ""pt""),
        legend.text.align = 0.5)
p
```
<img width=""739"" alt=""screen shot 2018-05-06 at 9 39 21 pm"" src=""https://user-images.githubusercontent.com/4210929/39682710-2d331780-5177-11e8-9255-613295b9edcd.png"">

```{r}
p + guides(shape = guide_legend(label.position = ""bottom""))
```
<img width=""739"" alt=""screen shot 2018-05-06 at 9 39 35 pm"" src=""https://user-images.githubusercontent.com/4210929/39682715-34120c6e-5177-11e8-9a36-4b98acc6de7e.png"">

For comparison, with the default settings but legend on top, this plot looks as follows:
```{r}
ggplot(mtcars, aes(hp, disp, color = mpg, shape = factor(cyl))) +
  geom_point(size = 2) +
  theme(legend.position = ""top"")
```
<img width=""739"" alt=""screen shot 2018-05-06 at 9 49 27 pm"" src=""https://user-images.githubusercontent.com/4210929/39682770-74a78d44-5177-11e8-9b64-ffaedf5cd7a5.png"">
(Unfortunately, there is no good way at this time to adjust the default settings depending on whether the legend sits on top or at the side. This will have to wait for later.)

Note that none of the visual tests except one had to be changed. Things look exactly as they always did if the default settings are not changed. The visual test that had to be changed had the problem that the two legends in that plot switched order. I have now fixed the order, so this won't happen again.",https://github.com/tidyverse/ggplot2/pull/2556,ggplot2
clauswilke,MEMBER,closed,17,https://github.com/tidyverse/ggplot2/pull/2555,2018-05-04T21:17:31Z,2018-11-17T20:46:53Z,2018-05-10T13:38:18Z,"I realized yesterday that with very little work I could address most of the issues I raised in https://github.com/tidyverse/ggplot2/issues/2345. So I would like to propose this pull request to substantially improve ggplot2's handling of nonstandard aesthetics. The pull request consists primarily of removing hardcoded aesthetics names in various places, and a few minor adjustments to handle the fallout. All the regression tests pass, and none of the changes should impact anybody who is using ggplot2 as they always have. Below follow some examples of what this code can do.

First, we can now specify the aesthetics independently of the scale name,
e.g., define the fill scale using `scale_color_brewer()`:

```{r}
library(ggplot2)
ggplot(iris, aes(x = Sepal.Length, fill = Species)) +
  geom_density(alpha = 0.7) +
  scale_colour_brewer(type = ""qual"", aesthetics = ""fill"")
```
<img width=""592"" alt=""screen shot 2018-05-04 at 4 04 03 pm"" src=""https://user-images.githubusercontent.com/4210929/39653221-c63404da-4fb5-11e8-8b38-9245cb46dc7e.png"">

Second, we can specify multiple aesthetics at once. The legends get merged if appropriate:
```{r}
ggplot(iris, aes(x = Species, y = Sepal.Length, color = Species, fill = Species)) +
  geom_boxplot(alpha = 0.2) +
  geom_point(position = ""jitter"") +
  scale_colour_hue(c = 50, l = 40, aesthetics = c(""colour"", ""fill""))
```
<img width=""591"" alt=""screen shot 2018-05-04 at 4 04 19 pm"" src=""https://user-images.githubusercontent.com/4210929/39653229-d036c698-4fb5-11e8-89c1-abc0c6b35b84.png"">

This also works if the aesthetics represent different data columns: 
```{r}
ggplot(iris, aes(x = Sepal.Length, y = Petal.Length, color = Sepal.Length, fill = Petal.Length)) +
  geom_point(shape = 21, size = 3, stroke = 2) +
  scale_colour_viridis_c(name = ""Length"",
                         option = ""B"", aesthetics = c(""colour"", ""fill""))
```
<img width=""592"" alt=""screen shot 2018-05-04 at 4 04 37 pm"" src=""https://user-images.githubusercontent.com/4210929/39653246-dd1bb18e-4fb5-11e8-84fc-6c8f84f054f8.png"">

The limits get merged automatically, as can be seen here more clearly:
```{r}
df <- data.frame(x = c(1, 2, 3),
                 y = c(6, 5, 7))

ggplot(df, aes(x, y, color = x, fill = y)) +
  geom_point(shape = 21, size = 3, stroke = 2) +
  scale_colour_viridis_c(name = ""value"",
                         option = ""B"", aesthetics = c(""colour"", ""fill""))
```
<img width=""590"" alt=""screen shot 2018-05-04 at 4 04 55 pm"" src=""https://user-images.githubusercontent.com/4210929/39653258-e700b33e-4fb5-11e8-993b-3b5d2225a1ff.png"">

All of this also works with non-standard aesthetics, which I have implemented in ggridges.
First an example with `guide_legend()`:
  
```{r}
library(ggridges)
ggplot(iris, aes(x = Sepal.Length, y = Species, fill = Species, point_color = Species)) +
  geom_density_ridges(jittered_points = TRUE, position = ""raincloud"", alpha = .4) +
  scale_color_manual(values = c(""#924658"", ""#366A17"", ""#126490""),
                     aesthetics = c(""fill"", ""point_color""))
```
<img width=""592"" alt=""screen shot 2018-05-04 at 4 05 23 pm"" src=""https://user-images.githubusercontent.com/4210929/39653270-f7c7de40-4fb5-11e8-91b9-f2d483a01583.png"">

And now an example with `guide_colorbar()`:
  
```{r}
ggplot(iris, aes(x = Sepal.Length, y = Species, fill = ..x.., point_fill = Sepal.Length)) +
  geom_density_ridges_gradient(jittered_points = TRUE, position = ""raincloud"",
                               point_color = ""black"", point_shape = 21, scale = 1.1) +
  scale_color_viridis_c(
    option = ""A"",
    aesthetics = c(""fill"", ""point_fill""),
    guide = guide_colorbar(available_aes = c(""fill"", ""point_fill"")),
    name = ""Sepal Length""
  )
```
<img width=""592"" alt=""screen shot 2018-05-04 at 4 05 39 pm"" src=""https://user-images.githubusercontent.com/4210929/39653288-0e9b3900-4fb6-11e8-8ba1-c26232c9c96f.png"">
",https://github.com/tidyverse/ggplot2/pull/2555,ggplot2
bfgray3,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2549,2018-04-30T20:45:22Z,2018-10-28T19:52:07Z,2018-05-01T19:51:13Z,I have tried to implement the fix suggested by Winston in the comments on this issue.,https://github.com/tidyverse/ggplot2/pull/2549,ggplot2
bfgray3,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2548,2018-04-30T20:37:18Z,2018-10-28T00:48:54Z,2018-05-01T00:23:03Z,I've specified the namespace for `s` as described in #2535.,https://github.com/tidyverse/ggplot2/pull/2548,ggplot2
AdeelH,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/2546,2018-04-30T08:35:39Z,2018-11-07T15:07:04Z,2018-05-11T14:29:36Z,Implement the fix described here: https://github.com/tidyverse/ggplot2/issues/2497#issuecomment-385333245,https://github.com/tidyverse/ggplot2/pull/2546,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2545,2018-04-29T21:46:57Z,2018-10-27T14:27:56Z,2018-04-30T14:15:38Z,"#2386 made `preserve = ""total""` the default for `PositionDodge2`, but didn't swap the order of the defaults in `position_dodge2()`. This fixes it.",https://github.com/tidyverse/ggplot2/pull/2545,ggplot2
bfgray3,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2543,2018-04-29T00:39:22Z,2018-10-27T15:27:58Z,2018-04-30T14:52:39Z,I've tried to close these two issues with this small pull request.,https://github.com/tidyverse/ggplot2/pull/2543,ggplot2
lionel-,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2542,2018-04-28T19:14:23Z,2018-10-27T20:27:56Z,2018-04-30T20:02:32Z,"There is still some work to do but this could already be merged.

TODO:

- Build static libraries of the freetypeharfbuzz package (will probably rename it to fontshaper) for Windows. Until then the Appveyor builds will fail.

- Double check freetypeharfbuzz builds correctly on all platforms. It builds on all r-hub unix platforms but I got an error on Travis macOS.

- Possibly: Create a package that links statically against Cairo in order to produce raster images deterministically.",https://github.com/tidyverse/ggplot2/pull/2542,ggplot2
clauswilke,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2541,2018-04-28T15:42:07Z,2018-10-29T22:41:17Z,2018-05-02T22:05:27Z,"Inspired by StackOverflow questions [here](https://stackoverflow.com/q/29793398/4975218) and [here:](https://stackoverflow.com/q/50070741/4975218) This patch enables better styling of the colorbar guide.

Examples:
```{r}
set.seed(123)
df <- data.frame(x <- rnorm(10),
                 y <- rnorm(10),
                 fill <- rnorm(10))

p <- ggplot(df, aes(x, y, fill = fill)) + geom_point()

# current ggplot2
p + scale_fill_gradient(low = 'white', high = 'red')
```
<img width=""653"" alt=""screen shot 2018-04-28 at 10 34 44 am"" src=""https://user-images.githubusercontent.com/4210929/39398210-6422f5e2-4ad0-11e8-8662-d57048fabbe9.png"">

```{r}
# make frame around color bar
p + scale_fill_gradient(low = 'white', high = 'red',
                        guide = guide_colorbar(frame.colour = ""black""))
```
<img width=""653"" alt=""screen shot 2018-04-28 at 10 34 54 am"" src=""https://user-images.githubusercontent.com/4210929/39398217-70c2c34a-4ad0-11e8-991a-37354f1cda64.png"">

```{r}
# style tick marks
p + scale_fill_gradient(low = 'white', high = 'red',
                        guide = guide_colorbar(ticks.colour = ""black""))
```
<img width=""653"" alt=""screen shot 2018-04-28 at 10 35 01 am"" src=""https://user-images.githubusercontent.com/4210929/39398221-777fddd0-4ad0-11e8-94db-7e35fdf49954.png"">

```{r}
# style frame and tick marks at the same time, change linewidth
p + scale_fill_gradient(low = 'white', high = 'red',
                        guide = guide_colorbar(frame.colour = ""black"",
                                               frame.linewidth = 1,
                                               ticks.colour = ""black"",
                                               ticks.linewidth = 1))
```
<img width=""653"" alt=""screen shot 2018-04-28 at 10 35 08 am"" src=""https://user-images.githubusercontent.com/4210929/39398226-7d496808-4ad0-11e8-8b26-2b1b5c36dcdc.png"">

This pull request will require some modifications once https://github.com/tidyverse/ggplot2/pull/2415 is integrated (or vice versa). I'm happy to take care of that.",https://github.com/tidyverse/ggplot2/pull/2541,ggplot2
clauswilke,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/2539,2018-04-27T19:08:29Z,2018-10-29T00:48:37Z,2018-05-01T23:02:49Z,"This pull request makes it possible to switch off clipping via a setting in the coordinate functions. Examples follow.

First a regular plot with standard clipping:
```{r}
mt_named <- data.frame(mtcars, name = row.names(mtcars))
p <- ggplot(mt_named, aes(mpg, reorder(name, mpg))) + 
  geom_point(size = 2.5, color = ""#0072B2"") +
  geom_text(aes(x = mpg + .5, label = name), hjust = 0, size = 3) +
  scale_y_discrete(name = NULL, breaks = NULL, expand = c(0, 1)) +
  theme_bw() +
  theme(panel.border = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line.x = element_line(),
        plot.margin = margin(6, 45, 6, 6))
p
```
<img width=""546"" alt=""screen shot 2018-04-27 at 1 59 19 pm"" src=""https://user-images.githubusercontent.com/4210929/39380354-e3ce97e0-4a23-11e8-984f-e6976c4167f3.png"">

Clipping turned off:
```{r}
p + coord_cartesian(clip = ""off"")
```
<img width=""546"" alt=""screen shot 2018-04-27 at 1 59 26 pm"" src=""https://user-images.githubusercontent.com/4210929/39380377-f74b6848-4a23-11e8-82b8-a5ee9126e961.png"">

Fixed coordinate system:
```{r}
p + coord_fixed(clip = ""off"")
```
<img width=""546"" alt=""screen shot 2018-04-27 at 1 59 34 pm"" src=""https://user-images.githubusercontent.com/4210929/39380427-22a829c2-4a24-11e8-926d-8437ec06db01.png"">

This works also with `facet_wrap()` and `facet_grid()`:
```{r}
p + coord_cartesian(clip = ""off"") +
  facet_wrap(~carb)
```
<img width=""546"" alt=""screen shot 2018-04-27 at 1 59 51 pm"" src=""https://user-images.githubusercontent.com/4210929/39380433-2b714052-4a24-11e8-90c6-7efc89e8fac4.png"">

```{r}
p + coord_cartesian(clip = ""off"") +
  facet_grid(gear~carb)
```
<img width=""546"" alt=""screen shot 2018-04-27 at 2 00 01 pm"" src=""https://user-images.githubusercontent.com/4210929/39380439-31b046a2-4a24-11e8-8088-ff8d61b33210.png"">

Nothing is changed from current ggplot2 as long as we don't set the `clip` option: 
```{r}
p + coord_cartesian() + facet_grid(gear~carb)
```
<img width=""546"" alt=""screen shot 2018-04-27 at 2 00 37 pm"" src=""https://user-images.githubusercontent.com/4210929/39380449-38d4bada-4a24-11e8-841f-a63e006a0346.png"">
",https://github.com/tidyverse/ggplot2/pull/2539,ggplot2
thomasp85,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/2538,2018-04-27T18:30:29Z,2018-10-28T13:52:10Z,2018-05-01T11:24:23Z,"Fix #2432

This PR exports and documents `set_last_plot()` thus making it easier for extension developers implementing custom build/plot code to use the `last_plot()` facility

No NEWS bullet added as this is under the hood",https://github.com/tidyverse/ggplot2/pull/2538,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2537,2018-04-27T18:24:59Z,2018-10-24T21:10:12Z,2018-04-27T20:53:28Z,"Fix #2527

This PR will export the Layout class/object thus making it easier for extension developers to modify the build process.

No NEWS bullet has been added as I consider this minor and under the hood",https://github.com/tidyverse/ggplot2/pull/2537,ggplot2
batpigandme,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2524,2018-04-15T20:51:29Z,2018-11-11T14:03:55Z,2018-04-27T15:57:41Z,,https://github.com/tidyverse/ggplot2/pull/2524,ggplot2
eliocamp,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2521,2018-04-12T23:25:37Z,2018-10-24T21:10:16Z,2018-04-27T20:51:24Z,"Currently the only required aesthetics in the documentation are `x` and `y`. Adding `z` to `GeomContour`s `required_aes` does not work because as a geom, it actually never uses that variable. 
I guess changing the `rd_aesthetics()` call is the easiest way to fix it.",https://github.com/tidyverse/ggplot2/pull/2521,ggplot2
malcolmbarrett,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2510,2018-04-01T22:24:03Z,2018-10-29T00:48:39Z,2018-05-01T22:59:11Z,"The `geom_rect` and `geom_tile` doc examples include an aesthetic parameter for width, but neither geom has that, so the examples produce this warning:

``` r
ggplot(df, aes(x, y)) +
  geom_tile(aes(fill = z, width = w), colour = ""grey50"")

# > Warning: Ignoring unknown parameters: width
```
For `geom_tile`, I moved height and width over to `default_aes`. For `geom_rect`, though, I just removed `width = w` from the example in the docs because it seemed like a mistake (since `geom_rect` calculates width from `xmin` and `xmax`).

Thanks!
Malcolm
",https://github.com/tidyverse/ggplot2/pull/2510,ggplot2
pkq,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2508,2018-04-01T06:20:04Z,2018-10-24T21:10:23Z,2018-04-27T15:58:38Z,"Remove extraneous ""if"" from description of geom_density()",https://github.com/tidyverse/ggplot2/pull/2508,ggplot2
buyske,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2503,2018-03-26T23:26:36Z,2018-10-24T21:10:14Z,2018-04-27T20:51:32Z,"Fix typo of ""recieves"" to ""receives""",https://github.com/tidyverse/ggplot2/pull/2503,ggplot2
lionel-,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2491,2018-03-22T17:10:28Z,2018-09-18T18:31:29Z,2018-03-22T17:42:26Z,,https://github.com/tidyverse/ggplot2/pull/2491,ggplot2
lionel-,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2490,2018-03-22T11:41:31Z,2018-09-18T17:31:31Z,2018-03-22T16:54:54Z,,https://github.com/tidyverse/ggplot2/pull/2490,ggplot2
batpigandme,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2487,2018-03-20T12:58:53Z,2018-11-06T17:42:14Z,2018-03-21T11:20:23Z,"Does not render to site, waiting for pkgdown to be a go, but when next rendered, should propagate.",https://github.com/tidyverse/ggplot2/pull/2487,ggplot2
frostell,NONE,closed,10,https://github.com/tidyverse/ggplot2/pull/2481,2018-03-14T00:45:51Z,2018-11-05T22:09:14Z,2018-05-09T21:35:06Z,"Small update to position-dodge2.r to enable alignment of geom_boxplot() and geom_point() with NA's through position_dodge2(), possible patch for #2480.",https://github.com/tidyverse/ggplot2/pull/2481,ggplot2
burchill,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2475,2018-03-07T19:16:01Z,2018-10-24T16:11:32Z,2018-04-27T15:59:00Z,"The parameter `plot` is listed in the docs for `ggplot_gtable` although it's never used and isn't an argument of the function. I removed it, assuming that it was a typo.",https://github.com/tidyverse/ggplot2/pull/2475,ggplot2
clauswilke,MEMBER,closed,14,https://github.com/tidyverse/ggplot2/pull/2471,2018-03-03T19:04:33Z,2018-10-28T22:52:11Z,2018-05-01T22:24:46Z,"This pull request fixes #2288, by calculating descender height in `titleGrob()` on a fixed string rather than based on the specific label string handed to `titleGrob()`.

This commit causes subtle changes to all ggplot2 output, because it changes the height of axis tick labels and of legend titles as well as plot titles, plot subtitles, etc. I have looked through all visual tests and I didn't see any breakage. I also rebuilt my book with this patch and found no problems. However, the spacing between x-axis tick labels and the x-axis title, or between legend title and legend, is now arguably a little too large, and some small tweaks to themes might be warranted.

In a similar vein, with this fix, the default `vgap` value calculated [here](https://github.com/tidyverse/ggplot2/blob/39e4a3bdb910a0344e2f75a5ade2e4f27e263a62/R/guide-legend.r#L344) and [here](https://github.com/tidyverse/ggplot2/blob/39e4a3bdb910a0344e2f75a5ade2e4f27e263a62/R/guide-colorbar.r#L302) is arguably a little too large. A coefficient of 0.4 might work better.

I didn't accept the visual tests because for some subset of tests the svgs on my computer have never agreed with the ones in the repository.",https://github.com/tidyverse/ggplot2/pull/2471,ggplot2
lionel-,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2467,2018-03-01T11:54:10Z,2018-09-18T17:31:29Z,2018-03-22T16:52:53Z,,https://github.com/tidyverse/ggplot2/pull/2467,ggplot2
brianwdavis,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/2458,2018-02-20T22:02:18Z,2018-10-24T16:11:30Z,2018-04-27T15:59:49Z,"To override the default ""a"" in the label of a text legend: first check if `data$label` has anything in it; if not, use ""a"" as before. However, if the user sets a label within `guide_legend(override.aes = list(label = ""foo""))`, then use that label or vector of labels as the first arg of `textGrob`.

Motivation
----
This is a relatively common request on SO, to wit: https://stackoverflow.com/questions/48892982/change-key-letter-in-legend-of-ggplot

The problem
----
The current version of `draw_key_text` has a hardcoded ""a"" as the first arg of `textGrob`.

Example using the fix
----
```
ggplot(mtcars, aes(mpg, wt, color = factor(am), label = disp)) +
  geom_text() +
  guides(color = guide_legend(override.aes = list(label = c(""a"", ""m""))))
```

![image](https://user-images.githubusercontent.com/13338560/36451656-c27908ca-165f-11e8-83b8-7e14fc51a1b2.png)
",https://github.com/tidyverse/ggplot2/pull/2458,ggplot2
caijun,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2451,2018-02-13T17:04:35Z,2018-10-24T21:10:18Z,2018-04-27T20:50:05Z,contract -> contrast,https://github.com/tidyverse/ggplot2/pull/2451,ggplot2
luisDVA,NONE,closed,5,https://github.com/tidyverse/ggplot2/pull/2450,2018-02-13T00:10:06Z,2018-11-03T17:48:10Z,2018-04-27T20:46:19Z,"added a quick example at the relevant section of the legend guide, since the documentation is not explicit on setting breaks on discrete scales to exclude/omit/drop legend items
",https://github.com/tidyverse/ggplot2/pull/2450,ggplot2
nzxwang,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/2449,2018-02-12T20:57:17Z,2018-10-24T21:10:25Z,2018-04-27T20:44:27Z,"document that bolded aesthetics can be either required *or* computed. I was confused when reading the documentation for geom_boxplot, it seemed to claim that the computed attributes were required arguments, so I added a note indicating the bolded attributes may be computed as well.",https://github.com/tidyverse/ggplot2/pull/2449,ggplot2
slowkow,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/2445,2018-02-09T20:27:54Z,2018-08-11T15:44:57Z,2018-02-12T15:20:22Z,"In pull #1996 position_jitter got a new argument called seed.

position_jitterdodge might also benefit from having a seed.

Below, I show an example of `position_jitterdodge` before and after my changes.

Please notice two things:

1. After my changes, the text labels are correctly centered on the points.

2. The x-axis gains 2 tick marks at 5 and 7.

    - This was unexpected, and I don't know why it happened or if it matters much. It's easy to fix by doing `dat$cyl <- factor(dat$cyl)`.

Here's the code:

```r
library(ggplot2)
dat <- mtcars
dat$name <- rownames(mtcars)
dat$name[dat$cyl != 6] <- """"

set.seed(1)
pos <- position_jitterdodge(seed = 1)
ggplot(dat, aes(cyl, mpg, color = name != """", label = name)) +
  geom_point(
    size = 0.5,
    position = pos
  ) +
  geom_text(
    size = 2,
    position = pos
  )
# ggplot2      * 2.2.1.9000 2018-02-09 Github (tidyverse/ggplot2@2b5b88d)
# ggsave(""ggplot2-2b5b88d-jitterdodge.png"", width = 6, height = 4)
ggsave(""ggplot2-slowkow-jitterdodge.png"", width = 6, height = 4)
```

# Before

This figure was made with ggplot2 2b5b88d

![ggplot2-2b5b88d-jitterdodge](https://user-images.githubusercontent.com/209714/36048547-94c67cb0-0dad-11e8-9656-e9247c73fbb1.png)


# After

This figure was made after making the changes in this pull request.

![ggplot2-slowkow-jitterdodge](https://user-images.githubusercontent.com/209714/36048551-99330eda-0dad-11e8-83b5-33b7d2ccd19c.png)
",https://github.com/tidyverse/ggplot2/pull/2445,ggplot2
erocoar,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2436,2018-02-03T21:12:50Z,2018-10-28T13:52:08Z,2018-05-01T13:42:05Z,"`facet_trans` has parameter `horizontal`. When set to `FALSE`, 

```r
ggplot(mtcars, aes(x = hp, y = mpg)) + geom_point() + facet_trans('sqrt', horizontal = FALSE)
```
gives
```
Error in gtable::gtable_add_grob(panel_table, rep(axes$y$right, length(panel_pos_v)),  : 
  Not all inputs have either length 1 or same length same as 'grobs' 
```

Old:  
```r
for (i in rev(seq_along(panel_pos_h))) {
  panel_table <- gtable::gtable_add_cols(panel_table, axis_width_r[i], panel_pos_h[i])
  if (params$horizontal) {
    panel_table <- gtable::gtable_add_grob(panel_table, 
      rep(axes$y$right[i], length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i] + 1, 
      clip = ""off"")
  } else {
    panel_table <- gtable::gtable_add_grob(panel_table, 
      rep(axes$y$right, length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i] + 1, 
      clip = ""off"")
  }
  panel_table <- gtable::gtable_add_cols(panel_table, axis_width_l[i], panel_pos_h[i] - 1)
  if (params$horizontal) {
    panel_table <- gtable::gtable_add_grob(panel_table, 
    rep(axes$y$left[i], length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i], 
    clip = ""off"")
  } else {
    panel_table <- gtable::gtable_add_grob(panel_table, 
    rep(axes$y$left, length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i], 
    clip = ""off"")
  }
}
```

New:
```r
    if (params$horizontal) {
      for (i in rev(seq_along(panel_pos_h))) {
        panel_table <- gtable::gtable_add_cols(panel_table, axis_width_r[i], panel_pos_h[i])
        panel_table <- gtable::gtable_add_grob(panel_table,
          axes$y$right[i], t = panel_pos_v, l = panel_pos_h[i] + 1,
          clip = ""off"")

        panel_table <- gtable::gtable_add_cols(panel_table, axis_width_l[i], panel_pos_h[i] - 1)
        panel_table <- gtable::gtable_add_grob(panel_table,
          axes$y$left[i], t = panel_pos_v, l = panel_pos_h[i],
          clip = ""off"")
      }
    } else {
        panel_table <- gtable::gtable_add_cols(panel_table, axis_width_r[1], panel_pos_h)
        panel_table <- gtable::gtable_add_grob(panel_table,
          axes$y$right, t = panel_pos_v, l = panel_pos_h + 1,
          clip = ""off"")
        panel_table <- gtable::gtable_add_cols(panel_table, axis_width_l[1], panel_pos_h - 1)
        panel_table <- gtable::gtable_add_grob(panel_table,
          axes$y$left, t = panel_pos_v, l = panel_pos_h,
          clip = ""off"")
      }
```

since the y-axes will be different for both panels in either case (horizontal and vertical). I tried to keep it equal to the prior facet (`facet_duplicate()`). The disadvantage of that is that only one y-axis width can be used",https://github.com/tidyverse/ggplot2/pull/2436,ggplot2
karawoo,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2434,2018-02-01T23:19:19Z,2018-08-01T15:29:36Z,2018-02-02T14:55:07Z,f61bfd620037b7e1c816129469b106443651a4dc updated the error message but not the test that expects the old message. ,https://github.com/tidyverse/ggplot2/pull/2434,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2433,2018-02-01T17:14:34Z,2018-08-07T15:24:09Z,2018-02-08T15:18:36Z,"As discussed. Export `set_last_plot()` for use by extension packages such as `patchwork`

The docs are set as internal in the same way as `last_plot()`",https://github.com/tidyverse/ggplot2/pull/2433,ggplot2
ruaridhw,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/2430,2018-01-30T23:26:49Z,2018-08-08T14:20:14Z,2018-02-09T13:40:48Z,"New `fortify.default` error message is misaligned with the `expect_error` msg

See changes in f61bfd620037b7e1c816129469b106443651a4dc",https://github.com/tidyverse/ggplot2/pull/2430,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2418,2018-01-22T19:18:48Z,2018-10-24T21:10:27Z,2018-04-27T20:40:56Z,Fix #2417,https://github.com/tidyverse/ggplot2/pull/2418,ggplot2
gregrs-uk,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/2416,2018-01-21T10:46:49Z,2019-01-24T08:35:47Z,2018-04-27T20:40:13Z,"* Added full stops and capital letters for consistency.
* Fixed some typos and grammatical/punctuation errors.
* Added backticks for `code formatting`.",https://github.com/tidyverse/ggplot2/pull/2416,ggplot2
clauswilke,MEMBER,closed,11,https://github.com/tidyverse/ggplot2/pull/2415,2018-01-21T00:24:15Z,2018-10-29T16:42:43Z,2018-05-02T15:56:54Z,"This pull request closes #2397 and #2398.

Colorbar legends work in all positions and use the same spacings as regular legends:

```
p <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species, fill = Petal.Width)) + 
  geom_point(pch = 21) +
  guides(color = guide_legend(title = ""Petal.Width"")) +
  theme(plot.margin = margin(10, 10, 10, 10),
        plot.background = element_rect(color = ""black""))

cowplot::plot_grid(p + theme(legend.position = ""left""), p + theme(legend.position = ""right""),
                   p + theme(legend.position = ""top""), p + theme(legend.position = ""bottom""), scale = .95)
```
<img width=""1385"" alt=""screen shot 2018-01-20 at 6 14 51 pm"" src=""https://user-images.githubusercontent.com/4210929/35189342-000d95e4-fe0e-11e7-95eb-fe6aeb8309d2.png"">

(I renamed the color guide as `""Petal.Width""` because this title has a different height than `""Species""`, which has a descent. Without this renaming the guides don't look equivalent but that's not the fault of `guide_colorbar()`.)

And gaps between the title and the colorbar can be set in horizontal and vertical contexts and the gap is of the size specified: 

```
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Petal.Width)) + geom_point() +
  scale_color_distiller(name = ""gap width = 1cm"") +
  theme(legend.spacing.x = grid::unit(1, ""cm""),
        legend.position = ""top"")
```
<img width=""733"" alt=""screen shot 2018-01-20 at 5 18 12 pm"" src=""https://user-images.githubusercontent.com/4210929/35188953-5eb8f816-fe06-11e7-8202-f72cb3eb19e9.png"">


```
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Petal.Width)) + geom_point() +
  scale_color_distiller(name = ""gap width = 1cm"") +
  theme(legend.spacing.y = grid::unit(1, ""cm""))
```
<img width=""733"" alt=""screen shot 2018-01-20 at 5 18 27 pm"" src=""https://user-images.githubusercontent.com/4210929/35188954-65787b68-fe06-11e7-96bc-3f6afa2b3a45.png"">

One problem that I see remaining is that with the default theme the legend title sits too close to the bar:

```
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Petal.Width)) + geom_point()
```
<img width=""733"" alt=""screen shot 2018-01-20 at 5 24 33 pm"" src=""https://user-images.githubusercontent.com/4210929/35188978-dfdae10c-fe06-11e7-82a6-87126e8120c8.png"">

But this is a problem with how theming and title grobs work, not with the colorbar code. And the problem is the same in both `guide_colorbar()` and `guide_legend()`, only that it's slightly less obvious in the latter. And the problem exists in the same form in the current ggplot2, so this is not a regression.",https://github.com/tidyverse/ggplot2/pull/2415,ggplot2
gregrs-uk,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2413,2018-01-20T15:31:59Z,2018-07-20T20:31:35Z,2018-01-21T17:50:16Z,"Change documentation and comments to standardise the spelling of 'faceting'. Both spellings ('faceting' and 'facetting') were previously in use. OED and https://en.oxforddictionaries.com/definition/faceting give the usual spelling as ‘faceting’.

Updated `man` directory using roxygen2",https://github.com/tidyverse/ggplot2/pull/2413,ggplot2
mine-cetinkaya-rundel,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2411,2018-01-19T18:19:52Z,2018-07-18T19:44:33Z,2018-01-19T18:44:09Z,"Update startup messages should include links to RStudio Community and R4DS, closes #2410.

",https://github.com/tidyverse/ggplot2/pull/2411,ggplot2
jimhester,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2409,2018-01-19T13:54:00Z,2018-07-18T14:16:22Z,2018-01-19T14:00:51Z,"This avoids confusion when calling `set.seed()` before attaching
ggplot2.",https://github.com/tidyverse/ggplot2/pull/2409,ggplot2
ZoidbergIII,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/2408,2018-01-19T13:29:42Z,2018-10-24T16:11:44Z,2018-04-27T15:49:00Z,"The previous version contained the phrase: ""Most displays are roughly rectangular"".
The meaning is understandable but this is confusing in a strictly mathematical sense: most display are indeed rectangular but this is not the point.
The point is that the aspect ratio (width/height) is not too high, i.e. we don't have extremely wide displays (which would be also rectangular)",https://github.com/tidyverse/ggplot2/pull/2408,ggplot2
thomasp85,MEMBER,closed,61,https://github.com/tidyverse/ggplot2/pull/2405,2018-01-17T19:30:29Z,2018-11-05T23:09:26Z,2018-05-09T22:33:30Z,"As per discussions on twitter, this PR adds a `tag` label alongside `title`, `subtitle`, and `caption`. It is placed in the upper left corner in its own row and column between the margin and the title/x-label.

The tag name is chosen over `label` as the `labs()` function indicate that “label” is a catchall term for all types of titles.

The default theming is like this:

```r
ggplot(mtcars) +
  geom_point(aes(disp, mpg)) + 
  labs(tag = 'A', title = 'test')
```

![tag](https://user-images.githubusercontent.com/1775316/35062710-5802fdde-fbc5-11e7-9387-6bac0cdd41fe.png)

The size is slightly larger than the title and the margin is chosen so that it is well separated from the main parts of the plot. In general this is based on my own taste and is up for discussion.",https://github.com/tidyverse/ggplot2/pull/2405,ggplot2
jan-glx,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2392,2018-01-10T14:45:36Z,2018-07-09T23:44:35Z,2018-01-10T23:30:21Z,"Hi @hadley ,

 in d69762269787ed0799ab4fb1f35638cc46b5b7e6 you added
https://github.com/tidyverse/ggplot2/blob/d69762269787ed0799ab4fb1f35638cc46b5b7e6/R/aes.r#L61
which makes `ggplot2` dependent on `rlang`. This dependency is not reflected in `gglpot2`'s `DESCRIPTION`. I added `rlang` to `Imports` but `enexprs` is not yet available in a released version of `rlang` hence the requirement for unreleased `0.1.7`. 

best, Jan


Reproduce the resulting problem:
````
remove.packages(""rlang"")
remove.packages(""ggplot2"")
devtools::install_github(""tidyverse/ggplot2"") # fails with:
# Error in loadNamespace [...] there is no package called 'rlang'
devtools::install_github(""jan-glx/ggplot2"", ref = ""patch-2"") # until release of rlang 0.1.7 fails with: 
# Error : 'enexprs' is not an exported object from 'namespace:rlang'
devtools::install_github(""tidyverse/rlang"")
devtools::install_github(""tidyverse/ggplot2"") # works
````
",https://github.com/tidyverse/ggplot2/pull/2392,ggplot2
mvkorpel,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2390,2018-01-09T10:08:12Z,2018-10-24T16:11:42Z,2018-04-27T15:49:19Z,,https://github.com/tidyverse/ggplot2/pull/2390,ggplot2
HughParsonage,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2387,2018-01-07T03:38:53Z,2018-10-24T16:11:40Z,2018-04-27T15:51:10Z,"Since `stat_smooth` calls `mgcv` unconditionally.  (https://github.com/tidyverse/ggplot2/blob/6968e36b8e2df37db6c6d71e110b88a4cbe82962/R/stat-smooth.r)

This change will help packages which use `stat_smooth` in vignettes avoid CRAN warnings.

Since `mgcv` is 'recommended', requiring it rather than suggesting it will have practically no adverse impact in terms of additional dependencies. (I wasn't sure if it was worth an entry on NEWS but have included one for completeness.)

Thank you!",https://github.com/tidyverse/ggplot2/pull/2387,ggplot2
karawoo,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2386,2018-01-06T05:33:18Z,2018-10-24T21:10:29Z,2018-04-27T20:38:34Z,"Closes #2290 by setting the default `preserve` argument in `position_dodge2()` to `""total""`. 

Before: 

``` r
ggplot(mtcars, aes(x = factor(vs), y = mpg)) +
  facet_wrap( ~ factor(cyl)) +
  geom_boxplot()
```

![](https://i.imgur.com/zr206DP.png)


After:

``` r
ggplot(mtcars, aes(x = factor(vs), y = mpg)) +
  facet_wrap( ~ factor(cyl)) +
  geom_boxplot()
```

![](https://i.imgur.com/V5JE7Qr.png)
",https://github.com/tidyverse/ggplot2/pull/2386,ggplot2
batpigandme,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2385,2018-01-02T17:28:35Z,2018-11-06T17:42:16Z,2018-01-02T19:04:38Z,Closes #2362,https://github.com/tidyverse/ggplot2/pull/2385,ggplot2
clauswilke,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/2382,2017-12-28T19:10:31Z,2018-07-11T16:05:56Z,2018-01-12T15:22:19Z,"This pull request fixes #2260 for continuous color scales. #2260 has been previously fixed for discrete color scales, but it still exists for continuous ones:

```
library(ggplot2)
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color=Petal.Width)) + 
  geom_point() +
  theme(legend.spacing.y = grid::unit(0.5, ""cm""))

#  Error in Ops.unit(theme$legend.spacing.y %||% 0.5, unit(title_height,  : 
#   only one operand may be a unit 
```
",https://github.com/tidyverse/ggplot2/pull/2382,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2379,2017-12-22T06:35:37Z,2018-06-20T14:29:41Z,2017-12-22T14:22:16Z,Fixes #2356. The [titleGrob() refactor](https://github.com/tidyverse/ggplot2/pull/2232/) caused a bug where strip labels on the left side weren't rotated properly. This fixes it by extracting the creation of the text grobs into a separate function (`create_strip_labels()`) that can be called after the angle has been adjusted.,https://github.com/tidyverse/ggplot2/pull/2379,ggplot2
mruessler,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2376,2017-12-21T09:31:06Z,2018-11-08T20:27:55Z,2018-04-27T15:53:20Z,,https://github.com/tidyverse/ggplot2/pull/2376,ggplot2
hrbrmstr,CONTRIBUTOR,closed,10,https://github.com/tidyverse/ggplot2/pull/2375,2017-12-19T03:56:43Z,2018-10-24T16:11:34Z,2018-04-27T15:57:20Z,"Based on https://stackoverflow.com/questions/47878787/fill-arrow-on-geom-curve-ggplot2/47879776#47879776

this adds a missing `fill` `gpar` (i.e. back on par with `geom_segment`) and takes care of ^^ issue.

I also added the `fill` aesthetic to `geom_segment()` and changed the `fill` there to use it. 

this means the arrows can be filled in for both.

NOTE: @clauswilke had the idea to add the fill aesthetic to `geom_curve` and I figured `geom_segment` shldn't be left out.",https://github.com/tidyverse/ggplot2/pull/2375,ggplot2
thomasp85,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/2370,2017-12-13T10:22:41Z,2018-07-01T14:31:06Z,2018-01-02T14:30:32Z,"This PR changes `ggplot_build` and `ggplot_gtable` to generics.

The purpose is to allow extension developers to inject logic into the build phase of ggplot by subclassing the `ggplot` class. My personal use case is to register the relevant graph during build of ggraph plots so that tidygraph algorithms can be used inside `aes()` e.g.

```r
ggraph(gr) + 
  geom_edge_link() + 
  geom_node_point(aes(size = centrality_degree()))
```
",https://github.com/tidyverse/ggplot2/pull/2370,ggplot2
has2k1,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2367,2017-12-11T11:59:34Z,2018-06-18T18:43:26Z,2017-12-12T03:04:39Z,"The issue only was only about `stat_bin_2d`, but `stat_bin`
suffered the same slight.

Fixes #2366",https://github.com/tidyverse/ggplot2/pull/2367,ggplot2
rmatkins,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/2365,2017-12-09T06:13:31Z,2020-02-14T23:26:04Z,2019-08-18T21:33:10Z,"Changes the stairstep function to create the option for an ""hvh"" direction. In this case, the ""step"" (or vertical deflection) occurs halfway between point A and B.

`# Example with random distance between each x 
`
`
x <- runif(50)
`
`
y <- runif(50)
`
`
ggplot(NULL,aes(x,y)) + geom_point()+ geom_step(direction = ""hvh"")
`
![randomx](https://user-images.githubusercontent.com/33901289/33793053-b047d74a-dc75-11e7-8d9f-d8cb75bcb10a.png)


`# Example with uniform distance between each x`
`x <- 1:50`
`y <- runif(50)`
`ggplot(NULL,aes(x,y)) + geom_point()+ geom_step(direction = ""hvh"")`
`
![uniformx](https://user-images.githubusercontent.com/33901289/33793056-b6224c68-dc75-11e7-96e4-ec51e629a00a.png)
",https://github.com/tidyverse/ggplot2/pull/2365,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2364,2017-12-08T16:58:19Z,2018-10-23T14:48:17Z,2018-04-26T14:21:24Z,"This fixes #2363.

I also added a commit which fixes #2355. I would have made it a separate PR, but there would have been merge conflicts.",https://github.com/tidyverse/ggplot2/pull/2364,ggplot2
truemoid,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2358,2017-12-05T21:07:25Z,2018-10-24T16:11:36Z,2018-04-27T15:55:07Z,It is not clear in the function documentation that the limits need to be a vector. This is clearer in the related coord_cartesian examples. Adding example may help some users.,https://github.com/tidyverse/ggplot2/pull/2358,ggplot2
krlmlr,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2349,2017-11-21T17:38:01Z,2018-09-21T13:37:15Z,2017-11-30T23:13:34Z,based on 582acfec,https://github.com/tidyverse/ggplot2/pull/2349,ggplot2
has2k1,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2346,2017-11-21T01:44:23Z,2018-06-18T18:43:27Z,2017-11-21T22:02:25Z,"Previously it showed an approximation where the colours
at the scale limits were not guaranteed to be included.

``` r
library(ggplot2)

ggplot(faithful, aes(x = eruptions, y = waiting)) +
  geom_point()  +
  stat_density_2d(aes(fill=..level..), geom='polygon') +
  xlim(0.5, 6) +
  ylim(40, 110) +
  scale_fill_viridis_c() +
  guides(fill=guide_colorbar(nbin=7))
```

![](https://i.imgur.com/2rOHqir.png)

*Before*
![](https://i.imgur.com/9NkqiQ0.png)

fixes #2343",https://github.com/tidyverse/ggplot2/pull/2346,ggplot2
daniel-barnett,CONTRIBUTOR,closed,9,https://github.com/tidyverse/ggplot2/pull/2338,2017-11-15T10:04:26Z,2018-11-06T13:42:12Z,2018-05-10T13:19:07Z,"Implementation of #2075 

```r
data(mtcars)
n_obs <- nrow(mtcars)
pch_table <- c(""0"" = ""square open"",
               ""1"" = ""circle open"",
               ""2"" = ""triangle open"",
               ""3"" = ""plus"",
               ""4"" = ""cross"",
               ""5"" = ""diamond open"",
               ""6"" = ""triangle open down"",
               ""7"" = ""square cross"",
               ""8"" = ""asterisk"",
               ""9"" = ""diamond plus"",
               ""10"" = ""circle plus"",
               ""11"" = ""star"",
               ""12"" = ""square plus"",
               ""13"" = ""circle cross"",
               ""14"" = ""square triangle"",
               ""15"" = ""square"",
               ""16"" = ""circle small"",
               ""17"" = ""triangle"",
               ""18"" = ""diamond"",
               ""19"" = ""circle"",
               ""20"" = ""bullet"",
               ""21"" = ""circle filled"",
               ""22"" = ""square filled"",
               ""23"" = ""diamond filled"",
               ""24"" = ""triangle filled"",
               ""25"" = ""triangle filled down"")

## Testing previous functionality remains

# All defaults remain the same
ggplot(mtcars) + geom_point(aes(hp, cyl))

# Numeric shapes remain the same
ggplot(mtcars) + geom_point(aes(hp, cyl), shape = 1, size = 3)

# Single character shapes remain the same
ggplot(mtcars) + geom_point(aes(hp, cyl), shape = ""a"", size = 3)

# Single character shapes for all observations remain the same
ggplot(mtcars) + geom_point(aes(hp, cyl), shape = c(letters, LETTERS)[1:n_obs], size = 3)

# Manually setting shape
mtcars$am2 <- ifelse(mtcars$am, ""Manual"", ""Automatic"")
ggplot(mtcars) + geom_point(aes(hp, cyl, shape = am2)) + scale_shape_manual(values = 2:3)

# Manually setting shapes with names
ggplot(mtcars) + geom_point(aes(hp, cyl, shape = am2)) + 
  scale_shape_manual(values = c(""Manual"" = 2, ""Automatic"" = 3)) 

## Testing new functionality

# Constant shape defined by a string
ggplot(mtcars) + geom_point(aes(hp, cyl), shape = ""triangle"", size = 3)
```
![image](https://user-images.githubusercontent.com/16076593/32829978-3d33bf6c-ca50-11e7-8348-1099fce2ca24.png)
```r
# Constant shape defined by a unique substring
ggplot(mtcars) + geom_point(aes(hp, cyl), shape = ""pl"", size = 3)
```
![image](https://user-images.githubusercontent.com/16076593/32830008-598d2770-ca50-11e7-9ac1-7149b844ffef.png)

```r
# Constant shape string defined for all observations
shape_vect <- c(unname(pch_table), unname(pch_table)[1:(n_obs - length(pch_table))])
ggplot(mtcars) + geom_point(aes(hp, cyl), shape = shape_vect, size = 3)
```
![image](https://user-images.githubusercontent.com/16076593/32830064-8952f214-ca50-11e7-8cf8-b003b62a48ff.png)

```r
# Manually setting shape with strings
mtcars$am2 <- ifelse(mtcars$am, ""Manual"", ""Automatic"")
ggplot(mtcars) + geom_point(aes(hp, cyl, shape = am2)) + 
  scale_shape_manual(values = c(""triangle open"", ""plus""))
```
![image](https://user-images.githubusercontent.com/16076593/32830078-91aee59e-ca50-11e7-9b51-13b7050dbf18.png)

```r
# Manually setting shapes with strings and named vectors
ggplot(mtcars) + geom_point(aes(hp, cyl, shape = am2)) + 
  scale_shape_manual(values = c(""Manual"" = ""triangle open"", ""Automatic"" = ""plus"")) 
```
![image](https://user-images.githubusercontent.com/16076593/32830090-99b6ac54-ca50-11e7-904c-00acb2f7fb95.png)

```r
# ERROR: Wrong number of shapes defined 
ggplot(mtcars) + geom_point(aes(hp, cyl), shape = c(""triangle"", ""circle""), size = 3)

# ERROR: Constant shape defined by a non-unique substring
ggplot(mtcars) + geom_point(aes(hp, cyl), shape = ""tri"", size = 3)

# ERROR: No such shape string 
ggplot(mtcars) + geom_point(aes(hp, cyl), shape = ""void"", size = 3)

# ERROR: Wrong string within a set
shape_vect[10] <- ""void""
ggplot(mtcars) + geom_point(aes(hp, cyl), shape = shape_vect, size = 3)

# ERROR: Multiple wrong strings within a set
shape_vect[11] <- ""another_void""
shape_vect[21] <- ""yetanother_void""
ggplot(mtcars) + geom_point(aes(hp, cyl), shape = shape_vect, size = 3)
```",https://github.com/tidyverse/ggplot2/pull/2338,ggplot2
dongzhuoer,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2337,2017-11-13T02:02:18Z,2018-06-18T18:43:28Z,2017-11-14T22:02:02Z,,https://github.com/tidyverse/ggplot2/pull/2337,ggplot2
econandrew,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/2334,2017-11-11T03:27:21Z,2019-10-21T19:25:04Z,2019-04-24T18:32:59Z,"An implementation of the idea in #2307, for consideration.

Motivation is to allow programmatic, data-agnostic control of scale limits, taking advantage of rather than having to replicate ggplot's aesthetic calculations. For example, suppose you want limits to always be a multiple of 50:

``` r
library(ggplot2)
library(dplyr)

# Example 1: stacked position adjustment

p1 <- ggplot(mpg, aes(class)) + geom_bar(aes(fill = drv))

# define a function to determine limits
limiter <- function(by) {
  function(limits) {
    low <- floor(limits[1]/by)*by
    high <- ceiling(limits[2]/by)*by
    c(low, high)
  }
}

# with PR, you can write something like...
p1 + scale_y_continuous(limits = limiter(50))

# ...current alternative would have to be
themax <- mpg %>% group_by(class) %>% summarise(count = n()) %>% pull(count) %>% max
p1 + scale_y_continuous(limits = limiter(50)(c(0, themax)))
```

![](https://i.imgur.com/4uoVTUY.png)",https://github.com/tidyverse/ggplot2/pull/2334,ggplot2
timgoodman,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2328,2017-11-06T18:50:37Z,2018-06-18T18:43:30Z,2017-11-06T19:10:11Z,"At some point during a refactoring, `ndensity` was changed from `density/max(density)` to `count/max(density)` -- I believe by mistake.  This changes it back.  See issue [#2324](https://github.com/tidyverse/ggplot2/issues/2324) for details.",https://github.com/tidyverse/ggplot2/pull/2328,ggplot2
zeehio,NONE,closed,5,https://github.com/tidyverse/ggplot2/pull/2326,2017-11-05T01:20:08Z,2018-06-18T18:43:31Z,2017-11-07T19:24:50Z,"### Motivation

This PR proposes a backwards-compatible change to ggplot2 in order to provide compatibility with the pipe. ggplot2 is both a very popular package and part of the tidyverse. Having a different ""pipe symbol"" in ggplot2 is surprising for newcomers, especially students.

#### Previous attempts

- #1954 was rejected, but it is not clear to me if the rejection was because it required of a custom pipe operator, or because of other reasons. 
- #1382 proposed a change for better `qplot` integration with the pipe. It was rejected because of an interest on downplaying the `qplot` function.
- #1370 aimed to change the `ggsave` arguments to make it more pipeable, but that change was rejected because it had chances of breaking existing code.

#### Why is this PR different?

It uses the conventional `magrittr` pipe. It aims to fix the plot constructor functions (`geom_`, `scale_`, `theme_`, ...) and it is fully backwards compatible.

#### What does this PR affect?

As a proof of concept I have just changed `geom_point` and `annotate`.

### How is it implemented?

I have used this approach to successfully convert my rather humble [`condformat`](https://github.com/zeehio/condformat) package, that had a similar `ggplot`-like syntax, to a tidy evaluation syntax.

For each function that needs to be adapted, follow the `geom_point` example:
1. The original `geom_point` function is renamed to `old_geom_point` (not exported).
2. A `new_geom_point` function is created, that uses an initial `gplt` argument (function not exported)
3. A `geom_point` function is created (exported and documented), using the arguments of the `new_geom_point` function. It just calls a shared helper function that dispatches the call to the `new_` or the `old_` versions, depending on whether or not the `gplt` argument (or the first argument) are `ggplot`  objects.
4. Adapt examples and tests.

Once the helper dispatcher function is written (and it already is in this PR), the rest is easy to address.

### Reasons for rejection

- Fear of breaking existing code. Mitigation: By only using the new syntax when a `ggplot` object is passed we can ensure that backwards compatibility is preserved. I can run revdep checks if required.
- More code paths to maintain. If both the ""pipe"" and ""+"" APIs are kept, there are more code paths to test. Mitigation: The use of helpers keeps boilerplate code to a minimum. A soft-deprecation path can be set, first by showing the pipe syntax in the documentation and cheatsheets, later by using warnings, then forcing the use of a ""options"" to keep it working, and finally removing it.
- The Pull Request is incomplete. Mitigation: If there is a chance for the PR to be merged I will work on a complete PR.

### Reasons for acceptance

- Just look at this beauty: `mtcars %>% ggplot(aes(mpg, disp)) %>% geom_point()`
- It increases the tidyverse consistency
- It makes pipe explanations straightforward to newcomers

### Final comment

While there are pros and cons to this approach and many users would love to have the tidyverse consistency, we can all understand the trade-off between stability and code evolution. Base R is very conservative while the tidyverse has already done some breaking changes in the past. Either this is done now or it will never be done in the `ggplot2` package. I am perfectly fine with your decision anyway.

Thanks for your time!",https://github.com/tidyverse/ggplot2/pull/2326,ggplot2
eliocamp,CONTRIBUTOR,closed,8,https://github.com/tidyverse/ggplot2/pull/2320,2017-11-01T21:11:14Z,2021-10-28T06:33:33Z,2021-10-28T02:16:26Z,"Extended the `breaks` argument of `stat_contour()` to accept a function (similar to `breaks` in `scale_x_continuous()`). 

Also, created `breaks_default()` which is the default function for creating breaks. The rational being to give the user easy access to the default behaviour so they can use it as the starting point for a new `breaks` function or small modifications. For example:

``` r
library(ggplot2)

v <- ggplot(faithfuld, aes(waiting, eruptions, z = density))
v + geom_contour(binwidth = 0.001)
```

![](https://i.imgur.com/B4NU5bO.png)

``` r
my_breaks <- function(range) {
  b <- breaks_default(binwidth = 0.001, NULL)(range)
  b[b != 0.002]
}
v + geom_contour(breaks = my_breaks)
```

![](https://i.imgur.com/oVTR8nA.png)

Also added documentation to `bins` and `binwidth`. ",https://github.com/tidyverse/ggplot2/pull/2320,ggplot2
gregmacfarlane,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2319,2017-11-01T13:27:20Z,2018-06-18T18:43:34Z,2017-11-01T16:21:05Z,,https://github.com/tidyverse/ggplot2/pull/2319,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2316,2017-10-30T22:09:42Z,2018-06-18T18:43:36Z,2017-11-01T13:16:01Z,Closes #2251 ,https://github.com/tidyverse/ggplot2/pull/2316,ggplot2
thomasp85,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/2309,2017-10-24T18:48:53Z,2018-06-18T18:43:37Z,2017-10-30T21:11:19Z,"As discussed. This PR adds the possibility of developers writing custom behaviour for adding other objects than those defined by ggplot2 to a gg object.

It works by falling back to the `add_to_ggplot()` generic in `add_ggplot()`. A potential change to the PR would be to write `add_to_ggplot()` methods for all the build in classes as well thus completely removing the if else check from `add_ggplot()`",https://github.com/tidyverse/ggplot2/pull/2309,ggplot2
jentjr,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2306,2017-10-22T14:43:46Z,2018-06-18T18:43:32Z,2017-10-30T19:29:51Z,,https://github.com/tidyverse/ggplot2/pull/2306,ggplot2
nhamilton1980,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/2305,2017-10-22T03:05:02Z,2018-10-24T21:10:10Z,2018-04-27T15:56:32Z,"Dear Hadley / Winston & Other Devs,

This is not a huge update, but it is meaningful in my opinion.

I have completely re-worked the element tree, now based of R6 Class, which permits user-defined theme elements, for use in package extentions.

Checks have been implemented so that these user-defined theme elements DO NOT CLASH with the set of protected theme elements, that is to say, those that are otherwise required for the base `ggplot2` functionality. What this boils down to, is that the base `ggplot2` element tree structure is protected, whilst still permitting users to extend this structure.

With this update, people will be able to create their own extensions to `ggplot2`, and design their own theme elements for whatever reason. I have added this functionality, primarily so I can re-work some of the painful aspects of the `ggtern` package, which depends on dozens and dozens of new theme elements to function correctly.

Previously, the `.element_tree` object was hidden and not-exported. There was no way to extend this tree, which was presumably to stop people meddling around with something that is so fundamental, with potentially catastrophic consequences to the plot routines. This is a totally valid, and understandable concern, however, by integrating a **'fixed'** and **'variable'** tree in the proposed `R6` class that has been included within this update the following outcomes have resulted:

1. The now publicly-visible tree (accessed via `get_elements()` function) is the combination of these fixed and variable components. If the both the fixed and variable trees are 'sane', then the combination will also be sane. Sanity checks are conducted when the user attempts to add a new theme element.
2. Given the above, the base tree can be protected and preserved, inoculated from the variable tree. Any proposed new elements (i.e. those that the user wants to add to the 'variable' tree) can be checked against the 'fixed' tree first, to make sure such elements are not reserved.
3. New elements can be added easily via the exported `add_element(k,v)` function, where k is the 'key' (non-clashing name of the desired element to be added to the tree) and 'v' is the value (instance of the `el_def(...)`) theme element definition.
4. Ultimately, from the perspective of the end user nothing has changed, essentially only one tree exists, none of the previous functionality has been altered, the same methods of indexing (ie `.element_tree[[elname]]`) behave as previously used within `ggplot2`, however. This change will only be appreciated by package developers like myself.
5. The guts of the `validate_element(...)` routine has been incorporated within the `R6` class.

Anyway, this update will enable `ggtern` to make a number of changes, reducing package fragility and complexity. It is almost certain that other package developers will benefit too.

Any questions, please email me, or comment below.

Regards,

Nicholas E. Hamilton
UNSW Sydney.
n.hamilton@unsw.edu.au",https://github.com/tidyverse/ggplot2/pull/2305,ggplot2
gfiumara,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2304,2017-10-20T19:21:32Z,2018-06-18T18:43:49Z,2017-10-30T18:34:40Z,This corrects the documentation issue raised in #2296.,https://github.com/tidyverse/ggplot2/pull/2304,ggplot2
foo-bar-baz-qux,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2301,2017-10-17T04:11:05Z,2018-06-18T18:43:50Z,2017-10-30T17:24:42Z,"Fixes #2299.

Fix `update_geom_defaults()` and `update_stat_defaults()` to allow American spelling of aesthetic parameters",https://github.com/tidyverse/ggplot2/pull/2301,ggplot2
foo-bar-baz-qux,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/2300,2017-10-17T02:30:05Z,2018-06-18T18:43:29Z,2017-11-15T00:40:45Z,"Fixes #2230. 

Limits are now imposed before rescaling so points outside the limits don't reappear.",https://github.com/tidyverse/ggplot2/pull/2300,ggplot2
landesbergn,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/2297,2017-10-15T23:38:11Z,2018-06-18T18:43:48Z,2017-10-30T19:11:18Z,"Removing code formatting which is causing grossness here: http://ggplot2.tidyverse.org/reference/geom_text.html#-code-geom-label-code-

Addressing issue: https://github.com/tidyverse/ggplot2/issues/2231",https://github.com/tidyverse/ggplot2/pull/2297,ggplot2
foo-bar-baz-qux,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/2292,2017-10-13T03:32:28Z,2018-10-24T21:10:21Z,2018-04-27T20:48:21Z,"Fixes #2110.

This now works:
```r
ggplot(mtcars, aes(y = disp)) + geom_boxplot()
```
![image](https://user-images.githubusercontent.com/7685769/31529101-25aff1fa-afa5-11e7-9ad7-93af7ddeeb72.png)

Which would essentially be the equivalent of this, without the mapped x-aesthetic:
```r
library(ggplot2)
ggplot(mtcars, aes(x=0, y = disp)) + geom_boxplot()
```

Tried a few approaches, but this is the cleanest way I've found so far. I think it looks OK to have the `x` location be at 0 without an axis label; user can always map the x aesthetic if more fine-grained adjustments are required. Ideally, I think the univariate boxplot would look something like this, where the x-axis is essentially removed/treated like a discrete scale. However, I couldn't find a clean way of changing it from a continuous scale from within the geom/stat ggprotos without hard coding the exceptions into the layer building process.
``` r
library(ggplot2)
ggplot(mtcars, aes(y = disp, x = ""all"")) + geom_boxplot()
```
![](https://i.imgur.com/VzbB3iC.png)",https://github.com/tidyverse/ggplot2/pull/2292,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2286,2017-10-09T08:26:07Z,2018-06-18T18:43:51Z,2017-10-09T12:51:52Z,As described here: https://stackoverflow.com/questions/46347656/ggplot2-error-when-setting-facet-strip-to-element-blank,https://github.com/tidyverse/ggplot2/pull/2286,ggplot2
mpancia,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2278,2017-10-02T07:05:26Z,2018-06-18T18:43:47Z,2017-10-30T19:31:56Z,`reverse` is misspelled as `reveres` in the documentation.,https://github.com/tidyverse/ggplot2/pull/2278,ggplot2
delferts,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2272,2017-09-20T16:35:20Z,2018-06-18T18:43:41Z,2017-10-30T19:36:36Z,,https://github.com/tidyverse/ggplot2/pull/2272,ggplot2
Ax3man,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2265,2017-09-14T14:35:26Z,2018-06-18T18:43:43Z,2017-10-30T19:35:10Z,"This will now give a message whenever a second (or more) coordinate system is added. To avoid a message when adding one coordinate system that effectively overrides the default `coord_cartesian`, I gave the default one a `default` attribute. `add_ggplot` checks for that attribute.

If there is a preferred method of checking for the default coordinate system, I can change this.

Running e.g.

```r
qplot(1:2, 1:2) + coord_trans(y = 'log10') + coord_polar()
```

now prints: 

```r
Coordinate system already present. Adding new coordinate system, which will replace the existing one.
```",https://github.com/tidyverse/ggplot2/pull/2265,ggplot2
mcol,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2262,2017-09-04T10:11:06Z,2018-06-18T18:43:44Z,2017-10-30T19:34:25Z,"The check for null was occurring on the wrong variable: 'name' cannot be
null, but 'obj' can. Moreover the message should report the variable as
set by the end user (such as 'identity'), rather than the internal name
constructed by the function (such as 'StatIdentity').",https://github.com/tidyverse/ggplot2/pull/2262,ggplot2
eliocamp,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2261,2017-09-01T19:42:19Z,2018-06-18T18:43:33Z,2017-11-01T16:41:51Z,"I added an argument to `stat_contour()` to remove specific levels. The motivation behind this comes from my field (atmospheric science) in which we often plot, for example, pressure anomalies and are more interested in areas of high or low pressure and less interested on where exactly the zero line is. 
 
Example:
``` r
library(ggplot2)
field <- expand.grid(x = 0:360, y = -90:90)
field$z <- with(field, cos(x*pi/180*3) + sin(y*pi/180*4))

ggplot(field, aes(x, y, z = z)) +
  geom_contour(aes(color = ..level..))
```
![](https://i.imgur.com/1HQvB5f.png)

``` r
ggplot(field, aes(x, y, z = z)) +
  geom_contour(aes(color = ..level..), exclude = 0) 
```

![](https://i.imgur.com/gbJIurm.png)

Right now this can be achieved by setting the breaks parameter explicitly, but it requires to know the range of the data and it's a lot more typing. ",https://github.com/tidyverse/ggplot2/pull/2261,ggplot2
mrtns,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2258,2017-08-31T00:15:31Z,2018-06-18T18:43:45Z,2017-10-30T19:33:07Z,,https://github.com/tidyverse/ggplot2/pull/2258,ggplot2
karawoo,MEMBER,closed,0,https://github.com/tidyverse/ggplot2/pull/2256,2017-08-28T21:49:33Z,2018-06-18T18:43:53Z,2017-08-29T20:59:03Z,When I was looking into how to add margins around legend elements I noticed that the legends code  doesn't follow tidyverse style. This just fixes the style in `guide-legend.r`.,https://github.com/tidyverse/ggplot2/pull/2256,ggplot2
mrtns,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2255,2017-08-28T21:30:35Z,2018-06-18T18:43:46Z,2017-10-30T19:32:56Z,,https://github.com/tidyverse/ggplot2/pull/2255,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2248,2017-08-24T22:44:18Z,2018-06-18T18:43:54Z,2017-08-25T15:33:40Z,"Recent changes to text placement make it possible for strips to have margins around all sides. This adds margins around all sides of strips. Default plots where the strip labels are centered will look the same, but this fully fixes #1887 because the margins are defined in `strip.text` instead of `strip.text.x` and `strip.text.y`.

In some cases where text is rotated, this also prevents the edges of the text from being cut off the strip.

``` r
df <- data.frame(
  x = 1,
  y = 1,
  z = c(""aaaaaaabc"")
)

ggplot(df, aes(x, y)) +
  facet_wrap( ~ z) +
  theme(strip.text = element_text(angle = 45, hjust = 0, vjust = 0, debug = TRUE))
```

![](http://i.imgur.com/uByjse2.png)

Margins will need to manually be set to 0 if users want to fully justify text with the edges of the strips.

This change added a little extra space above and below the strip label in the `theme_void` visual test plot with large text size. I've included the updated visual test case.",https://github.com/tidyverse/ggplot2/pull/2248,ggplot2
karawoo,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/2247,2017-08-24T19:24:28Z,2018-06-18T18:43:55Z,2017-08-25T14:55:51Z,"Here are some improvements to `titleGrob()` and related functions that we talked about:

- [X] In `add_margins()` eliminate `text_` from argument names
- [X] In `ggstrip()`, remove `absoluteGrob()`
- [X] Document these functions
- [X] Fixed `xp` and `yp`. Now `title_spec()` sets them based on the range in which `angle` falls.

I still need to figure out how to prevent rotated text from extending outside of the strip in facet labels.

``` r
df <- data.frame(
  x = 1:2,
  y = 1:2,
  z = c(""a"", ""aaaaaaabc"")
)

ggplot(df, aes(x, y)) +
  geom_point() +
  facet_wrap(~ z) +
  theme(strip.text.x = element_text(hjust = 0, vjust = 1, angle = 45, debug = TRUE))
```

![](http://i.imgur.com/cA0oqmC.png)
",https://github.com/tidyverse/ggplot2/pull/2247,ggplot2
hardeepsjohar,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/2240,2017-08-16T20:33:56Z,2018-06-18T18:43:39Z,2017-10-30T19:40:56Z,Adding in some examples which really helped me when I was working on filing bar graphs.,https://github.com/tidyverse/ggplot2/pull/2240,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2235,2017-08-08T15:36:56Z,2019-01-18T11:29:08Z,2017-08-08T15:45:12Z,"S3 dispatch wasn't working because there were no generics defined for `widthDetails()` and `heightDetails()`. This seems subtle enough that I didn't add it to NEWS.md, but let me know if you want me to add a note there.",https://github.com/tidyverse/ggplot2/pull/2235,ggplot2
karawoo,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/2232,2017-08-07T15:14:02Z,2019-01-18T11:29:06Z,2017-08-14T15:40:04Z,"As part of our overhaul of text placement, this PR:

* Splits `titleGrob()` into  `title_spec()` (which returns the text grob (and debugging grobs if requested), text height, and text width) and `add_margins()`, which should add the margins around the text grob but is clearly not working in strips, but does work for axis titles. `titleGrob()` now calls both `title_spec()` and `add_margins()`.
* Renames the `expand_x`/`expand_y` arguments to `margin_x`/`margin_y`.
* Removes `stripGrob()`. `build_strip()` and `ggstrip()` now call `title_spec()` and `add_margins()`.

``` r
df <- data.frame(
  x = 1:3,
  y = 1:3,
  z = c(""a"", ""aaab"", ""aaaaaaabc""),
  g = c(""b"", ""bbbb"", ""bbbbbbbcd"")
)

base <- ggplot(df, aes(x, y)) + 
  geom_point() + 
  theme(strip.text.y = element_text(angle = 0))

base + facet_grid(g ~ z) +
  theme(
    strip.text.x = element_text(hjust = 0, debug = TRUE),
    strip.text.y = element_text(hjust = 0, debug = TRUE),
    axis.title.x = element_text(margin = margin(t = 30), debug = TRUE)
  )
```

![](http://i.imgur.com/AEutdzJ.png)",https://github.com/tidyverse/ggplot2/pull/2232,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2226,2017-07-31T19:42:26Z,2019-01-18T11:29:14Z,2017-07-31T23:06:37Z,"Fixes #2171 

``` r
# Regular:
ggplot(mtcars, aes(factor(cyl), fill = factor(vs))) +
  geom_bar(position = ""dodge2"") 
```

![](http://i.imgur.com/FlVuSIq.png)

``` r
# Reversed:
ggplot(mtcars, aes(factor(cyl), fill = factor(vs))) +
  geom_bar(position = position_dodge2(reverse = TRUE)) 
```

![](http://i.imgur.com/UaMgDVh.png)",https://github.com/tidyverse/ggplot2/pull/2226,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2225,2017-07-28T20:56:34Z,2019-01-18T11:29:18Z,2017-07-28T23:11:00Z,Closes #2218 ,https://github.com/tidyverse/ggplot2/pull/2225,ggplot2
edzer,CONTRIBUTOR,closed,0,https://github.com/tidyverse/ggplot2/pull/2224,2017-07-28T20:33:32Z,2018-06-18T18:43:42Z,2017-10-30T19:36:21Z,"in case `coord_sf(datum = NA)`, don't draw a graticule.

Fixes warnings still seen in #2071 

(this is now obsolete, due to https://github.com/r-spatial/sf/commit/812cdff1ed299513bebb3c8101892d7889efd4ec)",https://github.com/tidyverse/ggplot2/pull/2224,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2223,2017-07-27T23:27:34Z,2019-01-18T11:29:20Z,2017-07-28T17:26:02Z,"Fixes #2214.

``` r
set.seed(32)
library(""ggplot2"")
df <- data.frame(x = rnorm(1000), y = rnorm(1000))

ggplot(df, aes(x = x, y = y)) + stat_summary_bin(breaks = seq(-3, 3, by = 0.5))
#> No summary function supplied, defaulting to `mean_se()
```

![](http://i.imgur.com/u3m8ccX.png)",https://github.com/tidyverse/ggplot2/pull/2223,ggplot2
jdagilliland,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2220,2017-07-26T11:20:05Z,2019-01-18T11:29:26Z,2017-07-26T16:27:38Z,s/across a the levels/across the levels/,https://github.com/tidyverse/ggplot2/pull/2220,ggplot2
foo-bar-baz-qux,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2217,2017-07-23T05:47:02Z,2019-01-18T11:29:12Z,2017-08-01T16:22:49Z,"Add feature request #2156. 

3 new string options for `ggsave()`: ""screen"" (72 DPI), ""print"" (300 DPI), and ""retina"" (320 DPI).

One question was what DPI the ""retina"" option should be. As mentioned in the issue, it's not so straightforward to pick a single DPI number. The standard for retina is to double the DPI, but from what baseline DPI?

There is no such thing as a baseline DPI for Apple because they define their `@1x` baseline, non-retina template using pixel dimensions (which all designs should be based on and then scaled for output). Retina output is `@2x` and sometimes `@3x` for the newer phones. For their phones, [this roughly corresponds to ~160 DPI](http://sebastien-gabriel.com/designers-guide-to-dpi/#ios), and ~130 DPI for their tablets. For Android, the baseline MDPI (equivalent to `@1x` for Apple) is similarly around a DPI of 160, and their [baseline calculations for density independence assume 160 DPI](https://developer.android.com/guide/practices/screens_support.html).

Accordingly, I think it's best to go with 2x this baseline of ~160 DPI, making the retina option 320 DPI.",https://github.com/tidyverse/ggplot2/pull/2217,ggplot2
edzer,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2216,2017-07-20T20:41:52Z,2019-01-18T11:29:22Z,2017-07-28T16:57:42Z,see description of individual commits,https://github.com/tidyverse/ggplot2/pull/2216,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2215,2017-07-19T22:08:24Z,2019-01-18T11:29:30Z,2017-07-20T16:46:14Z,"Fixes #1881. This uses `text_height` and `text_width` to set the height and width of `titleGrob`s when `expand_x` and `expand_y` are both `FALSE`. This means that there is more space between the legend title and the legend itself. If the legend is oriented horizontally, there is more space between the legend and its labels.

```r
## The letter ""g"" no longer overlaps the legend
set.seed(123)
dummy <- data.frame(x=runif(10), y=runif(10), f = gl(2,5))
ggplot(dummy, aes(x,y, shape=f)) + 
  geom_point() +
  labs(shape=""guide"") +
  theme_grey(24)
```

![large-font-plot](https://user-images.githubusercontent.com/4452678/28391597-806a4122-6c93-11e7-8867-406811b2e042.png)
",https://github.com/tidyverse/ggplot2/pull/2215,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2212,2017-07-19T00:54:41Z,2019-01-18T11:29:32Z,2017-07-19T21:34:17Z,"Currently `titleGrob()`'s `debug = TRUE` argument has no effect when `expand_x` and `expand_y` are both `FALSE` because the function returns output before the debugging conditional is reached. This fixes the issue by moving the debugging conditional up and ensuring that all of the `children` are returned.

Previous behavior:

```r

df <- data.frame(x = 1:10, y = 1:10, color = LETTERS[1:2])

p <- ggplot(df, aes(x, y, color = color)) +
  geom_point() +
  theme(
    legend.title = element_text(debug = TRUE),
    legend.text = element_text(debug = TRUE)
  )

p # note no debugging output
```

![debug_pre](https://user-images.githubusercontent.com/4452678/28345731-e8b41450-6be0-11e7-84a9-ab47e065ac9f.png)

After this PR:

```r
p
```

![debug-post](https://user-images.githubusercontent.com/4452678/28345735-f082fbc4-6be0-11e7-9faa-5c479a0b6ab7.png)

We could also address #1881 here by using `text_height` and `text_width` instead of `unit(1, ""grobheight"", text_grob)` and `unit(1, ""grobwidth"", text_grob)` for the widths and heights. This puts more spacing between the legend title and the legend elements, so the visual tests break.",https://github.com/tidyverse/ggplot2/pull/2212,ggplot2
foo-bar-baz-qux,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2210,2017-07-16T05:26:46Z,2019-01-18T11:29:28Z,2017-07-25T16:51:16Z,"`coord_trans()` now generates a warning when a transformation results in x or y values being non-finite (#2147).

I've used `#` comments for the internal helper function so it doesn't generate MD documentation files, but not sure what the ggplot2 style is for those functions.

The logic and the message is based on the [transform in the Scale object](https://github.com/tidyverse/ggplot2/blob/4255cd8341ad1072036186e5d34ad2c1b12221b3/R/scale-.r#L207) in order to be consistent.",https://github.com/tidyverse/ggplot2/pull/2210,ggplot2
dylan-stark,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2209,2017-07-15T23:35:25Z,2019-01-18T11:29:36Z,2017-07-17T16:20:58Z,"Fixes #2208 

Updates compute function name and surrounding comments/text that used to talk about the draw function (from the test above this one).",https://github.com/tidyverse/ggplot2/pull/2209,ggplot2
yonicd,NONE,closed,14,https://github.com/tidyverse/ggplot2/pull/2207,2017-07-14T20:04:56Z,2018-06-18T18:43:38Z,2017-10-30T19:41:39Z,"generalization of annotation-logticks to support minor tick marks on log,log10, identity scales and sides can be added independently allows for different number of ticks/scale for each side

outputs of examples below

![ex1](https://user-images.githubusercontent.com/1755487/28228802-01b64602-68ae-11e7-99cc-fa15dc05950c.png)
![ex2](https://user-images.githubusercontent.com/1755487/28228805-04603214-68ae-11e7-900c-b99dc3e2e283.png)

",https://github.com/tidyverse/ggplot2/pull/2207,ggplot2
karawoo,MEMBER,closed,19,https://github.com/tidyverse/ggplot2/pull/2196,2017-07-06T21:19:24Z,2019-01-18T11:29:16Z,2017-07-28T23:36:43Z,"Fixes #2143. This creates a new ggproto object for box plot positions, `PositionBoxdodge`, and a function `pos_boxdodge()` that can handle regular and variable-width boxes. `collide()` gets split into several functions. `collide_setup()` does the initial setup of the data and gets called by both `collide()` (which behaves the same as it has been) or `collide_box()`.

@hadley this is slightly different than the algorithm we talked about because it doesn't use a for loop to find the non-overlapping groups. The `x` value in the data already seems to capture that information, so I think we can avoid the loop, but maybe I'm missing something...

With these changes, box plots look like this:

``` r
library(""ggplot2"")

ggplot(data = iris, aes(Species, Sepal.Length)) +
  geom_boxplot(aes(colour = Sepal.Width < 3.2))
```

![](http://i.imgur.com/c8fM2jH.png)

``` r

ggplot(data = iris, aes(Species, Sepal.Length)) +
  geom_boxplot(aes(colour = Sepal.Width < 3.2), varwidth = TRUE)
```

![](http://i.imgur.com/CNWzL91.png)",https://github.com/tidyverse/ggplot2/pull/2196,ggplot2
karawoo,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2195,2017-07-06T16:14:30Z,2019-01-18T11:29:48Z,2017-07-06T21:34:43Z,"This is @baptiste's change from #1882, but it breaks the visual tests because the spacing between the title and legend elements is slightly changed. @hadley should I validate those with `vdiffr` and commit the new SVGs?",https://github.com/tidyverse/ggplot2/pull/2195,ggplot2
mbergins,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2194,2017-07-06T15:34:02Z,2019-01-18T11:29:50Z,2017-07-06T15:51:45Z,"I found a small typo in R/stat-density.r, exampe -> example",https://github.com/tidyverse/ggplot2/pull/2194,ggplot2
jonocarroll,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2193,2017-07-06T12:28:56Z,2019-01-18T11:29:52Z,2017-07-06T15:50:23Z,build -> built,https://github.com/tidyverse/ggplot2/pull/2193,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2192,2017-07-05T17:45:04Z,2019-01-18T11:29:56Z,2017-07-05T18:15:45Z,Fixes #2081,https://github.com/tidyverse/ggplot2/pull/2192,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2190,2017-07-03T20:15:21Z,2019-01-18T12:19:21Z,2017-07-03T21:08:01Z,Closes #2176. These optional parameters control the default sizes of line and rectangle elements and are set to `base_size / 22` by default. As requested [here](https://github.com/tidyverse/ggplot2/pull/2174#issuecomment-309593094) I've added new tests at `base_size = 33`.,https://github.com/tidyverse/ggplot2/pull/2190,ggplot2
jennybc,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/2189,2017-07-03T18:06:45Z,2019-01-18T11:29:42Z,2017-07-13T20:24:21Z,"From here: https://github.com/codecov/support/issues/173#issuecomment-216067683

This might help with codecov failing to find a report for the base commit. Let's find out ...",https://github.com/tidyverse/ggplot2/pull/2189,ggplot2
dylan-stark,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2188,2017-07-02T12:38:34Z,2019-01-18T12:19:25Z,2017-07-03T16:58:21Z,"Fixes #2072

Labels and ticks are now drawn for secondary axis when using polar coordinates.",https://github.com/tidyverse/ggplot2/pull/2188,ggplot2
karawoo,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/2186,2017-06-29T21:07:41Z,2019-01-18T11:29:46Z,2017-07-07T16:32:21Z,"Related to #1526. This PR: 

- Renames `scale_datetime()` to `datetime_scale()` and generalizes it for use with other scales besides x/y position.
- Uses the new `datetime_scale()` for size, colour, fill, and a newly created alpha scale. These scales can now all take `date_breaks` and `date_labels` parameters.

I also tidyverse style-ified `scale_(x|y)_date` and `scale_(x|y)_datetime`.",https://github.com/tidyverse/ggplot2/pull/2186,ggplot2
noamross,CONTRIBUTOR,closed,8,https://github.com/tidyverse/ggplot2/pull/2184,2017-06-27T19:20:04Z,2019-01-18T12:19:27Z,2017-07-03T16:57:28Z,"stat/geom_smooth lists 'rlm' as a possible method
for calulating a smooth, but method='rlm' fails
becuase rlm() is in MASS and is not imported. This
fixes this by importing MASS::rlm.",https://github.com/tidyverse/ggplot2/pull/2184,ggplot2
edzer,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2181,2017-06-25T15:04:06Z,2019-01-18T12:19:29Z,2017-07-03T16:55:25Z,see https://github.com/edzer/sfr/issues/396 for the motivating issue. This needs also https://github.com/edzer/sfr/commit/c9e56df2feebda344f9dcf07429a9711be026b66,https://github.com/tidyverse/ggplot2/pull/2181,ggplot2
karawoo,MEMBER,closed,11,https://github.com/tidyverse/ggplot2/pull/2179,2017-06-23T23:42:07Z,2019-01-18T11:29:34Z,2017-07-18T15:33:34Z,"Related to [1526](https://github.com/tidyverse/ggplot2/issues/1526). Ordered factors and regular factors currently behave pretty much the same, but this is not always appropriate. I've added new ordinal scales for `size`, `alpha`, and `shape` so that

- [x] `scale_shape_ordinal` throws a warning (but `scale_shape_discrete` still does not)
- [x] `scale_size_ordinal` does not throw a warning (but `scale_size_discrete` still does)
- [x] `scale_alpha_ordinal` still does not throw a warning (but `scale_alpha_discrete` does)

Still to do:

- [x] new colour/fill scales for ordinal variables (possibly with viridis)
- [x] test the new behavior",https://github.com/tidyverse/ggplot2/pull/2179,ggplot2
karawoo,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2178,2017-06-22T16:17:26Z,2019-01-18T11:29:40Z,2017-07-13T21:41:15Z,"Related to [1526](https://github.com/tidyverse/ggplot2/issues/1526). This is a first stab at adding built-in support for `viridis` color scales using the `viridisLite` package. The function names are kind of long and awkward right now, but I'm not sure what better names would be. Also, should the `viridis_pal` function go as a PR to scales instead of ggplot2?",https://github.com/tidyverse/ggplot2/pull/2178,ggplot2
karawoo,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/2174,2017-06-19T22:29:12Z,2019-01-18T12:19:43Z,2017-06-20T20:21:31Z,Adds visual tests for `theme_linedraw()` and `theme_test()`.,https://github.com/tidyverse/ggplot2/pull/2174,ggplot2
karawoo,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/2173,2017-06-19T18:04:18Z,2019-01-18T12:19:41Z,2017-06-21T17:12:20Z,This is the continuation of #1883. Includes @baptiste's changes plus a line in `NEWS.md` about the change.,https://github.com/tidyverse/ggplot2/pull/2173,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2170,2017-06-17T00:36:58Z,2019-01-18T12:19:37Z,2017-06-22T18:05:28Z,"See #2164

This uses `@inheritDotParams` for some `...` parameters. There are still some other places where we might be able to switch to `@inheritDotParams`. 

There's an issue when the dot parameters come from another package and include links. For example the `map_data` function passes `...` to `maps::map()`, but some of those params have links to other stuff within the maps package, and with `@inheritDotParams` the links get written to Rd as e.g. `\link{county}` when they need to be `\link[maps:county]{county}`",https://github.com/tidyverse/ggplot2/pull/2170,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2168,2017-06-16T19:10:18Z,2019-01-18T12:19:49Z,2017-06-16T20:07:18Z,As requested in #2166,https://github.com/tidyverse/ggplot2/pull/2168,ggplot2
karawoo,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/2166,2017-06-16T01:49:36Z,2019-01-18T12:19:51Z,2017-06-16T18:27:12Z,Closes #2165. Documentation now uses markdown rather than Rd syntax.,https://github.com/tidyverse/ggplot2/pull/2166,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2162,2017-06-15T19:41:09Z,2019-01-18T12:19:53Z,2017-06-15T21:33:34Z,"Fixes #2069. The inherited parameter documentation for brewer/distiller scales said that `...` arguments were passed to `discrete_scale`, which is true for the brewer scales but not for distiller scales (for distiller scales they go to `continuous_scale`).",https://github.com/tidyverse/ggplot2/pull/2162,ggplot2
karawoo,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2161,2017-06-15T18:51:48Z,2019-01-18T12:19:55Z,2017-06-15T19:28:53Z,"Fixes #2068. `discrete_scale` inherits params from `continuous_scale`, but the `breaks` and `limits` arguments behave differently for discrete vs. continuous scales. This adds new `breaks` and `limits` parameter documentation for `discrete_scale` that overrides the inherited parameter documentation.",https://github.com/tidyverse/ggplot2/pull/2161,ggplot2
jdagilliland,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2160,2017-06-15T17:19:43Z,2019-01-18T12:19:47Z,2017-06-19T18:06:42Z,s/specifify/specify/g,https://github.com/tidyverse/ggplot2/pull/2160,ggplot2
bbrewington,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2159,2017-06-15T02:19:19Z,2019-01-18T12:19:39Z,2017-06-22T16:43:53Z,,https://github.com/tidyverse/ggplot2/pull/2159,ggplot2
karawoo,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/2155,2017-06-13T18:32:07Z,2019-01-18T12:20:01Z,2017-06-13T21:10:42Z,Fixes #2083.,https://github.com/tidyverse/ggplot2/pull/2155,ggplot2
has2k1,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/2154,2017-06-09T17:18:28Z,2019-01-18T12:19:31Z,2017-07-03T16:52:56Z,"When calculating the groups in a bin, do it per panel then get the
maximum across all panel.

fixes #2153",https://github.com/tidyverse/ggplot2/pull/2154,ggplot2
edzer,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2151,2017-06-06T17:42:58Z,2019-01-18T12:19:35Z,2017-06-22T19:11:42Z,"![xx](https://user-images.githubusercontent.com/520851/26843366-4ae4c2e4-4af0-11e7-9d5e-abdee5860006.png)
",https://github.com/tidyverse/ggplot2/pull/2151,ggplot2
jsta,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2148,2017-05-29T14:47:11Z,2019-01-18T12:20:08Z,2017-06-01T12:30:13Z,,https://github.com/tidyverse/ggplot2/pull/2148,ggplot2
yutannihilation,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2146,2017-05-28T03:59:18Z,2019-01-18T12:20:05Z,2017-06-01T12:31:45Z,"A link to StackOverflow seems broken.

Sorry, I couldn't knit README.Rmd due to an error: `pandoc.exe: Could not fetch https://img.shields.io/codecov/c/github/tidyverse/ggplot2/master.svg`. Could you knit it after merging this?",https://github.com/tidyverse/ggplot2/pull/2146,ggplot2
raubreywhite,NONE,closed,5,https://github.com/tidyverse/ggplot2/pull/2145,2017-05-26T11:10:12Z,2019-01-18T12:19:23Z,2017-07-03T19:34:30Z,"Currently theme_gray's legend and background panels don't work well at base_size=24 or base_size=30 because their sizes are hardcoded in. If we make them relative, then theme_gray looks nice at larger base_size's.",https://github.com/tidyverse/ggplot2/pull/2145,ggplot2
karawoo,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2142,2017-05-25T00:14:41Z,2019-01-18T12:19:59Z,2017-06-01T16:09:19Z,"Fixes #2127.

`compute_density()` now uses `stats::density()` to compute the density for two-element groups, resulting in plots that look like this (where group 5 has only two data points):

![example_scaled](https://cloud.githubusercontent.com/assets/4452678/26430444/fc173dc0-40a1-11e7-9aa9-f062644ac978.png)

In the case where there is only a single point in the group (where it doesn't really make sense to calculate density), the group gets dropped with a warning.

```R
## Create some data with a couple very small groups
library(""tidyverse"")
set.seed(1958)
dat <- tibble(x = c(rnorm(n = 10, mean = 7, sd = 2),
                    rpois(n = 10, lambda = 2),
                    1, 9, 4),
              group = c(rep(c(""a"", ""b""), each = 10), ""c"", ""c"", ""d""))

## Plot
ggplot(dat, aes(x = x, fill = group)) +
  geom_density(alpha = 0.5)
```

```
Warning message:
In compute_density(data$x, data$weight, from = range[1], to = range[2],  :
  Groups with fewer than two data points have been dropped.
```

![dropped_group](https://cloud.githubusercontent.com/assets/4452678/26430495/83089194-40a2-11e7-8cee-e5b051da4364.png)

There is still a legend element for the dropped group; not sure if that should be kept or not.",https://github.com/tidyverse/ggplot2/pull/2142,ggplot2
Thieffen,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2141,2017-05-23T20:38:07Z,2019-01-18T12:20:10Z,2017-06-01T12:28:08Z,,https://github.com/tidyverse/ggplot2/pull/2141,ggplot2
Thieffen,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2140,2017-05-23T19:33:14Z,2019-01-18T12:20:06Z,2017-06-01T12:31:45Z,typo,https://github.com/tidyverse/ggplot2/pull/2140,ggplot2
Ax3man,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/2132,2017-05-15T09:56:32Z,2018-12-23T10:18:28Z,2017-07-03T22:38:17Z,"This PR simply adds support for the `linejoin` parameter of `grid::segmentsGrob` to `geom_segment`, just like the existing `lineend` parameter. This is especially useful when drawing large arrows that need to look sharp. The default of `""round""` can look poor with filled arrows as all corners are rounded off.

![temp](https://cloud.githubusercontent.com/assets/15309336/26052313/56c42ec0-3965-11e7-8def-95513c926310.png)

The default is the current fixed value.

I'm not sure about the appropriate sizes etc. for the added example as it depends a bit on the size that is drawn for the online docs.",https://github.com/tidyverse/ggplot2/pull/2132,ggplot2
jonocarroll,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2115,2017-04-27T13:57:37Z,2019-01-18T11:29:55Z,2017-06-01T12:26:19Z,"Unless I'm missing something about boring graphs, that is.

Refer: https://math.stackexchange.com/a/365787/90266

> Q: Is “monotonous” ever used as a synonym for “monotonic” in math?
> A: It is always wrong.

I tripped this error and had a chuckle, nonetheless.",https://github.com/tidyverse/ggplot2/pull/2115,ggplot2
andrewdolman,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2113,2017-04-27T10:11:37Z,2019-01-18T12:19:17Z,2017-07-03T21:46:59Z,"Add note to documentation explaining differing behaviour of geom_text, and annotate(geom = ""text"").",https://github.com/tidyverse/ggplot2/pull/2113,ggplot2
heckendorfc,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2104,2017-04-12T17:25:26Z,2019-01-18T12:20:12Z,2017-06-01T12:25:21Z,,https://github.com/tidyverse/ggplot2/pull/2104,ggplot2
stefanedwards,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2099,2017-04-07T14:26:52Z,2019-01-18T13:19:17Z,2017-05-24T08:53:22Z,"The first motivation for this addition was to draw axis lines that did not meet at the corners. Personally, I just prefer that they do not.

Secondly, I wanted a manner to indicate the range of valid values for the axis. E.g. a correlation does not exceed the range [-1, 1]. In the below example, it is the count from stat_bin2d:

![image](https://cloud.githubusercontent.com/assets/3592346/24804032/0fc3df80-1ba5-11e7-95fa-47acf6a59aaa.png)

Thirdly, for categorical variables where dots could be jittered, I wanted to display a bracket to group them. See below:

![image](https://cloud.githubusercontent.com/assets/3592346/24804104/421c930a-1ba5-11e7-88d5-d9365b7f4fe1.png)

I have achieved this by sub-classing `CoordCart`, and the related Cartesian coordinate objects, with `CoordFlexCart`, with defining method `coord_flex_cart`, which is powered by the following:

```
coord_flex_cart <- function(xlim = NULL,
                            ylim = NULL,
                            expand = TRUE,
                            top = waiver(),
                            left = waiver(),
                            bottom = waiver(),
                            right = waiver()) {
  ggproto(NULL, CoordFlexCartesian,
          limits = list(x = xlim, y = ylim),
          expand = expand,
          top = top,
          left = left,
          bottom = bottom,
          right = right
  )
}
CoordFlexCartesian <- ggproto('CoordFlexCartesian', `_inherit` = CoordCartesian,
  render_axis_h = flex_render_axis_h,
  render_axis_v = flex_render_axis_v
)
flex_render_axis_v <- function(self, scale_details, theme) {
  arrange <- scale_details$y.arrange %||% c(""primary"",""secondary"")
  left <- self$left %|W|% render_axis
  right <- self$right %|W|% render_axis
  list(
    left = left(scale_details, arrange[1], 'y', 'left', theme),
    right = right(scale_details, arrange[2], 'y', 'right', theme)
  )
}
(flex_render_axis_h is as defined in similar way)
```

The functions `flex_render_axis_h` and `flex_render_axis_v` have been defined outside of the class, as they are reused for flipped and fixed Cartesian objects.

The two examples can be called as (with `p` defined from relevant examples):
```
p + coord_flex_cart(left=capped_vertical(capped='both'))
p + coord_flex_cart(bottom=brackets_horisontal())
```

For the capped lines, short hand methods have been defined which allows a quicker specification:
```
p + coord_capped_cart(left='both')
```


",https://github.com/tidyverse/ggplot2/pull/2099,ggplot2
nicksolomon,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/2097,2017-04-05T03:00:15Z,2019-01-18T11:29:10Z,2017-08-01T18:09:33Z,"`stat_qq_line()` computes the slope and intercept of the line connecting the points at the first and third quartiles of the theoretical and sample distributions, then plots this line using `geom_abline()`.

This is useful for judging the fit of the theoretical distribution to the observed data. Adding lines manually was especially difficult in plots that included facets where each facet required a substantially different line.",https://github.com/tidyverse/ggplot2/pull/2097,ggplot2
thomasp85,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/2095,2017-04-04T08:09:39Z,2018-06-18T18:43:40Z,2017-10-30T19:40:26Z,Fixes #1992,https://github.com/tidyverse/ggplot2/pull/2095,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2094,2017-04-03T19:27:44Z,2019-01-18T11:30:00Z,2017-07-03T23:20:28Z,Fixes #1899,https://github.com/tidyverse/ggplot2/pull/2094,ggplot2
has2k1,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2089,2017-03-27T22:20:31Z,2019-01-18T13:19:21Z,2017-03-27T22:28:14Z,"Password: <!-- 123456 -->

If it works you should not see my password.",https://github.com/tidyverse/ggplot2/pull/2089,ggplot2
katrinleinweber,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2086,2017-03-25T09:07:33Z,2019-01-18T13:19:23Z,2017-03-25T14:21:25Z,,https://github.com/tidyverse/ggplot2/pull/2086,ggplot2
katrinleinweber,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/2085,2017-03-25T09:04:06Z,2019-01-18T13:19:25Z,2017-03-25T09:07:02Z,,https://github.com/tidyverse/ggplot2/pull/2085,ggplot2
has2k1,CONTRIBUTOR,closed,29,https://github.com/tidyverse/ggplot2/pull/2080,2017-03-20T22:15:07Z,2018-06-18T18:43:35Z,2017-11-01T14:23:00Z,"**Issue**
At plot time, the calculation of theme elements always fell back
to the default theme. As a consequence, the default theme would
leak into complete themes where some of the elements were
unspecified.

**Solution**
Be more specific when calculating the theme defaults.

**Clean Up**
`theme_void` was insufficiently specified. The solution exposed
missing elements that had to be specified.

Fixes #2058
Fixes #2079",https://github.com/tidyverse/ggplot2/pull/2080,ggplot2
cpsievert,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2074,2017-03-13T21:04:04Z,2019-01-18T13:19:29Z,2017-03-13T21:07:23Z,See #2073,https://github.com/tidyverse/ggplot2/pull/2074,ggplot2
Emaasit,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/2070,2017-03-10T19:43:57Z,2019-01-18T12:20:14Z,2017-06-01T12:25:05Z,HTTPS is unavailable for GitHub pages using custom domains,https://github.com/tidyverse/ggplot2/pull/2070,ggplot2
thomasp85,MEMBER,closed,12,https://github.com/tidyverse/ggplot2/pull/2063,2017-02-28T09:10:34Z,2019-01-18T12:19:19Z,2017-07-03T21:36:03Z,"Fixes #1981 

This change simply ensures that the child element is used as the base when merging parameters with the parent, thus ensuring that any potential subclass of the child element is kept.

This makes it possible to subclass theme elements, though it is necessary to keep the same list elements as the parent class. Additional information can be stored as attributes.",https://github.com/tidyverse/ggplot2/pull/2063,ggplot2
thomasp85,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/2062,2017-02-28T08:51:16Z,2019-01-18T13:19:35Z,2017-03-01T14:04:06Z,Fixes #2005,https://github.com/tidyverse/ggplot2/pull/2062,ggplot2
jrnold,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2057,2017-02-25T07:24:26Z,2019-01-18T13:19:33Z,2017-03-01T15:41:10Z,"In my experience, one of the most common and inscrutable error messages for new users is when they forget a `+` and get the error message: `non-numeric argument to binary operator`. For example, something like this:
```
> ggplot(mtcars, aes(x = disp, y = mpg))
> geom_point() + geom_smooth()
Error in geom_point() + geom_smooth() : 
  non-numeric argument to binary operator
```

I would like to add a more informative error message in the style of #2056 and the error messages in **dplyr**, e.g. [this](https://github.com/hadley/dplyr/blob/0b9aabf6c06c9cd3b784b155044d497d4b93df3e/R/ts.R#L2).
```
> ggplot(mtcars, aes(x = disp, y = mpg))
> geom_point() + geom_smooth()
Error in `+.gg`(scale_fill_brewer(), geom_point()) : 
  Cannot add ggproto objects together. Did you forget to add this object to a ggplot() object?
```

The obvious approach would be to add a function(s) `+.Layer` or `+.ggproto`, but when there is a valid addition of a `ggplot` and `Layer` object that produced an ""Incompatible Methods"" error since S3 generics in the Ops group dispatch on both arguments and only work if only one has a specific method, or both have the same method. Something which it seems like you encountered before [here](http://r.789695.n4.nabble.com/quot-Incompatible-methods-quot-for-overloaded-operator-td4633362.html).

So the only way I could make this work is to make `ggplot`, `theme` and `ggproto` inherit from the same S3 class, and define the `+` method with that class. As far as I can tell, currently the `gg` class is used for this purpose with respect to the `ggplot` and `theme` classes, with only the `+.gg` method defined. My solution was to change the class given to default `ggproto()` objects to `c(""ggproto"", ""gg"")`. This feels unclean, but didn't break any of the tests. But, it seemed like the simplest way accomplish the stated objective. Given that this is adding a class to `ggproto` objects, it may not be worth it to change the error messages, but I thought I'd propose the change. 

",https://github.com/tidyverse/ggplot2/pull/2057,ggplot2
jrnold,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/2056,2017-02-25T05:58:37Z,2019-01-18T12:19:57Z,2017-06-14T12:46:44Z,"The error message `""gglot2 doesn't know how to deal with data of class uneval""` is one of the more common ones that I see, and one that perplexes new users of ggplot2. I added a note about the most common reason for and fix of this error message.

If a `data` argument was omitted from `ggplot()`, the old behavior was

```
> ggplot(aes(x = x))
Error: ggplot2 doesn't know how to deal with data of class uneval
```
The new behavior is
```
> ggplot(aes(x = x))
Error: ggplot2 doesn't know how to deal with data of class uneval. Did you forget the data argument  in ggplot()?
```",https://github.com/tidyverse/ggplot2/pull/2056,ggplot2
alistaire47,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2055,2017-02-25T00:08:29Z,2019-01-18T13:19:37Z,2017-02-27T13:50:39Z,"Updates `discrete_scale` documentation to match functionality and `continuous_scale` to make it clear the `labels` parameter can accept a formatter function as shown in the last example of `scale_x_discrete` (fixes #2052).

No code changes; just literally coped and pasted the documentation of the `labels` parameter from `continuous_scale`, called `devtools::document()`, and updated `NEWS.md` per `CONTRIBUTING.md` (delete that if it's too minor for news!).",https://github.com/tidyverse/ggplot2/pull/2055,ggplot2
has2k1,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/2041,2017-02-13T01:59:31Z,2019-01-18T13:19:41Z,2017-02-14T14:32:42Z,"#### Problem Description
*Describe the issue and explain **why** it is a problem or what the expected output should be.*

#### Minimal Reproducible Example (reprex)
*The goal of a minimal reprex is to make it as easy as possible to recreate your problem.
If you've never heard of a reprex before, start by reading ""What is a reprex"",
and follow the advice further down the page.*

```R

```

#### Before you submit
- [What is a reprex?](https://github.com/jennybc/reprex#what-is-a-reprex)
- [How to create a minimal reprex.](https://github.com/tidyverse/ggplot2/blob/master/CONTRIBUTING.md#issues)
- Please do not include session info unless it's explicitly asked for, or you've used `reprex::reprex(..., si = TRUE)` to hide it away.
- If you have a question, ask at the [user mailing list](https://groups.google.com/forum/#!forum/ggplot2) or the [developer mailing list](https://groups.google.com/forum/#!forum/ggplot2-dev).
- Remove this section and remove the section titles and the *hints* below the titles.",https://github.com/tidyverse/ggplot2/pull/2041,ggplot2
lionel-,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/2035,2017-02-09T00:27:49Z,2019-01-18T13:19:43Z,2017-02-09T20:06:23Z,Until https://github.com/hadley/devtools/pull/1391 is merged,https://github.com/tidyverse/ggplot2/pull/2035,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/2034,2017-02-07T20:00:25Z,2019-01-18T13:19:45Z,2017-02-09T17:42:40Z,"Examples:

```R
p <- ggplot(mpg, aes(displ, hwy)) + geom_point()
ggplot_build(p)$layout$get_layout_summary()
# # A tibble: 1 × 10
# panel   row   col       vars  xmin  xmax  ymin  ymax                        xscale
# <fctr> <dbl> <dbl>     <list> <dbl> <dbl> <dbl> <dbl>                        <list>
#   1      1     1     1 <list [0]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   # ... with 1 more variables: yscale <list>


pw <- p + facet_wrap(~ drv)
ggplot_build(pw)$layout$get_layout_summary()
# # A tibble: 3 × 10
# panel   row   col       vars  xmin  xmax  ymin  ymax                        xscale
# <fctr> <int> <int>     <list> <dbl> <dbl> <dbl> <dbl>                        <list>
#   1      1     1     1 <list [1]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   2      2     1     2 <list [1]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   3      3     1     3 <list [1]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   # ... with 1 more variables: yscale <list>
  

pg <- p + facet_grid(drv ~ cyl)
ggplot_build(pg)$layout$get_layout_summary()
# # A tibble: 12 × 10
# panel   row   col       vars  xmin  xmax  ymin  ymax                        xscale
# <fctr> <int> <int>     <list> <dbl> <dbl> <dbl> <dbl>                        <list>
#   1       1     1     1 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   2       2     1     2 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   3       3     1     3 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   4       4     1     4 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   5       5     2     1 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   6       6     2     2 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   7       7     2     3 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   8       8     2     4 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   9       9     3     1 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   10     10     3     2 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   11     11     3     3 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   12     12     3     4 <list [2]>  1.33  7.27  10.4  45.6 <S3: ScaleContinuousPosition>
#   # ... with 1 more variables: yscale <list>
```",https://github.com/tidyverse/ggplot2/pull/2034,ggplot2
ha0ye,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/2031,2017-02-05T22:30:53Z,2019-01-18T13:19:47Z,2017-02-06T13:27:25Z,typo fix for package name `Hmisc`,https://github.com/tidyverse/ggplot2/pull/2031,ggplot2
botaspablo,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/2030,2017-02-02T19:57:52Z,2019-01-18T13:19:39Z,2017-02-14T14:48:02Z,"A new parameter was added to stat-boxplot.r to supress storing the outliers in the dataframe passed to geom-boxplot.r (or any other function that may call it). The outliers are taken into acocunt at every step of the stat array calculation, but not returned.

This feature was requested in #2026. It was motivated by some cases in which the outliers were not significant for the a given study and remove valuable information from a particular plot. A nice and compact solution is desired to deal with this unusual situation. The two following plots show the issue and the solution as implemented.

Issue:
![issue](https://cloud.githubusercontent.com/assets/16158157/22565838/a34cacee-e957-11e6-80d1-ffc8c8d06c85.png)

Solution:
![solved](https://cloud.githubusercontent.com/assets/16158157/22565859/b3f4185c-e957-11e6-8576-de65ff07f8c6.png)

Added parameter ```report.outliers```:
```R
ggplot(data = dt, aes(x = strategy, y = y_, fill = strategy)) +
    geom_boxplot(report.outliers = FALSE) +
    facet_wrap( ~ struct, nrow = 2, scales = 'free')
```",https://github.com/tidyverse/ggplot2/pull/2030,ggplot2
izahn,CONTRIBUTOR,closed,9,https://github.com/tidyverse/ggplot2/pull/2029,2017-02-02T18:23:29Z,2019-01-18T13:19:31Z,2017-03-01T18:55:36Z,Fixes https://github.com/tidyverse/ggplot2/issues/2028,https://github.com/tidyverse/ggplot2/pull/2029,ggplot2
Tutuchan,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/2027,2017-02-02T16:03:47Z,2019-01-18T11:29:38Z,2017-07-14T16:41:25Z,"This is a followup to #1798.

The `rename_aes` call is used to handle _color/colour_.",https://github.com/tidyverse/ggplot2/pull/2027,ggplot2
ghost,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/2025,2017-02-01T18:37:43Z,2017-07-03T16:39:10Z,2017-07-03T16:39:10Z,"With this request you can solve the issue of @Eluvias. For example:
``` python
p <- ggplot(mpg, aes(displ, cty)) + geom_point() + facet_grid(. ~ cyl)
p + theme(strip.text = element_text(margin = margin(l=-40, b = 15,t=15)))
``` 

![rplot](https://cloud.githubusercontent.com/assets/22753863/22520534/a633f24e-e882-11e6-82e9-deaf1f586908.png)
",https://github.com/tidyverse/ggplot2/pull/2025,ggplot2
mkuhn,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/2023,2017-02-01T14:41:26Z,2019-01-18T11:29:02Z,2017-07-03T16:38:36Z,"I ran into the alignment problem reported previously on [StackOverflow](https://stackoverflow.com/questions/34749636/ggplot2-how-to-left-justify-text-from-multi-line-facet-labels), where only a workaround was posted. 

Here is the problem: A left-aligned label with more than one line is still centered within the box.

![before](https://cloud.githubusercontent.com/assets/7827/22511049/9279ba4c-e894-11e6-8d55-75c5fcbb4cff.png)

The fix just passes on the justification parameters from `stripGrob` to `textGrob`, resulting in this plot:

![after](https://cloud.githubusercontent.com/assets/7827/22511075/b6a59cb0-e894-11e6-9a78-90d69826e3e2.png)

Note that the standard case still looks fine:

![after2](https://cloud.githubusercontent.com/assets/7827/22511087/bf564cb0-e894-11e6-8744-a03452491e35.png)

Code for testing:

```
library(ggplot2)

d <- data.frame(x = 1, y = 1, label = c(""========\n==="", ""--""))

ggplot(d, aes(x=x, y=y, label=label)) + geom_text(hjust=""left"") + facet_grid(~label) +
  theme(strip.text = element_text(hjust=0, vjust = 0.5, debug = T))

```


",https://github.com/tidyverse/ggplot2/pull/2023,ggplot2
edzer,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2021,2017-01-31T19:59:09Z,2019-01-18T13:19:55Z,2017-01-31T20:01:03Z,,https://github.com/tidyverse/ggplot2/pull/2021,ggplot2
setempler,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2020,2017-01-30T09:55:49Z,2019-01-18T13:19:59Z,2017-01-30T13:50:27Z,aethetics -> aesthetics,https://github.com/tidyverse/ggplot2/pull/2020,ggplot2
davharris,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2017,2017-01-30T02:18:37Z,2019-01-18T13:20:02Z,2017-01-30T13:43:55Z,"Sorry, saw ""minor improvements"" and thought ""oh, this change is a minor improvement; I'll put it here."" Didn't notice that it was listed under the wrong version 😶

Again, sorry for making extra work",https://github.com/tidyverse/ggplot2/pull/2017,ggplot2
nteetor,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/2015,2017-01-29T19:31:32Z,2019-01-18T13:19:57Z,2017-01-30T13:30:01Z,"In response to #1959.

I have added a note about renamed layer parameters as part of the question text in question 2 of section 1. This seemed logical as I encountered the issue when trying to solve this question. If there is a better place for the note, I can make the adjustment. 
",https://github.com/tidyverse/ggplot2/pull/2015,ggplot2
darrkj,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2014,2017-01-25T11:31:18Z,2019-01-18T13:20:05Z,2017-01-26T17:02:06Z,,https://github.com/tidyverse/ggplot2/pull/2014,ggplot2
hadley,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/2012,2017-01-24T14:43:51Z,2019-01-18T13:20:08Z,2017-01-26T17:00:31Z,"Primarily by adding `setup_params()` and `setup_data()` methods that are called from `Layout$setup()`. This allows new coords (like `CoordSf`) to make decisions after looking globally at all the layers (`CoordSf` needs this in order to determine a common CRS across all layers)

This also includes some refactoring of the `Layout`.",https://github.com/tidyverse/ggplot2/pull/2012,ggplot2
restonslacker,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2003,2017-01-17T13:52:41Z,2019-01-18T14:19:37Z,2017-01-24T23:31:59Z,"this was to eliminate confusion with purrr::map which can happen when calling library(""tidyverse"") as an example.

This came up when I tried to knit an Rmd file like the file here: https://gist.githubusercontent.com/restonslacker/249b8916ad9799f057564bbe721707a5/raw/c68f0fde05dd864893a90d49430326ba65b2f61f/ggplot2_issue.Rmd

Reversing the order of the calls to `library` solves the issue at the expense of calls to `purrr::map` later in the workflow.

It seemed a more permanent solution would be to make the minor change in this PR.


",https://github.com/tidyverse/ggplot2/pull/2003,ggplot2
yeedle,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/2000,2017-01-15T15:31:10Z,2019-01-18T14:19:35Z,2017-01-24T23:32:12Z,,https://github.com/tidyverse/ggplot2/pull/2000,ggplot2
goyalmunish,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1999,2017-01-14T09:59:57Z,2019-01-18T14:19:33Z,2017-01-24T23:32:55Z,"Change ""an variable"" to ""a variable""",https://github.com/tidyverse/ggplot2/pull/1999,ggplot2
goyalmunish,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1998,2017-01-14T09:57:14Z,2019-01-18T14:19:31Z,2017-01-24T23:33:37Z,Fix typo in plot.r,https://github.com/tidyverse/ggplot2/pull/1998,ggplot2
goyalmunish,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1997,2017-01-14T09:46:51Z,2019-01-18T14:19:29Z,2017-01-24T23:33:58Z,Fix typo in plot.r,https://github.com/tidyverse/ggplot2/pull/1997,ggplot2
krlmlr,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/1996,2017-01-13T14:50:12Z,2019-01-18T11:29:24Z,2017-07-27T23:08:39Z,"by adding a `seed` argument to `position_jitter()`. Useful to apply the same jitter to both points and labels.

We should probably move `with_seed()` to `withr` before merging.

Reprex:

``` r
library(ggplot2)
ggplot(data.frame(x = 1, y = 1:10, text = letters[1:10]), aes(x = x, y = y)) +
  geom_point(position = position_jitter()) +
  geom_label(aes(label = text, y = y - 0.5), position = position_jitter())
```

![](http://i.imgur.com/N4rHjmv.png)

``` r

ggplot(data.frame(x = 1, y = 1:10, text = letters[1:10]), aes(x = x, y = y)) +
  geom_point(position = position_jitter(seed = 1L)) +
  geom_label(aes(label = text, y = y - 0.5), position = position_jitter(seed = 1L))
```

![](http://i.imgur.com/HPz7Ccp.png)",https://github.com/tidyverse/ggplot2/pull/1996,ggplot2
wibeasley,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1991,2017-01-09T23:05:30Z,2019-01-18T14:19:27Z,2017-01-24T23:34:45Z,,https://github.com/tidyverse/ggplot2/pull/1991,ggplot2
hadley,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1990,2017-01-09T22:50:33Z,2018-11-06T17:42:18Z,2017-02-09T20:43:22Z,,https://github.com/tidyverse/ggplot2/pull/1990,ggplot2
GuangchuangYu,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1984,2017-01-05T07:26:54Z,2019-01-18T14:19:25Z,2017-01-24T23:37:30Z,2nd edition of the book,https://github.com/tidyverse/ggplot2/pull/1984,ggplot2
mitchelloharawild,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1983,2017-01-04T23:15:14Z,2019-01-18T13:20:13Z,2017-01-25T13:54:17Z,Closes #1974,https://github.com/tidyverse/ggplot2/pull/1983,ggplot2
ghost,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/1979,2017-01-03T01:26:18Z,2017-07-03T16:36:37Z,2017-07-03T16:36:37Z,"Hi. I read this bug: #1502
Using `margin` to adjust `legend.text`? 
And i want to contribute for its solution.
The results:
```
df <- data.frame(x = c(""a"", ""b""), y = 1)

p <- ggplot(df, aes(x = x, y = y, fill = x)) +
  geom_bar(stat = ""identity"") +
  ggtitle(""My plot"")
p
p+theme(legend.title =  element_text(margin=margin(0,10,30,20)),
        legend.text =   element_text(margin=margin(30,0,0,30)))
```
![rplot](https://cloud.githubusercontent.com/assets/22753863/21598363/ac1a14d8-d129-11e6-900d-d1b2f1085539.png)
",https://github.com/tidyverse/ggplot2/pull/1979,ggplot2
ghost,NONE,closed,9,https://github.com/tidyverse/ggplot2/pull/1978,2017-01-02T18:18:55Z,2018-05-12T19:58:41Z,2018-05-12T19:58:41Z,"Hi. I read this bug: #1546
Fill aesthetic does not show in the legend guide for stat_summary
And i want to contribute for its solution.
The results:
```
# using default summary function fill in the legend 
ggplot(mtcars, aes(cyl ,mpg,col=factor(am),fill=factor(am))  )+
  geom_point()+
  stat_summary(aes(cyl,mpg), geom = ""smooth"")
```
![rplot01](https://cloud.githubusercontent.com/assets/22753863/21594206/cea4d470-d0ed-11e6-9e5d-84013607fa5c.png)
```
# without the parameter ""geom=smooth"" no fill in the legend 
ggplot(mtcars, aes(cyl ,mpg,col=factor(am),fill=factor(am))  )+
  geom_point()+
  stat_summary()
```
![rplot02](https://cloud.githubusercontent.com/assets/22753863/21594208/cea7a966-d0ed-11e6-88d7-171090576e83.png)
```
# geom smooth with parameter ""se=FALSE"" no fill in the legend.
ggplot(mtcars, aes(cyl,mpg,col=factor(am),fill=factor(am))  )+
  geom_point()+
  geom_smooth(se=FALSE)
```
![rplot03](https://cloud.githubusercontent.com/assets/22753863/21594207/cea5dc12-d0ed-11e6-9c2d-d7b69deb5634.png)
",https://github.com/tidyverse/ggplot2/pull/1978,ggplot2
jimhester,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1977,2017-01-02T15:54:53Z,2019-01-18T14:19:41Z,2017-01-02T18:28:25Z,"This fixes issues when the Debian recommended packages lag behind the
CRAN versions
(https://github.com/travis-ci/travis-ci/issues/6850#issuecomment-264739865)",https://github.com/tidyverse/ggplot2/pull/1977,ggplot2
edzer,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1976,2017-01-01T16:52:48Z,2019-01-18T14:19:39Z,2017-01-02T23:05:35Z,only simplifies the affine transformation expression; the aspect ratio still doesn't work out.,https://github.com/tidyverse/ggplot2/pull/1976,ggplot2
ghost,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/1973,2016-12-30T18:10:26Z,2017-07-03T16:34:32Z,2017-07-03T16:34:32Z,"Hi.  I read this bug: #1928
[facet_grid(a ~ a) produces an error #1928](https://github.com/tidyverse/ggplot2/issues/1928)
And i want to contribute for its solution.
The results:
`ggplot(data.frame(a = letters[1:3], y = rnorm(3))) + geom_point(aes(y, y)) + facet_grid(a~a)`

![rplot01](https://cloud.githubusercontent.com/assets/22753863/21570150/4c9db4aa-ce91-11e6-9687-cde7d2246ab6.png)

Thanks",https://github.com/tidyverse/ggplot2/pull/1973,ggplot2
davharris,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/1951,2016-12-08T21:59:54Z,2019-01-18T13:20:09Z,2017-01-26T16:47:41Z,"Currently, `stat_smooth`'s ""auto"" method reports the function that it chooses, but not the formula. Since the formula depends on the function it chooses, reporting it seems like a good idea.

This is already in the docs, but putting it in the message will make it less likely for users to forget that they need to rewrite the formula (and tell their boss that the splines are just very close to being linear 😳).",https://github.com/tidyverse/ggplot2/pull/1951,ggplot2
Emaasit,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1948,2016-12-08T02:27:07Z,2019-01-18T14:19:23Z,2017-01-24T23:41:30Z,,https://github.com/tidyverse/ggplot2/pull/1948,ggplot2
metanoid,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1934,2016-11-29T11:21:58Z,2019-01-18T14:19:21Z,2017-01-24T23:41:49Z,"Closes #1933 

`errorbar` is able to plot without putting a point at the midpoint of the error bar, but `errorbarh` was not able to.

An outstanding issue - It seems the `roxygen2`-generated documentation now does not pick up that `x` is an aesthetic that `geom_errorbarh` understands.

The result of this is that the user will need to use `geom_errorbarh` as well as `geom_point`.  I'm not sure how to fix this.",https://github.com/tidyverse/ggplot2/pull/1934,ggplot2
arneschillert,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1925,2016-11-23T15:55:25Z,2019-01-18T12:20:16Z,2017-06-01T12:22:55Z,Fix typo,https://github.com/tidyverse/ggplot2/pull/1925,ggplot2
jiho,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/1924,2016-11-22T20:43:24Z,2019-01-18T13:20:11Z,2017-01-24T23:42:55Z,Alpha is useful to hide plot elements from view. So all pieces of the label should be hidden. I don't see a use case for having only the background of the label transparent.,https://github.com/tidyverse/ggplot2/pull/1924,ggplot2
pbiecek,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1923,2016-11-21T21:38:15Z,2019-01-18T14:19:19Z,2017-01-24T23:43:09Z,,https://github.com/tidyverse/ggplot2/pull/1923,ggplot2
jiho,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/1921,2016-11-21T15:17:46Z,2019-01-18T14:19:17Z,2017-01-24T23:43:24Z,list(),https://github.com/tidyverse/ggplot2/pull/1921,ggplot2
drsimonj,NONE,closed,12,https://github.com/tidyverse/ggplot2/pull/1917,2016-11-18T04:55:01Z,2019-01-18T14:19:43Z,2016-11-30T14:18:39Z,"As discussed in #1902 , this PR reintroduces the `order` aes, that will order discrete variables along the x and/or y axis based on a numeric variable.

Ordering data for visualization is a widely used/desired feature that must be handled prior to plotting. This PR is intended to provide the functionality for users to implement it directly while plotting.

Unlike the previous implementation of `order` (which was dropped), the solution proposed here is to convert discrete variables to factors with levels ordered by a group-wise summary statistic of the numeric order variable. The statistic will differ depending on the geom. For example, `sum` is used for `geom_col`, whereas `max` is used for `geom_point` or `geom_tile`.

Some examples:

```r
    # No ordering
    ggplot(mpg, aes(manufacturer, hwy)) + geom_col()
```

![fig-unnamed-chunk-2-1](https://cloud.githubusercontent.com/assets/11235783/20372645/f0e6ca30-acc0-11e6-86b7-5659080221df.png)


```r
    # Ordering by same variable as y-axis
    ggplot(mpg, aes(manufacturer, hwy, order = hwy)) + geom_col()
```

![fig-unnamed-chunk-2-2](https://cloud.githubusercontent.com/assets/11235783/20372652/f4b882ca-acc0-11e6-929b-8289fd3da378.png)


```r
    # Ordering reversed
    ggplot(mpg, aes(manufacturer, hwy, order = -hwy)) + geom_col()
```

![fig-unnamed-chunk-2-3](https://cloud.githubusercontent.com/assets/11235783/20372653/f869d932-acc0-11e6-8f7e-036f8ab1a22a.png)


```r
    # With points
    ggplot(mpg, aes(manufacturer, hwy, order = hwy)) + geom_point()
```

![fig-unnamed-chunk-2-4](https://cloud.githubusercontent.com/assets/11235783/20372654/fba96612-acc0-11e6-8e7c-f2a1210feea8.png)


```r
    # Ordered by a different continuous variable and axis
    ggplot(mpg, aes(hwy, manufacturer, order = displ, color = displ)) + geom_point()
```

![fig-unnamed-chunk-2-5](https://cloud.githubusercontent.com/assets/11235783/20372657/ff1a825e-acc0-11e6-9ec2-c232ff3e0647.png)",https://github.com/tidyverse/ggplot2/pull/1917,ggplot2
jimhester,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1916,2016-11-18T00:53:59Z,2019-01-18T13:20:15Z,2017-01-24T23:45:22Z,I didn't render the Rmd,https://github.com/tidyverse/ggplot2/pull/1916,ggplot2
mvkorpel,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1912,2016-11-16T14:26:27Z,2019-01-18T14:19:45Z,2016-11-16T18:22:49Z,This pull request changes two document files to match what is said in [`theme.r`](https://github.com/tidyverse/ggplot2/blob/master/R/theme.r#L330). I believe the warning message in the code is correct and the documents have a typo / thinko.,https://github.com/tidyverse/ggplot2/pull/1912,ggplot2
MarcinKosinski,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1896,2016-11-06T20:33:57Z,2019-01-18T14:19:51Z,2016-11-06T21:23:52Z,It was probably a typo of type: copy-paste from other repository ,https://github.com/tidyverse/ggplot2/pull/1896,ggplot2
delferts,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1895,2016-11-06T19:02:45Z,2019-01-18T14:19:49Z,2016-11-07T16:11:01Z,"When showing how to install ggplot2 package there is line 

> # Alternatively, install just readr

 but should be 

> # Alternatively, install just ggplot2",https://github.com/tidyverse/ggplot2/pull/1895,ggplot2
botanize,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/1890,2016-11-03T20:25:26Z,2019-01-18T13:20:03Z,2017-01-26T19:08:46Z,"Allowing binwidth to accept functions greatly improves histograms of faceted variables. Furthermore, the current default (30 bins) is somewhat arbitrary, and could be replaced with one of the three built-ins included here.

The built-ins include 'Sturgis', 'Scott', and 'FD'. These match the options included in [d3](https://github.com/d3/d3-array/blob/master/README.md#histogram-thresholds). More information is available on [wikipedia](https://en.wikipedia.org/wiki/Histogram#Number_of_bins_and_width).

Examples are included in the pull-request, here's a motivating example:
```{r}
mtlong <- reshape2::melt(mtcars)
ggplot(mtlong, aes(value)) + geom_histogram() + facet_wrap(~variable, scales = 'free_x')
ggplot(mtlong, aes(value)) + geom_histogram(binwidth = 'Sturges') + facet_wrap(~variable, scales = 'free_x')
````",https://github.com/tidyverse/ggplot2/pull/1890,ggplot2
cwickham,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1889,2016-11-03T19:29:15Z,2019-01-18T14:19:53Z,2016-11-04T00:48:45Z,Fix minor typo in description of `boundary` argument and minor stylistic edit to include spaces around `=`.,https://github.com/tidyverse/ggplot2/pull/1889,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1884,2016-11-01T20:52:25Z,2019-01-18T14:19:47Z,2016-11-07T16:50:58Z,"Fixes #1877

This PR makes it possible to derive name of the primary scale even if the name is not specified in the scale constructor but either derived from the aesthetic or set through labs/xlab/ylab",https://github.com/tidyverse/ggplot2/pull/1884,ggplot2
baptiste,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1883,2016-10-31T19:22:04Z,2019-01-18T12:19:45Z,2017-06-19T18:19:54Z,"Small plots (e.g. in the margins of tufte-style books) tend to look heavy with the current linewidth settings, and after investigating I noticed some inconsistencies in the use of `rel()`.",https://github.com/tidyverse/ggplot2/pull/1883,ggplot2
baptiste,CONTRIBUTOR,closed,9,https://github.com/tidyverse/ggplot2/pull/1882,2016-10-29T05:01:04Z,2019-01-18T11:29:58Z,2017-07-03T16:34:06Z,"Fixes #1881 but other theme parameters seem to be currently ignored
",https://github.com/tidyverse/ggplot2/pull/1882,ggplot2
lionel-,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/1874,2016-10-25T13:26:31Z,2019-01-18T13:19:51Z,2017-02-01T18:02:22Z,,https://github.com/tidyverse/ggplot2/pull/1874,ggplot2
hadley,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1872,2016-10-24T15:58:53Z,2018-11-06T17:42:22Z,2016-10-24T16:41:39Z,"Fixes #1826 

@wch could you please review?
",https://github.com/tidyverse/ggplot2/pull/1872,ggplot2
thomasp85,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/1868,2016-10-23T11:17:05Z,2019-01-18T14:19:55Z,2016-10-26T19:12:31Z,"This PR is mainly justified by the [units](https://github.com/edzer/units) developers wish to have build in support for the units class in ggplot2. While the scale implementation will be part of [ggforce](https://github.com/thomasp85/ggforce) (see the discussion in thomasp85/ggforce#8) some small changes are needed in ggplot2 itself in order to intercept the default scale titles before they are rendered…
",https://github.com/tidyverse/ggplot2/pull/1868,ggplot2
dkahle,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1863,2016-10-19T15:41:13Z,2019-01-18T14:20:01Z,2016-10-24T15:10:09Z,"Fixes a bug in `CoordMap` that makes the x-axis ticks (but not title) appear on top of the graphic.

``` r
df <- expand.grid(
  lon = seq(-95.8, -94.9, .1),
  lat = seq(29.4, 30.1, .1)
)

ggplot(df, aes(lon, lat)) +
  geom_point()
```

<img width=""508"" alt=""coord-map-1"" src=""https://cloud.githubusercontent.com/assets/424139/19525902/20720994-95e8-11e6-9a66-95a13696e4f8.png"">

``` r
# axis title and ticks on top, fine
ggplot(df, aes(lon, lat)) +
  geom_point() +
  scale_x_continuous(position = ""top"")
```

<img width=""506"" alt=""coord-map-2"" src=""https://cloud.githubusercontent.com/assets/424139/19525937/4998e9e6-95e8-11e6-9676-c0a5aba56683.png"">

``` r
# axis title on bottom, ticks on top
ggplot(df, aes(lon, lat)) +
  geom_point() +
  coord_map()
```

<img width=""504"" alt=""coord-map-3"" src=""https://cloud.githubusercontent.com/assets/424139/19525964/67001be4-95e8-11e6-8d27-93d13c2ab8a0.png"">
This commit (a minor two line swap) puts the ticks back on the bottom.
",https://github.com/tidyverse/ggplot2/pull/1863,ggplot2
thomasp85,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/1857,2016-10-17T08:53:01Z,2019-01-18T14:19:57Z,2016-10-24T15:10:33Z,"Fixes #1848
",https://github.com/tidyverse/ggplot2/pull/1857,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1856,2016-10-17T07:53:56Z,2019-01-18T14:19:59Z,2016-10-24T15:10:22Z,"Fixes #1853
",https://github.com/tidyverse/ggplot2/pull/1856,ggplot2
lindbrook,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1845,2016-10-10T21:21:29Z,2019-01-18T14:20:03Z,2016-10-10T22:36:39Z,,https://github.com/tidyverse/ggplot2/pull/1845,ggplot2
Smudgerville,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1840,2016-10-07T13:12:10Z,2019-01-18T14:20:06Z,2016-10-07T13:18:17Z,"Spelling edit
",https://github.com/tidyverse/ggplot2/pull/1840,ggplot2
pierucci,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1831,2016-10-05T15:32:52Z,2019-01-18T14:20:12Z,2016-10-05T16:10:59Z,"It could be useful to link `geom_count()` from the `geom_point()` help, since this geom provides a nice solution to overplotting but is not easy to find.
",https://github.com/tidyverse/ggplot2/pull/1831,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1817,2016-10-03T22:19:30Z,2019-01-18T14:20:15Z,2016-10-03T22:20:27Z,"Fixes #1812
",https://github.com/tidyverse/ggplot2/pull/1817,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1814,2016-10-03T20:59:14Z,2019-01-18T14:20:17Z,2016-10-03T20:59:45Z,"Fixes #1813
",https://github.com/tidyverse/ggplot2/pull/1814,ggplot2
huftis,CONTRIBUTOR,closed,12,https://github.com/tidyverse/ggplot2/pull/1805,2016-10-01T09:04:21Z,2019-01-18T11:29:44Z,2017-07-10T22:41:58Z,"Fixes issue #1669.

The `expand` argument for `scale_*_continuous()` and `scale_*_discrete()` now accepts separate expansion constants for the lower and upper range limits.

This is useful for creating bar charts where the bottom of the bars are flush with the _x_ axis but the bars still have some (automatically calculated amount of) space above them:

``` R
ggplot(mtcars) +
  geom_bar(aes(x = factor(cyl))) +
  scale_y_continuous(expand = c(0, 0, 0.1, 0))
```

It can also be useful for line charts, e.g. for counts over time, where one wants to have a ’hard’ lower limit of y = 0, but leave the upper limit unspecified (and perhaps differing between panels), but with some extra space above the highest point on the line. (With symmetrical limits, the extra space above the highest point could cause the lower limit to be negative.)

The syntax for the multiplicative and additive expansion constants has been changed from `c(m, a)` to `c(m_lower, a_lower, m_uppper, a_upper)`. The old syntax will still work, as length 2 vectors `c(m, a)` are expanded to `c(m, a, m, a)` and length 3 vectors are expanded from `c(m1, a1, m2)` to `c(m1, a2, m2, a1)`.

Note that **by default**, all graphs should exactly look like they do with the current version of `ggplot2`.

Some examples (only meant to illustrate the functionality – several don’t make much sense from a graphical point of view):

``` R
# Continuous scales
p = ggplot(mtcars) +
      geom_bar(aes(x = factor(cyl)))

# No space below but 10% space above bars
p + scale_y_continuous(expand = c(0, 0, 0.10, 0))

# It also works with facets
p + facet_wrap(~cyl) +
    scale_y_continuous(expand = c(0, 0, 0.05))
p + facet_wrap(~cyl, scales=""free_y"") +
    scale_y_continuous(expand = c(0, 0, 0.05))
# Note that all the bars should
# look identical in this last example

# Coordinate flipping also works
p + scale_y_continuous(expand = c(.5, 0, 0.05, 0)) +
    coord_flip()
p + scale_y_continuous(expand = c(0, 2, 0, 5)) +
    coord_flip()


# Similar examples for discrete scales
d <- ggplot(subset(diamonds, carat > 1), aes(cut, clarity)) +
  geom_jitter()

d + scale_x_discrete(expand = c(.25, 0))
d + scale_x_discrete(expand = c(0, 1))
d + scale_x_discrete(expand = c(0, 1, 0, 5))
d + scale_x_discrete(expand = c(.25, 0, .5, 0))
d + scale_x_discrete(expand = c(.25, 1, .25, 5))
d + scale_x_discrete(expand = c(.25, 1, .25, 5)) + coord_flip()
```
",https://github.com/tidyverse/ggplot2/pull/1805,ggplot2
thomasp85,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/1802,2016-09-30T09:20:45Z,2019-01-18T14:20:10Z,2016-10-06T13:58:23Z,"Fixes #1793

This PR changes the trim behaviour back to how it worked in v1.x.x
",https://github.com/tidyverse/ggplot2/pull/1802,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1794,2016-09-28T18:07:58Z,2019-01-18T15:19:21Z,2016-09-28T18:08:08Z,,https://github.com/tidyverse/ggplot2/pull/1794,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1790,2016-09-28T08:53:50Z,2019-01-18T15:19:19Z,2016-09-29T06:44:33Z,"Fixes #1784
",https://github.com/tidyverse/ggplot2/pull/1790,ggplot2
thomasp85,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/1789,2016-09-28T07:48:52Z,2019-01-18T15:19:17Z,2016-09-30T08:54:13Z,"Fixes #1786
",https://github.com/tidyverse/ggplot2/pull/1789,ggplot2
schloerke,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1787,2016-09-27T20:23:52Z,2019-01-18T14:20:08Z,2016-10-07T13:11:12Z,"Fixes #1785

Before (no fill color in points):
![screen shot 2016-09-27 at 4 22 15 pm](https://cloud.githubusercontent.com/assets/93231/18890352/b4eb9b88-84ce-11e6-8a98-fc512618a100.png)

New output:

``` r
load_all(); ggplot(iris, aes(Species, Sepal.Width, fill = Species)) + geom_boxplot(outlier.shape = 21)
```

![screen shot 2016-09-27 at 4 15 23 pm](https://cloud.githubusercontent.com/assets/93231/18890297/88cad3c0-84ce-11e6-802b-a1f29ccb3f5b.png)
",https://github.com/tidyverse/ggplot2/pull/1787,ggplot2
thomasp85,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/1783,2016-09-27T11:43:57Z,2019-01-18T15:19:23Z,2016-09-28T08:54:59Z,"Fixes #1700
",https://github.com/tidyverse/ggplot2/pull/1783,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1782,2016-09-27T10:55:16Z,2019-01-18T15:19:25Z,2016-09-28T09:30:01Z,"Fixes #1568
",https://github.com/tidyverse/ggplot2/pull/1782,ggplot2
thomasp85,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/1779,2016-09-26T08:03:26Z,2019-01-18T15:19:27Z,2016-09-27T19:04:28Z,,https://github.com/tidyverse/ggplot2/pull/1779,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1778,2016-09-26T07:06:23Z,2019-01-18T15:19:35Z,2016-09-26T07:16:28Z,"This was a design omission in the Facet redesign
",https://github.com/tidyverse/ggplot2/pull/1778,ggplot2
has2k1,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1777,2016-09-25T04:12:00Z,2019-01-18T15:19:29Z,2016-09-27T19:03:38Z,"The problem was the %||% operator accepts single tokens and so
care (bracketing as required) must be taken avoid miscalculations.

Some other places in the code-base had it right.

Fixes #1775
",https://github.com/tidyverse/ggplot2/pull/1777,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1774,2016-09-23T08:42:47Z,2019-01-18T15:19:41Z,2016-09-23T08:43:05Z,"Fixes unit tests
",https://github.com/tidyverse/ggplot2/pull/1774,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1773,2016-09-23T08:30:22Z,2019-01-18T15:19:43Z,2016-09-23T08:30:58Z,"Fix recent build error because modifyList was not prefixed with utils namespace
",https://github.com/tidyverse/ggplot2/pull/1773,ggplot2
thomasp85,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/1769,2016-09-21T10:56:07Z,2019-01-18T15:19:37Z,2016-09-26T06:57:37Z,"Fixes #1493
",https://github.com/tidyverse/ggplot2/pull/1769,ggplot2
thomasp85,MEMBER,closed,16,https://github.com/tidyverse/ggplot2/pull/1767,2016-09-21T09:24:20Z,2019-01-18T15:19:33Z,2016-09-26T07:59:34Z,"Fixes #1718
",https://github.com/tidyverse/ggplot2/pull/1767,ggplot2
thomasp85,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/1765,2016-09-20T15:14:03Z,2019-01-18T15:19:47Z,2016-09-21T07:24:54Z,"Fixes #1747
",https://github.com/tidyverse/ggplot2/pull/1765,ggplot2
thomasp85,MEMBER,closed,26,https://github.com/tidyverse/ggplot2/pull/1763,2016-09-20T11:36:19Z,2019-01-18T15:19:31Z,2016-09-27T19:03:17Z,"Fixes #1750, #1735, and #1737
",https://github.com/tidyverse/ggplot2/pull/1763,ggplot2
thomasp85,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/1762,2016-09-20T10:15:20Z,2019-01-18T15:19:45Z,2016-09-23T08:16:02Z,"Fixes #1744
",https://github.com/tidyverse/ggplot2/pull/1762,ggplot2
Tutuchan,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1760,2016-09-19T14:53:04Z,2019-01-18T13:19:49Z,2016-09-23T21:26:00Z,"Hi,

With this PR, it is now possible to pass a named logical vector to `show.legend` in order to have better control of what appears in the legend or not. See this example: 

``` r
library(ggplot2)

p <- ggplot(mtcars) +
  geom_point(aes(mpg, qsec, colour = factor(vs), shape = factor(am)))

p + geom_line(aes(mpg, qsec, colour = factor(vs), linetype = factor(am)))

# Current behaviour: remove this layer from the legend
p + geom_line(aes(mpg, qsec, colour = factor(vs), linetype = factor(am)), show.legend = FALSE)

# In the current version, this would have the same behaviour but here, 
# it removes only the colour aesthetic for the line geom from the legend
p + geom_line(aes(mpg, qsec, colour = factor(vs), linetype = factor(am)), 
              show.legend = c(colour = FALSE))
```

![image](https://cloud.githubusercontent.com/assets/5540005/18636453/2c7300ca-7e89-11e6-8398-ae3378826ccb.png)

The only problem (that I see anyway) is that, for the colour scale, the name in the `show.legend` vector **must** be `colour`, `color` will not work. It might be solved by adding a check when trying to match the names but it's not very elegant. Any ideas ?
",https://github.com/tidyverse/ggplot2/pull/1760,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1759,2016-09-19T09:21:59Z,2019-01-18T15:19:55Z,2016-09-19T09:31:24Z,,https://github.com/tidyverse/ggplot2/pull/1759,ggplot2
thomasp85,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/1758,2016-09-17T20:02:49Z,2019-01-18T15:19:49Z,2016-09-21T07:24:20Z,"Fixes #1751
",https://github.com/tidyverse/ggplot2/pull/1758,ggplot2
vlsi,NONE,closed,7,https://github.com/tidyverse/ggplot2/pull/1756,2016-09-16T22:48:03Z,2019-01-18T15:19:57Z,2016-09-17T19:09:11Z,"I've run into ""well known"" `facet_grid(scale=""free"") + coord_flip()` issue, and it took me a several hours to find a workaround, thus I decided to implement a proper fix.

The idea is to swap panel$layout$SCALE_X and panel$layout$SCALE_Y right after train_layout

The thing is facet_grid tries to keep the same ranges for all columns and rows,
however it does not know if the axes will be flipped, so when flip occurs
the previously chosen set of facets no longer applies.

The fix is to flip SCALE_X and SCALE_Y set of facets, so the ranges are properly computed

Fixes #1492, #1470, #1393, #95
",https://github.com/tidyverse/ggplot2/pull/1756,ggplot2
thomasp85,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/1754,2016-09-16T08:38:35Z,2019-01-18T15:19:51Z,2016-09-21T07:23:36Z,"This PR is an alternative fix to #1555, #1557, #1565, and #1567 compared to #1581.

It will propose the inclusion of an `inherit.blank` argument to the `element_*` constructors. The reason for this is that we might want to suppress drawing of a parent element and all its children, and then reenable some of the children again. This requires element calculation to sometimes ignore `element_blank()` and sometimes not. The default should be `inherit.blank = FALSE` while elements in the included themes should have `inherit.blank = TRUE` instead.
",https://github.com/tidyverse/ggplot2/pull/1754,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1749,2016-09-15T08:36:58Z,2019-01-18T15:20:11Z,2016-09-15T12:08:47Z,"Fixes #1732.

`continuous_scale` and `discrete_scale` now takes a `super` argument that defaults to `ScaleContinuous` and `ScaleDiscrete` respectively. This avoids having to reassign the super class after construction in the different positional scale constructors
",https://github.com/tidyverse/ggplot2/pull/1749,ggplot2
thomasp85,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1746,2016-09-09T11:47:34Z,2019-01-18T15:20:19Z,2016-09-09T12:00:50Z,"This PR fixes an oversight in #1725 where some of the documentation and examples were not updated to the new functionality
",https://github.com/tidyverse/ggplot2/pull/1746,ggplot2
thomasp85,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/1742,2016-09-06T20:39:23Z,2019-01-18T16:19:19Z,2016-09-06T20:48:11Z,"Fixes #1740
",https://github.com/tidyverse/ggplot2/pull/1742,ggplot2
DarwinAwardWinner,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/1737,2016-08-30T21:30:43Z,2019-01-18T15:20:09Z,2016-09-15T13:05:57Z,"The documentation now mentions ""continuous_scale"" instead of ""discrete_scale"".

Fixes #1736.
",https://github.com/tidyverse/ggplot2/pull/1737,ggplot2
DarwinAwardWinner,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1735,2016-08-29T23:33:11Z,2019-01-18T15:20:17Z,2016-09-15T11:51:58Z,"I tried to pass `na.value` to `scale_size_continuous`, and was surprised when it threw an error instead of passing it along to `continuous_scale`.  This pull request fixes that by having it pass along `...`.
",https://github.com/tidyverse/ggplot2/pull/1735,ggplot2
steveharoz,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1733,2016-08-26T18:03:32Z,2019-01-18T16:19:29Z,2016-09-06T18:34:52Z,"Show a simple legend for common line types. It just saves people a trip to the vignette or online docs.

Similar to PR https://github.com/hadley/ggplot2/pull/1578
",https://github.com/tidyverse/ggplot2/pull/1733,ggplot2
tdmcarthur,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1729,2016-08-24T18:23:52Z,2019-01-18T16:19:23Z,2016-09-06T22:14:09Z,"I replaced the ... argument in coord_map() with parameters = NULL and added a new example in its help file for a projection that needs a 'parameters' argument. This fixes the bug mentioned in PR #1699.

In the previous version of coord_map(), the ... argument only served to pass the 'parameters' argument to mapproj::mapproject(), so it can be safely removed. I also added documentation about the new 'parameters' argument in coord_map().

P.S. I've now realized the proper workflow would have been to modify the original pull request at https://github.com/hadley/ggplot2/pull/1699 , but it's too late now.
",https://github.com/tidyverse/ggplot2/pull/1729,ggplot2
hadley,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/1728,2016-08-23T15:40:57Z,2018-11-06T17:42:20Z,2016-08-24T13:19:31Z,"And increase margins slightly. Fixes #1712 

@baptiste, @thomasp85, @jiho – can you please take a look? I always forget the consequences of tweaking theme defaults.

``` R
library(ggplot2)
df <- data.frame(x = 1:9, y = 1:9)

ggplot(df, aes(x, y)) + 
  geom_point() + 
  labs(
    y = ""yyy"",
    title = ""This is title yyyyyy"",
    subtitle = ""This is a subtitle yyyyyy""
  )
```

Before: 
![before](https://cloud.githubusercontent.com/assets/4196/17898589/f85f1024-691d-11e6-85e6-7550eaded854.png)

After: 
![after](https://cloud.githubusercontent.com/assets/4196/17898588/f854d046-691d-11e6-8c54-58d71d6c29f6.png)

The difference is subtle, but an improvement.
",https://github.com/tidyverse/ggplot2/pull/1728,ggplot2
mnbram,CONTRIBUTOR,closed,12,https://github.com/tidyverse/ggplot2/pull/1726,2016-08-23T15:03:29Z,2019-01-18T16:19:27Z,2016-09-06T18:35:51Z,"See #1714 
",https://github.com/tidyverse/ggplot2/pull/1726,ggplot2
thomasp85,MEMBER,closed,21,https://github.com/tidyverse/ggplot2/pull/1725,2016-08-23T08:27:07Z,2019-01-18T16:19:18Z,2016-09-09T11:11:03Z,"Fixes #1716. Alternative approach to #1724
",https://github.com/tidyverse/ggplot2/pull/1725,ggplot2
thomasp85,MEMBER,closed,15,https://github.com/tidyverse/ggplot2/pull/1724,2016-08-22T19:27:05Z,2019-01-18T16:19:33Z,2016-08-23T15:45:38Z,"This PR fixes #1716 by stretching the viewport reserved for legend drawing.
",https://github.com/tidyverse/ggplot2/pull/1724,ggplot2
DanRuderman,CONTRIBUTOR,closed,16,https://github.com/tidyverse/ggplot2/pull/1722,2016-08-21T02:01:04Z,2019-01-18T15:20:15Z,2016-09-15T11:52:07Z,"@hadley I made some simple modifications to the environments that are passed to `quoted_df` that seemed to make expressions work using `I().` I haven't done any of the documenting because I'd like you to have a look first and see what I have overlooked (can't believe it would be this easy...).

Example: `ggplot(mtcars) + stat_bin(aes(mpg)) + facet_grid(I(gear+1) ~ I(2*carb))`
",https://github.com/tidyverse/ggplot2/pull/1722,ggplot2
bogdanstate,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/1721,2016-08-19T05:11:21Z,2019-01-18T16:19:35Z,2016-08-23T14:58:09Z,"Fixes #1718

This is a bit of a tricky issue: at the time the `date_format` function is passed as a label formatter in `scale_datetime`, the timezone is not known, as this is an attribute of the input data.

My solution is to define a special behavior when it comes to the `labels` argument passed to `scale_continuous`. If this argument is a function, it is evaluated once on `breaks`, as before. BUT, if it so happens that the return value of this evaluation is another function, then we evaluate this returned function on `breaks` one more time. The rationale for this is simple: there might be some formatting context that is only evident from the data, and this may have consequences on how formatting is done. For continuous scales timezone is a clear example, but the same logic could be used to implement some sort of locale-based formatting for discrete scales.

I have tested this fix using the following code:

```
library(ggplot2)
library(gridExtra)

df <- data.frame(
  time = as.POSIXct(as.Date(""2010-01-01""), tz = ""America/Chicago"") + 1:10 * 3600,
  y = 1:10
)

p1 <- ggplot(df, aes(time, y)) + geom_point()
p2 <- ggplot(df, aes(time, y)) + geom_point() + scale_x_datetime(date_labels = ""%H:%M %Z"")
grid.arrange(p1, p2)
```

![image](https://cloud.githubusercontent.com/assets/3690985/17799560/7bf6b89c-6590-11e6-8c4b-8d4ac1e400fa.png)

P.S.: This is my first contribution to ggplot2, thanks for creating this amazing package!
",https://github.com/tidyverse/ggplot2/pull/1721,ggplot2
AmeliaMN,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/1719,2016-08-17T20:42:37Z,2019-01-18T15:20:13Z,2016-09-15T11:58:21Z,"Given 9d47ba7aacd5181d3ed0c7fcfd3c5adaefe9c9dd I'm guessing this is going to get rejected, but I like to be able to ? on any package. This would allow me to ?ggplot2. 
",https://github.com/tidyverse/ggplot2/pull/1719,ggplot2
DanRuderman,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1713,2016-08-16T03:09:48Z,2019-01-18T12:19:33Z,2017-07-03T16:31:51Z,"Initial version of outlier rendering for `geom_violin`.
",https://github.com/tidyverse/ggplot2/pull/1713,ggplot2
thomasp85,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/1709,2016-08-12T13:08:55Z,2019-01-18T16:19:38Z,2016-08-22T14:42:19Z,"Fixes #1609

Currently the annotate layer data is only based on positional ”aesthetics”. This PR includes all additional aesthetics given through … in the data. 
",https://github.com/tidyverse/ggplot2/pull/1709,ggplot2
thomasp85,MEMBER,closed,15,https://github.com/tidyverse/ggplot2/pull/1708,2016-08-12T12:58:44Z,2019-01-18T15:20:02Z,2016-09-16T07:23:08Z,"Fixes #1638 and #1589
",https://github.com/tidyverse/ggplot2/pull/1708,ggplot2
msusplugas,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1704,2016-08-10T07:24:27Z,2019-01-18T16:19:44Z,2016-08-10T07:29:37Z,"Add munsell and colorspace as dependency of ggplot2 in the DESCRIPTION file.
This is required to use the package ggplot2.
",https://github.com/tidyverse/ggplot2/pull/1704,ggplot2
thomasp85,MEMBER,closed,10,https://github.com/tidyverse/ggplot2/pull/1703,2016-08-09T10:24:43Z,2019-01-18T16:19:31Z,2016-08-25T10:51:44Z,"This change will issue a warning if a transform results in the occurrence of new infinite values. Fixes #1696
",https://github.com/tidyverse/ggplot2/pull/1703,ggplot2
thomasp85,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1702,2016-08-09T10:05:58Z,2019-01-18T16:19:40Z,2016-08-22T09:00:53Z,"This change saves the palette and the number of breaks in it and retrieves these values on subsequent calls, avoiding multiple warnings pertaining to the palette. Fixes #1674
",https://github.com/tidyverse/ggplot2/pull/1702,ggplot2
tdmcarthur,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1699,2016-08-06T22:36:06Z,2019-01-18T16:19:21Z,2016-09-06T22:26:14Z,"This fails:

`
library(ggplot2)

nz <- map_data(""nz"")
nzmap <- ggplot(nz, aes(x = long, y = lat, group = group)) +
  geom_polygon(fill = ""white"", colour = ""black"")
nzmap + coord_map(projection = ""lambert"", parameters=c(12, 17.5))
`
Error in mapproj::mapproject(x, y, projection = coord$projection, parameters = coord$params,  : 
  (list) object cannot be coerced to type 'double'

I simply changed mproject so that unlist() is run on the 'parameters' argument before passing to mapproject()
",https://github.com/tidyverse/ggplot2/pull/1699,ggplot2
sainathadapa,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1697,2016-08-05T08:40:58Z,2019-01-18T16:19:54Z,2016-08-05T16:46:18Z,"Modified the CoordCartesian function so that `coord_cartesian` can also accept a logical vector of length 4 for `expand` parameter. This is useful, especially in facet plots of bar graphs, where one would want to not expand the plot on the bottom side, and instead keep the bar anchored to 0. Also, this modification solves [this question from stackoverflow](https://stackoverflow.com/questions/27028825/ggplot2-force-y-axis-to-start-at-origin-and-float-y-axis-upper-limit).

An example:
`p <- ggplot(mtcars, aes(disp, wt)) + geom_point() +  geom_smooth()`
`print(p)`
![original](https://cloud.githubusercontent.com/assets/4915751/17431077/aa7fda02-5b15-11e6-942c-33185d30aea4.png)

`p + coord_cartesian(expand = c(T, F, F, T))`
![expand](https://cloud.githubusercontent.com/assets/4915751/17431081/af04346a-5b15-11e6-9908-1bbe12e018cc.png)

Notice that the expansion factor was applied to the left and top edges of the plot, but not to the other edges.

Since this is an addition, but not a modification of the existing functionality, I don't expect any backward compatibility problems.
",https://github.com/tidyverse/ggplot2/pull/1697,ggplot2
thomasp85,MEMBER,closed,15,https://github.com/tidyverse/ggplot2/pull/1693,2016-08-03T09:33:51Z,2019-01-18T16:19:46Z,2016-08-08T14:58:15Z,"This fixes #1552. `collide` now sorts the data by x and then by negated group. The negation is performed to ensure that the stacking order follows the default legend order of the fill.
",https://github.com/tidyverse/ggplot2/pull/1693,ggplot2
thomasp85,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/1690,2016-08-01T20:09:59Z,2019-01-18T16:19:56Z,2016-08-03T12:35:00Z,"This fixes #1655 by adding dummy data to all annotate functions in the way already done for annotate_logticks.
",https://github.com/tidyverse/ggplot2/pull/1690,ggplot2
mikebirdgeneau,NONE,closed,8,https://github.com/tidyverse/ggplot2/pull/1688,2016-07-29T01:21:24Z,2019-01-18T16:19:48Z,2016-08-05T17:29:26Z,"Updates to include count & density to fix the use of geom_hexbin with ..density.. or ..count.. 

Fixes #1608.
",https://github.com/tidyverse/ggplot2/pull/1688,ggplot2
DanRuderman,CONTRIBUTOR,closed,10,https://github.com/tidyverse/ggplot2/pull/1687,2016-07-29T01:00:59Z,2019-01-18T16:19:52Z,2016-08-05T16:48:45Z,,https://github.com/tidyverse/ggplot2/pull/1687,ggplot2
lionel-,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1682,2016-07-26T16:53:08Z,2019-01-18T16:20:11Z,2016-07-28T14:21:51Z,"Fix a small code typo
",https://github.com/tidyverse/ggplot2/pull/1682,ggplot2
jiho,CONTRIBUTOR,closed,12,https://github.com/tidyverse/ggplot2/pull/1679,2016-07-25T15:09:12Z,2019-01-18T13:19:19Z,2016-08-23T16:15:26Z,"Make both the code and the visual aspect of all theme more homogeneous. The general idea was to take theme_grey as the reference for all changes (and since it changed slightly in the previous update of ggplot2, the other themes needed some love too!).

I tried to divide the PR in small standalone commits (too lazy for several pull requests ;-) ). I'll update them as needed so that the show PR can be merged. I also added the rationale for various choices as comments in the code.

Some fixes were clearly needed (default size, etc.). Visually, I think theme_bw in particular needed a review. For the others, the changes are quite subtle.
",https://github.com/tidyverse/ggplot2/pull/1679,ggplot2
salmasian,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1676,2016-07-23T18:36:59Z,2019-01-18T17:19:39Z,2016-07-28T13:23:11Z,"This pull request fixes a minor typo I found in the documentation
",https://github.com/tidyverse/ggplot2/pull/1676,ggplot2
jabranham,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1671,2016-07-17T16:57:08Z,2019-01-18T17:19:41Z,2016-07-28T13:23:00Z,"Fixes #1654 
",https://github.com/tidyverse/ggplot2/pull/1671,ggplot2
huftis,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1670,2016-07-17T15:58:11Z,2019-01-18T16:19:50Z,2016-08-05T16:50:33Z,"Fixes #1669 

The `expand` argument for `scale_*_continuous()` and
`scale_*_discrete()` now accepts separate expansion
constants for the lower and upper range limits.

This makes it much easier to create bar charts where the
bottom of the bars are flush with the x axis but the bars
still have some (automatically calculated amount of) space
above them:

``` R
ggplot(mtcars) +
geom_bar(aes(x = cyl)) +
scale_y_continuous(expand = c(0, 0, 0.05, 0))
```

The syntax for the multiplicative and additive expansion
constants has been changed from `c(m, a)` to
`c(m_lower, a_lower, m_uppper, a_upper)`. The old syntax
will still work, as length 2 vectors `c(m, a)` are
expanded to `c(m, a, m, a)` and length 3 vectors
are expanded from `c(m1, a1, m2)` to `c(m1, a2, m2, a1)`.
(@huftis, #1669)

Some examples:

``` R
# Continuous scales
p = ggplot(mtcars) +
      geom_bar(aes(x = cyl))

# No space below but 5% space above bars
p + scale_y_continuous(expand = c(0, 0, 0.05, 0))

#3 units space below and 1 unit space above bars
p + scale_x_continuous(expand = c(0, 3, 0, 1))

# It also works with facets
p + facet_wrap(~cyl) +
    scale_y_continuous(expand = c(0, 0, 0.05))
p + facet_wrap(~cyl, scales=""free_y"") +
    scale_y_continuous(expand = c(0, 0, 0.05))
# Note that all the bars should look identical in this last example

# Coordinate flipping also works
p + scale_y_continuous(expand = c(.5, 0, 0.05, 0)) +
    coord_flip()
p + scale_y_continuous(expand = c(0, 2, 0, 5)) +
    coord_flip()


# Similar examples for discrete scales

d <- ggplot(subset(diamonds, carat > 1), aes(cut, clarity)) +
  geom_jitter()

d + scale_x_discrete(expand = c(.25, 0))
d + scale_x_discrete(expand = c(0, 1))
d + scale_x_discrete(expand = c(0, 1, 0, 5))
d + scale_x_discrete(expand = c(.25, 0, .5, 0))
d + scale_x_discrete(expand = c(.25, 1, .25, 5))
d + scale_x_discrete(expand = c(.25, 1, .25, 5)) + coord_flip()
```
",https://github.com/tidyverse/ggplot2/pull/1670,ggplot2
tonytonov,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1668,2016-07-15T09:07:40Z,2019-01-18T17:19:43Z,2016-07-28T13:22:50Z,,https://github.com/tidyverse/ggplot2/pull/1668,ggplot2
tjmahr,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1667,2016-07-14T16:16:24Z,2019-01-18T17:19:25Z,2016-07-28T13:31:12Z,"Small but clarifying change. I encountered a user who was confused why `p + theme_gray()` didn't update the plot when the examples were run in succession. 

I reordered examples so it does change the current plot. Also, commented that it is the default, in case the reader jumps right to the examples.
",https://github.com/tidyverse/ggplot2/pull/1667,ggplot2
mnazarov,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1664,2016-07-12T12:17:14Z,2019-01-18T17:19:45Z,2016-07-28T13:21:26Z,"escape % symbol to avoid characters after be interpreted as comment
",https://github.com/tidyverse/ggplot2/pull/1664,ggplot2
thomasp85,MEMBER,closed,50,https://github.com/tidyverse/ggplot2/pull/1663,2016-07-08T07:16:16Z,2019-01-18T13:19:53Z,2017-02-01T18:01:42Z,"@hadley this PR will begin implementing vdiffr for testing visual regression
",https://github.com/tidyverse/ggplot2/pull/1663,ggplot2
hbuschme,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1661,2016-07-06T12:56:16Z,2019-01-18T15:19:39Z,2016-09-23T20:57:24Z,"The argument controls the number of equally spaced points at which the density is to be estimated. As in `stats::density` the argument `n` defaults to 512. It is exposed through the function interface of `stat_density` and can thus also be used from `geom_density`.

An existent local variable `n`, which holds the number of values in the input vector, has been renamed to `nx` to avoid a name clash.

I needed this argument because plots created with `geom_density` contained a large number of points (1024?) per density curve. This resulted in large file sizes when saving the plot as a vector graphic. I think that it is generally useful to be able to control this parameter of the density function.

I rebuild the documentation, and tested the new functionality. However, I added a new argument to an existing function and – not being an R expert – I am not sure whether this might break someones code. The argument has a default value, but I did not add it at the very end of the argument list but rather at a point where it seemed fitting.
",https://github.com/tidyverse/ggplot2/pull/1661,ggplot2
thk686,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/1657,2016-06-26T20:39:58Z,2019-01-18T16:20:09Z,2016-07-28T13:30:52Z,"Added method to dispatch ggplot on a time series object

(Oops: should be stats::time())
",https://github.com/tidyverse/ggplot2/pull/1657,ggplot2
DDClark,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1650,2016-06-14T11:57:20Z,2019-01-18T17:19:23Z,2016-07-28T13:33:21Z,"Added color to the `geom_boxplot` call in the last example to distinguish outlier points from data points plotted with `position_jitter`
",https://github.com/tidyverse/ggplot2/pull/1650,ggplot2
faizan-khan-iit,NONE,closed,7,https://github.com/tidyverse/ggplot2/pull/1649,2016-06-13T15:02:07Z,2019-01-18T16:20:00Z,2016-07-28T13:44:21Z,"This PR is with respect to [this comment about passing additional parameters](https://github.com/hadley/ggplot2/issues/1585#issuecomment-225583280).

The motivation of this PR is that packages like Animint depend on additional params to produce plots and animations using ggplot.

After the changes, the following code will still produce the same error as before:

```
library(""ggplot2"")

viz <- list(iris=ggplot()+
    geom_point(aes(Petal.Width, Sepal.Length, showSelected=Species),
               data=iris, chunk_vars=character()))
```

```
Error: Unknown parameters: chunk_vars
```

While this code will only produce a warning and pass the additional params as a list `extra_params`:

```
library(""ggplot2"")

viz <- list(iris=ggplot()+
    geom_point(aes(Petal.Width, Sepal.Length, showSelected=Species),
               data=iris, chunk_vars=character(),validate_params = F))
```

```
Warning message:
Unknown parameters used: chunk_vars
Set validate_params to TRUE avoid errors 
```

This way we will be able to access these params through the `extra_params` list under `plot$layers` and use them in development of other packages, and the general user should still see the same error as before, unless he/she specifies the `validate_params` option. I think this achieves both the goals.

EDIT: Please see my other comment below for changes.
",https://github.com/tidyverse/ggplot2/pull/1649,ggplot2
jonathan-g,CONTRIBUTOR,closed,10,https://github.com/tidyverse/ggplot2/pull/1644,2016-06-03T15:02:43Z,2019-01-18T15:20:06Z,2016-09-15T18:17:03Z,"Add a parameter `outlier.alpha` to geom_boxplot to allow the outlier points to have different alpha from the boxes. This parameter works the same way as outlier.colour, outlier.shape, etc.

This is useful when plotting large data sets, so even when only a small fraction of the data is outliers, the number of outlier points can be large enough that it's hard to see them all. In such a case, setting alpha.outlier < 1 makes it easier to see the density of outliers.
",https://github.com/tidyverse/ggplot2/pull/1644,ggplot2
wibeasley,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1640,2016-05-31T19:05:38Z,2019-01-18T17:19:27Z,2016-07-28T13:29:54Z,,https://github.com/tidyverse/ggplot2/pull/1640,ggplot2
sidiropoulos,NONE,closed,18,https://github.com/tidyverse/ggplot2/pull/1637,2016-05-26T14:32:18Z,2019-01-18T13:19:27Z,2016-07-28T13:29:46Z,"Hi,

as discussed in the  [Google group](https://groups.google.com/forum/#!topic/ggplot2/FJA8EMs1XeE) I have implemented a new geometry based on [sinaplot](https://cran.r-project.org/web/packages/sinaplot/vignettes/SinaPlot.html). 

Sina plots combine the power of violin and jitter plots in a single chart where information for both the distribution and the number of the samples is conveyed. 

Sina plot is available in R as a CRAN [package](https://cran.r-project.org/web/packages/sinaplot/index.html) and, at the moment, it is using ggplot2 to produce the output. It would make much more sense though for it to be included as a geom in ggplot, while the CRAN package would use the default R graphics.

Looking forward to get your feedback on both the idea and the implementation and I hope you will find useful enough to be included in ggplot2!

Regards,
Nikos
",https://github.com/tidyverse/ggplot2/pull/1637,ggplot2
jennybc,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1636,2016-05-15T20:53:38Z,2019-01-18T17:19:51Z,2016-05-16T15:04:31Z,,https://github.com/tidyverse/ggplot2/pull/1636,ggplot2
martin-martin,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1634,2016-05-14T17:17:53Z,2019-01-18T17:19:29Z,2016-07-28T13:27:35Z,,https://github.com/tidyverse/ggplot2/pull/1634,ggplot2
thomasp85,MEMBER,closed,48,https://github.com/tidyverse/ggplot2/pull/1633,2016-05-13T07:46:28Z,2019-01-18T15:20:00Z,2016-09-17T19:06:32Z,"@hadley 

This PR is currently empty, but opened now to make a venue for discussing implementation etc.

My goal, besides streamlining ggplot2 OOP usage, is to make facets extensible by third parties in the same way as scales, geoms, etc. are now. For this to work the facet class need to be quite powerful in terms of which responsibilities it has, so I want to check with you before I begin working on it.

As I see it the facet class has the following responsibilities:
1. Get data and return modified data with PANEL column
2. Potentially set range of position scales
3. Get a gList of layers for each panel and lay them out in a gtable
4. Decorate around the facets (both axes, facet headings, etc)

In the end this means that the facet class takes full responsibility of all drawing within the plotting area (title, legends, margins, subtitles, etc should be handled elsewhere)

Mind you, this is before I’ve looked deeply into how facets are currently implemented. There might be additional responsibilities that appears…

How do you feel about the above?
",https://github.com/tidyverse/ggplot2/pull/1633,ggplot2
davidkretch,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1627,2016-05-08T04:10:38Z,2019-01-18T17:19:31Z,2016-07-28T13:27:26Z,"From: ""you're best **of** transforming your data""
To: ""you're best **off** transforming your data""
",https://github.com/tidyverse/ggplot2/pull/1627,ggplot2
jankatins,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1625,2016-05-04T20:46:19Z,2019-01-18T16:20:19Z,2016-07-28T13:40:14Z,"According to an informal survey (@hrbrmstr @juliasilge), this margin is needed every time a plot.caption is used:
https://twitter.com/janschulz/status/727932334218039296

The chosen top margin is the same as for the subtitle, just on the top instead
of the bottom.
",https://github.com/tidyverse/ggplot2/pull/1625,ggplot2
wch,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/1624,2016-04-29T14:43:33Z,2019-01-18T16:19:42Z,2016-08-12T15:32:30Z,"This fixes a bug that is the root cause of rstudio/shiny#1178. When adding an `aes()` object to a `ggplot()` object, the `uneval` class is inadvertently dropped. For example:

``` R
# When including aes() in the ggplot() call, class is preserved
p <- ggplot(mtcars, aes(wt, mpg))
class(p$mapping)
# [1] ""uneval""


# When adding aes() in the ggplot() call, class is lost
p <- ggplot(mtcars) + aes(wt, mpg)
class(p$mapping)
# [1] ""list""
```

This PR preserves the class of the object.
",https://github.com/tidyverse/ggplot2/pull/1624,ggplot2
coolbutuseless,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1623,2016-04-28T11:23:07Z,2019-01-18T17:19:17Z,2016-07-28T13:39:25Z," legend.key.size was marked as its own parent. fixed.
",https://github.com/tidyverse/ggplot2/pull/1623,ggplot2
has2k1,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1622,2016-04-26T02:05:52Z,2019-01-18T16:19:25Z,2016-09-06T18:40:11Z,"The computed y limits depend on both the group & panel.
This ensures that the scale trainning does not get wrong
(global y limits) input.

Fixes #1618
",https://github.com/tidyverse/ggplot2/pull/1622,ggplot2
shreyasgm,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/1621,2016-04-23T05:44:45Z,2019-01-18T17:19:19Z,2016-07-28T13:38:09Z,,https://github.com/tidyverse/ggplot2/pull/1621,ggplot2
JestonBlu,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1598,2016-03-28T20:11:52Z,2019-01-18T17:19:33Z,2016-07-28T13:27:19Z,"Created a new theme for classical economic plotting. Its a simplified theme with only the traditional x and y axis outlined. The axis titles are slightly larger and the grid lines have been removed. The idea is to create a basic plot similar to what Economics instructors would manually draw in class.

![image](https://cloud.githubusercontent.com/assets/3339909/14088079/ff41fcf2-f4f2-11e5-83e2-4668e7f2a402.png)
",https://github.com/tidyverse/ggplot2/pull/1598,ggplot2
lionel-,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/1592,2016-03-23T14:20:30Z,2019-01-18T16:20:17Z,2016-07-28T13:49:56Z,"I am writing a ggplot2 Stat that integrates fitted model into the grammar of graphics. Since it has to link the relevant grouping variables to the model predictors, the Stat requires knowledge of how all relevant aesthetics are specified and what faceting variables are active. For example it needs to know that `colour` has been specified with `factor(cyl)`. I could get this information by overwriting some Layer's method, but it would be much cleaner if that was part of the API.

So this PR proposes to add a `spec` argument to `setup_params()`. This has the downside of breaking the API but on the other hand adding a whole new method just for that does not seem appropriate. I ran a revdep check and, if I didn't miss anything, only four packages are broken by this change. Two of them because they have some custom version of `ggplot_build()` and the other two because they have overwritten `setup_params()` for a custom Stat. All those cases are trivial to fix and if this PR is merged I will send these projects a PR.

Also if Stats get to see the plot specification, we should probably do the same for Geoms. I added a similar `setup_params()` method to Geoms with `data`, `params` and `spec` arguments.

The `spec` object is defined as follows:

``` r
spec <- function(layer, plot) {
  list(
    facet_spec = facet_spec(plot$facet),
    plot_mapping = plot$mapping,
    layer_mapping = layer$mapping
  )
}

facet_spec <- function(facet) {
  UseMethod(""facet_spec"")
}

facet_spec.wrap <- function(facet) {
  spec <- list(facets = facet$facets)
  structure(spec, class = c(""wrap"", ""spec""))
}

facet_spec.grid <- function(facet) {
  spec <- list(rows = facet$rows, cols = facet$cols)
  structure(spec, class = c(""grid"", ""spec""))
}
```
",https://github.com/tidyverse/ggplot2/pull/1592,ggplot2
hrbrmstr,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/1590,2016-03-23T02:18:17Z,2019-01-18T16:19:58Z,2016-08-02T20:02:53Z,"Fixes #1685 
- Added `geom_col()` which provides an alternative to `geom_bar()` that uses `stat=""identity""` by default, requiring the specification of a `y` aesthetic. It also does not have a `binwidth` parameter (the benefits of starting fresh). 
- Updated references & examples in other functions where `geom_bar(stat=""identity""…)` was used. Some were kept in since `geom_bar()` still supports `stat_identity()`.
- Substituted geom_col() for geom_bar() in one test to ensure it had test coverage outside the examples
- Updated `NEWS.md`
- Ran `devtools::test()` (all completed successfully)
- Ran `devtools::check()` (no notes or warnings)

I think I may have skimped on the examples in `geom_col()` and will be glad to add ones if deemed necessary. I can pull back any of the other mods as well. I made a choice to have this be a separate function vs have it documented under `geom_bar()` since I think there are enough differences (esp the mandatory `y` aesthetic) to keep it standalone (and it might confuse users to add it under `geom_bar()`). 
",https://github.com/tidyverse/ggplot2/pull/1590,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1586,2016-03-14T17:07:39Z,2019-01-18T16:20:05Z,2016-07-29T13:02:07Z,"Should help with #1585
",https://github.com/tidyverse/ggplot2/pull/1586,ggplot2
hrbrmstr,CONTRIBUTOR,closed,18,https://github.com/tidyverse/ggplot2/pull/1582,2016-03-13T17:59:22Z,2018-06-18T18:43:52Z,2016-03-15T18:49:26Z,"- new `subtitle` parameter for `labs` and `ggtitle`
- documented the `subtitle` parameter in `ggtitle` since it's an explicit parameter
- new `caption` parameter for `labs` function
- new `plot.subtitle` theme element
- new `plot.caption` theme element (default alignment is right-justified)
- updated default alignment for `plot.title` and `plot.subtitle` (now left-justified by default)
- updated roxygen documentation with `subtitle` and `caption` examples
- added test for `title`, `subtitle` & `caption` settings
- cleaned up `=` spacing in a few other files since they came up when I was trying to fix my own :-)
- updated `NEWS.md` (including suggested fixes to `NEWS.md`)

Sample code to validate non-breakage (i.e. test with various plot elements):

```
library(ggplot2)
library(gridExtra)

st <- ""Four score and seven years ago our fathers brought forth on this continent, a new nation, conceived in Liberty, and dedicated to the proposition that all people are created equal.""
st <- paste0(strwrap(st, 70), sep="""", collapse=""\n"")

p <- ggplot(mtcars, aes(wt, mpg))
p <- p + geom_point(aes(color=factor(cyl)))

# Changing the font solely to validate functionality. Times. Ugh.
p <- p + theme(text=element_text(family=""Times""))
p <- p + theme(plot.title=element_text(face=""bold""))
p <- p + theme(plot.subtitle=element_text(margin=margin(b=15)))
p <- p + theme(plot.caption=element_text(margin=margin(t=15),
                                        face=""italic"", size=8))
grid.arrange(

  p + ggtitle(""Just ggtitle""),

  p + labs(title=""Just labs with title""),

  p + ggtitle(""Now ggtitle with title subtitle"", subtitle=st),

  # More tests --------------------------------------------------------------

  p + labs(title=""Now labs with title subtitle"", subtitle=st) +
    theme(legend.position=""top""),

  p + labs(title=""Two separate labs calls for each title"") +
    labs(subtitle=st) +
    theme(legend.position=""bottom""),

  p + facet_wrap(~cyl) +
    labs(title=""Works with facets too"",
         subtitle=st,
         caption=""Brought you by the letters 'gg'""),

  # below -------------------------------------------------------------------

  p + labs(title=""Now labs with title subtitle & below"",
           subtitle=st,
           source=""Brought you by the letters 'gg'""),

  p + labs(title=""Two separate labs calls for each title & below"") +
    labs(subtitle=st) +
    labs(caption=""Brought you by the letters 'gg'"") +
    theme(legend.position=""bottom""),

  p + facet_wrap(~cyl) +
    labs(title=""Works with facets too & below"",
         subtitle=st,
         caption=""Brought you by the letters 'gg'""),

  ncol=3

)
```

![image](https://cloud.githubusercontent.com/assets/509878/13785028/02e4aa80-eaa8-11e5-892f-da895c832582.png)
",https://github.com/tidyverse/ggplot2/pull/1582,ggplot2
Katiedaisey,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/1581,2016-03-10T17:22:59Z,2019-01-18T15:19:54Z,2016-09-20T19:05:53Z,"Fixes  #1567

addresses issues #1555, #1557, #1565, #1567, inheritance in elements

previously subelements such as `panel.grid.major.x` were unable to be changed when inheriting from an `element_blank()` element such as  `panel.grid.major`. Update #1557 addressed this, but left the higher element unable to be changed.

`p <- ggplot(mtcars) + geom_point(aes(x = wt, y = mpg, colour=factor(gear))) + theme(axis.line = element_line(colour = ""pink"", size = 3))`
![rplot01](https://cloud.githubusercontent.com/assets/10160679/13678017/87904740-e6ba-11e5-9fba-ed1447b200f3.png)

This update allows access to both subelements and higher elements:

`p + theme_classic() + theme(panel.grid.major.x = element_line(colour = ""pink"", size = rel(4)))`
![rplot02](https://cloud.githubusercontent.com/assets/10160679/13678019/879cf4a4-e6ba-11e5-8d50-bb4962bcaf0c.png)

`p + theme_classic() + theme(panel.grid.major = element_line(colour = ""pink"", size = rel(4)))`
![rplot03](https://cloud.githubusercontent.com/assets/10160679/13678018/879a143c-e6ba-11e5-800f-bf464acf3b7a.png)

and addresses the loss of axes in some themes.

The inheritance scheme necessary for this functionally causes this update to fail one test, however graphical output is as expected.
",https://github.com/tidyverse/ggplot2/pull/1581,ggplot2
Katiedaisey,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1579,2016-03-10T00:30:29Z,2019-01-18T17:19:53Z,2016-03-10T16:01:45Z,"updates theme.r and theme-defaults.r to fix inheritance issues #1555, #1557, #1565, and #1567 
",https://github.com/tidyverse/ggplot2/pull/1579,ggplot2
steveharoz,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1578,2016-03-09T16:58:47Z,2019-01-18T16:20:07Z,2016-07-29T12:34:36Z,"I often wind up hunting for the indices corresponding to different shapes, and it'd be nice if they were in the docs.
",https://github.com/tidyverse/ggplot2/pull/1578,ggplot2
has2k1,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1575,2016-03-08T20:46:36Z,2019-01-18T17:19:21Z,2016-07-28T13:34:19Z,"Previously, a colourbar was always drawn whenever there was a
colour/fill mapping to a continuous variable.

Solution is to kill the guide if any has been created but if
no layer uses it.

_Addendum_
There are 3 places in the code where it is decided whether a legend will show up
or not. A better solution would be to fix that. At the moment, this (which added the 3rd)
is the least destructive.

fixes #1568
",https://github.com/tidyverse/ggplot2/pull/1575,ggplot2
infotroph,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1572,2016-03-07T04:32:40Z,2019-01-18T17:19:35Z,2016-07-28T13:24:44Z,,https://github.com/tidyverse/ggplot2/pull/1572,ggplot2
yutannihilation,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1566,2016-03-03T21:29:10Z,2019-01-18T16:20:15Z,2016-07-28T13:24:32Z,"Examples in `geom_histogram()` still use deprecated `origin`. This PR updates the document.
",https://github.com/tidyverse/ggplot2/pull/1566,ggplot2
lionel-,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/1564,2016-03-01T16:27:02Z,2019-01-18T17:19:57Z,2016-03-01T19:58:57Z,"Hi Hadley,

This makes the list of `x` aesthetics symmetric with `y` aesthetics. This is needed to fix some issues in ggstance.
",https://github.com/tidyverse/ggplot2/pull/1564,ggplot2
smsaladi,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1563,2016-03-01T03:59:26Z,2019-01-18T17:19:37Z,2016-07-28T13:24:20Z,"corrected a typo in the manual for scale-gradient
",https://github.com/tidyverse/ggplot2/pull/1563,ggplot2
bhive01,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/1560,2016-02-26T18:42:53Z,2019-01-18T17:19:59Z,2016-02-29T15:33:56Z,"can't compile ggplot2 book or run stat_count examples with freqpoly

``` r
 ggplot(diamonds, aes(color, colour = cut)) + 
    geom_freqpoly(aes(group = cut), stat=""count"")
#Error: Unknown parameters: pad
```

Code added from stat_bin mostly. Unsure how it is incorporated into the calculations in lines 56-71 like in stat_bin. Tested from my branch and is working. 
",https://github.com/tidyverse/ggplot2/pull/1560,ggplot2
lionel-,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1559,2016-02-25T00:36:14Z,2019-01-18T17:20:01Z,2016-02-25T15:10:38Z,"Closes #1556
",https://github.com/tidyverse/ggplot2/pull/1559,ggplot2
Katiedaisey,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1557,2016-02-24T18:42:12Z,2019-01-18T17:20:03Z,2016-02-24T21:49:18Z,"addresses issue #1555 where some elements added under certain themes inherit ""element_blank"" and cannot be updated, e.g.

`ggplot(mtcars, aes(wt, mpg)) + geom_point() + theme_classic() + theme(panel.grid.major.y = element_line(colour = ""pink"", size = 4))`

update explicitly declares parent element as necessary and children elements as element_blank
",https://github.com/tidyverse/ggplot2/pull/1557,ggplot2
dgromer,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1553,2016-02-21T12:24:01Z,2019-01-18T16:20:03Z,2016-07-31T14:27:27Z,"Adding two examples to the documentation of `annotate` about how to pass plotmath expressions.
1. simple plotmath expression
2. mixing plotmath syntax and plain text using `paste`

See #1548.
",https://github.com/tidyverse/ggplot2/pull/1553,ggplot2
lindbrook,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1536,2016-02-05T22:49:38Z,2019-01-18T17:20:08Z,2016-02-08T15:14:11Z,,https://github.com/tidyverse/ggplot2/pull/1536,ggplot2
jeffreyhanson,NONE,closed,15,https://github.com/tidyverse/ggplot2/pull/1530,2016-02-01T06:29:35Z,2018-10-30T01:41:16Z,2016-09-23T21:26:30Z,"## Custom tick marks and borders in guide_colorbar

This pull request allows the user to manually change the appearance of tick marks and borders around colorbar legends. Following a [discussion on stackoverflow](http://stackoverflow.com/questions/21088480/change-ggplot2-colourbar-tick-marks-to-black?lq=1), a [feature request was raised](https://github.com/hadley/ggplot2/issues/896), but there was not enough resources to implement it at the time. 

The original problem is shown below. The use of white in a color ramp results in a legend which seems to disappear at the end. Additionally, the ticks marks are hard to see.

```
#  Data
require(ggplot2)
require(grid)
n <- 100
x <- y <- seq(-4*pi, 4*pi, len=n)
r <- cos(sqrt(outer(x^2, y^2, ""+""))^2)
df <- data.frame(x = rep(x , each = n), y = rep(y, times = n ), val = c(r))

# Plot
ggplot(df, aes( x, y, fill = val)) +
  geom_raster() +
  scale_fill_gradient(low = ""#FFFFFF"", high = ""#de2d26"") +
  theme_bw() +
  theme(line = element_line(colour = ""#0000FF"")) +
  guides(fill = guide_colourbar(barheight = unit(3, ""in"")))
```

The pull request updates that allow the user to specify `element_line` objects that dictate the appearance of the legend. By using features in the pull request, we can specify black tick marks and borders to fix this issue.

```
# Plot with better legend
ggplot(df, aes( x, y, fill = val)) +
  geom_raster() +
  scale_fill_gradient(low = ""#FFFFFF"", high = ""#de2d26"") +
  theme_bw() +
  theme(line = element_line(colour = ""#0000FF"")) +
  guides(fill = guide_colourbar(barheight = unit(3, ""in""),
   ticks=element_line(color='black'), border=element_line(color='black')))
```

This is my first ""real"" pull request on Github, so please let me know if I'm doing anything wrong :)

---

EDIT: fix typo
",https://github.com/tidyverse/ggplot2/pull/1530,ggplot2
talgalili,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/1529,2016-01-31T18:28:02Z,2019-01-18T18:19:19Z,2016-01-31T21:58:52Z,,https://github.com/tidyverse/ggplot2/pull/1529,ggplot2
thomasp85,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/1527,2016-01-28T14:50:39Z,2019-01-18T17:20:13Z,2016-02-01T14:30:59Z,"This is a follow up on PR #1486

Summary of changes:
- Add `fortify.function` that returns function unchanged
- Add `layer_data` method to Layer base class that takes the plot data as input and returns the data associated with the layer
- Remove the need for waiver-check in `map_layout`
- Add unit tests for `layer_data` method

Possible additions:
- Documentation of function-as-data functionality somewhere (don't really know the best location for this - any idea?)
",https://github.com/tidyverse/ggplot2/pull/1527,ggplot2
oneillkza,NONE,closed,6,https://github.com/tidyverse/ggplot2/pull/1519,2016-01-25T22:23:37Z,2019-01-18T17:20:11Z,2016-02-04T17:11:34Z,"Per discussion in #1489, this changes `theme_update()` to use the `+` operator, so that unspecified attributes of the element being set are taken from the current theme, rather than `NULL`ing them out. I've added `theme_replace()` with the same behaviour as the current `theme_update()`, in case that behaviour is desired (though I'm hard-pressed to think of a use case).

I've also added some verbiage to the documentation clarifying what these do, along with examples.
",https://github.com/tidyverse/ggplot2/pull/1519,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1515,2016-01-25T14:58:10Z,2019-01-18T17:19:47Z,2016-01-26T13:02:50Z,list(),https://github.com/tidyverse/ggplot2/pull/1515,ggplot2
jiho,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1514,2016-01-25T14:55:01Z,2019-01-18T17:19:49Z,2016-01-31T22:05:25Z,"While theme_void is meant for drawings or plots in which the coordinates
are self describing (like maps for examples), subplots and aesthetics
still need to be described. The legend itself can be removed with
`guide = none` in the scale functions.
",https://github.com/tidyverse/ggplot2/pull/1514,ggplot2
DarioS,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/1511,2016-01-23T07:00:10Z,2019-01-18T17:20:15Z,2016-02-01T14:27:39Z,"Makes plot more interpretable when there are five or so factor levels. This would solve #1491. 
",https://github.com/tidyverse/ggplot2/pull/1511,ggplot2
ghost,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1503,2016-01-17T15:37:17Z,2019-01-18T18:19:43Z,2016-01-23T17:14:43Z,"Prevent ugly output if model has multiple classes
",https://github.com/tidyverse/ggplot2/pull/1503,ggplot2
jiho,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1499,2016-01-15T10:26:18Z,2019-01-18T18:19:29Z,2016-01-23T17:13:01Z,"It is sometimes useful to set a fixed bandwidth, to make it easier to compare between facets for example. Here is some code to demonstrate a use case

``` r
d <- data.frame(
  a=rep(c(""a"", ""b""), each=100),
  x=c(rnorm(50, 0, 0.2), rnorm(50, 0.5, 0.2), rnorm(100, 0, 2))
)
ggplot(d) + geom_density(aes(x=x)) + facet_wrap(~a)
ggplot(d) + geom_density(aes(x=x), bw=0.3) + facet_wrap(~a)

ggplot(d) + geom_density(aes(x=x)) + facet_wrap(~a, scales=""free_x"") 
ggplot(d) + geom_density(aes(x=x), bw=0.3) + facet_wrap(~a, scales=""free_x"")
```

I've been wanting this a few times already. I resorted to computing the densities manually and then plotting. Today I decided to be less lazy ;-)
",https://github.com/tidyverse/ggplot2/pull/1499,ggplot2
bleutner,NONE,closed,5,https://github.com/tidyverse/ggplot2/pull/1494,2016-01-14T15:08:33Z,2019-01-18T18:19:27Z,2016-01-25T15:45:38Z,"So far, `position_jitterdodge()` is limited to boxplots dodged by the `fill` aesthetic. 
This pull request generalizes the function to work properly on all posible dodge aesthetics:
- `fill`
- `colour`
- `linetype`
- `alpha`
- `size`
- `shape`

not that all of these readily make sense to me, but as long as it is supported by boxplot etc. I think it would be good to have this functionality. I for one was trying based on `colour` dodging, when I came upon this.

``` r
library(ggplot2)
# Example data
data(diamonds)
dsub <- subset(diamonds, clarity %in% levels(clarity)[1:3] & color %in% levels(color)[1:2])   
dsub$test <- sample(c(""a"",""b""), nrow(dsub), replace = TRUE) 

# Set-up ggplot
p <- ggplot(dsub) +
        geom_boxplot(outlier.colour = NA) +   
        geom_point(position = position_jitterdodge())

# So far we are limited to dodge by 'fill'
p %+% aes(x = cut, y = carat, fill = clarity) 

# Dodge by single aesthetic #####################
# Dodge by: colour
p %+% aes(x = cut, y = carat, colour = clarity)

# Dodge by: linetype          
p %+%  aes(x = cut, y = carat, linetype = clarity)

# Dodge by: alpha          
p %+%  aes(x = cut, y = carat, alpha = clarity)

# Dodge by: size          
p %+%  aes(x = cut, y = carat, size = clarity)

# Dodge by: shape          
p %+%  aes(x = cut, y = carat, shape = clarity)

# Dodge interactions ############################
# Dodge by: fill & colour , case fill == color    
p %+%  aes(x = cut, y = carat, fill = clarity, colour = clarity)

# Dodge by: fill & colour , case fill != color        
p %+% aes(x = cut, y = carat, fill = clarity, colour = color)

# Dodge by: fill & colour & linetype
p %+% aes(x = cut, y = carat, fill = clarity, linetype = color, color = test)

```
",https://github.com/tidyverse/ggplot2/pull/1494,ggplot2
Thell,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1488,2016-01-13T19:59:55Z,2019-01-18T18:19:31Z,2016-01-25T12:32:19Z,"Use ""understanding"" instead of ""understand"".
",https://github.com/tidyverse/ggplot2/pull/1488,ggplot2
thomasp85,MEMBER,closed,11,https://github.com/tidyverse/ggplot2/pull/1486,2016-01-13T11:52:37Z,2019-01-18T18:19:23Z,2016-01-25T20:39:47Z,"This PR will make it possible to supply a function as the data argument to the layer function. The function will be applied to the global data of the plot and the result will be used in the layer.

The change is proposed to give extension developers just a tad more power when building custom features. Currently (to my knowledge) data can only be intercepted by a compute_\* in a stat, and modifications have already been applied at this point.

My personal need for this feature is that I'm developing a ggplot2 extension library for dealing with graph/network data, and this type of data is not really fitting for a single data.frame as normally accepted in ggplot2. My current solution (which involves this PR) is to convert the graph into two data.frames: one describing the nodes and one describing the edges. The edge data.frame will be added as an attribute to the node data.frame. On calls to edge specific geoms the layer will get a function extracting the edges, passed as the data argument ensuring that it is the edge data that is being made available to the stats and geoms.

The changes are quite minor and does not change ggplot2 behaviour unless a function is passed to the layer. In that case the call to fortify is pushed down from layer() to map_layout() where the function is called on the global data (plot_data).
",https://github.com/tidyverse/ggplot2/pull/1486,ggplot2
jschoeley,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1478,2016-01-08T16:33:26Z,2019-01-18T18:19:45Z,2016-01-12T00:38:17Z,"The `element_text` function is called with a comma after its last argument. While this does not produce a bug, it is an irregularity better to be fixed.
",https://github.com/tidyverse/ggplot2/pull/1478,ggplot2
wch,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/1468,2016-01-04T18:07:08Z,2019-01-18T17:20:05Z,2016-01-04T19:39:59Z,"This fixes #1444. I'd suggest making a release after merging, since this a blocker for many people.
",https://github.com/tidyverse/ggplot2/pull/1468,ggplot2
has2k1,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/1464,2015-12-31T13:12:01Z,2019-01-18T18:19:49Z,2015-12-31T14:39:52Z,"Resolves
-  Minor slip up, user supplied h is ignored.
-  #1448, This was a regression due to the `...` refactoring.

I think more refactoring is needed to lift all the `stat$compute_group` parameters into the user API `stat()` function.
",https://github.com/tidyverse/ggplot2/pull/1464,ggplot2
codetrainee,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1463,2015-12-31T01:54:29Z,2019-01-18T18:19:33Z,2016-01-23T17:18:18Z,"As axis.ticks.margin is deprecated, setting margins of axis.text is much implicit. The aim to amend the document is merely to explain the method of using this property more clearly.
",https://github.com/tidyverse/ggplot2/pull/1463,ggplot2
codetrainee,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1462,2015-12-31T01:39:24Z,2019-01-18T18:19:41Z,2016-01-23T17:15:57Z,"change 
@param t,b,r,l Dimensions of each margin. (To remember order, think trouble).
to
@param t,r,b,l Dimensions of each margin. (To remember order, think trouble).
",https://github.com/tidyverse/ggplot2/pull/1462,ggplot2
tonytonov,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1460,2015-12-30T09:12:07Z,2019-01-18T18:19:51Z,2015-12-30T14:18:21Z,,https://github.com/tidyverse/ggplot2/pull/1460,ggplot2
PeteHaitch,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1438,2015-12-21T00:08:17Z,2019-01-18T18:19:39Z,2016-01-23T17:16:12Z,"Doesn't look like there was ever a 1.1.0 release, so I think this should be 2.0.0.
",https://github.com/tidyverse/ggplot2/pull/1438,ggplot2
Mellence,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1436,2015-12-17T19:13:24Z,2019-01-18T18:19:35Z,2016-01-23T17:17:33Z,"This is a fix to the error message contained in the issue tracker.
",https://github.com/tidyverse/ggplot2/pull/1436,ggplot2
M-E-Rademaker,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1423,2015-12-03T14:34:02Z,2019-01-18T18:19:37Z,2016-01-23T17:16:27Z,"Minor typo and style fixes
",https://github.com/tidyverse/ggplot2/pull/1423,ggplot2
chrismerkord,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/1414,2015-11-24T19:12:09Z,2019-01-18T17:20:09Z,2016-02-04T17:13:32Z,"The swap code incorrectly resulted in nrow and ncol being equal or both being NULL. Using dummy variables will prevent this.

More details about the problem can be seen in hadley/ggplot2#1279
",https://github.com/tidyverse/ggplot2/pull/1414,ggplot2
xfim,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1396,2015-10-30T15:08:29Z,2019-01-18T18:19:57Z,2015-11-09T19:59:24Z,"Very minor change in documentation for facet-wrap.r by copying & pasting from facet-grid.r.
It complements commit  1fba535b06fc20a1e1d79e423f70250e4de77ddc.
",https://github.com/tidyverse/ggplot2/pull/1396,ggplot2
markpayneatwork,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1392,2015-10-27T09:42:19Z,2019-01-18T18:19:55Z,2015-11-09T20:05:17Z,"The borders() function is extremely handy if you are working with geographical data but the specification of the geographical region-of-interest is limited to defining regions via text strings i.e. via the regions="""" argument. However, both the maps::map() function and ggplot2::map_data() accept geographic region specification using xlim and ylim arguments. This modification extemds that functionality to borders()
",https://github.com/tidyverse/ggplot2/pull/1392,ggplot2
lionel-,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/1376,2015-10-16T12:27:28Z,2019-01-18T18:20:01Z,2015-10-16T13:22:54Z,,https://github.com/tidyverse/ggplot2/pull/1376,ggplot2
lionel-,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/1375,2015-10-16T11:27:32Z,2019-01-18T18:20:04Z,2015-10-16T11:35:25Z,"Here you go.

Also I was thinking that switching labels with `facet_grid()` would be clearer if `switch` would take ""rows"" and ""cols"" instead of ""y"" and ""x"". On the other hand this would not make sense for `facet_wrap()`, where we really move the strips near the specified axis, so ""x"" and ""y"" is the best choice there.

Would it be desirable to have different sets of value for `switch` in wrap and grid?
",https://github.com/tidyverse/ggplot2/pull/1375,ggplot2
lionel-,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/1372,2015-10-15T16:22:10Z,2019-01-18T18:20:06Z,2015-10-15T19:55:27Z,"Actually not due to your refactor but to this old regression in #1263
",https://github.com/tidyverse/ggplot2/pull/1372,ggplot2
has2k1,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1368,2015-10-12T22:37:37Z,2019-01-18T18:20:10Z,2015-10-12T22:56:03Z,"Closes #1366
",https://github.com/tidyverse/ggplot2/pull/1368,ggplot2
infotroph,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1365,2015-10-11T19:02:58Z,2019-01-18T19:19:27Z,2015-10-12T13:02:13Z,,https://github.com/tidyverse/ggplot2/pull/1365,ggplot2
fmichonneau,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1360,2015-10-01T14:26:06Z,2019-01-18T19:19:25Z,2015-10-12T16:08:36Z,"By default, `strwrap` destroys whitespace and removes spacing between words in output.

Before this fix:

``` r
> packageStartupMessage(strwrap(""Find out what's changed in ggplot2 at http://github.com/hadley/ggplot2/releases.""))
Find out what's changed in ggplot2 athttp://github.com/hadley/ggplot2/releases.
```

after:

``` r
> packageStartupMessage(strwrap(""Find out what's changed in ggplot2 at http://github.com/hadley/ggplot2/releases."", prefix = "" ""))
 Find out what's changed in ggplot2 at http://github.com/hadley/ggplot2/releases.
```
",https://github.com/tidyverse/ggplot2/pull/1360,ggplot2
dkahle,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1357,2015-09-26T07:07:43Z,2019-01-18T19:19:29Z,2015-09-28T18:05:27Z,"Here's an interesting idea for an alternative to a density plot.  It's several transparent density plots, of varying bandwidths, super-imposed to create a ""smoking"" effect.  Looking around for similar graphics, this appears similar to JMP's ""shadowgram"".  Pics below, they're in the examples.

You might see a better way than doing two geoms, just let me know.  geom_smoke just uses the stat to make a bunch of density estimates and then ..group..'s them.  geom_ribbon won't allow for aesthetics though, so I implemented geom_smoke2, which simply creates a bunch of density layers and so is very slow.  Thoughts?

The stat also likely needs some cleaning...

<img width=""916"" alt=""smoke-basic"" src=""https://cloud.githubusercontent.com/assets/424139/10116237/3ab54c9e-63f3-11e5-84d0-14efa1f488a5.png"">
<img width=""916"" alt=""smoke2-stacked"" src=""https://cloud.githubusercontent.com/assets/424139/10116238/4060501c-63f3-11e5-9628-682a4827bad5.png"">
<img width=""916"" alt=""smoke2-fill"" src=""https://cloud.githubusercontent.com/assets/424139/10116241/4647d162-63f3-11e5-92a0-a8c19aef1c60.png"">
",https://github.com/tidyverse/ggplot2/pull/1357,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1355,2015-09-25T17:02:57Z,2019-01-18T19:19:31Z,2015-09-25T20:40:11Z,"This closes #1349. This change makes it clear that `StatBin` is for continuous x data.
",https://github.com/tidyverse/ggplot2/pull/1355,ggplot2
pmur002,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/1347,2015-09-21T23:53:07Z,2019-01-18T18:19:59Z,2015-10-12T16:09:35Z,"to record library(""ggplot2"") on the graphics engine display list (for replaying recordPlot() in a different session without having to manually reload ggplot2)
",https://github.com/tidyverse/ggplot2/pull/1347,ggplot2
daattali,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1341,2015-09-13T17:24:58Z,2019-01-18T19:19:23Z,2015-10-12T16:10:31Z,,https://github.com/tidyverse/ggplot2/pull/1341,ggplot2
lindbrook,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1336,2015-09-11T03:22:17Z,2019-01-18T19:19:33Z,2015-09-11T11:35:58Z,,https://github.com/tidyverse/ggplot2/pull/1336,ggplot2
pbiecek,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1334,2015-09-10T11:52:53Z,2019-01-18T19:19:35Z,2015-09-10T12:12:18Z,"To make it consistent with JSS style (and springer website)
",https://github.com/tidyverse/ggplot2/pull/1334,ggplot2
hrbrmstr,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1328,2015-09-08T20:29:00Z,2019-01-18T19:19:37Z,2015-09-08T20:44:53Z,"`@inheritParams ggplot2::stat_identity` had a single `:` in two places. Both were fixed.
",https://github.com/tidyverse/ggplot2/pull/1328,ggplot2
lionel-,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1327,2015-09-08T08:50:35Z,2019-01-18T19:19:39Z,2015-09-08T12:13:19Z,"This is useful for creating ggproto objects in other packages.

I think it should be renamed to `set_ggname()`, I can push a commit with the new name if you want.
Also I'd find it clearer if the internal function `empty()` was named `is_empty()`, so we know it's a predicate and not a verb.
",https://github.com/tidyverse/ggplot2/pull/1327,ggplot2
has2k1,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1323,2015-09-03T16:49:41Z,2019-01-18T18:19:47Z,2015-10-12T16:11:04Z,"*R/position-.r
- Wrong call signature

*R/position-fill.r
- Obsolete function `setup_defaults`, probably a refactoring slip up.
- Colliding should be in the per panel, rather than per layer.

*R/position-jitter.r
- Inconsistent call signature name

*R/position-nudge.R
- Inconsistent call signature name

*R/position-stack.r
- Make use of new `setup_data` API
",https://github.com/tidyverse/ggplot2/pull/1323,ggplot2
robertzk,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1321,2015-09-03T14:57:39Z,2019-01-18T19:19:19Z,2015-10-12T16:11:14Z,,https://github.com/tidyverse/ggplot2/pull/1321,ggplot2
lionel-,MEMBER,closed,16,https://github.com/tidyverse/ggplot2/pull/1315,2015-09-01T22:42:25Z,2019-01-18T18:20:12Z,2015-10-12T21:37:44Z,"This adds metadata to the labels: whether they are columns or rows labels, and whether they are generated for a wrap or a grid facet.

I use it to allow `label_bquote()` to take different expressions for rows and columns, and to make the interface of `labeller()` cleaner and more consistent.
",https://github.com/tidyverse/ggplot2/pull/1315,ggplot2
seaaan,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1314,2015-08-31T17:55:13Z,2019-01-18T19:19:41Z,2015-08-31T18:09:54Z,,https://github.com/tidyverse/ggplot2/pull/1314,ggplot2
wch,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/1308,2015-08-31T15:52:37Z,2019-01-18T19:19:21Z,2015-10-12T16:11:46Z,"This makes some ggproto objects in ggplot2 immutable. The exceptions are `Range`, `Scale` and `ScalesList`, because these need to be mutable for ggplot2 to work.

In this implementation, the objects inherit from an `Immutable` ggproto object. It might be slightly more efficient to simply add an `""Immutable""` class attribute to each of the objects (as in `Geom <- ggproto(c(""Geom"", ""Immutable""), ...), but that might be slightly confusing since the S3 ""superclasses"" would differ from the ggproto superclasses.
",https://github.com/tidyverse/ggplot2/pull/1308,ggplot2
has2k1,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1303,2015-08-28T22:18:23Z,2019-01-18T19:19:43Z,2015-08-29T11:16:27Z,"1. Copy
2. Paste
3. Modify*

\* Previously incomplete step, now complete.
",https://github.com/tidyverse/ggplot2/pull/1303,ggplot2
lionel-,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1298,2015-08-27T20:37:00Z,2019-01-18T19:19:45Z,2015-08-27T21:33:43Z,"For #1297
",https://github.com/tidyverse/ggplot2/pull/1298,ggplot2
cpsievert,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1282,2015-08-20T19:54:47Z,2019-01-18T19:19:47Z,2015-08-20T21:58:33Z,,https://github.com/tidyverse/ggplot2/pull/1282,ggplot2
joranE,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1281,2015-08-20T19:50:08Z,2019-01-18T18:19:17Z,2016-01-31T22:06:26Z,"This may be a bad idea for reasons I haven't thought of, but someone asked about it recently and it seemed reasonable to me.

I'm a little uncertain that my reversing of `ticks$.label` is the best way to ensure the color bar and labels are aligned in the right direction, but it seemed to work in all the examples I tried.
",https://github.com/tidyverse/ggplot2/pull/1281,ggplot2
joranE,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1278,2015-08-20T18:49:12Z,2019-01-18T18:20:14Z,2015-10-12T21:33:58Z,"Adds some examples to ?guides for selectively suppressing guides.
",https://github.com/tidyverse/ggplot2/pull/1278,ggplot2
bbrewington,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1272,2015-08-18T18:03:02Z,2019-01-18T19:19:49Z,2015-08-18T19:09:00Z,"Info shown below is from file `geom-path-.r`, line 117

**Original error text:** geom_path: Each group consist of only one observation. Do you need to adjust the group aesthetic?
**Updated error text:** geom_path: Each group consist**s** of only one observation. Do you need to adjust the group aesthetic?
",https://github.com/tidyverse/ggplot2/pull/1272,ggplot2
durtal,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1268,2015-08-17T09:13:47Z,2019-01-18T19:19:51Z,2015-08-17T13:49:45Z,,https://github.com/tidyverse/ggplot2/pull/1268,ggplot2
lionel-,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1266,2015-08-14T20:10:54Z,2019-01-18T19:19:53Z,2015-08-17T13:28:06Z,"Clearer function and argument names in plot-build.r.
",https://github.com/tidyverse/ggplot2/pull/1266,ggplot2
lionel-,MEMBER,closed,16,https://github.com/tidyverse/ggplot2/pull/1265,2015-08-14T01:56:30Z,2019-01-18T18:19:21Z,2015-10-12T16:32:45Z,"So here is a second take at this problem.

I added a `flip` field to Layer objects which is set to `TRUE` whenever a Geom's orientation is not its natural one. Based on this switch we can modify automatically methods and functions in order to swap `x`s and `y`s parameters. This is accomplished with:
- A functional for functions taking a character vector of param names, or a data frame of params
- A factory that transforms layer methods

The factory is very DRY but does not work everywhere. The `draw()` method cannot be handled generically it seems. Therefore I also pass an orientation setting to `geom_params` to adjust the `draw()` methods inside the Geoms themselves.

With this approach, the Positions do not even need to be modified.

If you are ok with this proposal I'll add the other geoms/stats.
",https://github.com/tidyverse/ggplot2/pull/1265,ggplot2
bbolker,CONTRIBUTOR,closed,8,https://github.com/tidyverse/ggplot2/pull/1261,2015-08-12T14:56:18Z,2019-01-18T18:20:16Z,2015-10-12T16:26:59Z,"I believe this is all done (haven't reoxygenized it).  As demonstrated in the example, it's useful when `coord_flip()+ geom_linerange()` is not feasible, e.g. when using `facet_wrap()`.

I'm violating DRY quite a bit here -- it might be better to add an orientation argument to `geom_linerange`?  I'm willing to try that if it's thought to be better, but what's here is reasonably useful as is. 
",https://github.com/tidyverse/ggplot2/pull/1261,ggplot2
jrnold,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1251,2015-08-06T02:08:25Z,2019-01-18T19:19:55Z,2015-08-06T10:20:25Z,,https://github.com/tidyverse/ggplot2/pull/1251,ggplot2
krlmlr,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1236,2015-08-04T09:08:25Z,2019-01-18T19:19:59Z,2015-08-04T11:12:05Z,"- `PANEL` is not taken into account for computing grouping when no `group` aesthetic is set
  - required for #992
  - otherwise, no warning can be given for the following example: `ggplot(expand.grid(x=1:10, y=1:10), aes(x, y)) + geom_boxplot() + facet_wrap(~y)`
- extract constant `NO_PANEL`, set it to -1
  - just like `NO_GROUP`

All tests pass locally.
",https://github.com/tidyverse/ggplot2/pull/1236,ggplot2
jimhester,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/1230,2015-07-31T19:47:44Z,2019-01-18T19:19:57Z,2015-08-04T14:29:55Z,"This is perhaps a silly pull request.  It allows all ggplot2 arguments to be specified as snake_case rather than dot.case.

It retains the existing arguments and backwards compatibility.  Both `devtools::test()` and `vtest::vtest()` pass so no existing code should break.

Basically how this works is to add additional formal snake_case arguments for any existing dot.case arguments (with a default value of NULL) and modifies the existing dot.case formals to be `= snake_case %||% (previous default)`.  Therefore the dot.case argument gets the snake_case value if it is set, otherwise it gets it's old default value.  This is done for both normal functions as well as the ggproto class functions.

All of the modifications are done within `.onAttach()`, so there are no additional NOTEs about documentation mismatches from `R CMD check`.

Running `system.time(load_all())` with  `alias_to_snake_case(""ggplot2"")` included takes 1.390 seconds and commented out takes 0.966 seconds.  I would guess a similar difference would be found on the normal loading times, but I have not explicitly tested it.

I did not add any positive tests for this as I was unsure if it would be accepted, but you can test the functionality using the following code modified from the recent draft chapter programming with ggplot2.

``` r
geom_mean <- function(..., bar_params = list(), errorbar_params = list()) {
  params <- list(...)
  bar_params <- modifyList(params, bar_params)
  errorbar_params  <- modifyList(params, errorbar_params)

  bar <- do.call(""stat_summary"", modifyList(
    list(fun_y = ""mean"", geom = ""bar"", fill = ""grey70""),
    bar_params)
  )
  errorbar <- do.call(""stat_summary"", modifyList(
    list(fun_data = ""mean_cl_normal"", geom = ""errorbar"", width = 0.4),
    errorbar_params)
  )

  list(bar, errorbar)
}

ggplot(mpg, aes(class, cty)) + 
  geom_mean(
    colour = ""steelblue"",
    errorbar_params = list(width = 0.5, size = 1)
  )
ggplot(mpg, aes(class, cty)) + 
  geom_mean(
    bar_params = list(fill = ""steelblue""),
    errorbar_params = list(colour = ""blue"")
  )
```
",https://github.com/tidyverse/ggplot2/pull/1230,ggplot2
jdagilliland,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1229,2015-07-31T13:20:42Z,2019-01-18T19:20:01Z,2015-07-31T17:55:21Z,"The descriptions of the `+` and `%+replace%` operators did not seem to match
the behaviour of the last example on the gg-add docs page; they have been
reworded.

I'm still not sure whether this wording is optimally consistent with how you would like the behaviour of these operators described, but I gave it my best shot. Please let me know if you think this change is worthwhile, or itself in need of changing.
",https://github.com/tidyverse/ggplot2/pull/1229,ggplot2
rcurtin,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1226,2015-07-30T19:03:54Z,2019-01-18T19:20:03Z,2015-07-30T19:11:23Z,"It ain't much of a contribution, but hey, it's something. :)
",https://github.com/tidyverse/ggplot2/pull/1226,ggplot2
lionel-,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/1218,2015-07-29T14:28:24Z,2019-01-18T19:20:07Z,2015-07-29T15:59:19Z,"Sorry about that.
",https://github.com/tidyverse/ggplot2/pull/1218,ggplot2
tklebel,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1217,2015-07-29T09:53:21Z,2019-01-18T19:20:11Z,2015-07-29T10:00:50Z,"Since violin plots are not known in every field of data analysis yet, it could be helpful to include a paper introducing the concept.

Hintze et al. seems to be the first and only paper on this matter: http://amstat.tandfonline.com/doi/abs/10.1080/00031305.1998.10480559
",https://github.com/tidyverse/ggplot2/pull/1217,ggplot2
krlmlr,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1213,2015-07-28T19:14:22Z,2019-01-18T19:20:09Z,2015-07-29T14:05:49Z,"Convenience function to encapsulate the check if the data are grouped. With test.

It still only checks only the first element of the group column, a comment explains why this works.

For #992.

(Sorry for being such a pain, but I really hate to check a vector if checking a value is enough.)
",https://github.com/tidyverse/ggplot2/pull/1213,ggplot2
krlmlr,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/1212,2015-07-28T14:01:13Z,2019-01-18T18:20:08Z,2015-10-12T16:25:50Z,"- Only if there is more than one x value
- With tests

Fixes #992.

Closes #1213 (=includes it).
",https://github.com/tidyverse/ggplot2/pull/1212,ggplot2
krlmlr,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/1211,2015-07-28T10:01:18Z,2019-01-18T19:20:16Z,2015-07-28T13:56:49Z,"to allow distinguishing this case (prerequisite for #992)

This implicitly assumes `plyr::id` doesn't ever return 0. Tests in `plyr` test that sequences created by `id` start at 1, so we're probably safe here.

All tests pass, but I'm not sure if this has any other implications I'm not aware of.
",https://github.com/tidyverse/ggplot2/pull/1211,ggplot2
krlmlr,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1210,2015-07-28T09:55:44Z,2019-01-18T21:01:44Z,2015-07-28T11:56:11Z,"Only two tests needed to be adapted after removing `library(plyr)`
",https://github.com/tidyverse/ggplot2/pull/1210,ggplot2
krlmlr,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1209,2015-07-28T08:02:59Z,2019-01-18T21:01:46Z,2015-07-28T11:55:21Z,"- Includes test.

Fixes #871.
",https://github.com/tidyverse/ggplot2/pull/1209,ggplot2
lionel-,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1208,2015-07-27T22:36:14Z,2019-01-18T21:01:50Z,2015-07-27T23:07:57Z,"Fixes #1170.

I also adjusted the default padding. Before:

![before](https://cloud.githubusercontent.com/assets/4465050/8919535/6b056be8-34c0-11e5-9da2-1f562311e8cb.png)

After:

![after](https://cloud.githubusercontent.com/assets/4465050/8919538/74441650-34c0-11e5-84ad-8a177160a587.png)
",https://github.com/tidyverse/ggplot2/pull/1208,ggplot2
bbolker,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1203,2015-07-25T01:11:57Z,2019-01-18T21:01:58Z,2015-07-27T12:30:01Z,"this is admittedly pretty trivial, but typos bug me ...  I tried to leave the UK/Aus/NZ ""-ise"" endings alone as well as things like ""facetting"" (which according to my North American rules should be ""faceting"") ...
",https://github.com/tidyverse/ggplot2/pull/1203,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/1187,2015-07-21T20:57:04Z,2019-01-18T21:02:16Z,2015-07-21T20:57:19Z,"Fixes #1185.
",https://github.com/tidyverse/ggplot2/pull/1187,ggplot2
bbolker,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/1169,2015-07-20T13:19:51Z,2019-01-18T21:02:02Z,2015-07-23T20:03:04Z,"too much at once here, sorry -- but I hope this is useful.
",https://github.com/tidyverse/ggplot2/pull/1169,ggplot2
joranE,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1165,2015-07-14T16:18:46Z,2019-01-18T21:02:14Z,2015-07-22T20:00:30Z,"A small change to allow for:

```
p <- ggplot(mtcars,aes(x = mpg,y = disp,size = cyl)) + geom_point()
p + scale_size_continuous(guide = guide_legend(override.aes(color = ""red"")))
```
",https://github.com/tidyverse/ggplot2/pull/1165,ggplot2
DanRuderman,CONTRIBUTOR,closed,15,https://github.com/tidyverse/ggplot2/pull/1160,2015-07-10T02:12:30Z,2019-01-18T19:19:17Z,2015-10-12T16:21:10Z,"Violin plots are a nice way to visualize data density, but it is also useful to know where the median and other quantiles lie. Overlaying a box plot can add a lot more than is needed, and it doesn't offer a lot of flexibility in the quantiles to display. This new feature adds horizontal lines to violin plots which mark quantiles specified by the user. In polar plots they are circular arcs, which may or may not be the right behavior.

As an example, this is the visual test:
![violin_quantiles](https://cloud.githubusercontent.com/assets/12703982/8610914/9774dc38-266d-11e5-820d-ca12797c602c.jpg)

Also fixed a documentation issue in utilities.r

This is my first pull request (and I am new to Git to boot), but hopefully I didn't make too many mistakes in the process.

Thanks
Dan
",https://github.com/tidyverse/ggplot2/pull/1160,ggplot2
tmshn,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/1158,2015-07-06T18:34:09Z,2019-01-18T19:20:05Z,2015-07-29T14:10:06Z,"As discussed in issue #102 , it will be nicer if `geom_histogram` can handle the number of bins, not the width.
To achieve it, I added new argument `bins` to `stat_bin`, which denotes number of bins.

This is less prior to `breaks` or `binwidth`, so with these arguments, `bins` will not work.
",https://github.com/tidyverse/ggplot2/pull/1158,ggplot2
ajschumacher,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/1156,2015-07-04T19:46:41Z,2019-01-18T21:02:08Z,2015-07-23T19:53:32Z,"I think this is how this should read, yes?
",https://github.com/tidyverse/ggplot2/pull/1156,ggplot2
NikNakk,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1155,2015-07-03T21:36:09Z,2019-01-18T21:02:12Z,2015-07-23T18:44:49Z,"Updated to correct code to handle formals of anonymous function and zero-length names. This fixes the issue just posted at https://github.com/hadley/ggplot2/issues/1154 and discussed on Stack Overflow at http://stackoverflow.com/questions/31212054/functions-inside-aes .
",https://github.com/tidyverse/ggplot2/pull/1155,ggplot2
felasa,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/1149,2015-06-25T19:31:30Z,2019-01-18T17:19:55Z,2015-07-27T12:58:08Z,"Implements a version of #707
",https://github.com/tidyverse/ggplot2/pull/1149,ggplot2
wch,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/1148,2015-06-24T16:47:27Z,2019-01-18T21:02:18Z,2015-07-06T23:08:55Z,"This is just the start of the conversion to R6.

This example works:

``` R
ggplot(mtcars, aes(wt, mpg)) + geom_text2(label=""x"")
```

Objects like `GeomText` are instantiated at run time (in the call to `Layer$new()`), so that if any external packages inherit from, say, `Geom`, they'll inherit from the current version of ggplot2, not whatever version they were built against.

@hadley, currently the `geom_text2` function doesn't separate the `geom_params` from other `params`, because some of the `geom_params` include properties like `label`, `size`, etc. So I'm letting the `LayerR6$initialize` function sort them out, as was done previously. I think it's a good idea to explicitly sort out the geom params from stat params in the `geom_text2` functions if we can, but it'll require a little work.
",https://github.com/tidyverse/ggplot2/pull/1148,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1139,2015-06-18T14:15:23Z,2019-01-18T21:01:54Z,2015-07-27T12:47:46Z,"Plus minor example and documentation fixes
",https://github.com/tidyverse/ggplot2/pull/1139,ggplot2
jimhester,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1134,2015-06-16T19:59:58Z,2019-01-19T01:02:11Z,2015-06-16T20:26:01Z,"These were found by setting

```
options(warnPartialMatchAttr = TRUE,
    warnPartialMatchDollar = TRUE,
    warn = 2)
```

Using hadley/testthat#269 with `options(""testthat.suppress"" = NULL)` and running
`devtools::test()` and `vtest::vtest()` until there were no more partial
match messages.

There may still be some instances in the code base, but I think this
finds the vast majority.
",https://github.com/tidyverse/ggplot2/pull/1134,ggplot2
Symaxion,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/1133,2015-06-16T16:32:01Z,2019-01-18T21:02:37Z,2015-06-18T18:49:52Z,"This PR adds an aesthetic option `stroke` to `geom_point` that makes it possible to specify the stroke width of point shapes 21-25 (see #1085, I had to resubmit because you can't force push when an issue is closed).
",https://github.com/tidyverse/ggplot2/pull/1133,ggplot2
kferris10,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1132,2015-06-16T15:44:52Z,2019-01-19T01:02:13Z,2015-06-16T15:59:25Z,"Missing \ in the See Also section of ggplot_build
",https://github.com/tidyverse/ggplot2/pull/1132,ggplot2
lionel-,MEMBER,closed,14,https://github.com/tidyverse/ggplot2/pull/1128,2015-06-14T12:41:37Z,2019-01-18T18:19:25Z,2015-06-18T15:18:42Z,"This makes it easy to flip a layout horizontally on a layer basis as opposed to a plot basis (with `coord_flip()`). In addition to being convenient, this allows plots that are not currently possible because `facet_wrap()` does not allow coordinates filpping, or in situations where only some layers should be flipped.
",https://github.com/tidyverse/ggplot2/pull/1128,ggplot2
lionel-,MEMBER,closed,22,https://github.com/tidyverse/ggplot2/pull/1127,2015-06-14T00:46:32Z,2019-01-18T19:20:13Z,2015-07-28T14:41:37Z,"so I finally understood what was the concern in #656. I found a somewhat hacky solution (documented in the source code) that should nevertheless work in most cases.
",https://github.com/tidyverse/ggplot2/pull/1127,ggplot2
tgs,CONTRIBUTOR,closed,16,https://github.com/tidyverse/ggplot2/pull/1126,2015-06-14T00:21:04Z,2019-01-18T21:02:10Z,2015-07-23T19:03:23Z,"With this change, you can specify one set of breaks to `stat_bin2d` without setting the other.  This is particularly useful when binning by date in one dimension, and using a transformed scale in the other dimension.  This way, you don't have to figure out how to reconstruct the default breaks for the transformed scale.  For example:

``` r
breaks <- list( x = sort(unique(movies$year)) - 0.5, y = NA )
g <- ggplot(movies) + aes(x = year, y = length)
g + stat_bin2d(breaks=breaks) + scale_y_log10()
```
",https://github.com/tidyverse/ggplot2/pull/1126,ggplot2
hrbrmstr,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/1123,2015-06-12T01:44:57Z,2019-01-19T01:02:25Z,2015-06-12T19:48:53Z,"The only places `qplot` remains are in:
- `quick-plot.r`
- `translate-qplot-base.r`
- `translate-qplot-ggplot.r`
- `translate-qplot-gpl.r`
- `translate-qplot-lattice.r`
",https://github.com/tidyverse/ggplot2/pull/1123,ggplot2
tdhock,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1121,2015-06-11T21:13:28Z,2019-01-18T21:02:04Z,2015-07-23T20:24:42Z,"This is a cleaner version of https://github.com/hadley/ggplot2/pull/953#issuecomment-111270357
",https://github.com/tidyverse/ggplot2/pull/1121,ggplot2
tgs,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/1118,2015-06-10T15:54:35Z,2019-01-19T01:02:21Z,2015-06-14T00:21:30Z,"I couldn't find an example of this anywhere, and it took me an hour to figure out, so I thought maybe it belonged in the documentation. I'm not sure if anyone else is trying to do this, though.

Here's the image that the added example generates:

![semilog](https://cloud.githubusercontent.com/assets/229502/8087163/5a0a3cd4-0f67-11e5-97f4-9c8bbbcf8e25.png)

And here's the current help page: http://docs.ggplot2.org/current/stat_bin2d.html
",https://github.com/tidyverse/ggplot2/pull/1118,ggplot2
sachsmc,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/1114,2015-06-04T16:30:06Z,2019-01-19T02:09:55Z,2015-06-11T13:08:22Z,"Fixes #1080 
",https://github.com/tidyverse/ggplot2/pull/1114,ggplot2
hrbrmstr,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/1108,2015-05-18T13:37:14Z,2019-01-19T02:09:49Z,2015-06-11T19:39:46Z,"Changed `qplot` examples to regular ggplot calls in the documentation of 5 source files and also made the spaces around ""="" uniform in the examples in those files. I really thought about changing `plyr` usage into `dplyr` calls at the same time but I thought it best to keep the edits focused. If this ends up working OK, I'll make quick work of the rest of it.
",https://github.com/tidyverse/ggplot2/pull/1108,ggplot2
wibeasley,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1100,2015-05-08T12:49:11Z,2019-01-19T02:09:53Z,2015-06-11T19:30:27Z,"https://github.com/Rexamine/stringi/issues/155
",https://github.com/tidyverse/ggplot2/pull/1100,ggplot2
jimhester,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1098,2015-05-07T19:32:42Z,2019-01-19T02:09:57Z,2015-05-07T19:51:30Z,"This will hopefully fix the travis error.
",https://github.com/tidyverse/ggplot2/pull/1098,ggplot2
evolvedmicrobe,NONE,closed,12,https://github.com/tidyverse/ggplot2/pull/1096,2015-05-05T06:17:46Z,2019-01-18T11:29:04Z,2016-01-31T22:06:34Z,"This commit allows geom_dotplot to display color attributes properly
when dots are binned.  Prior to this, if one ran a command such as:

```
ggplot(mtcars, aes(x=factor(cyl), y =mpg, fill=factor(carb), group=factor(cyl))) + geom_dotplot(binaxis=""y"", stackdir=""center"")
```

The dots would be positioned on top of each other, because a ""double
grouping"" was performed where both the fill and the x axis were used to
divide groups.  This change keeps the groups appropriately separated
when the x/y positions are being determined, but still applies separate
coloring to each.

It does this by changing where the fill color is added to the data used
when plotting.  Previously, the data was condensed into bins and a
dataframe where each row represented several dots to be plotted during
the calculate groups step. This condensed data was then re-expanded
with a constant fill color added for each binned group inside the
reparameterise method.  This commit re-expands the data into one line
per dot in the original calculate method, where the appropriate fill
(or other aes) is still available and can be added back in.

I verified that all the original examples for geom_dotplot still behave
as expected, and all tests currently pass.
",https://github.com/tidyverse/ggplot2/pull/1096,ggplot2
ogdenkev,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1092,2015-04-29T14:13:09Z,2019-01-19T02:09:51Z,2015-06-11T19:33:14Z,"This commit adds a new geom, `geom_schematic()` which follows John Tukey's recommendation for balanced schematic plots (see Tukey J. W. (1990) Data-Based Graphics: Visual Display in the Decades to Come. Statistical Science 5(3), 327-339.) This also more closely follows what `bwplot()` does in the `lattice` package and what William Cleveland uses in his book Visualizing Data.

The `geom_schematic()` function started from the `geom_boxplot()` function, and added lines at the upper and lower ends of the whiskers, used a point for the median instead of a line. It also added the aesthetics `whiskers.linetype`, `middle.size`, and `middle.colour` with the default values of `dashed`, `4`, and `NULL`, respectively. The default for `middle.colour` is to use the `colour` aesthetic, but with the option of directly specifying it in the call to `geom_schematic()`. The option for notching was removed, because I didn't think notching would work well with the median as a point.

![rplot](https://cloud.githubusercontent.com/assets/9858547/7392808/2f81e8c0-ee58-11e4-803c-0051fec83741.png)
",https://github.com/tidyverse/ggplot2/pull/1092,ggplot2
kbroman,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1089,2015-04-27T11:54:20Z,2019-01-19T02:09:59Z,2015-04-27T14:21:04Z,"- rectangluar -> rectangular
",https://github.com/tidyverse/ggplot2/pull/1089,ggplot2
veraanadi,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1088,2015-04-25T11:12:30Z,2019-01-19T01:02:27Z,2015-06-12T14:26:15Z,,https://github.com/tidyverse/ggplot2/pull/1088,ggplot2
Symaxion,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/1085,2015-04-15T08:24:32Z,2019-01-19T01:02:15Z,2015-06-11T19:38:28Z,"This PR adds an aesthetic option to `geom_point` and `geom_path` (and its derivatives, such as `geom_line`) to customize the width of the lines drawn (by passing the `linewidth` property). This is implemented by simply delegating to the `lwd` option of the `grid` library.
",https://github.com/tidyverse/ggplot2/pull/1085,ggplot2
tomschloss,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1084,2015-04-13T11:51:06Z,2019-01-19T01:02:01Z,2015-06-18T15:26:07Z,"A very minor change: I've removed tick marks from `theme_minimal()` as I think that is more in keeping with ""minimalism"". The black ticks seemed a little visually unnecessary. 

Incidentally, removing black ticks it also aligns minimal to the default plotly theme.

All good if you don't like the idea.

``` r
qplot(data = mtcars, x = mpg, y = wt) + theme_minimal() 
```

Before:
![before](https://cloud.githubusercontent.com/assets/9009228/7114958/e478eff6-e1da-11e4-87aa-bc586ef6f158.png)

After:
![after](https://cloud.githubusercontent.com/assets/9009228/7114961/eaa73662-e1da-11e4-9913-f4008e215118.png)

Tom
",https://github.com/tidyverse/ggplot2/pull/1084,ggplot2
joranE,CONTRIBUTOR,closed,10,https://github.com/tidyverse/ggplot2/pull/1082,2015-04-02T19:26:45Z,2019-01-18T21:02:29Z,2015-06-18T15:35:18Z,"Some minor changes & clarifications to guides and scales. Main change is the explicit documentation of the inherit.aes, subset and show_guide arguments for geoms, rather than then redirecting people to layer, which has no documentation.
",https://github.com/tidyverse/ggplot2/pull/1082,ggplot2
krlmlr,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/1077,2015-03-31T21:19:55Z,2019-01-18T21:01:48Z,2015-06-11T20:39:21Z,"fixes #943

I have no idea where to plug in a test for this. Perhaps in the examples?
",https://github.com/tidyverse/ggplot2/pull/1077,ggplot2
jiho,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/1076,2015-03-31T11:39:33Z,2019-01-18T21:02:31Z,2015-06-12T12:42:50Z,"The order of colors in particular, and the fact that it cannot be easily
reversed (pending a change in package scales) makes scale_*_distiller
almost useless at the moment.

These are simple fixes and should be easy to pull.
",https://github.com/tidyverse/ggplot2/pull/1076,ggplot2
seaaan,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1071,2015-03-19T22:54:41Z,2019-01-19T02:09:47Z,2015-06-11T19:44:50Z,,https://github.com/tidyverse/ggplot2/pull/1071,ggplot2
charliec443,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1057,2015-02-22T10:05:01Z,2019-01-19T02:09:45Z,2015-06-11T19:45:24Z,,https://github.com/tidyverse/ggplot2/pull/1057,ggplot2
blahah,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/1055,2015-02-19T11:57:22Z,2019-01-19T01:02:31Z,2015-06-11T19:46:08Z,,https://github.com/tidyverse/ggplot2/pull/1055,ggplot2
ajschumacher,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/1053,2015-02-11T21:06:45Z,2019-01-19T02:09:43Z,2015-06-11T19:46:37Z,,https://github.com/tidyverse/ggplot2/pull/1053,ggplot2
beamgau,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1049,2015-01-24T17:57:40Z,2019-01-19T01:02:03Z,2015-06-18T14:31:20Z," to flip the boxplot symbol in the legend. makes legend and boxplot more similar when coord_flip is used to make horizontal boxplots.
",https://github.com/tidyverse/ggplot2/pull/1049,ggplot2
BernhardKonrad,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1040,2015-01-11T18:39:17Z,2019-01-19T02:10:03Z,2015-01-12T13:31:08Z,"Adds a missing markdown code highlighting.
",https://github.com/tidyverse/ggplot2/pull/1040,ggplot2
larkery,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/1036,2014-12-16T16:24:03Z,2019-01-18T21:02:20Z,2015-06-18T14:31:13Z,"This amendment allows stat_binhex to support weighted data by getting the assignment of input points to hexagons out of the hexbin function, and then gluing that to an input weight vector to find a weighted sum for each hexagon.
",https://github.com/tidyverse/ggplot2/pull/1036,ggplot2
setempler,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/1034,2014-12-09T20:43:44Z,2019-01-19T02:09:41Z,2015-06-11T19:51:44Z,"Problem: 'stop' does not separate elements in the dots argument, therefore the error message (R/layer.r line 160f) is clumped:
Reproducible example:

``` R
f <- function (a) ggplot(data.frame(x=rnorm(10),y=1:10), aes_q(x=quote(x),y=quote(y),color=a)) + geom_point()
f(1) # runs fine
f(1:3) # returns the error message:
Error: Aesthetics must either be length one, or the same length as the dataProblems:1:3

The fix would result in
...
f(1:3)
Error: Aesthetics must either be length one, or the same length as the data
Problems: 1:3
```
",https://github.com/tidyverse/ggplot2/pull/1034,ggplot2
BernhardKonrad,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1033,2014-12-04T09:43:32Z,2019-01-19T02:09:39Z,2015-06-11T19:52:57Z,,https://github.com/tidyverse/ggplot2/pull/1033,ggplot2
xalexander,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/1030,2014-11-26T08:52:34Z,2019-01-19T02:10:05Z,2014-11-26T13:49:51Z,,https://github.com/tidyverse/ggplot2/pull/1030,ggplot2
bleutner,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/1024,2014-10-29T18:10:03Z,2019-01-19T01:02:17Z,2015-06-11T19:53:58Z,"Hi,

I'd like to suggest to expand the functionality of fortify to Raster\* objects from the raster package. Since rasters are often very large (>memory) they should be subsampled for efficient plotting. This is implemented in the raster package for calls to raster::plot but it would be nice to have a fortify method for use with ggplot2. 

There are three classes RasterLayer, RasterBrick and RasterStack which can all be subsampled in the same way using a regular grid.The maximal number of pixels to plot can be specified and defaults to 500000.

Fortify returns a data.frame with pixel coordinates and corresponding raster values intended for use with geom_raster.

What do you think?
Benjamin
",https://github.com/tidyverse/ggplot2/pull/1024,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1018,2014-10-05T22:39:08Z,2019-01-19T01:02:36Z,2015-06-11T19:54:21Z,list(),https://github.com/tidyverse/ggplot2/pull/1018,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1017,2014-10-05T22:12:02Z,2019-01-19T01:02:33Z,2015-06-11T19:55:59Z,list(),https://github.com/tidyverse/ggplot2/pull/1017,ggplot2
lionel-,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/1016,2014-10-03T16:30:01Z,2019-01-18T21:02:00Z,2015-06-18T19:05:14Z,"This is a new position proto for binary data. It bounds the jittering inside the data range, which produces nicer logistic regression plots.

![rplot2](https://cloud.githubusercontent.com/assets/4465050/4509665/d84209ec-4b22-11e4-810f-a684b1819960.png)
",https://github.com/tidyverse/ggplot2/pull/1016,ggplot2
BrianDiggs,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1011,2014-09-17T23:25:46Z,2019-01-18T21:02:06Z,2015-07-23T20:17:39Z,"`stat_function` currently computes the function with the transformed
(not original data) values. This causes the values to be wrong if
a different scale, other than continuous, is used.

See http://stackoverflow.com/q/9382032/892313 for an example
of this.
",https://github.com/tidyverse/ggplot2/pull/1011,ggplot2
jimhester,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/1010,2014-09-17T17:16:19Z,2019-01-19T01:02:59Z,2015-06-11T20:01:43Z,"missing an s for the scales package.

I did not rebuild the documentation, this fix won't go into effect until then.
",https://github.com/tidyverse/ggplot2/pull/1010,ggplot2
jiho,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/1008,2014-09-11T10:22:45Z,2019-01-19T01:02:29Z,2015-06-11T20:02:51Z,"Those lists are standard but do not have a specific class. There is no way to
make have this method be called on these lists only but great care is taken to
check that the list is indeed well formed before proceeding with the
conversion.

Many functions producing 2D results (interpolation, re-griding of spatial
data, heatmaps, etc.) produce such x, y, z lists because they are directly
plot-able with image() or persp(). This method makes it easy to use ggplot
straight on the output of such functions.
",https://github.com/tidyverse/ggplot2/pull/1008,ggplot2
mobiusklein,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/1007,2014-09-11T01:37:11Z,2019-01-19T01:02:57Z,2015-06-11T20:03:06Z,"There were typos in `stat_summary2d` and `stat_summary_hex` roxygen2 title tags, misspelling function _funciton_. 
",https://github.com/tidyverse/ggplot2/pull/1007,ggplot2
lselzer,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/1002,2014-08-31T23:36:35Z,2019-01-19T01:02:55Z,2015-06-11T20:03:19Z,"I created `fortify.glm` because at present `glm` models are handled by `fortify.lm`. This doesn't allow to change the `.fitted` values from `link` (the default), to `response` or `terms`.
",https://github.com/tidyverse/ggplot2/pull/1002,ggplot2
pengyu,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/995,2014-08-08T03:54:43Z,2019-01-19T01:02:05Z,2015-06-18T14:30:27Z,"Added ..Name to each prototype so that str.proto() can show the names correctly. For example, the following is what the output should look like using this commit.

```
> library(proto)
> library(ggplot2)
> p=ggplot(
+   data=data.frame(x = rep(1:10, each = 2))
+   , mapping=aes(x)
+   ) + stat_bin(binwidth = 1)
> str(ggplot_build(p))
List of 3
 $ data :List of 1
  ..$ :'data.frame':    11 obs. of  12 variables:
  .. ..$ y       : num [1:11] 0 2 2 2 2 2 2 2 2 2 ...
  .. ..$ count   : num [1:11] 0 2 2 2 2 2 2 2 2 2 ...
  .. ..$ x       : num [1:11] 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 ...
  .. ..$ ndensity: num [1:11] 0 1 1 1 1 1 1 1 1 1 ...
  .. ..$ ncount  : num [1:11] 0 1 1 1 1 1 1 1 1 1 ...
  .. ..$ density : num [1:11] 0 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 ...
  .. ..$ PANEL   : int [1:11] 1 1 1 1 1 1 1 1 1 1 ...
  .. ..$ group   : int [1:11] 1 1 1 1 1 1 1 1 1 1 ...
  .. ..$ ymin    : num [1:11] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..$ ymax    : num [1:11] 0 2 2 2 2 2 2 2 2 2 ...
  .. ..$ xmin    : num [1:11] 0 1 2 3 4 5 6 7 8 9 ...
  .. ..$ xmax    : num [1:11] 1 2 3 4 5 6 7 8 9 10 ...
 $ panel:List of 5
  ..$ layout  :'data.frame':    1 obs. of  5 variables:
  .. ..$ PANEL  : int 1
  .. ..$ ROW    : int 1
  .. ..$ COL    : int 1
  .. ..$ SCALE_X: int 1
  .. ..$ SCALE_Y: int 1
  ..$ shrink  : logi TRUE
  ..$ x_scales:List of 1
  .. ..$ :List of 17
  .. .. ..$ call        : language continuous_scale(aesthetics = c(""x"", ""xmin"", ""xmax"", ""xend"", ""xintercept""), scale_name = ""position_c"",      palette = identity, expand = expand, guide = ""none"")
  .. .. ..$ aesthetics  : chr [1:5] ""x"" ""xmin"" ""xmax"" ""xend"" ...
  .. .. ..$ scale_name  : chr ""position_c""
  .. .. ..$ palette     :function (x)  
  .. .. ..$ range       :Reference class 'Continuous' [package ""scales""] with 1 fields
  .. .. .. ..$ range: num [1:2] 0 11
  .. .. .. ..and 15 methods, of which 3 are possibly relevant:
  .. .. .. ..  initialize, reset, train
  .. .. ..$ limits      : NULL
  .. .. ..$ trans       :List of 6
  .. .. .. ..$ name     : chr ""identity""
  .. .. .. ..$ transform:function (x)  
  .. .. .. ..$ inverse  :function (x)  
  .. .. .. ..$ breaks   :function (x)  
  .. .. .. ..$ format   :function (x)  
  .. .. .. ..$ domain   : num [1:2] -Inf Inf
  .. .. .. ..- attr(*, ""class"")= chr ""trans""
  .. .. ..$ na.value    : num NA
  .. .. ..$ expand      : list()
  .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. ..$ rescaler    :function (x, to = c(0, 1), from = range(x, na.rm = TRUE))  
  .. .. ..$ oob         :function (x, range = c(0, 1), only.finite = TRUE)  
  .. .. ..$ name        : NULL
  .. .. ..$ breaks      : list()
  .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. ..$ minor_breaks: list()
  .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. ..$ labels      : list()
  .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. ..$ legend      : NULL
  .. .. ..$ guide       : chr ""none""
  .. .. ..- attr(*, ""class"")= chr [1:3] ""position_c"" ""continuous"" ""scale""
  ..$ y_scales:List of 1
  .. ..$ :List of 17
  .. .. ..$ call        : language continuous_scale(aesthetics = c(""y"", ""ymin"", ""ymax"", ""yend"", ""yintercept"", ""ymin_final"", ""ymax_final""),      scale_name = ""position_c"", palette = identity, expand = expand, guide = ""none"")
  .. .. ..$ aesthetics  : chr [1:7] ""y"" ""ymin"" ""ymax"" ""yend"" ...
  .. .. ..$ scale_name  : chr ""position_c""
  .. .. ..$ palette     :function (x)  
  .. .. ..$ range       :Reference class 'Continuous' [package ""scales""] with 1 fields
  .. .. .. ..$ range: num [1:2] 0 2
  .. .. .. ..and 15 methods, of which 3 are possibly relevant:
  .. .. .. ..  initialize, reset, train
  .. .. ..$ limits      : NULL
  .. .. ..$ trans       :List of 6
  .. .. .. ..$ name     : chr ""identity""
  .. .. .. ..$ transform:function (x)  
  .. .. .. ..$ inverse  :function (x)  
  .. .. .. ..$ breaks   :function (x)  
  .. .. .. ..$ format   :function (x)  
  .. .. .. ..$ domain   : num [1:2] -Inf Inf
  .. .. .. ..- attr(*, ""class"")= chr ""trans""
  .. .. ..$ na.value    : num NA
  .. .. ..$ expand      : list()
  .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. ..$ rescaler    :function (x, to = c(0, 1), from = range(x, na.rm = TRUE))  
  .. .. ..$ oob         :function (x, range = c(0, 1), only.finite = TRUE)  
  .. .. ..$ name        : NULL
  .. .. ..$ breaks      : list()
  .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. ..$ minor_breaks: list()
  .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. ..$ labels      : list()
  .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. ..$ legend      : NULL
  .. .. ..$ guide       : chr ""none""
  .. .. ..- attr(*, ""class"")= chr [1:3] ""position_c"" ""continuous"" ""scale""
  ..$ ranges  :List of 1
  .. ..$ :List of 12
  .. .. ..$ x.range       : num [1:2] -0.55 11.55
  .. .. ..$ x.labels      : chr [1:4] ""0"" ""3"" ""6"" ""9""
  .. .. ..$ x.major       : num [1:4] 0.0455 0.2934 0.5413 0.7893
  .. .. ..$ x.minor       : num [1:8] 0.0455 0.1694 0.2934 0.4174 0.5413 ...
  .. .. ..$ x.major_source: num [1:4] 0 3 6 9
  .. .. ..$ x.minor_source: num [1:8] 0 1.5 3 4.5 6 7.5 9 10.5
  .. .. ..$ y.range       : num [1:2] -0.1 2.1
  .. .. ..$ y.labels      : chr [1:5] ""0.0"" ""0.5"" ""1.0"" ""1.5"" ...
  .. .. ..$ y.major       : num [1:5] 0.0455 0.2727 0.5 0.7273 0.9545
  .. .. ..$ y.minor       : num [1:9] 0.0455 0.1591 0.2727 0.3864 0.5 ...
  .. .. ..$ y.major_source: num [1:5] 0 0.5 1 1.5 2
  .. .. ..$ y.minor_source: num [1:9] 0 0.25 0.5 0.75 1 1.25 1.5 1.75 2
  ..- attr(*, ""class"")= chr ""panel""
 $ plot :List of 9
  ..$ data       :'data.frame': 20 obs. of  1 variable:
  .. ..$ x: int [1:20] 1 1 2 2 3 3 4 4 5 5 ...
  ..$ layers     :List of 1
  .. ..$ :proto object 
 .. .. .. $ geom_params: Named list() 
 .. .. .. $ mapping    : NULL 
 .. .. .. $ stat_params:List of 6 
 .. .. ..  ..$ width   : num 0.9 
 .. .. ..  ..$ drop    : logi FALSE 
 .. .. ..  ..$ right   : logi FALSE 
 .. .. ..  ..$ binwidth: num 1 
 .. .. ..  ..$ origin  : NULL 
 .. .. ..  ..$ breaks  : NULL 
 .. .. .. $ stat       :proto StatBin  
 .. .. .. .. $ calculate_groups:function (., data, ...)    
 .. .. .. .. $ objname         : chr ""bin""  
 .. .. .. .. $ default_aes     :function (.)    
 .. .. .. .. $ default_geom    :function (.)    
 .. .. .. .. $ calculate       :function (., data, scales, binwidth = NULL, origin = NULL, breaks = NULL, width = 0.9, drop = FALSE,   
    right = FALSE, ...)    
 .. .. .. .. $ required_aes    : chr ""x""  
 .. .. .. .. $ informed        : logi FALSE  
 .. .. ..  ..parent: proto Stat  
 .. .. .. .. .. $ class           :function (.)    
 .. .. .. .. .. $ parameters      :function (.)    
 .. .. .. .. .. $ calculate_groups:function (., data, scales, ...)    
 .. .. .. .. .. $ aesthetics      : list()  
 .. .. .. .. .. $ retransform     : logi TRUE  
 .. .. .. .. .. $ objname         : chr """"  
 .. .. .. .. .. $ pprint          :function (., newline = TRUE)    
 .. .. .. .. .. $ default_aes     :function (.)    
 .. .. .. .. .. $ desc            : chr """"  
 .. .. .. .. .. $ default_geom    :function (.)    
 .. .. .. .. .. $ calculate       :function (., data, scales, ...)    
 .. .. .. .. .. $ default_pos     :function (.)    
 .. .. .. .. .. $ required_aes    : NULL  
 .. .. .. .. .. $ new             :function (., mapping = aes(), data = NULL, geom = NULL, position = NULL, ...)    
 .. .. .. .. .. parent: proto TopLevel  
 .. .. .. .. .. .. $ bolus   :function (.)    
 .. .. .. .. .. .. $ my_names:function (.)    
 .. .. .. .. .. .. $ params  :function (.)    
 .. .. .. .. .. .. $ find_all:function (., only.documented = FALSE)    
 .. .. .. .. .. .. $ hash    :function (., ...)    
 .. .. .. .. .. .. $ myName  :function (.)    
 .. .. .. .. .. .. $ find    :function (., name)    
 .. .. .. .. .. .. $ my_name :function (., prefix = TRUE)    
 .. .. .. .. .. .. $ settings:function (.)    
 .. .. .. $ inherit.aes: logi TRUE 
 .. .. .. $ geom       :proto GeomBar  
 .. .. .. .. $ default_stat  :function (.)    
 .. .. .. .. $ reparameterise:function (., df, params)    
 .. .. .. .. $ objname       : chr ""bar""  
 .. .. .. .. $ default_aes   :function (.)    
 .. .. .. .. $ draw_groups   :function (., data, scales, coordinates, ...)    
 .. .. .. .. $ guide_geom    :function (.)    
 .. .. .. .. $ default_pos   :function (.)    
 .. .. .. .. $ required_aes  : chr ""x""  
 .. .. ..  ..parent: proto Geom  
 .. .. .. .. .. $ draw          :function (...)    
 .. .. .. .. .. $ class         :function (.)    
 .. .. .. .. .. $ parameters    :function (.)    
 .. .. .. .. .. $ reparameterise:function (., data, params)    
 .. .. .. .. .. $ pprint        :function (., newline = TRUE)    
 .. .. .. .. .. $ default_aes   :function (.)    
 .. .. .. .. .. $ draw_groups   :function (., data, scales, coordinates, ...)    
 .. .. .. .. .. $ guide_geom    :function (.)    
 .. .. .. .. .. $ default_pos   :function (.)    
 .. .. .. .. .. $ required_aes  : NULL  
 .. .. .. .. .. $ new           :function (., mapping = NULL, data = NULL, stat = NULL, position = NULL, ...)    
 .. .. .. .. .. parent: proto TopLevel  
 .. .. .. .. .. .. $ bolus   :function (.)    
 .. .. .. .. .. .. $ my_names:function (.)    
 .. .. .. .. .. .. $ params  :function (.)    
 .. .. .. .. .. .. $ find_all:function (., only.documented = FALSE)    
 .. .. .. .. .. .. $ hash    :function (., ...)    
 .. .. .. .. .. .. $ myName  :function (.)    
 .. .. .. .. .. .. $ find    :function (., name)    
 .. .. .. .. .. .. $ my_name :function (., prefix = TRUE)    
 .. .. .. .. .. .. $ settings:function (.)    
 .. .. .. $ position   :proto object  
 .. .. .. .. $ width : NULL  
 .. .. .. .. $ height: NULL  
 .. .. ..  ..parent: proto PositionStack  
 .. .. .. .. .. $ adjust :function (., data)    
 .. .. .. .. .. $ objname: chr ""stack""  
 .. .. .. .. .. parent: proto Position  
 .. .. .. .. .. .. $ adjust    :function (., data, scales, ...)    
 .. .. .. .. .. .. $ class     :function (.)    
 .. .. .. .. .. .. $ parameters:function (.)    
 .. .. .. .. .. .. $ width     : NULL  
 .. .. .. .. .. .. $ pprint    :function (., newline = TRUE)    
 .. .. .. .. .. .. $ height    : NULL  
 .. .. .. .. .. .. $ new       :function (., width = NULL, height = NULL)    
 .. .. .. .. .. .. parent: proto TopLevel  
 .. .. .. .. .. .. .. $ bolus   :function (.)    
 .. .. .. .. .. .. .. $ my_names:function (.)    
 .. .. .. .. .. .. .. $ params  :function (.)    
 .. .. .. .. .. .. .. $ find_all:function (., only.documented = FALSE)    
 .. .. .. .. .. .. .. $ hash    :function (., ...)    
 .. .. .. .. .. .. .. $ myName  :function (.)    
 .. .. .. .. .. .. .. $ find    :function (., name)    
 .. .. .. .. .. .. .. $ my_name :function (., prefix = TRUE)    
 .. .. .. .. .. .. .. $ settings:function (.)    
 .. .. .. $ subset     : NULL 
 .. .. .. $ data       : list() 
 .. .. ..  ..- attr(*, ""class"")= chr ""waiver"" 
 .. .. .. $ show_guide : logi NA 
  ..$ scales     :Reference class 'Scales' [package ""ggplot2""] with 1 fields
  .. ..$ scales:List of 2
  .. .. ..$ :List of 17
  .. .. .. ..$ call        : language continuous_scale(aesthetics = c(""x"", ""xmin"", ""xmax"", ""xend"", ""xintercept""), scale_name = ""position_c"",      palette = identity, expand = expand, guide = ""none"")
  .. .. .. ..$ aesthetics  : chr [1:5] ""x"" ""xmin"" ""xmax"" ""xend"" ...
  .. .. .. ..$ scale_name  : chr ""position_c""
  .. .. .. ..$ palette     :function (x)  
  .. .. .. ..$ range       :Reference class 'Continuous' [package ""scales""] with 1 fields
  .. .. .. .. ..$ range: NULL
  .. .. .. .. ..and 15 methods, of which 3 are possibly relevant:
  .. .. .. .. ..  initialize, reset, train
  .. .. .. ..$ limits      : NULL
  .. .. .. ..$ trans       :List of 6
  .. .. .. .. ..$ name     : chr ""identity""
  .. .. .. .. ..$ transform:function (x)  
  .. .. .. .. ..$ inverse  :function (x)  
  .. .. .. .. ..$ breaks   :function (x)  
  .. .. .. .. ..$ format   :function (x)  
  .. .. .. .. ..$ domain   : num [1:2] -Inf Inf
  .. .. .. .. ..- attr(*, ""class"")= chr ""trans""
  .. .. .. ..$ na.value    : num NA
  .. .. .. ..$ expand      : list()
  .. .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. .. ..$ rescaler    :function (x, to = c(0, 1), from = range(x, na.rm = TRUE))  
  .. .. .. ..$ oob         :function (x, range = c(0, 1), only.finite = TRUE)  
  .. .. .. ..$ name        : NULL
  .. .. .. ..$ breaks      : list()
  .. .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. .. ..$ minor_breaks: list()
  .. .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. .. ..$ labels      : list()
  .. .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. .. ..$ legend      : NULL
  .. .. .. ..$ guide       : chr ""none""
  .. .. .. ..- attr(*, ""class"")= chr [1:3] ""position_c"" ""continuous"" ""scale""
  .. .. ..$ :List of 17
  .. .. .. ..$ call        : language continuous_scale(aesthetics = c(""y"", ""ymin"", ""ymax"", ""yend"", ""yintercept"", ""ymin_final"", ""ymax_final""),      scale_name = ""position_c"", palette = identity, expand = expand, guide = ""none"")
  .. .. .. ..$ aesthetics  : chr [1:7] ""y"" ""ymin"" ""ymax"" ""yend"" ...
  .. .. .. ..$ scale_name  : chr ""position_c""
  .. .. .. ..$ palette     :function (x)  
  .. .. .. ..$ range       :Reference class 'Continuous' [package ""scales""] with 1 fields
  .. .. .. .. ..$ range: NULL
  .. .. .. .. ..and 15 methods, of which 3 are possibly relevant:
  .. .. .. .. ..  initialize, reset, train
  .. .. .. ..$ limits      : NULL
  .. .. .. ..$ trans       :List of 6
  .. .. .. .. ..$ name     : chr ""identity""
  .. .. .. .. ..$ transform:function (x)  
  .. .. .. .. ..$ inverse  :function (x)  
  .. .. .. .. ..$ breaks   :function (x)  
  .. .. .. .. ..$ format   :function (x)  
  .. .. .. .. ..$ domain   : num [1:2] -Inf Inf
  .. .. .. .. ..- attr(*, ""class"")= chr ""trans""
  .. .. .. ..$ na.value    : num NA
  .. .. .. ..$ expand      : list()
  .. .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. .. ..$ rescaler    :function (x, to = c(0, 1), from = range(x, na.rm = TRUE))  
  .. .. .. ..$ oob         :function (x, range = c(0, 1), only.finite = TRUE)  
  .. .. .. ..$ name        : NULL
  .. .. .. ..$ breaks      : list()
  .. .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. .. ..$ minor_breaks: list()
  .. .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. .. ..$ labels      : list()
  .. .. .. .. ..- attr(*, ""class"")= chr ""waiver""
  .. .. .. ..$ legend      : NULL
  .. .. .. ..$ guide       : chr ""none""
  .. .. .. ..- attr(*, ""class"")= chr [1:3] ""position_c"" ""continuous"" ""scale""
  .. ..and 21 methods, of which 9 are possibly relevant:
  .. ..  add, clone, find, get_scales, has_scale, initialize, input, n, non_position_scales
  ..$ mapping    :List of 1
  .. ..$ x: symbol x
  ..$ theme      : list()
  ..$ coordinates:List of 1
  .. ..$ limits:List of 2
  .. .. ..$ x: NULL
  .. .. ..$ y: NULL
  .. ..- attr(*, ""class"")= chr [1:2] ""cartesian"" ""coord""
  ..$ facet      :List of 1
  .. ..$ shrink: logi TRUE
  .. ..- attr(*, ""class"")= chr [1:2] ""null"" ""facet""
  ..$ plot_env   :<environment: R_GlobalEnv> 
  ..$ labels     :List of 2
  .. ..$ x: chr ""x""
  .. ..$ y: chr ""count""
  ..- attr(*, ""class"")= chr [1:2] ""gg"" ""ggplot""
> 
```
",https://github.com/tidyverse/ggplot2/pull/995,ggplot2
noamross,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/993,2014-08-06T02:46:43Z,2019-01-18T21:02:43Z,2015-06-18T16:13:03Z,"A new theme option, `panel.ontop`, places the background objects (panel, gridlines), on _top_ of the
data in the plot if set to `TRUE`.  This allows one to place gridlines over the data.  One would typically also include a blank or transparent panel in the theme.

This is implemented by changes in facet_panels.\* functions, changing the ordering of layers depending on the value of `theme$panel.ontop`.  `add_theme` was also changed to allow for logical theme elements.

This is a simple implementation.  A more advanced one would allow gridlines to be placed on top of data while keeping the panel below data.

Updated `theme()` documentation included via roxygen 4.0.1.

Tests passed with the following exception. which I believe is unrelated:

```
Stats : .Error in predLoess(y, x, newx, s, weights, pars$robust, pars$span, pars$degree,  : 
  NA/NaN/Inf in foreign function call (arg 5)
In addition: Warning message:
In max(panels$ROW) : no non-missing arguments to max; returning -Inf
```

Fixes #551
",https://github.com/tidyverse/ggplot2/pull/993,ggplot2
xsaintmleux,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/984,2014-07-09T20:05:47Z,2019-01-19T01:02:07Z,2015-06-18T14:29:28Z,"...it is prior to calling calculate_stats, to get info about each individual data point (e.g. which panel is it on?)
",https://github.com/tidyverse/ggplot2/pull/984,ggplot2
mkcor,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/983,2014-07-09T18:49:15Z,2019-01-19T01:02:41Z,2015-06-11T21:09:44Z,"Stacking works fine and as expected whenever `ymin` values are greater than or equal to 0.
And stacking does not really make sense if `ymin < 0`, indeed.
",https://github.com/tidyverse/ggplot2/pull/983,ggplot2
tsibley,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/982,2014-07-01T17:46:26Z,2019-01-19T01:02:37Z,2015-06-11T20:18:57Z,,https://github.com/tidyverse/ggplot2/pull/982,ggplot2
jiho,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/976,2014-06-17T15:48:47Z,2019-01-18T21:02:33Z,2015-06-12T12:42:03Z,list(),https://github.com/tidyverse/ggplot2/pull/976,ggplot2
veraanadi,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/975,2014-06-16T10:17:09Z,2019-01-19T02:10:01Z,2015-04-25T11:18:44Z,"geom_curve adds curved lines to a plot, similar to geom_segment adding straight lines.  
",https://github.com/tidyverse/ggplot2/pull/975,ggplot2
lionel-,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/974,2014-06-15T08:24:17Z,2019-01-18T21:02:39Z,2015-06-18T18:34:15Z,"This implements a `switch_strips` argument to `facet_wrap` and `facet_grid`, which can be set to `x`, `y` or `both` (the latter only for grids). This allows to display the facet strips near the axes. They then act as axes subtitles. The padding between the switched strips and their corresponding axes can be adjusted through a new theme setting.

Displaying the facet titles near the axes especially makes sense when the facet title directly characterize a change in the axis (for example, a transformation, a different measure, etc). This should be typically used in conjunction with a theme without boxes around the strips. I go over this in the updated documentation.

A grid facetting with strips switched to both axes:
![facet1](https://cloud.githubusercontent.com/assets/4465050/3280482/1c1e20c4-f466-11e3-8718-a9dcbd88b551.png)

A wrap facetting with free scales and strips switched to the x axis:
![facet2](https://cloud.githubusercontent.com/assets/4465050/3280481/1c1dcd0e-f466-11e3-9ae3-403ca7b3d9a3.png)
",https://github.com/tidyverse/ggplot2/pull/974,ggplot2
baptiste,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/970,2014-06-02T23:34:55Z,2019-01-18T21:02:25Z,2015-06-18T14:29:14Z,"optional by-pass of ggsave checks that an object of class ggplot is being recorded. 
In addition, a grid.draw method is defined, rather than calling print()
directly, to allow other grobs such as modified gtables to be saved to a device with the same convenience.
",https://github.com/tidyverse/ggplot2/pull/970,ggplot2
lionel-,MEMBER,closed,15,https://github.com/tidyverse/ggplot2/pull/969,2014-06-01T11:23:57Z,2019-01-18T21:01:52Z,2015-07-27T19:59:41Z,"The difference between setting the limits through a coordinate system or via a scale is central to ggplot but the two procedures are not consistent with each other. Compared to scales, the coord functions lack an expand argument. More importantly, they do not apply the default expansion and the same plot will look different in function of which method was used to set limits.

This pull request implements `xexpand` and `yexpand` arguments for coord functions, with the same default expansion as for the scales.

Since setting the limits through coord is symmetric to setting the limits with scales, it should happen in the same place in the code. Furthermore, this allows to know if the scale is continuous or discrete thanks to the scale object being passed along. To make this possible, I changed the coord object to reflect the scale object structure. Coord objects now contains two lists named `x` and `y`, each containing `expand` and limits. In order to make the difference between passing the whole coord object and passing the x or y component, I added a dot to `coord`. When a function receives a `.coord`, we know it is the x or y component of a coord object.

One difficulty that I encountered while checking that everything was ok, is that coord_polar does not have the x and y components. And it needs special treatment for the default expansion, which depends on theta being equal to ""x"" or ""y"".  My solution was to add x and y objects, containing theta, with class set to ""polar"" so that `coord_expand_defaults` dispatches correctly the .coord object to `coord_expand_defaults.polar`.
",https://github.com/tidyverse/ggplot2/pull/969,ggplot2
croach,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/968,2014-05-24T19:31:43Z,2019-01-19T01:02:53Z,2015-06-11T20:25:23Z,"The URL for the sample chapter on the qplot function in both the R docs and the man docs were pointing to an old, no longer available URL. I've updated the documentation to point to the latest URL.
",https://github.com/tidyverse/ggplot2/pull/968,ggplot2
tonytonov,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/965,2014-05-21T09:55:59Z,2019-01-19T01:02:19Z,2015-06-11T20:26:26Z,,https://github.com/tidyverse/ggplot2/pull/965,ggplot2
joey711,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/964,2014-05-17T19:48:55Z,2019-01-19T01:02:47Z,2015-06-11T20:26:33Z,"""estimatation"" --> ""estimation""

Only fixed the roxygen header. Would need to rebuild the doc itself.
",https://github.com/tidyverse/ggplot2/pull/964,ggplot2
richierocks,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/962,2014-05-11T08:50:57Z,2019-01-19T01:02:09Z,2015-06-18T13:40:06Z,"As discussed in issue [#801](https://github.com/hadley/ggplot2/issues/801), `facet_wrap` doesn't properly check the `nrow` and `ncol` arguments, particularly negative values.

I've added a `sanitise_dim` function (plus some tests) to deal with this.
",https://github.com/tidyverse/ggplot2/pull/962,ggplot2
imanuelcostigan,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/960,2014-05-05T05:54:58Z,2019-01-19T01:02:51Z,2015-06-11T20:29:17Z,,https://github.com/tidyverse/ggplot2/pull/960,ggplot2
gokceneraslan,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/959,2014-05-03T07:07:56Z,2019-01-19T01:02:49Z,2015-06-11T20:29:25Z,,https://github.com/tidyverse/ggplot2/pull/959,ggplot2
gokceneraslan,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/958,2014-05-01T19:51:41Z,2019-01-19T20:52:05Z,2014-05-03T07:09:00Z,,https://github.com/tidyverse/ggplot2/pull/958,ggplot2
tonytonov,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/955,2014-04-28T13:07:10Z,2019-01-19T20:52:03Z,2014-05-21T09:52:52Z,,https://github.com/tidyverse/ggplot2/pull/955,ggplot2
tdhock,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/953,2014-04-25T21:20:10Z,2019-01-19T01:02:39Z,2015-06-11T21:17:52Z,"This allows support for non-standard theme options, which would close

https://github.com/hadley/ggplot2/issues/938
",https://github.com/tidyverse/ggplot2/pull/953,ggplot2
BrianDiggs,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/952,2014-04-24T19:53:18Z,2019-01-18T21:02:41Z,2015-06-18T13:33:09Z,"Resubmission of #823 
",https://github.com/tidyverse/ggplot2/pull/952,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/951,2014-04-24T19:32:18Z,2019-01-19T01:02:45Z,2015-06-11T20:31:58Z,"Resubmission of #847
",https://github.com/tidyverse/ggplot2/pull/951,ggplot2
BrianDiggs,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/950,2014-04-24T19:22:02Z,2019-01-18T21:02:22Z,2015-06-23T12:08:48Z,"Fixes bug where `xend` and `yend` were not passed along
as coordinates for transformation within `annotate`. This
led to the end of segments not appearing in the correct
location when a transformation was involved with one of the
coordinate scales.
",https://github.com/tidyverse/ggplot2/pull/950,ggplot2
sebkopf,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/949,2014-04-24T06:46:55Z,2019-01-19T19:36:44Z,2014-04-24T11:40:44Z,"this might not be worth a pull request but there's a little bit of syntax trouble in an example in the recent merge for the new labeller function that seems to make the Travis CI build fail, i just stumbled across it trying to figure out if anything in my own pull request was the issue and figured it would be a quick merge if wanted
",https://github.com/tidyverse/ggplot2/pull/949,ggplot2
ThierryO,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/946,2014-04-17T08:03:24Z,2019-01-19T19:36:42Z,2014-04-23T20:00:21Z,"Solves https://github.com/hadley/ggplot2/issues/757
",https://github.com/tidyverse/ggplot2/pull/946,ggplot2
tonytonov,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/945,2014-04-16T08:00:19Z,2019-01-19T19:36:40Z,2014-04-17T16:55:09Z,"`deps = T` changed to `dep = T`, fixing ""unused argument"" error. The full parameter name with the default value is `dependencies = NA`, according to the documentation.
",https://github.com/tidyverse/ggplot2/pull/945,ggplot2
sebkopf,CONTRIBUTOR,closed,17,https://github.com/tidyverse/ggplot2/pull/939,2014-04-07T00:32:18Z,2019-01-18T21:02:27Z,2015-06-19T10:40:36Z,"Thank you for the fantastic ggplots package!

This is a suggested implementation for specifying a file extension in `ggsave` to allow device matching (pdf, png, jpg, etc.) for filenames without extension. The suggestion is motivated by the problem of using ggsave in a shinyApp for letting the user download a plot (for example addressed on StackOverflow here: http://stackoverflow.com/questions/14810409/save-plots-made-in-a-shiny-app). Because the shiny server provides a temporary file without extension, ggsave can't match to any of the internally defined device functions. I'm not aware of a currently available solution to this problem and although there are several work-arounds, I like the simplicity of ggsave and wanted to suggest this solution (not sure if it's the best way to do it, but it's the most elegant I could think of). This would allow use of `ggsave` for a shinyApp `downloadHandler` like so:

``` coffee
# In ui.R:
downloadLink('downloadPlot', 'Download')

# In server.R:
output$downloadPlot <- downloadHandler(
  filename = ""myplot.pdf"",
  content = function(file) {
    ggsave(file, plot = qplot(speed, dist, data = cars), ext = ""pdf"")
  }
)
```

I'm relatively new to GitHub and this is my second contribution to someone else's project, please forgive if I'm missing some specific conventions or etiquette about forking/pull requests.

Sebastian
",https://github.com/tidyverse/ggplot2/pull/939,ggplot2
arilamstein,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/936,2014-03-24T20:35:51Z,2019-01-19T19:36:38Z,2014-03-26T16:15:44Z,"The parameter is called ""filename"", but the examples use ""file"".
",https://github.com/tidyverse/ggplot2/pull/936,ggplot2
krlmlr,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/935,2014-03-23T23:15:50Z,2019-01-19T19:36:36Z,2014-03-24T16:18:57Z,"- variables can also appear as part of an expression
  - detection of identifier limits is performed using lookarounds and Perl
    regular expressions
- fix glitch in character range
- remove unneeded local variable
- add test

Improves #917.
",https://github.com/tidyverse/ggplot2/pull/935,ggplot2
jiho,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/934,2014-03-21T16:16:56Z,2019-01-19T19:36:34Z,2014-03-21T17:51:52Z,list(),https://github.com/tidyverse/ggplot2/pull/934,ggplot2
jiho,CONTRIBUTOR,closed,8,https://github.com/tidyverse/ggplot2/pull/933,2014-03-18T00:27:11Z,2019-01-19T19:36:32Z,2014-03-21T16:24:46Z,"Add a slightly more detailed description of the themes and a few words
about their intent. Add examples to ease comparison.
",https://github.com/tidyverse/ggplot2/pull/933,ggplot2
kevinushey,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/932,2014-03-12T16:50:51Z,2019-01-19T19:36:30Z,2014-03-25T15:45:42Z,"Hi Hadley,

See some of my comments inline -- I need your input to tidy things up.
",https://github.com/tidyverse/ggplot2/pull/932,ggplot2
stefanedwards,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/931,2014-03-11T13:29:25Z,2019-01-19T19:36:28Z,2014-03-13T21:30:53Z,"For improved navigation in help, I have added links to element_line, element_rect and element_text to the @seealso section.
I also added element_blank for completeness.
",https://github.com/tidyverse/ggplot2/pull/931,ggplot2
tsieger,NONE,closed,5,https://github.com/tidyverse/ggplot2/pull/927,2014-02-27T19:49:45Z,2019-01-19T19:36:26Z,2014-03-26T16:21:33Z,"Resubmitting #900 (after rebasing against master and re-documenting with the development 
version of roxygen2 (4.0.0)).

Summary: stat-boxplot and geom-boxplot enriched in order to enable displaying boxplots of width proportional to the square root of the number of observations, possibly weighted.
",https://github.com/tidyverse/ggplot2/pull/927,ggplot2
JoFrhwld,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/926,2014-02-27T18:03:10Z,2019-01-19T19:36:24Z,2014-03-16T16:17:12Z,"Basically #878, but merged commits from master.
",https://github.com/tidyverse/ggplot2/pull/926,ggplot2
jiho,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/925,2014-02-27T17:45:09Z,2019-01-19T19:36:22Z,2014-03-21T16:15:58Z,list(),https://github.com/tidyverse/ggplot2/pull/925,ggplot2
jiho,CONTRIBUTOR,closed,14,https://github.com/tidyverse/ggplot2/pull/924,2014-02-27T17:29:09Z,2019-01-18T21:02:35Z,2015-06-18T14:18:25Z,"Use the same argument that scale_*_hue uses: direction
",https://github.com/tidyverse/ggplot2/pull/924,ggplot2
jiho,CONTRIBUTOR,closed,8,https://github.com/tidyverse/ggplot2/pull/923,2014-02-27T17:27:04Z,2019-01-19T19:36:20Z,2014-03-17T21:50:21Z,list(),https://github.com/tidyverse/ggplot2/pull/923,ggplot2
jiho,CONTRIBUTOR,closed,12,https://github.com/tidyverse/ggplot2/pull/922,2014-02-27T16:42:24Z,2019-01-19T19:36:18Z,2014-03-25T15:58:38Z,"Instead of reprojecting everything, we just set the aspect ratio of the plot
to the ratio between the length of one degree of lat over one degree of lon.

Edit on 2014-02-27: rebased on head + latest version of roxygen
",https://github.com/tidyverse/ggplot2/pull/922,ggplot2
jiho,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/921,2014-02-27T16:37:00Z,2019-01-18T21:01:56Z,2015-07-27T12:42:01Z,"It can be used whenever fixed segment lengths are drawn. Examples are given 
with geom_rug but it could also be used with a segment geom that would be 
defined in terms of angle and length rather than in terms of beginning and end 
coords.

The remaining issue is the legend, which currently just draws segments. It 
should draw segments of lengths identical to the main plot but since the two 
viewports (main plot and legend) do not have the same reference, it is hard.

Edit on 2014-02-27: rebased on head + latest version of roxygen
",https://github.com/tidyverse/ggplot2/pull/921,ggplot2
eshilts,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/920,2014-02-25T17:29:36Z,2019-01-19T19:36:16Z,2014-02-25T18:03:30Z,,https://github.com/tidyverse/ggplot2/pull/920,ggplot2
eshilts,NONE,closed,7,https://github.com/tidyverse/ggplot2/pull/919,2014-02-25T17:20:08Z,2019-01-19T01:02:43Z,2015-06-11T20:38:03Z,"Remove layers from a ggplot2 object.
",https://github.com/tidyverse/ggplot2/pull/919,ggplot2
krlmlr,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/918,2014-02-25T15:00:44Z,2019-01-19T19:36:14Z,2014-02-25T15:07:24Z,"Reissue of #831.
",https://github.com/tidyverse/ggplot2/pull/918,ggplot2
krlmlr,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/917,2014-02-25T14:55:17Z,2019-01-19T19:36:12Z,2014-02-25T15:33:55Z,"Reissue of #835.
",https://github.com/tidyverse/ggplot2/pull/917,ggplot2
krlmlr,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/916,2014-02-25T14:51:13Z,2019-01-19T19:36:10Z,2014-02-25T14:52:13Z,"Fix spurious difference between `.r` and `.Rd` files.
",https://github.com/tidyverse/ggplot2/pull/916,ggplot2
krlmlr,MEMBER,closed,9,https://github.com/tidyverse/ggplot2/pull/915,2014-02-25T14:37:22Z,2019-01-19T19:36:08Z,2014-03-26T16:13:03Z,"Per request, re-issue of #883.
",https://github.com/tidyverse/ggplot2/pull/915,ggplot2
krlmlr,MEMBER,closed,10,https://github.com/tidyverse/ggplot2/pull/914,2014-02-25T14:33:33Z,2019-01-19T19:36:06Z,2014-03-25T16:02:49Z,"Re-issue of #840.
",https://github.com/tidyverse/ggplot2/pull/914,ggplot2
krlmlr,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/913,2014-02-25T14:10:29Z,2019-01-19T19:35:52Z,2014-02-25T14:33:53Z,"by using the `union` merge strategy.

This will simplify life for contributors. Unfortunately, GitHub does not seem to support this for browser-based merging, but merges on the command line will not suffer from merge conflicts in `NEWS` anymore.

See also http://krlmlr.github.io/using-gitattributes-to-avoid-merge-conflicts/.
",https://github.com/tidyverse/ggplot2/pull/913,ggplot2
rasmusab,CONTRIBUTOR,closed,11,https://github.com/tidyverse/ggplot2/pull/912,2014-02-25T12:57:39Z,2019-01-19T19:35:50Z,2014-02-26T16:02:33Z,"This is a fix for issue #825.

It seems that when a dotplot is created using `geom_dotplot` a couple of parameters (binaxis, stackdir, stackgroups, etc.) are assigned default values. When a dotplot is created using  `qplot(mpg, data=mtcars, geom=""dotplot"")` these params are not defined. The `reparameterise` function of GeomDotplot expect some of these params to be defined thus dotplot does not work with qplot.

The easy fix for this for `reparameterise` to check if these params are defined and if not use defaults. I've implemented these checks and have used the same defaults as used in the `geom_dotplot` function. Using this fix 

`qplot(mpg, data=mtcars, geom=""dotplot"")`

does not result in an error and gives the same output as

`ggplot(mtcars, aes(x = mpg)) + geom_dotplot()`

https://github.com/hadley/ggplot2/issues/825
",https://github.com/tidyverse/ggplot2/pull/912,ggplot2
seancarmody,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/911,2014-02-25T11:17:18Z,2019-01-19T19:35:48Z,2014-03-13T21:11:16Z,"Fixes fortify error when sp namespace is not loaded.
https://github.com/hadley/ggplot2/issues/879
",https://github.com/tidyverse/ggplot2/pull/911,ggplot2
stefanedwards,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/910,2014-02-25T09:05:07Z,2019-07-18T17:32:47Z,2014-04-23T20:14:31Z,"Resubmitting #904:
These two functions aid when labelling facets. labeller allows for
providing multiple named vectors and/or methods to change the labels for
each margin. label_wrap_gen allows labels to be word wrapped.
",https://github.com/tidyverse/ggplot2/pull/910,ggplot2
jpritikin,NONE,closed,8,https://github.com/tidyverse/ggplot2/pull/909,2014-02-25T01:42:46Z,2019-01-19T20:52:17Z,2014-04-22T14:16:38Z,"I'm not sure how to document width and height. Maybe you can fix up my descriptions. I added a nice example though.
",https://github.com/tidyverse/ggplot2/pull/909,ggplot2
jimhester,MEMBER,closed,12,https://github.com/tidyverse/ggplot2/pull/908,2014-02-24T22:27:15Z,2019-01-18T18:19:53Z,2014-02-25T20:09:28Z,"This is a up to date rebase of #684, it addresses issue #557.
",https://github.com/tidyverse/ggplot2/pull/908,ggplot2
yihui,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/907,2014-02-24T22:12:17Z,2019-01-19T16:55:51Z,2014-02-24T22:51:35Z," so that geom_violin() examples work after geom_histogram()
",https://github.com/tidyverse/ggplot2/pull/907,ggplot2
stefanedwards,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/904,2014-02-04T14:02:34Z,2019-01-19T16:55:49Z,2014-02-24T22:28:44Z,"These two functions aid when labelling facets. labeller allows for
providing multiple named vectors and/or methods to change the labels for
each margin. label_wrap_gen allows labels to be word wrapped.
",https://github.com/tidyverse/ggplot2/pull/904,ggplot2
rpruim,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/902,2014-01-31T00:35:09Z,2019-01-19T16:55:47Z,2014-02-24T22:28:18Z,"I've added an `offset` argument to `stat_bin()` so that one can change shift the bins left or right without having to specify all the breaks.  Currently, this only affects things when both `breaks` and `origin` are NULL, but one could imagine expanding the use case.

As is, it is now simple to choose a width and control the centers/edges of bins without needing to query the data and create breaks manually.   For example, to get bins centered on integers, use 

``` r
binwidth = 1, offset=0.5
```

I have not added any examples, but the offset argument is documented in the usage section.
",https://github.com/tidyverse/ggplot2/pull/902,ggplot2
tsieger,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/900,2014-01-21T09:14:54Z,2019-01-19T20:52:23Z,2014-02-24T22:28:11Z,"stat-boxplot and geom-boxplot enriched in order to display boxplots of width proportional to the square root of the number of observations, possibly weighted
",https://github.com/tidyverse/ggplot2/pull/900,ggplot2
geotheory,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/889,2013-12-18T15:10:37Z,2019-01-19T16:55:45Z,2014-02-24T22:25:27Z,"Added linejoin argument. http://stackoverflow.com/a/20661508/1156245 illustrates a benefit of this.  Not sure however which default value is however.
",https://github.com/tidyverse/ggplot2/pull/889,ggplot2
krlmlr,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/883,2013-12-10T01:00:59Z,2019-01-19T19:35:56Z,2014-02-25T14:34:30Z,"The computation for `x` (or `y`) values based on `vjust` values does not work correctly for all cases. I have shown an example before and after applying this change.
# Before

Everything looks good by default

``` r
library(ggplot2)
```

```
## Loading required package: methods
```

``` r
library(grid)

(p <- qplot(diamonds$cut, binwidth=0.5) + theme_bw(24) +
   theme(axis.text.x=element_text(vjust=0.5)))
showViewport()
```

![plot of chunk unnamed-chunk-2](http://i.imgur.com/wJvs0Zw.png) 

Now play with the justification:

``` r
(p0 <- p + theme(axis.title=element_text(vjust=0)))
showViewport()
```

![plot of chunk unnamed-chunk-3](http://i.imgur.com/ohnnAKt.png) 

And the other extreme:

``` r
(p1 <- p + theme(axis.title=element_text(vjust=1)))
showViewport()
```

![plot of chunk unnamed-chunk-4](http://i.imgur.com/GU9x5al.png) 

Top-down:

``` r
p0 + theme(axis.title.x=element_text(angle=180), axis.title.y=element_text(angle=270))
showViewport()
```

![plot of chunk unnamed-chunk-5](http://i.imgur.com/DkidGOH.png) 

Top-down, `vjust==1`:

``` r
p1 + theme(axis.title.x=element_text(angle=180), axis.title.y=element_text(angle=270))
showViewport()
```

![plot of chunk unnamed-chunk-6](http://i.imgur.com/4zvJ5q3.png) 

This is inconsistent.
# After

Everything looks good by default

``` r
library(ggplot2)
```

```
## Loading required package: methods
```

``` r
library(grid)

(p <- qplot(diamonds$cut, binwidth=0.5) + theme_bw(24) +
   theme(axis.text.x=element_text(vjust=0.5)))
showViewport()
```

![plot of chunk unnamed-chunk-2](http://i.imgur.com/dN2C9qS.png) 

Now play with the justification:

``` r
(p0 <- p + theme(axis.title=element_text(vjust=0)))
showViewport()
```

![plot of chunk unnamed-chunk-3](http://i.imgur.com/1iy0nOP.png) 

And the other extreme:

``` r
(p1 <- p + theme(axis.title=element_text(vjust=1)))
showViewport()
```

![plot of chunk unnamed-chunk-4](http://i.imgur.com/q1rmbyL.png) 

Top-down:

``` r
p0 + theme(axis.title.x=element_text(angle=180), axis.title.y=element_text(angle=270))
showViewport()
```

![plot of chunk unnamed-chunk-5](http://i.imgur.com/5ota9WS.png) 

Top-down, `vjust==1`:

``` r
p1 + theme(axis.title.x=element_text(angle=180), axis.title.y=element_text(angle=270))
showViewport()
```

![plot of chunk unnamed-chunk-6](http://i.imgur.com/1uDspyf.png) 
# Source

``` s
#-echo=F
library(knitr)
opts_chunk$set(fig.height=4)
opts_knit$set(upload.fun = imgur_upload)

#' Everything looks good by default
library(ggplot2)
library(grid)

(p <- qplot(diamonds$cut, binwidth=0.5) + theme_bw(24) +
   theme(axis.text.x=element_text(vjust=0.5)))
showViewport()

#' Now play with the justification:
(p0 <- p + theme(axis.title=element_text(vjust=0)))
showViewport()

#' And the other extreme:
(p1 <- p + theme(axis.title=element_text(vjust=1)))
showViewport()

#' Top-down:
p0 + theme(axis.title.x=element_text(angle=180), axis.title.y=element_text(angle=270))
showViewport()

#' Top-down, `vjust==1`:
p1 + theme(axis.title.x=element_text(angle=180), axis.title.y=element_text(angle=270))
showViewport()

#' This is inconsistent.
```
",https://github.com/tidyverse/ggplot2/pull/883,ggplot2
agstudy,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/882,2013-12-09T09:41:04Z,2019-01-19T16:55:43Z,2014-02-24T22:23:58Z,"this commit fix bug : annotation_logticks() and coord_flip() are mutually excluded 

see : https://github.com/hadley/ggplot2/issues/881
",https://github.com/tidyverse/ggplot2/pull/882,ggplot2
JoFrhwld,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/878,2013-12-02T14:07:13Z,2019-01-19T19:36:02Z,2014-02-24T22:22:57Z,"Following up on people saying they like `stat_ellipse`, (http://stackoverflow.com/questions/2397097/how-can-a-data-ellipse-be-superimposed-on-a-ggplot2-scatterplot and http://stats.stackexchange.com/questions/38117/getting-different-results-when-plotting-95-ci-ellipses-with-ggplot-or-the-ellip) here I've properly implemented and documented it for incorporation into the main package. 

It seems to be operating properly, and it passes `R CMD check`.
",https://github.com/tidyverse/ggplot2/pull/878,ggplot2
krlmlr,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/872,2013-11-07T14:21:01Z,2019-01-19T16:55:41Z,2014-02-24T18:01:55Z,"- install binary R packages where available
- supply .gitignore
",https://github.com/tidyverse/ggplot2/pull/872,ggplot2
tsieger,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/868,2013-10-24T21:52:46Z,2019-01-19T16:55:39Z,2013-12-31T13:55:13Z,"Added an option to create boxplots of widths proportional to the square-roots of the number of observations they represent. It resembles the 'varwidth' parameter to graphics::boxplot. 

Note that the implementation poses slight overhead to calculate_groups() in Stat, as I compute the maximum group size there.

I tested the implementation extensively. It seems to work well with all geom_boxplot examples as well as when creating boxplots implicitly using stat_boxplot.

Note that using varwidth=TRUE results in warnings of 'position_dodge requires constant width: output may be incorrect'. This poses a real problem (only) in the case of breaking groups further by another factor as e.g. in 

```
p <- ggplot(mtcars, aes(factor(cyl), mpg))
p + geom_boxplot(aes(fill = factor(vs)),varwidth=TRUE)
```

where boxplots in single group are not put side by side, but on top of each other, in contrast to the case of not using varwidth:

```
p <- ggplot(mtcars, aes(factor(cyl), mpg))
p + geom_boxplot(aes(fill = factor(vs)))
```

However, IMHO this is not a big deal.
",https://github.com/tidyverse/ggplot2/pull/868,ggplot2
alexkowa,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/863,2013-09-30T09:16:23Z,2019-01-19T16:55:37Z,2014-02-24T22:20:40Z,"If whisker.hline =TRUE a horizontal line at the end of the whisker with length equal to the width of the box
",https://github.com/tidyverse/ggplot2/pull/863,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/860,2013-09-16T20:41:49Z,2019-01-19T20:52:11Z,2014-02-24T22:19:58Z,"Fixes #859.
",https://github.com/tidyverse/ggplot2/pull/860,ggplot2
lehy,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/852,2013-09-01T14:25:56Z,2019-01-19T19:35:46Z,2014-02-24T22:18:13Z,,https://github.com/tidyverse/ggplot2/pull/852,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/847,2013-08-02T17:48:39Z,2019-01-19T20:52:25Z,2014-02-24T22:17:03Z,"Fixing typo as reported in Documentation feedback [#1162]
",https://github.com/tidyverse/ggplot2/pull/847,ggplot2
seancarmody,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/845,2013-07-30T08:22:36Z,2019-01-19T14:24:51Z,2014-02-24T22:15:18Z,"Only note packages which failed to load rather than all packages passed to the function.
",https://github.com/tidyverse/ggplot2/pull/845,ggplot2
tdhock,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/844,2013-07-29T07:37:52Z,2019-01-19T14:24:49Z,2014-02-24T22:14:32Z,"The current behavior of theme_bw() takes the same panel.margin=unit(0.25,""lines"") as theme_grey(). This setting makes sense for theme_grey() since you need white space as a border to distinguish the different panels. However, theme_bw() uses a grey line for the panel border, yielding the white space un-necessary. In fact, as shown below on page 63 of Envisioning Information by Edward Tufte, the ""grid boxes"" or space between panels, are a bad design (top). A better design is grey boxes around each panel with no white space between them (bottom).

![thick-facets-are-bad](https://f.cloud.github.com/assets/932850/870117/ce885c36-f820-11e2-9852-7719686c54a1.png)

On the left: the current default output when using theme_bw() in ggplot2. On the right: the same plot with theme_bw() after applying my patch, which changes only one line of code.

![space-nospace](https://f.cloud.github.com/assets/932850/870110/7068ffac-f820-11e2-894c-e8440d87c151.png)
",https://github.com/tidyverse/ggplot2/pull/844,ggplot2
thomaskern,NONE,closed,6,https://github.com/tidyverse/ggplot2/pull/842,2013-07-20T22:50:33Z,2019-01-19T14:24:47Z,2013-07-21T02:47:28Z,"If a specific scale is already present, the new scale will be merged
with the current one instead of completely overriding it

Example:
ggplot(data.frame(x=1:12,y=rnorm(12,50),groups=rep(LETTERS[1:3],each=4)),aes(x,y,group=groups)) + geom_line() + scale_y_continuous(expand=c(0,0)) + scale_y_continuous(breaks=c(50))

This makes it easier to create functions returning full-blown ggplots that you can still manipulate with known scale*-functions
",https://github.com/tidyverse/ggplot2/pull/842,ggplot2
ThierryO,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/841,2013-07-15T09:58:06Z,2019-01-21T07:33:32Z,2014-02-24T22:13:51Z,"This function makes it easier the use ggplot figures in a LaTeX environment by creating the required LaTeX and saving the figure in one line of code. The function uses ggsave to write the figure to the disc and print the LaTeX code to the screen.
",https://github.com/tidyverse/ggplot2/pull/841,ggplot2
krlmlr,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/840,2013-07-12T00:17:46Z,2019-01-19T19:35:54Z,2014-02-24T22:13:38Z,"A straightforward extension. Includes an outstanding update of the .Rd files in the first two commits (i.e., #833), a minor bugfix (8e61554), the implementation with documentation (0001ce5) and an update of the .Rd files with the current changes (f11a4ba). Fixes #839.

No test has been added yet. This code works for me.
",https://github.com/tidyverse/ggplot2/pull/840,ggplot2
krlmlr,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/835,2013-07-06T20:22:33Z,2019-01-19T19:35:58Z,2014-02-24T22:12:11Z,"that is used for matching columns that refer to calculated aesthetics (e.g., `..count..`)

fixes #834
",https://github.com/tidyverse/ggplot2/pull/835,ggplot2
krlmlr,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/833,2013-07-05T20:38:02Z,2019-01-19T14:24:43Z,2013-12-04T23:17:01Z,"fixes #832
",https://github.com/tidyverse/ggplot2/pull/833,ggplot2
krlmlr,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/831,2013-07-05T20:31:02Z,2019-01-19T19:36:00Z,2014-02-24T22:11:56Z,"Fixes #829
",https://github.com/tidyverse/ggplot2/pull/831,ggplot2
krlmlr,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/830,2013-07-05T20:03:53Z,2019-01-19T14:24:41Z,2014-02-24T22:11:06Z,"This pull request includes both #812 and #828. Functionality by @jiho, I have updated the documentation with the most recent `roxygen2` from klutometis/roxygen.
",https://github.com/tidyverse/ggplot2/pull/830,ggplot2
krlmlr,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/828,2013-07-02T15:37:19Z,2019-01-19T14:24:39Z,2014-02-24T22:19:39Z,"This is a version of #439 that applies cleanly to the current version of hadley/ggplot2 .
",https://github.com/tidyverse/ggplot2/pull/828,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/823,2013-06-21T20:32:50Z,2019-01-19T20:52:07Z,2014-02-24T22:08:58Z,"Per the message on the ggplot list: https://groups.google.com/d/msg/ggplot2/WaDVT99x5LM/CVEd4Yl7pQUJ, this fixes the problems that that post exposed.
",https://github.com/tidyverse/ggplot2/pull/823,ggplot2
jiho,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/812,2013-05-16T15:47:20Z,2019-01-19T14:24:37Z,2014-02-24T22:06:53Z,"Use the same argument that scale_*_hue uses: direction
",https://github.com/tidyverse/ggplot2/pull/812,ggplot2
jpritikin,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/810,2013-05-15T05:42:43Z,2019-01-19T14:24:35Z,2014-02-24T22:04:20Z,"I wanted to position geom_text inbetween the two extremes of a boolean valued axis. Now I can do this with position = position_offset(0,-.5). I'm not sure if there is already a way to accomplish the same thing with existing ggplot2 features.
",https://github.com/tidyverse/ggplot2/pull/810,ggplot2
jiho,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/806,2013-05-07T11:33:21Z,2019-01-19T14:24:33Z,2014-02-24T22:03:37Z,list(),https://github.com/tidyverse/ggplot2/pull/806,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/803,2013-04-29T06:57:55Z,2019-01-19T14:24:31Z,2014-02-24T22:02:43Z,"Instead of reprojecting everything, we just set the aspect ratio of the plot
to the ratio between the length of one degree of lat over one degree of lon.
",https://github.com/tidyverse/ggplot2/pull/803,ggplot2
crowding,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/792,2013-04-03T21:49:44Z,2019-01-19T14:24:29Z,2013-04-05T16:53:23Z,,https://github.com/tidyverse/ggplot2/pull/792,ggplot2
JonasRauch,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/784,2013-03-21T17:08:03Z,2019-01-19T12:38:31Z,2014-02-24T21:57:51Z,"`stat_ecdf` fails when at least one value in `data$x` is `NA` or `Inf`:
- for `NA`, the `min`/`max` become `NA`, leading to an error in `seq`
- for `Inf` the min/max become infinite, and the finite end of the range is the only finite point in the result of the `seq`-call. 

The fix removes `NA` and `Inf` for the purpose of computing the x-range. Note that all values are still included in the call to `ecdf` (which removes NAs, but handles `Inf`s correctly).
",https://github.com/tidyverse/ggplot2/pull/784,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/772,2013-02-28T21:01:50Z,2019-01-19T12:38:29Z,2013-03-01T03:17:52Z,"This fixes #767. I adapted some of the code from `annotate`. I'm not sure this is the cleanest way to do it, but it works.

Examples:

``` r
df <- data.frame(x=1, y=c(1,10,100,1000), z=c('a','b','a','b'))
p <- ggplot(df, aes(x=x, y=y, colour=z))+
  geom_point() +
  scale_y_log10() +
  scale_color_manual(values=c(""red"", ""black""))

p + annotation_logticks(sides=""lrtb"")

p + annotation_logticks(sides=""lrtb"", alpha = .3, colour = ""red"")

p + annotation_logticks(sides=""lrtb"", alpha = .3, color = ""red"")

```
",https://github.com/tidyverse/ggplot2/pull/772,ggplot2
wch,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/771,2013-02-28T17:34:40Z,2019-01-19T12:38:27Z,2013-03-01T03:13:45Z,"Fixes #741 and fixes #749.

The problem is that the `group` returned from `coord_munch` is sometimes a character vector, and it was passed to `polygonGrob` as the `id` value. But `id` must be a numeric vector, according to the help page:

> id: A numeric vector used to separate locations in ‘x’ and ‘y’ into multiple polygons.  All locations with the same ‘id’ belong to the same polygon.

Converting it to a factor ensures that it's numeric. I had to use `mode()` because this is one of those times where `is.numeric` is reporting something other than what's desired. What's needed is something that will report TRUE for factors, integers, and floats, and FALSE for strings. `mode()` is the function that does the trick

``` R
char  <- ""A""
fac   <- factor(""A"")
int   <- 1L
float <- 1.1

typeof(char)
# [1] ""character""
storage.mode(char)
# [1] ""character""
mode(char)
# [1] ""character""
is.numeric(char)
# [1] FALSE
is.integer(char)
# [1] FALSE

typeof(fac)
# [1] ""integer""
storage.mode(fac)
# [1] ""integer""
mode(fac)
# [1] ""numeric""
is.numeric(fac)
# [1] FALSE
is.integer(fac)
# [1] FALSE

typeof(int)
# [1] ""integer""
storage.mode(int)
# [1] ""integer""
mode(int)
# [1] ""numeric""
is.numeric(int)
# [1] TRUE
is.integer(int)
# [1] TRUE

typeof(float)
# [1] ""double""
storage.mode(float)
# [1] ""double""
mode(float)
# [1] ""numeric""
is.numeric(float)
# [1] TRUE
is.integer(float)
# [1] FALSE
```
",https://github.com/tidyverse/ggplot2/pull/771,ggplot2
wch,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/770,2013-02-27T19:28:26Z,2019-01-19T12:38:25Z,2013-03-01T05:53:55Z,"This fixes #732 and #739. It reverts the change that fixed #622, so that will break again. Unfortunately, I don't think it's possible to make it so that `stat_summary` can satisfy both the path and crossbar drawing because of the way grouping works. This change favors path drawing because that is seems to be a more common use case.
",https://github.com/tidyverse/ggplot2/pull/770,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/769,2013-02-27T19:25:15Z,2019-01-19T12:38:23Z,2013-03-01T03:22:16Z,"This fixes #768. Are there any problems that might be caused by drawing these symbols in the legend?
",https://github.com/tidyverse/ggplot2/pull/769,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/763,2013-02-14T20:53:02Z,2019-01-19T12:38:21Z,2013-02-25T20:53:38Z,"Reported by Documentation feedback [#1009]
",https://github.com/tidyverse/ggplot2/pull/763,ggplot2
bart1,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/751,2013-01-09T16:33:17Z,2019-01-19T20:52:19Z,2014-02-24T21:53:07Z,"I'm new to the git, i hope this is the right way to suggest small changes, I noted the data from a spatial lines data frame did not get included when fortified and thought this patch was a small easy solution
",https://github.com/tidyverse/ggplot2/pull/751,ggplot2
eshilts,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/750,2013-01-03T19:24:41Z,2019-01-19T14:24:53Z,2014-02-24T21:51:19Z,"New function to allow setting of geom parameters for existing ggplot2 objects.
",https://github.com/tidyverse/ggplot2/pull/750,ggplot2
crowding,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/748,2012-12-28T05:33:00Z,2019-01-19T12:38:19Z,2014-02-24T21:50:57Z,"This is a one line fix that makes sure combine_elements implements inheritance by property name rather than position. This allows child theme elements to have additional properties that the parent elements don't. 

For example, I made a plot where text axis labels have graphical icons attached, by implementing a class that inherited from `element_text`, with additional properties and an `element_grob` method. This worked but required this small change.
",https://github.com/tidyverse/ggplot2/pull/748,ggplot2
jrnold,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/746,2012-12-22T06:39:53Z,2019-01-19T12:38:17Z,2014-02-24T21:49:54Z,"Added color and fill scales corresponding to for the color-blind dichromat palettes in  `scales::dichromat_pal`, in the same way that `scales_*_brewer` are defined for `scales::brewer_pal`.
",https://github.com/tidyverse/ggplot2/pull/746,ggplot2
eshilts,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/745,2012-12-21T22:21:58Z,2019-01-19T19:36:04Z,2014-02-24T21:49:28Z,"- `remove_geom` function to remove layers from a ggplot2 object
",https://github.com/tidyverse/ggplot2/pull/745,ggplot2
wch,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/744,2012-12-20T22:47:21Z,2019-01-19T02:10:09Z,2014-02-24T21:16:50Z,"This fixes #743.
",https://github.com/tidyverse/ggplot2/pull/744,ggplot2
BrianDiggs,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/740,2012-12-11T21:05:44Z,2019-01-19T12:38:15Z,2014-02-24T21:48:05Z,"This wishlist item is inspired by a recent issue (Issue #726), an email on the help list  (https://groups.google.com/d/topic/ggplot2/4rVJ1xWsLeQ/discussion), and some previous work I have done (Issue #717).

I think the documentation of aesthetics themselves needs to be overhauled/improved and I wanted to create this issue to put down some of my ideas. This has always been a thin part of the documentation. The ggplot2 book has it as Appendix B which is only 3 pages. JakeRuss added documentation of linetype, size, shape, colour, fill, and alpha in June 2011. Documentation for position, order, and group was added in January 2012. But is is jumbled and not well linked.

Here are my suggestions:
- Rename the documents/topics to start with ""aesthetic"" rather than ""aes"" to distinguish them from the `aes` family of functions (`aes`, `aes_string`, `aes_all`, `aes_auto`).
- Divide the documentation into separate topics for each aesthetic. _Very_ closely related concepts (such as the position aesthetics, `hjust` and `vjust`, `colour` and `fill`) can be kept together, but `shape` and `linetype` don't belong together. For the cases with combined documentation, there should be aliases to each separately (aesthetic-hjust, for example).
- Document all the aesthetics
  
  ``` r
  > unique(names(aes_all(ggplot2:::.all_aesthetics)))
  [1] ""hjust""      ""alpha""      ""angle""      ""fill""       ""size""      
  [6] ""colour""     ""group""      ""label""      ""linetype""   ""lower""     
  [11] ""ymax""       ""middle""     ""ymin""       ""order""      ""shape""     
  [16] ""radius""     ""sample""     ""upper""      ""vjust""      ""weight""    
  [21] ""width""      ""x""          ""xend""       ""xmax""       ""xmin""      
  [26] ""xintercept"" ""y""          ""yend""       ""yintercept"" ""z""         
  ```

Taking out those already documented, that leaves `hjust`, `angle`, `label`, `lower`,  `middle`, `radius`, `sample`, `upper`, `vjust`, `weight`, `width`, and `z` (and, according to `geom_text`,  `family`, `fontface` and `lineheight`; are there others?)
- In the list of aesthetics in each geom, add links for each to its corresponding aesthetic page (the consistent naming and/or aliasing based on the aesthetic should make this template-able)

Ultimately, this will address the problem of ""what does that aesthetic control?"" or ""why would I want to set that?"" or the reverse questions of ""what aesthetic controls such-and-such aspect of the plot?""

If anyone else thinks this could be useful, I'll make a branch on my clone of the repository and attach it as a pull request to which people can comment an contribute.
",https://github.com/tidyverse/ggplot2/pull/740,ggplot2
alicederyn,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/730,2012-12-03T12:56:40Z,2019-01-19T12:38:13Z,2014-02-24T21:44:48Z,"stat_function is ignoring scale transformations when passing arguments to its function.

For example,

``` R
qplot(1:10, log10(1:10)) + stat_function(fun=function(x) x)
qplot(1:10, log10(1:10)) + stat_function(fun=function(x) x) + scale_x_log10()
```

In the first plot, the function y=x sits far above the data points. After applying the scale transformation, the function now crosses the data points.

This patch fixes this bug.
",https://github.com/tidyverse/ggplot2/pull/730,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/717,2012-11-06T19:37:35Z,2019-01-19T12:38:11Z,2013-06-19T22:15:12Z,"I've made a few improvements to the examples showing different shapes. I've submitted this at two separate commits within the same pull request. The first fixes errors in the documentation: there are 26 (0-25) shapes and shapes 19 and 20 do not have a fill.  The second presents a better version of the shape catalog.

The first should be applied as it corrects factual errors; the second is optional, but I think a significant improvement.
",https://github.com/tidyverse/ggplot2/pull/717,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/708,2012-10-26T22:51:28Z,2019-01-19T12:38:09Z,2012-10-27T16:19:44Z,"The documentation for gg_dep and the function arguments disagreed on
the name of the second argument. Fixed documentation to agree with code.

Two instances of multiple character strings being passed to gg_dep
(where it was possible to pass them to message/warning) were fixed
by wrapping them in paste with a sep of \n (like was done in other
functions).

There is no function error, it is stop.
",https://github.com/tidyverse/ggplot2/pull/708,ggplot2
wch,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/702,2012-10-24T02:44:52Z,2019-01-19T12:38:07Z,2012-10-24T21:30:55Z,"This partially fixes #676. It fixes the first case, where there are some groups with >= 3 points. But there are still errors if all groups have < 3 points. This is because `StatDensity$calculate` returns an empty data frame with no y values to train the scale. I'm not sure what the proper solution is. Maybe return a data frame with `y=0`?

For the fix that I've done so far, I had to infer the correct behavior of `finite.cases()`. @hadley, it would be good if you could look at the tests I wrote to check if I was right.
",https://github.com/tidyverse/ggplot2/pull/702,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/701,2012-10-23T23:33:55Z,2019-01-19T12:38:05Z,2012-10-24T19:47:57Z,"This fixes #672. To use it, you specify the last version where the function was _good_. Example usage:

```
gg_dep(""0.8.9"", ""blah blah blah"")
```

Sample output:

```
# Differs by subminor version number
qplot(1:3, 1:3) + coord_cartesian(wise=T)
# wise argument to coord_cartesian is ignored (Deprecated; last used in version 0.9.0)

# Differs by minor version number
qplot(1:3, 1:3, colour=1:3) + scale_colour_continuous(legend=T)
# Warning message:
# ""legend"" argument in scale_XXX is deprecated. Use guide=""none"" for suppress the guide display. (Deprecated; last used in version 0.8.9) 

```
",https://github.com/tidyverse/ggplot2/pull/701,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/700,2012-10-23T20:25:56Z,2019-01-19T12:38:02Z,2012-10-23T20:28:48Z,"This is from @dkahle's suggestion in #641.

This example illustrates the output:

```
theme_classic <- function(base_size = 12, base_family = """"){
  theme_bw(base_size = base_size, base_family = base_family) %+replace%
    theme(
      panel.border     = element_blank(),
      axis.line        = element_line(colour = ""black""),
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank()
    )
}

qplot(displ, hwy, data = mpg, colour=class) + theme_classic()
```
",https://github.com/tidyverse/ggplot2/pull/700,ggplot2
wch,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/699,2012-10-22T22:40:35Z,2019-01-19T12:38:00Z,2012-10-23T04:51:43Z,"This fixes #666.

These are the times with the old version (ggplot2 0.9.2.1). First is `geom_polygon`, then `geom_path`:

``` R
library(ggplot2)
library(maps)
system.time(print(ggplot(map_data(""world"")) + geom_polygon(aes(long, lat, group = group))))
#   user  system elapsed 
#11.701   0.247  46.543 
system.time(print(ggplot(map_data(""world"")) + geom_path(aes(long, lat, group = group))))
#   user  system elapsed 
#  2.802   0.123   3.044
```

These are the times after the fix:

``` R
library(ggplot2)
library(maps)
system.time(print(ggplot(map_data(""world"")) + geom_polygon(aes(long, lat, group = group))))
#   user  system elapsed 
#  0.922   0.098   1.157 
system.time(print(ggplot(map_data(""world"")) + geom_path(aes(long, lat, group = group))))
#   user  system elapsed 
#  3.038   0.146   3.319 
```

`geom_polygon` is now about 12.5x faster than it was before -- and it's now 3x faster than `geom_path`. Not bad!

All the tests pass, and visual tests are unchanged (which is a little surprising -- I would have expected the change in polygon grouping to result in some changes to the PDF).
",https://github.com/tidyverse/ggplot2/pull/699,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/698,2012-10-22T22:04:18Z,2019-01-19T14:25:11Z,2012-10-22T22:05:24Z,"This fixes #689. It should also give correct results for  #562.

I've also added some visual tests for the projections.
",https://github.com/tidyverse/ggplot2/pull/698,ggplot2
jrnold,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/693,2012-10-14T20:57:24Z,2019-01-19T12:37:58Z,2014-02-24T21:35:07Z,"I added new print methods for `theme` and `element` objects which are easier to understand than the existing methods.  Additionally, the output of print can be evaluated to recreate the object. This makes it easy to create a new theme by printing an existing theme and making edits to the output. 

Example of print output for `theme_gray`

``` r-console
> print(theme_gray()$rect)
element(fill = ""white"", colour = ""black"", size = 0.5, linetype = 1) 
> print(theme_gray())
theme(line = element(colour = ""black"", size = 0.5, linetype = 1, lineend = ""butt""),
rect = element(fill = ""white"", colour = ""black"", size = 0.5, linetype = 1),
text = element(family = """", face = ""plain"", colour = ""black"", size = 12, hjust = 0.5, vjust = 0.5, angle = 0, lineheight = 0.9),
axis.text = element(colour = ""grey50"", size = rel(0.8)),
strip.text = element(size = rel(0.8)),
axis.line = element(),
axis.text.x = element(vjust = 1),
axis.text.y = element(hjust = 1),
axis.ticks = element(colour = ""grey50""),
axis.title.x = element(),
axis.title.y = element(angle = 90),
axis.ticks.length = unit(0.15, ""cm""),
axis.ticks.margin = unit(0.1, ""cm""),
legend.background = element(colour = NA),
legend.margin = unit(0.2, ""cm""),
legend.key = element(fill = ""grey95"", colour = ""white""),
legend.key.size = unit(1.2, ""lines""),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element(size = rel(0.8)),
legend.text.align = NULL,
legend.title = element(face = ""bold"", size = rel(0.8), hjust = 0),
legend.title.align = NULL,
legend.position = ""right"",
legend.direction = NULL,
legend.justification = ""center"",
legend.box = NULL,
panel.background = element(fill = ""grey90"", colour = NA),
panel.border = element(),
panel.grid.major = element(colour = ""white""),
panel.grid.minor = element(colour = ""grey95"", size = 0.25),
panel.margin = unit(0.25, ""lines""),
strip.background = element(fill = ""grey80"", colour = NA),
strip.text.x = element(),
strip.text.y = element(angle = -90),
plot.background = element(colour = ""white""),
plot.title = element(size = rel(1.2)),
plot.margin = unit(c(1, 1, 0.5, 0.5), ""lines""),
complete = TRUE) 
```

The print output evaluates to the original object.

``` r-console
> identical(eval(parse(text=as.character(theme_gray()))), theme_gray())
TRUE
```
",https://github.com/tidyverse/ggplot2/pull/693,ggplot2
jrnold,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/692,2012-10-14T20:17:46Z,2019-01-19T12:37:56Z,2014-02-24T21:34:58Z,"I added some new themes which are not meant to be used directly but are designed to make extending and writing new themes easier.  I noticed when writing themes that using `theme_gray()`or `theme_bw()` as the base theme required finding which non-top level elements were defined by those themes.   `theme_base0` is a  complete theme that only defines top-level elements.  `theme_base_sizes` defines various size elements that are used in `theme_gray`, and users are less likely to want to alter than colors.  `theme_base` combines `theme_base0` and `theme_base_sizes`.
",https://github.com/tidyverse/ggplot2/pull/692,ggplot2
jrnold,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/687,2012-10-11T05:42:26Z,2019-01-19T12:37:54Z,2012-10-11T13:22:39Z,"The documentation of the `plot.margin` element in `themes` did not indicate what margins its elements correspond to.
",https://github.com/tidyverse/ggplot2/pull/687,ggplot2
jrnold,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/686,2012-10-11T05:15:57Z,2019-01-19T12:37:52Z,2012-10-11T23:41:55Z,"Cleaner commit of pull request #683. 

I reordered the class attribute of element objects so that the subclass is listed first. As it stands now, an S3 method could not be written for element_blank, etc.
",https://github.com/tidyverse/ggplot2/pull/686,ggplot2
jimhester,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/685,2012-10-10T18:13:52Z,2019-01-19T12:37:50Z,2014-02-24T21:34:05Z,"Adds a new geom_central geom, fixes #250
",https://github.com/tidyverse/ggplot2/pull/685,ggplot2
jimhester,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/684,2012-10-10T15:43:03Z,2019-01-19T12:37:48Z,2014-02-24T21:33:18Z,"Implements setting of only one limit of a continuous scale by specifying
NA for the limit which you don't want to set.  See #557.

I had to use NA instead of NULL to implement this, as is.null() is not 
vectorized, a vector with null at any location is TRUE.
",https://github.com/tidyverse/ggplot2/pull/684,ggplot2
jrnold,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/683,2012-10-07T23:32:06Z,2019-01-19T12:37:46Z,2012-10-11T04:50:56Z,"I reordered the class attribute of element objects so that the subclass is listed first. As it stands now, an S3 method could not be written for element_blank, etc. 
",https://github.com/tidyverse/ggplot2/pull/683,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/675,2012-09-25T17:48:09Z,2019-01-19T12:37:44Z,2012-10-14T21:36:43Z,"This fixes #673.
",https://github.com/tidyverse/ggplot2/pull/675,ggplot2
hhoeflin,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/671,2012-09-23T09:58:28Z,2019-01-19T04:20:37Z,2014-02-24T21:32:27Z,"Hi Hadley,

I just implemented the header and footer feature for the plots. There are now new themes for plot.header and plot.footer. They default to grey50 with a relative size of 0.8 and are left aligned

I changed ggplot_gtable so that a header grob is added at the top and a footer grop is added at the bottom of the tables. The text in them come from the labels ""header"" and ""footer"", 

would be great if you could merge it into the package.

Thanks

Holger
",https://github.com/tidyverse/ggplot2/pull/671,ggplot2
jrnold,CONTRIBUTOR,closed,11,https://github.com/tidyverse/ggplot2/pull/662,2012-09-10T16:09:23Z,2019-01-19T04:21:23Z,2014-02-24T21:31:35Z,"I noticed that the width of the segments in geom_rug was hardcoded as 0.03.  I added a parameter to allow the user to change it.  But, I'm not sure that is the most idiomatic way to do it. Perhaps it should just use the width aes. 
",https://github.com/tidyverse/ggplot2/pull/662,ggplot2
jrnold,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/660,2012-09-09T19:18:58Z,2019-01-19T04:20:39Z,2014-02-24T21:31:01Z,"The relative size of the point to the lines in GeomPointrange was hardcoded as 4.  I added a new parameter `fatten` (as in geom_crossbar) to `geom_pointrange` and `GeomPointrange` to allow the user to adjust the size of the point.
",https://github.com/tidyverse/ggplot2/pull/660,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/657,2012-09-05T08:39:32Z,2019-01-19T03:46:07Z,2012-09-05T21:26:55Z,"This is a potential fix for #577.

Instead of training the scales on each layer separately, the data frames in the list `data` are combined first with `rbind.fill`, and then the scales are trained.

It fixes the test cases from above. Here are some more tests. It now gives warnings about when you mix in layers with continuous values.

``` R
# Mixing discrete and continuous - Warning
ggplot() + p1 + p2 + geom_point(aes(x,y), data=data.frame(x=1.2, y=1.8), colour=""blue"")
# With extra column - Warning
ggplot() + p1 + p2 + geom_point(aes(x,y,colour=g), data=data.frame(x=1.2, y=1.8, g=""foo""))
# Warning message:
# In `[<-.factor`(`*tmp*`, rng, value = c(1L, 2L, 1L, NA)) :
#   invalid factor level, NAs generated


# Layer with data with new factor levels - OK
ggplot() + p1 + p2 + geom_point(aes(x,y), data=data.frame(x=1.3, y=""c""), colour=""blue"")
# With extra column - OK
ggplot() + p1 + p2 + geom_point(aes(x,y,colour=g), data=data.frame(x=1.3, y=""c"", g=""foo""))
```

This change passes all tests. But I have a feeling that there are cases where adding in layers with different data and aesthetics might have different behavior now.
",https://github.com/tidyverse/ggplot2/pull/657,ggplot2
wch,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/656,2012-09-04T16:53:22Z,2019-01-19T01:02:23Z,2014-02-24T21:30:42Z,"Fixes #25.

This should have visual tests before it's merged.
",https://github.com/tidyverse/ggplot2/pull/656,ggplot2
wch,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/654,2012-08-26T05:17:30Z,2019-01-19T04:20:41Z,2014-02-24T21:30:06Z,"This is a first pass at adding facet headers. Examples here: http://rpubs.com/wch/1306

Things that need to be done:
- Improve appearance
- Decide whether to allow this for `facet_wrap`, and if so, how
- Control over whether each header is drawn
- Syntax for setting header labels to something other than the default
- Figure out what to do when facet has two variables on one axis, like `facet_grid(. ~ am + cyl)`

Maybe the labels could be controlled like this:

```
facet_grid(am ~ cyl, titles = ""auto/manual"" ~ NULL)
```

Where `NULL` means not to draw facet headers for that variable.
",https://github.com/tidyverse/ggplot2/pull/654,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/648,2012-08-20T21:17:39Z,2019-01-19T03:46:05Z,2012-08-25T02:26:10Z,"This fixes #632. It provides clearer error messages when the user makes a graph with `stat_bin` and also maps something to a `y` value.

A couple notes:
- I'm not sure the error message will be clear to a novice -- someone who uses `geom_bar` might not even realize that they're using `stat=""bin""`.
- It might break existing user code that relies on the buggy behavior where you can use `stat=""bin""` and map values to y, provided that there's only one y value per group. This could possibly affect a lot of existing code.

It should also have some tests added.
",https://github.com/tidyverse/ggplot2/pull/648,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/643,2012-08-07T18:12:38Z,2019-01-19T03:46:03Z,2012-08-08T14:10:39Z,"This fixes #592. It passes all tests, and visual tests are unchanged.

It did make a warning go away in a couple visual tests in `scale-date.r`, though:

```
dt + scale_x_date(breaks = ""3 weeks"")
# Warning message:
# 'package:ggplot2' may not be available when loading 
```
",https://github.com/tidyverse/ggplot2/pull/643,ggplot2
wch,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/642,2012-08-07T17:35:18Z,2019-01-19T03:46:01Z,2012-08-14T16:47:44Z,"This fixes #583. It passes all tests, and visual tests are unchanged.

I'm not sure it should be merged though -- although it solves the printing problem, it'll break all code where people define their own geoms and stats in external packages.

There's also some weird behavior with printing that I don't understand. Depending on how you print it, it might or might not tell you that it's a `ggproto` object:

``` R
str(z)
# proto object 
#  $ mapping    : NULL 
#  $ geom_params:List of 1 
#  $ stat_params: Named list() 
#  $ stat       :proto object  
#   ..parent: proto object  
#  .. .. parent: proto object  
#  $ inherit.aes: logi TRUE 
#  $ geom       :proto object  
#   ..parent: proto object  
#  .. .. parent: proto object  
#  $ position   :proto object  
#   ..parent: proto object  
#  .. .. parent: proto object  
#  .. .. .. parent: proto object  
#  $ subset     : NULL 
#  $ data       : list() 
#   ..- attr(*, ""class"")= chr ""waiver"" 
#  $ show_guide : logi NA 
#  parent: proto object 

z
# geom_point: na.rm = FALSE 
# stat_identity:  
# <environment: 0x10c9fcb08>
# attr(,""class"")
# [1] ""proto""       ""environment""

class(z)
# [1] ""ggproto""     ""proto""       ""environment""
```

There's another bizarre property of proto objects. If you set the class via `structure()`, even if you _don't_ assign it back to the variable, it modifies the class of the object.

``` R
class(z)
# [1] ""ggproto""     ""proto""       ""environment""

structure(z, class = c(""foo"", class(z)))
# geom_point: na.rm = FALSE 
# stat_identity:  
# <environment: 0x10c9fcb08>
# attr(,""class"")
# [1] ""proto""       ""environment""

class(z)
# [1] ""foo""         ""ggproto""     ""proto""       ""environment""
```

I'm concerned that, because proto is so opaque and confusing, there may be unintended consequences of this change.
",https://github.com/tidyverse/ggplot2/pull/642,ggplot2
baptiste,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/641,2012-08-06T23:31:08Z,2019-01-19T06:07:29Z,2012-10-23T20:28:57Z,"Such a minimal theme is generally quite popular; rather than redefining it in many packages, could it be included here?
",https://github.com/tidyverse/ggplot2/pull/641,ggplot2
hadley,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/639,2012-08-03T21:55:59Z,2018-11-06T17:42:24Z,2012-09-14T16:17:54Z,"Fixes #188.  Also general tidy up of code and improved examples
",https://github.com/tidyverse/ggplot2/pull/639,ggplot2
wch,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/638,2012-08-02T22:07:08Z,2019-01-19T03:45:59Z,2012-08-03T02:16:44Z,"Fixes #623.

The code is essentially copied over from `geom_point`, except that `na.rm` is set to FALSE so it will always display the warning message; there's not the option to change it.

It also checks x, y, xend, yend, size, and shape for NA.

I also tried modifying `scale_linetype_discrete` so that it would use `na.value=""01""`, hoping it would make a blank line, but grid apparently doesn't like zeros in the `lty`:

```
Error in grid.Call.graphics(L_segments, x$x0, x$y0, x$x1, x$y1, x$arrow) : 
  invalid line type: zeroes are not allowed
```
",https://github.com/tidyverse/ggplot2/pull/638,ggplot2
wch,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/637,2012-08-02T21:29:57Z,2019-01-19T03:45:57Z,2012-08-03T02:19:51Z,"This fixes #562. Examples that are fixed by this:

``` R
sky2 <- data.frame(RA=0, Dec=0)

skyplot2 <- qplot(RA,Dec,data=sky2,xlim=c(0,360),ylim=c(-89.999,89.999))

skyplot2 + coord_map(projection=""aitoff"",orientation=c(89.999,180,0)) + 
  scale_y_continuous(breaks=(-2:2)*30,limits=c(-89,89)) + 
  scale_x_continuous(breaks=(0:8)*45,limits=c(0,360), labels=c("""","""","""","""","""","""","""","""","""")) +
   theme(panel.grid.major = theme_line(colour='black'))


skyplot2 + coord_map(projection=""lagrange"",orientation=c(89.999,180,0)) + 
  scale_y_continuous(breaks=(-2:2)*30,limits=c(-89.999,89.999)) + 
  scale_x_continuous(breaks=(0:8)*45,limits=c(0,360), labels=c("""","""","""","""","""","""","""","""","""")) +
  theme(panel.grid.major = theme_line(colour='black'))
```
",https://github.com/tidyverse/ggplot2/pull/637,ggplot2
cardillo,NONE,closed,4,https://github.com/tidyverse/ggplot2/pull/633,2012-07-29T16:38:11Z,2019-01-19T03:45:55Z,2012-08-01T20:25:57Z,"I found myself needing a cumulative stat_bin function for some graphing work I was doing, similar to the discussion here https://groups.google.com/d/msg/ggplot2/UT8f5K5Agf0/eWZM_GKoGI0J.  Anyway, as this is my first foray into the ggplot2 code, it is possible there is a better way solution.  Still, I hacked stat_cbin together and it has worked quite well for my needs so I thought I'd pass it on in case is useful for inclusion.
",https://github.com/tidyverse/ggplot2/pull/633,ggplot2
simonohanlon101,NONE,closed,2,https://github.com/tidyverse/ggplot2/pull/628,2012-07-19T09:36:19Z,2019-01-19T03:45:53Z,2012-07-19T13:07:00Z,"Following a discussion with Roger Bivand (author and contributor of many spatial packages for R) on r-sig-geo mailing list he suggested that rgeos should be used over gpclib (due to gpclib's restrictive license) for polygon operations in the fortify methods for spatial data. 
Original discussion is [here:](http://r-sig-geo.2731867.n2.nabble.com/Help-with-gpclib-tp7580479p7580542.html)
",https://github.com/tidyverse/ggplot2/pull/628,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/626,2012-07-18T16:55:09Z,2019-01-19T04:20:49Z,2012-07-18T20:46:27Z,"This fixes #625. Visual tests no longer error out.

It also looks like I might have undone commit bfe9097f5ebf093eb894cbc67d97d632d1e99397. I'm not sure what the purpose of that commit was, though.
",https://github.com/tidyverse/ggplot2/pull/626,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/618,2012-07-11T16:17:01Z,2019-01-19T06:07:51Z,2012-08-01T22:24:19Z,list(),https://github.com/tidyverse/ggplot2/pull/618,ggplot2
wch,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/617,2012-07-11T05:16:52Z,2019-01-19T03:45:51Z,2012-07-18T22:27:04Z,"This fixes #606, and requires the modified version of gtable.

I ran some timings on it, and with no facets, it's slightly faster than the old version, but with facets, it's slightly slower. All tests were run on installed versions of ggplot2 (not loaded via `load_all`).

For all the test runs, I ran the plots a few times before actually running the test.
## No-facet tests

Here's the code for the no-facet test:

```
n <- 10
times <- numeric(n)
for (i in seq_len(n)) {
  t <- system.time(print(ggplot(mtcars, aes(wt,mpg)) + geom_point()))
  times[i] <- t[1]
}
times
mean(times)
```

The results for the old version:

```
> times
 [1] 0.162 0.157 0.150 0.153 0.158 0.157 0.156 0.150 0.160 0.151
> mean(times)
[1] 0.1554
```

And the results for the new version:

```
d> times
 [1] 0.151 0.149 0.140 0.149 0.147 0.158 0.146 0.147 0.144 0.149
d> mean(times)
[1] 0.148
```

Since we're using R, we might as well do a statistical test. :)

```
> t.test(times, times2)

    Welch Two Sample t-test

data:  times and times2 
t = -3.7082, df = 17.804, p-value = 0.001634
alternative hypothesis: true difference in means is not equal to 0 
95 percent confidence interval:
 -0.011595806 -0.003204194 
sample estimates:
mean of x mean of y 
   0.1480    0.1554 
```
## Facet tests

This code adds two faceting variables, for a 2x3 grid.

```
n <- 10
times <- numeric(n)
for (i in seq_len(n)) {
  t <- system.time(print(ggplot(mtcars, aes(wt,mpg)) + geom_point() + facet_grid(am~cyl)))
  times[i] <- t[1]
}
```

Results for the old version:

```
> times
 [1] 0.511 0.516 0.492 0.533 0.496 0.480 0.500 0.498 0.500 0.489
> mean(times)
[1] 0.5015
```

And the new version:

```
d> times
 [1] 0.521 0.511 0.518 0.498 0.521 0.491 0.563 0.555 0.507 0.516
d> mean(times)
[1] 0.5201
```

And the t-test:

```
> t.test(times, times2)

    Welch Two Sample t-test

data:  times and times2 
t = 2.1526, df = 15.621, p-value = 0.04735
alternative hypothesis: true difference in means is not equal to 0 
95 percent confidence interval:
 0.0002465331 0.0369534669 
sample estimates:
mean of x mean of y 
   0.5201    0.5015 
```
",https://github.com/tidyverse/ggplot2/pull/617,ggplot2
wch,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/614,2012-07-09T04:56:38Z,2019-01-19T03:45:49Z,2012-07-11T17:29:49Z,"Fixes #471.

This code fixes `coord_distance.polar` to give correct lengths. It could be cleaned up a bit, and it could also use some tests.

The following code generates [this PDF](https://dl.dropbox.com/u/84377/spiraltest.pdf):

```
#80 concentric circles
df <- data.frame(x = 0:1, y=rep(c(1:80), each=2))
ggplot(df, aes(x=x, y=y, group=factor(y))) + geom_line() + coord_polar()
```

It's somewhat of an improvement over the current method, [shown here](https://dl.dropbox.com/u/84377/spiral_orig.pdf).

The resolution toward the center still isn't high enough, in my opinion. As I mentioned in #471, there's often a greater information density (and therefore sharper turns) toward the center of the circle, and so it would be useful to have higher resolution toward the center.
",https://github.com/tidyverse/ggplot2/pull/614,ggplot2
wch,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/613,2012-07-08T21:40:40Z,2019-01-19T03:45:47Z,2012-07-11T17:09:47Z,"This fixes #543. The reason this works is because a call to `ldply()` in `layout_base()`:

``` R
base <- unique(ldply(values[has_all]))
```

If the first data frame in the list contains all the levels of the variable, then `base` will have that ordering of the variables. However, if the first data frame does _not_ contain all the levels, then `base` will add the levels in the order they're encountered.

To illustrate:

``` R
d1 <- data.frame(f=factor(rep(letters[1:3], each=5), levels=letters[3:1]))
d2 <- data.frame(f=rep(""b"", 15))

str(d1)
# 'data.frame':   15 obs. of  1 variable:
#  $ f: Factor w/ 3 levels ""c"",""b"",""a"": 3 3 3 3 3 2 2 2 2 2 ...
str(d2)
# 'data.frame':   15 obs. of  1 variable:
#  $ f: Factor w/ 1 level ""b"": 1 1 1 1 1 1 1 1 1 1 ...

str(unique(ldply(list(d1, d2))))
# 'data.frame':   3 obs. of  1 variable:
#  $ f: Factor w/ 3 levels ""c"",""b"",""a"": 3 2 1
str(unique(ldply(list(d2, d1))))
# 'data.frame':   3 obs. of  1 variable:
#  $ f: Factor w/ 3 levels ""b"",""c"",""a"": 1 3 2
```

The fix is to put the default data frame from the ggplot object first, rather than last.
",https://github.com/tidyverse/ggplot2/pull/613,ggplot2
dariobuttari,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/609,2012-07-05T16:11:13Z,2019-01-19T04:20:35Z,2012-07-05T17:00:44Z,"This fixes #608. Code fix was provided by Kohske Takahashi.
",https://github.com/tidyverse/ggplot2/pull/609,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/603,2012-06-28T06:51:14Z,2019-01-19T03:45:45Z,2012-07-05T17:02:53Z,"This fixes #585. It requires some modifications to gtable.

Regular and `facet_wrap` work:

``` R
qplot(wt,mpg,colour=hp, data=mtcars) + 
    theme(axis.line = element_line(colour='black', lineend='square', size=4))

qplot(wt,mpg,colour=hp, data=mtcars) + 
    theme(axis.line = element_line(colour='black', lineend='square', size=4)) +
    facet_wrap(~cyl)
```

However, `facet_grid` still doesn't work properly. I think there needs to be a good way to edit the z values (in `facet_render.grid`) after the gtable has been created.

``` R
qplot(wt,mpg,colour=hp, data=mtcars) + 
    theme(axis.line = element_line(colour='black', lineend='square', size=4)) +
    facet_grid(am~cyl)
```
",https://github.com/tidyverse/ggplot2/pull/603,ggplot2
wch,MEMBER,closed,11,https://github.com/tidyverse/ggplot2/pull/599,2012-06-26T21:46:17Z,2019-01-19T04:21:25Z,2012-06-27T18:33:36Z,"This changes ggplot2 to use the external gtable package.
",https://github.com/tidyverse/ggplot2/pull/599,ggplot2
kohske,COLLABORATOR,closed,6,https://github.com/tidyverse/ggplot2/pull/598,2012-06-26T01:17:06Z,2019-01-19T03:45:43Z,2012-06-27T04:33:34Z,"https://groups.google.com/forum/?fromgroups#!topic/ggplot2/QkdrXgj8tWk

``` r
ggplot(mtcars, aes(x=wt, y=mpg, colour=cyl))+
  geom_path(arrow=arrow(type=""closed""))
ggplot(mtcars, aes(x=wt, y=mpg, colour=cyl, fill = cyl))+
  geom_path(arrow=arrow(type=""closed""))
ggplot(mtcars, aes(x=wt, y=mpg, colour=cyl, fill = cyl))+
  geom_path(arrow=arrow(type=""open""))
```

I set white as default, in compatible with the previous behavior.
But maybe NA default, i.e., transparent, is better.
",https://github.com/tidyverse/ggplot2/pull/598,ggplot2
kohske,COLLABORATOR,closed,2,https://github.com/tidyverse/ggplot2/pull/597,2012-06-25T22:31:26Z,2019-01-19T03:45:41Z,2012-06-27T18:51:55Z,"Passed tests.
",https://github.com/tidyverse/ggplot2/pull/597,ggplot2
kohske,COLLABORATOR,closed,14,https://github.com/tidyverse/ggplot2/pull/594,2012-06-25T16:31:10Z,2019-01-19T14:25:27Z,2012-08-17T20:18:50Z,"Passed all unit test and probably also visual test.
see this thread: https://groups.google.com/group/ggplot2/browse_thread/thread/3a9efa6d01b8500e

but maybe the xxx_format should return the list of expression instead of list of call.
",https://github.com/tidyverse/ggplot2/pull/594,ggplot2
wch,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/591,2012-06-25T05:14:48Z,2019-01-19T03:45:39Z,2012-06-27T17:58:42Z,"Fixes #580.

This is to be used with hadley/scales#22, where the default breaks algorithm is changed to `extended_breaks()`. Since `extended_breaks()` doesn't work with dates and times, the default for dates/times needs to be set to the original `pretty_breaks()`.

This still has a problem: if you don't specify `scale_x_date()`, it instead uses the plain old `scale_x_continuous()`, which uses `extended_breaks()`:

``` R
set.seed(321)
df <- data.frame(
  dx = seq(as.Date(""2012-02-29""), len=100, by=""1 day"")[sample(100, 50)],
  price = runif(50)
)
df <- df[order(df$dx), ]

# This works now:
qplot(dx, price, data=df, geom=""line"") + scale_x_date()


# This doesn't:
qplot(dx, price, data=df, geom=""line"") 
# Error in Math.difftime(35.9333333333333, base = 10) : 
#   'log' not defined for ""difftime"" objects
```

I think the problem is that  `scales_add_defaults()` in scales-.r only appends `discrete` and `continuous` to the scale name, when in this case it should append `date`.
",https://github.com/tidyverse/ggplot2/pull/591,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/590,2012-06-24T22:25:44Z,2019-01-19T06:07:49Z,2014-02-24T21:27:10Z,"It can be used whenever fixed segment lengths are drawn. Examples are given
with geom_rug but it could also be used with a segment geom that would be
defined in terms of angle and length rather than in terms of beginning and end
coords.

The remaining issue is the lengend, which currently just draws segments. It
should draw segments of lengths identical to the main plot but since the two
viewports (main plot and legend) do not have the same reference, it might be
hard.
",https://github.com/tidyverse/ggplot2/pull/590,ggplot2
joranE,CONTRIBUTOR,closed,8,https://github.com/tidyverse/ggplot2/pull/588,2012-06-23T01:30:13Z,2019-01-19T03:45:37Z,2012-06-28T17:32:20Z,"Hopefully I did a better job this time!
",https://github.com/tidyverse/ggplot2/pull/588,ggplot2
joranE,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/586,2012-06-21T23:38:10Z,2019-01-19T03:45:35Z,2012-06-22T20:08:34Z,"This is my first attempt, and I'm brand new at GitHub, so apologies if this is a mess. I wasn't sure how many commits to have in a pull request, and if you have any advice on writing useful commit notes I'm all ears.

The two big things I changed were altering aesthetics() in utilities-help.r to list the required aesthetics first, in bold, and giving continuous_scale a (mostly) complete argument list, largely copying from discrete_scale where appropriate.

The rest are minor typos, linking to relevant documentation, or slightly clarified descriptions.
",https://github.com/tidyverse/ggplot2/pull/586,ggplot2
kohske,COLLABORATOR,closed,11,https://github.com/tidyverse/ggplot2/pull/581,2012-06-16T00:46:56Z,2019-01-19T04:21:21Z,2012-06-27T16:26:35Z,,https://github.com/tidyverse/ggplot2/pull/581,ggplot2
wch,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/573,2012-06-04T21:03:50Z,2019-01-19T03:45:33Z,2012-06-27T16:49:14Z,,https://github.com/tidyverse/ggplot2/pull/573,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/571,2012-05-31T15:54:06Z,2019-01-19T03:45:31Z,2012-06-05T04:48:30Z,"Because `id` was being calculated from the un-munched data, it sometimes ended up being a different length from `coords$x` and `$y`.

I also removed the `match()` used to calculate `id`. The same information seems to be there already, in `coords$group`, but this should be double-checked.
",https://github.com/tidyverse/ggplot2/pull/571,ggplot2
kohske,COLLABORATOR,closed,8,https://github.com/tidyverse/ggplot2/pull/558,2012-05-17T06:53:07Z,2019-01-19T03:45:29Z,2012-06-05T05:12:29Z,,https://github.com/tidyverse/ggplot2/pull/558,ggplot2
kohske,COLLABORATOR,closed,5,https://github.com/tidyverse/ggplot2/pull/556,2012-05-15T01:32:59Z,2019-01-19T03:45:27Z,2012-05-18T00:22:44Z,"I believe this will fix the problem. This passed all unit tests. May I write visual tests and additional unit test codes?
",https://github.com/tidyverse/ggplot2/pull/556,ggplot2
jiho,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/554,2012-05-11T13:08:52Z,2019-01-19T06:07:47Z,2014-02-24T21:24:57Z,"To keep the code clear and the documentation in line with the code.
",https://github.com/tidyverse/ggplot2/pull/554,ggplot2
jiho,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/553,2012-05-11T11:07:43Z,2019-01-19T06:07:45Z,2012-08-17T18:09:17Z,"- Reformat stat_ydensity to look more like stat_density.
- Also get coding cues from stat_boxplot.
- Introduce a new scale options to have equal width (useful when
  comparing observations with very different densities).
- Keep all computed densities and use a new variable to compute
  the density actually used to plot the violin.
",https://github.com/tidyverse/ggplot2/pull/553,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/545,2012-05-07T16:59:07Z,2019-01-19T14:25:07Z,2012-05-07T17:02:33Z,"This fixes #521.
",https://github.com/tidyverse/ggplot2/pull/545,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/544,2012-05-07T16:18:39Z,2019-01-19T03:46:21Z,2012-05-07T18:17:47Z,"This patch allows arguments to get passed properly to `kde2d`. For example, with the `lims` argument, it previously was getting confused because `lims` needs to be a vector, but each element of `lims` vector was getting turned into an element in the _list_.

This example now works -- density contours are drawn beyond the range of the data:

``` R
# Set up the data
sigm1 <- diag(c(30,50))
sigm2 <- diag(c(5,3))
mu1 <- c(10,15)
mu2 <- c(80,60)
library(mvtnorm)
sample <- round(rbind(rmvnorm(100,mu1,sigm1),rmvnorm(100,mu2,sigm2)))
sample <- sample[! (sample[,1] <1 | sample[,2] <1 | sample[,1]> 100 |
sample[,2]>100),]
d <- as.data.frame(sample)
names(d)<-c(""x"",""y"")

# lims now gets passed to stat_density2d
ggplot(d, aes(x,y)) + stat_density2d(bins=4, lims=c(-20, 120, 0, 100)) + 
  geom_point() + xlim(-20,120)

```

Note that the limits need to be specified for ggplot, with `xlim`, and to `kde2d` (via `stat_density2d`), with `lims=c(xmin, xmax, ymin, ymax)`.

It would be nice to get the values for `lims` from the scales, instead of requiring the user to enter it twice.
",https://github.com/tidyverse/ggplot2/pull/544,ggplot2
wch,MEMBER,closed,6,https://github.com/tidyverse/ggplot2/pull/530,2012-05-01T06:48:15Z,2019-01-19T03:45:25Z,2012-05-02T20:20:32Z,"This fixes #529.

With this change, it passes all tests, and visual tests are unchanged.
",https://github.com/tidyverse/ggplot2/pull/530,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/528,2012-04-30T19:26:12Z,2019-01-19T04:20:51Z,2012-05-02T20:00:49Z,"Fixes #526
",https://github.com/tidyverse/ggplot2/pull/528,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/515,2012-04-21T05:48:50Z,2019-01-19T14:24:55Z,2012-05-02T19:58:33Z,"Fixes #430.
",https://github.com/tidyverse/ggplot2/pull/515,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/514,2012-04-21T05:36:16Z,2019-01-19T14:25:13Z,2012-05-02T19:53:41Z,"This commit fixes #513
",https://github.com/tidyverse/ggplot2/pull/514,ggplot2
kohske,COLLABORATOR,closed,7,https://github.com/tidyverse/ggplot2/pull/509,2012-04-20T08:25:49Z,2019-01-19T03:45:23Z,2012-06-27T19:23:05Z,,https://github.com/tidyverse/ggplot2/pull/509,ggplot2
jiho,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/505,2012-04-19T11:38:54Z,2019-01-19T06:07:43Z,2012-06-07T12:32:52Z,"For all filled shapes (polygons, reactangles, etc.) alpha affected fill only.
One could set the stroke to be a transparent colour using

```
colour=scales::alpha(""blue"", 0.5)
```

outside of aes() for example. But there was no way to map the colour of the
stroke to a semi transparent colour. This commit fixes it.
",https://github.com/tidyverse/ggplot2/pull/505,ggplot2
kohske,COLLABORATOR,closed,2,https://github.com/tidyverse/ggplot2/pull/503,2012-04-19T04:46:21Z,2019-01-19T03:19:27Z,2012-07-04T19:10:40Z,,https://github.com/tidyverse/ggplot2/pull/503,ggplot2
wch,MEMBER,closed,19,https://github.com/tidyverse/ggplot2/pull/499,2012-04-16T21:43:44Z,2019-01-19T20:52:21Z,2012-04-20T16:07:42Z,"Fix #31 and fix #332. This should be considered just a rough attempt to illustrate how it could be done. I modified `facet-null.r`, but `facet-wrap.r` and `facet-grid.r` should probably also be modified.

Note that there's a change in behavior -- plots with 0 rows of data are now allowed. For example:

``` R
empty <- data.frame(x=numeric(0), y=numeric(0))

ggplot(empty, aes(x=x,y=y)) + geom_point()
```

This works, but there are no points, and no breaks. It's just a gray plotting area with ""x"" and ""y"" axis labels. 
",https://github.com/tidyverse/ggplot2/pull/499,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/493,2012-04-14T03:33:14Z,2019-01-19T03:19:26Z,2012-04-18T20:44:36Z,,https://github.com/tidyverse/ggplot2/pull/493,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/491,2012-04-13T21:49:43Z,2019-01-19T12:37:42Z,2012-04-13T22:09:09Z,"ggpcp stated it was using reshape::melt, but it is actually
using reshape2::melt.

The scale arguments to ggorder and ggstructure had a scale
argument that was no longer used (corresponding argument in
ggpcp removed in 030fadf59a0fd896865b28fd9e76da9698164ec2.
Removed this argument (and its documentation which referenced
reshape).

Since I didn't have reshape installed on my newest R installation, these references were generating a NOTE in R CMD check for me. Since ggplot2 doesn't rely on reshape, but rather reshape2, now, I figured I would hunt down the source.
",https://github.com/tidyverse/ggplot2/pull/491,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/490,2012-04-13T21:32:08Z,2019-01-19T04:20:53Z,2012-04-13T21:55:38Z,"This fixes the warnings for `coord_polar` introduced by #474.

Let me know if it can be done more cleanly.
",https://github.com/tidyverse/ggplot2/pull/490,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/488,2012-04-13T19:30:36Z,2019-01-19T04:20:55Z,2012-04-20T16:47:28Z,"This is some slightly more informative help for `annotate()`. Suggestions on other improvements are welcome. Example code would be especially helpful.

Fix #487
",https://github.com/tidyverse/ggplot2/pull/488,ggplot2
wch,MEMBER,closed,21,https://github.com/tidyverse/ggplot2/pull/482,2012-04-12T03:13:03Z,2019-01-19T20:52:15Z,2014-02-24T21:22:19Z,"This fixes #426. As discussed, it splits `geom_hline` into a geom and annotation.

If this looks like the right approach, I can do the same for vline and abline. If so, should I put `annotate_hline`, `annotate_vline`, `annotate_abline` all in one file since they're quite simple? Or they could be added to their respective `geom-Xline.r` files.

Also, some of the visual tests will have to be updated.
",https://github.com/tidyverse/ggplot2/pull/482,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/476,2012-04-11T15:26:06Z,2019-01-19T06:07:41Z,2012-04-11T15:27:04Z,"It currently references continuous_scale
",https://github.com/tidyverse/ggplot2/pull/476,ggplot2
wch,MEMBER,closed,8,https://github.com/tidyverse/ggplot2/pull/474,2012-04-06T21:18:07Z,2019-01-19T04:21:11Z,2012-04-12T22:04:34Z,"This fixes #422, in which NA's show up in the theta breaks when using `coord_polar`.

I modified `coord_train.polar()` to do something similar to what `coord_train.cartesian()` does (by calling `train_cartesian()`). See line 87 of [coord-cartesian.r](https://github.com/hadley/ggplot2/blob/master/R/coord-cartesian-.r).

Now `coord_train.polar()` removes `NA`'s that are returned from `scale_breaks()`.

This passes the tests, and visual test results are unchanged.
",https://github.com/tidyverse/ggplot2/pull/474,ggplot2
wch,MEMBER,closed,14,https://github.com/tidyverse/ggplot2/pull/473,2012-04-06T19:47:08Z,2019-01-19T14:25:25Z,2012-04-20T20:04:29Z,"This fixes #282.

When using bars with `width` < 1, the spacing is uneven, as demonstrated in #282:

``` R
dat <- data.frame(x=LETTERS[1:3], y=4)

# Bad
# A and C boxes touch - angle AC is smaller than AB and BC
ggplot(dat, aes(x=x, y=y)) + geom_bar() + coord_polar()
```

A longhand manual solution is to use `expand=TRUE` and set the `expand` values in both the x and y scales. The `expand` values that are appropriate for a circular graph are different from those for a rectangular graph. However, this is really verbose:

``` R
# Good
# This removes the space in the middle
ggplot(dat, aes(x=x, y=y)) + geom_bar() +
  coord_polar(expand=T) +
  scale_x_discrete(expand=c(0, .5)) +   # equal theta spacing
  scale_y_continuous(expand=c(0, 0))    # don't leave a hole in the middle
```

As far as I can tell, there's no reason to use `expand` values that are different from these ones, in a polar graph. You don't want your theta/x to be spaced unevenly, and you don't want a hole in the middle. If you really want to change these things, you can set `xlim` and `ylim`.

This pull request also overrides `expand` values for racetrack plots (where `theta=""y""`). In the existing code, if you use `expand=TRUE` with a racetrack plot, it doesn't form a full circle, but I overrode it close the circle. Again, if you want to override these values, you should be able to set `xlim` and `ylim`.

See the new visual tests for examples.

Thoughts?
",https://github.com/tidyverse/ggplot2/pull/473,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/469,2012-04-05T16:20:18Z,2019-01-19T12:37:38Z,2012-04-05T16:35:43Z,"Address Issue #448 request for news entry related to push request.
",https://github.com/tidyverse/ggplot2/pull/469,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/466,2012-04-04T05:40:18Z,2019-01-19T03:19:24Z,2012-04-06T15:58:58Z,"This excludes `label` as a grouping variable and adds tests. (fixes #465)
",https://github.com/tidyverse/ggplot2/pull/466,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/462,2012-03-30T16:37:38Z,2019-01-19T03:19:22Z,2012-04-11T15:04:33Z,,https://github.com/tidyverse/ggplot2/pull/462,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/456,2012-03-27T02:19:18Z,2019-01-19T03:46:11Z,2012-03-27T02:20:30Z,"This fixes and cleans up the code for dodging by groups.  It fixes #436 and a dodging bug mentioned in this thread:
http://groups.google.com/group/ggplot2/browse_thread/thread/e6086175832049c1
",https://github.com/tidyverse/ggplot2/pull/456,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/454,2012-03-26T16:48:25Z,2019-01-19T03:46:09Z,2012-03-27T03:55:52Z,"I moved the visual tests from `/inst/tests/visual-xxx.r` to `/visual_test/xxx.r`, so that they can be used with the new visual test system. 

I also added descriptions for all the tests -- but I'm not 100% sure that the descriptions are accurate. With vtest, it is important that these descriptions not change in the future, so please look them over and let me know if any of them should be changed.
",https://github.com/tidyverse/ggplot2/pull/454,ggplot2
kohske,COLLABORATOR,closed,6,https://github.com/tidyverse/ggplot2/pull/451,2012-03-20T08:27:44Z,2019-01-19T03:19:20Z,2012-04-06T05:15:19Z,,https://github.com/tidyverse/ggplot2/pull/451,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/450,2012-03-20T08:19:47Z,2019-01-19T03:19:18Z,2012-03-20T13:29:32Z,,https://github.com/tidyverse/ggplot2/pull/450,ggplot2
BrianDiggs,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/448,2012-03-19T19:44:17Z,2019-01-19T12:37:36Z,2012-04-05T16:35:20Z,"stat_bin2d did not correctly handle NA's in the data. This could be
triggered by setting scale limits which did not include the entire
range of the data.

This arose from a discussion on the mailing list
https://groups.google.com/d/topic/ggplot2/VAB1wKqwg9w/discussion
",https://github.com/tidyverse/ggplot2/pull/448,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/446,2012-03-15T19:59:26Z,2019-01-19T03:19:15Z,2012-03-27T23:40:43Z,"This fixes #421.

In the changes to coord_range, if there's a better way to set the names of the list items to ""x"" and ""y"", that would be good. As it is, the order of x and y can change, depending on which one is mapped to theta.
",https://github.com/tidyverse/ggplot2/pull/446,ggplot2
wch,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/442,2012-03-15T04:50:06Z,2019-01-19T03:19:14Z,2012-03-26T16:34:00Z,"This is very preliminary, so I'm just looking for comments and suggestions. Many of the changes are just moved files. The new functions are in `visual-test.r`. The files `aspect-ratio.r` and `dotplot.r` have been converted to the new system, so take a look at them for examples of how to use it.

You can try it out by doing the following. Fetch and checkout the branch:

```
git fetch https://github.com/wch/ggplot2.git visual-test
git checkout FETCH_HEAD
```

In your R session, starting in the ggplot2 dir:

``` R
# I think this is needed for consistent output across platforms
# If asked, agree to download and install gtk+ (~56MB for Mac)
install.packages('cairoDevice')

library(devtools)
dev_mode()
load_all('.')
source('visual_test/aspect-ratio.r')
source('visual_test/dotplot.r')
```

Output files will go in `visual_test/aspect-ratio/` and `visual_test/dotplot/`. In each of these dirs there is a index.html page that shows all the tests, with descriptions. In the future, everything in these directories will be committed to the repo.

Still needs to be done:
- Convert the rest of the visual tests to the new system
- Write a single function that will run all tests
- Create a top-level webpage with links to each page of tests
- Write code to generate visual diffs between commits

Open questions:
- Use optipng to shrink output files?
  - Pro: smaller file size - visual tests may add up over time. Even minor changes to, say, tick marks, padding, or automatic breaks will result in an entirely new set of test files. Example: for the dotplot tests, total size is 440,934 bytes vs. 189,408 bytes after using optipng.
  - Con: it adds an external dependency.
- Use smaller images? Presently the default size is 4x4 inches at 72 ppi, or 288x288 pixels.

Now that I think of it, this is probably a good candidate for using a git submodule. All the visual test results could go in the submodule.
",https://github.com/tidyverse/ggplot2/pull/442,ggplot2
jrowen,NONE,closed,1,https://github.com/tidyverse/ggplot2/pull/440,2012-03-14T20:45:49Z,2019-01-19T03:19:11Z,2012-06-08T21:36:43Z,"Updated `fortify` to support rgeos or gpclib.  The `gpclibpermit()` call is no longer required; the regeos package will be used by default.
",https://github.com/tidyverse/ggplot2/pull/440,ggplot2
jiho,CONTRIBUTOR,closed,19,https://github.com/tidyverse/ggplot2/pull/439,2012-03-14T17:47:08Z,2019-01-19T16:55:33Z,2014-02-24T21:19:22Z,"It fetches 6 colours from a colorbrewer palette and feeds them to gradientn. It gives very nice results even if the palettes were not intended for that use originally.

Ideally, the regular brewer scale should be able to deal with this: use `scale_colour/fill_brewer()` and provide a continuous or a discrete scale depending on the data... but this may run again into the problem that the data is only known at render time or something like this. Anyhow, I couldn't figure out how to do that with the current state of the code so a created new functions. The names (`scale_colour/fill_brewerc`) are clearly not very inspired so I am completely open to suggestions.
",https://github.com/tidyverse/ggplot2/pull/439,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/438,2012-03-14T17:10:45Z,2019-01-19T06:07:39Z,2012-03-27T03:58:48Z,,https://github.com/tidyverse/ggplot2/pull/438,ggplot2
BrianDiggs,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/435,2012-03-13T23:32:39Z,2019-01-19T12:37:40Z,2012-04-20T20:52:57Z,"In the documentation for `facet_grid`, the `margins` parameter is described as:

> logical value, should marginal rows and columns be displayed

In fact, `margins` can also take on a (vector of) character values which specify which variables/margins are to be computed. This functionality was requested in Issue #3, but never documented.
",https://github.com/tidyverse/ggplot2/pull/435,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/429,2012-03-08T06:11:08Z,2019-01-19T14:24:57Z,2012-03-27T23:35:50Z,"This implements stacking for geom_dotplot, using `stackgroups=TRUE`.
",https://github.com/tidyverse/ggplot2/pull/429,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/425,2012-03-04T18:10:56Z,2019-01-19T03:19:09Z,2012-03-27T23:21:55Z,"In the first changed example, using `aes()` made it overplot the same text many times. I also changed the data frame to `NULL`.

In the second example, I changed the documentation to reflect the code. The code uses `family`, not `fontfamily`. However, this might actually be a bug -- in NEWS, it says that it uses `fontfamily`. @kohske, is it a bug in the documentation, or in the code?
",https://github.com/tidyverse/ggplot2/pull/425,ggplot2
wch,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/418,2012-02-29T04:56:20Z,2019-01-19T03:19:08Z,2012-04-11T15:39:32Z,"On the mailing list I said I wasn't sure whether this should be in ggplot2 or not. But now that it's an annotation and not a geom, it seems to make more sense.
",https://github.com/tidyverse/ggplot2/pull/418,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/415,2012-02-25T23:58:53Z,2019-01-19T04:20:59Z,2012-02-27T14:04:08Z,"I took the commits from @djmurphy420's pull request #342, rebased them on top of master, and fixed the conflicts.
",https://github.com/tidyverse/ggplot2/pull/415,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/414,2012-02-25T23:09:40Z,2019-01-19T04:21:01Z,2012-02-26T00:20:51Z,"This fixes #413.
",https://github.com/tidyverse/ggplot2/pull/414,ggplot2
kohske,COLLABORATOR,closed,6,https://github.com/tidyverse/ggplot2/pull/409,2012-02-20T19:25:56Z,2019-01-19T03:19:05Z,2012-02-23T13:40:08Z,,https://github.com/tidyverse/ggplot2/pull/409,ggplot2
jiho,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/405,2012-02-14T08:03:28Z,2019-01-19T06:07:37Z,2012-02-20T13:27:40Z,"`object` is more general than `data` and does not conflict with fortify()
- small documentation changes
",https://github.com/tidyverse/ggplot2/pull/405,ggplot2
kohske,COLLABORATOR,closed,9,https://github.com/tidyverse/ggplot2/pull/400,2012-02-09T14:27:52Z,2019-01-19T04:21:13Z,2012-02-21T13:39:57Z,"Unbelievably, this commit passes all exinting tests relevant to scales!
",https://github.com/tidyverse/ggplot2/pull/400,ggplot2
kohske,COLLABORATOR,closed,4,https://github.com/tidyverse/ggplot2/pull/395,2012-02-08T19:17:54Z,2019-01-19T03:19:03Z,2012-02-21T13:52:09Z,"maybe the size of padding should be customizable?
",https://github.com/tidyverse/ggplot2/pull/395,ggplot2
wch,MEMBER,closed,5,https://github.com/tidyverse/ggplot2/pull/393,2012-02-08T08:42:54Z,2019-01-19T03:19:01Z,2012-03-27T23:47:25Z,"I added the ability to control which sides geom_rug appears on. This lets you set it to any of ""trbl"" for top, right, bottom, and left. Common use cases might include:
- rugs on the top and right, instead of bottom and left.
- rugs on all four sides.
- a rug on just one axis

Some examples from the docs:

``` R
p <- ggplot(mtcars, aes(x=wt, y=mpg))
p + geom_point() + geom_rug()             # Default: bottom and left
p + geom_point() + geom_rug(sides=""b"")    # On bottom only
p + geom_point() + geom_rug(sides=""trbl"") # All four sides
```

Let me know if you think there is a better way of doing the `sides` parameter, or if there's a cleaner way to implement it.
",https://github.com/tidyverse/ggplot2/pull/393,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/392,2012-02-08T06:03:10Z,2019-01-19T04:21:04Z,2012-02-08T14:44:20Z,"This fixes #384. For this fix to work, it requires the update to scales at hadley/scales#11.

The fix in scales should not break anything else. However, if this pull request is merged without the change in scales, ggplot will probably be completely broken with discrete scales.
",https://github.com/tidyverse/ggplot2/pull/392,ggplot2
briandk,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/391,2012-02-08T05:39:32Z,2019-01-19T03:19:00Z,2012-02-08T14:09:18Z,"**This update to #387 fixes [spurious roxygen2 behavior](https://github.com/hadley/ggplot2/pull/387#issuecomment-3857757).**

The cross-linking should allow users to find the full list of arguments to guide_legend() and guide_colourbar() simply by searching the guides() help page.
",https://github.com/tidyverse/ggplot2/pull/391,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/389,2012-02-07T17:44:03Z,2019-01-19T12:37:35Z,2012-02-07T21:32:27Z,"Per discussion/request on developer mailing list
http://groups.google.com/group/ggplot2-dev/browse_thread/thread/446615dd5fcf35cf
",https://github.com/tidyverse/ggplot2/pull/389,ggplot2
briandk,CONTRIBUTOR,closed,6,https://github.com/tidyverse/ggplot2/pull/387,2012-02-06T22:45:17Z,2019-01-19T03:18:55Z,2012-02-08T05:39:48Z,"This change will hopefully make it easier for users to discover guide options by ensuring that all of the `guides` manpages link to each other
",https://github.com/tidyverse/ggplot2/pull/387,ggplot2
kohske,COLLABORATOR,closed,7,https://github.com/tidyverse/ggplot2/pull/382,2012-01-31T17:59:18Z,2019-01-19T03:18:58Z,2012-02-20T13:40:43Z,"now aes (e.g., colour, fill, etc) is not dropped during stats calculation.
Is there any reason why `stat_sum` only use `calculate_groups` but not use `calculate`?
",https://github.com/tidyverse/ggplot2/pull/382,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/379,2012-01-31T09:59:32Z,2019-01-19T03:18:53Z,2012-02-21T13:40:00Z,"This is a kind of temporal workaround.
We need to reconsider about trans in scale.

see #375, #373

Also this commit includes a fix for #374
",https://github.com/tidyverse/ggplot2/pull/379,ggplot2
kohske,COLLABORATOR,closed,7,https://github.com/tidyverse/ggplot2/pull/374,2012-01-25T14:25:41Z,2018-11-06T17:42:28Z,2012-02-21T13:40:00Z,,https://github.com/tidyverse/ggplot2/pull/374,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/371,2012-01-24T05:33:04Z,2019-01-19T14:25:21Z,2012-01-25T15:13:03Z,"I realized that I didn't include any information about the binning algorithm in the help file, so here it is. I wasn't totally sure if it should go in geom_dotplot or stat_bindot, but I figured people would be more likely to see it if it was in geom_dotplot.
",https://github.com/tidyverse/ggplot2/pull/371,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/370,2012-01-23T08:30:10Z,2018-11-06T17:42:30Z,2012-01-23T13:46:59Z,,https://github.com/tidyverse/ggplot2/pull/370,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/369,2012-01-23T05:22:58Z,2019-01-19T03:18:52Z,2012-01-25T15:17:27Z,"It now chooses auto method based on the size of the largest group, and displays a message about which method is being used.

The diff looks really ugly and confusing, but the change was pretty simple. I basically moved the method-decision block of code from $calculate to $calculate_groups, added messages, and updated the $calculate_groups function to handle the parameters correctly. But the diff viewer thinks I deleted and inserted lines of code all over the place. If the diff is too confusing, I might be able to redo it and make some trivial changes (spacing, etc) that result in a clearer diff.

In these examples, the smooth lines are now directly on top of each other, as they should be.

``` R
library(mgcv)

set.seed(125)
dat <- data.frame(xvar = runif(1000), yvar = rnorm(1000))
# Make two copies of the same values, in group A and B
dat <- rbind(cbind(dat, group='A'), cbind(dat, group='B'))

# Drop one of the B's, so there are 1000 A's and 999 B's
dat1 <- dat[-2000,]
# Drop one of the A's, so both A and B have the same 999 points
dat2 <- dat1[-1000,]


# Since there are >=1000 points in one group, this uses gam.
# The smoothing lines are now almost identical since the only difference
# between A and B is one data point, which you can see near (.5, 0)
ggplot(dat1, aes(x=xvar, y=yvar, colour=group)) +
    geom_point(alpha=.5) + geom_smooth(alpha=.5)
# geom_smooth: method=""auto"" and size of largest group is >=1000, so using gam with formula: y ~ s(x, bs = ""cs"").

# Since there are <1000 points in both groups, this uses loess
# The smoothing lines look identical.
# For this data, the loess fit looks straighter than gam used for dat1
ggplot(dat2, aes(x=xvar, y=yvar, colour=group)) +
    geom_point(alpha=.5) + geom_smooth(alpha=.5)
# geom_smooth: method=""auto"" and size of largest group is <1000, so using loess smoothing.

```
",https://github.com/tidyverse/ggplot2/pull/369,ggplot2
wch,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/368,2012-01-23T04:23:40Z,2019-01-19T03:18:49Z,2012-01-24T01:45:59Z,"This is an implementation of coord_range. This is the third attempt at resolving the issue raised by #361, and followed out of discussion #364. I decided to start over because it's cleaner this way.

I've done the following:
- implement coord_range
- fix coord_map to use `x.range` and `x.proj`, instead of `x.raw` and `x.range`
- modify abline, hline, and vline to use coord_range
- add visual tests
",https://github.com/tidyverse/ggplot2/pull/368,ggplot2
wch,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/366,2012-01-21T21:39:05Z,2019-01-19T03:18:47Z,2012-01-22T23:31:27Z,"This fixes #365.

I think it now correctly implements the haversine formula: 
http://en.wikipedia.org/wiki/Haversine_formula

```
> dist_central_angle(lat=c(-90,90), lon=c(-45,-45))
[1] 3.141593
> dist_central_angle(lat=c(0,0), lon=c(0,180))
[1] 3.141593
```
",https://github.com/tidyverse/ggplot2/pull/366,ggplot2
wch,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/364,2012-01-20T21:40:53Z,2019-01-19T20:52:09Z,2012-01-23T16:21:42Z,"This addresses #361. It adds a function to find what a coordinate transforms maps x and y to -- for example, x and y; y and x; or theta and x.

This makes it possible to have a general method to find the ranges of the x and y, even after transformation.
- I don't really like the method name I used, `coord_find_varmapping()` but I couldn't think of a better one. I'm open to suggestions.
- It gets, for example, scale$theta.range by using a string, as in scale[['theta.range']]. I know this isn't the best...
- I updated abline, hline, and vline to use it. Now these work with coord_flip and coord_polar, with the exception of abline with polar. Actually, it works, but it doesn't wrap around infinitely like it should.
- I also added visual tests for abline, hline, and vline. No test for abline with coord_polar, for reasons discussed above (and in #361).
- I haven't yet modified or tested coord_map.
",https://github.com/tidyverse/ggplot2/pull/364,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/362,2012-01-19T20:20:45Z,2019-01-19T03:18:45Z,2012-01-21T20:47:06Z,"This fixes #361.
",https://github.com/tidyverse/ggplot2/pull/362,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/360,2012-01-19T02:08:36Z,2019-01-19T04:21:05Z,2012-01-19T15:17:27Z,"This adds a warning message when `geom_dotplot` is used with `coord_polar`. It addresses #359.
",https://github.com/tidyverse/ggplot2/pull/360,ggplot2
djmurphy420,CONTRIBUTOR,closed,5,https://github.com/tidyverse/ggplot2/pull/356,2012-01-15T00:56:16Z,2019-01-19T03:18:43Z,2012-01-25T20:53:05Z,"Here's a set of modifications for the slowest of the example sets. I couldn't do much with stat_density or geom_bar, but replacing some of the larger data sets by subsets of them or by other data frames in the examples contained herein seemed to improve processing time a fair bit.
",https://github.com/tidyverse/ggplot2/pull/356,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/355,2012-01-11T05:14:44Z,2019-01-19T03:18:42Z,2012-01-19T14:05:42Z,"default: high-top to low-bottom
reversed: low-top to high-bottom
",https://github.com/tidyverse/ggplot2/pull/355,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/354,2012-01-11T00:07:24Z,2019-01-19T03:18:39Z,2012-01-18T14:29:58Z,"This fixes #353. Also, the median lines now ignore the alpha value so that the appearance is consistent with the box outline and whiskers.
",https://github.com/tidyverse/ggplot2/pull/354,ggplot2
kohske,COLLABORATOR,closed,4,https://github.com/tidyverse/ggplot2/pull/349,2012-01-06T04:54:32Z,2019-01-19T03:18:37Z,2012-01-25T20:33:39Z,"My fix have introduced another bug.
Indexing by `drop = TRUE` makes 1xN 2D matrix into 1D vector.
Here it should be `drop = FALSE`.

examples:

``` R
df1 <- data.frame(x = -3:3, y = -3:3)
df2 <- data.frame(x = seq(-2, 2, 0.1), y = 0, z = dnorm(seq(-2, 2, 0.1)))
df3 <- rename(df2, c(x = ""y"", y = ""x""))

p <- ggplot(NULL, aes(x, y)) + geom_point(data = df1)
p1 <- p + geom_tile(aes(fill = z), data = df2)
p2 <- p + geom_raster(aes(fill = z), data = df2)
p3 <- p + geom_tile(aes(fill = z), data = df3)
p4 <- p + geom_raster(aes(fill = z), data = df3)
```
",https://github.com/tidyverse/ggplot2/pull/349,ggplot2
JakeRuss,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/348,2012-01-03T17:24:05Z,2019-01-19T03:18:35Z,2012-01-25T15:12:31Z,"Let me know if there are any issues. 
",https://github.com/tidyverse/ggplot2/pull/348,ggplot2
wch,MEMBER,closed,4,https://github.com/tidyverse/ggplot2/pull/347,2012-01-03T15:54:58Z,2019-01-19T03:18:33Z,2012-01-18T14:25:34Z,"This fixes #346.

The first commit adds roxygen info for dotstackGrob, and the second commit adds the resulting changes from `roxygenize()`.

To be consistent with the other grobs, I also changed the S3 class name from `dotstackgrob` to `dotstackGrob`.
",https://github.com/tidyverse/ggplot2/pull/347,ggplot2
baptiste,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/345,2012-01-03T03:15:07Z,2019-01-19T06:07:27Z,2012-01-25T15:19:47Z,"I wasn't able to retrieve my previous branch. This is the NEWS for annotation_custom
",https://github.com/tidyverse/ggplot2/pull/345,ggplot2
JakeRuss,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/344,2012-01-01T20:40:07Z,2019-01-19T03:18:32Z,2012-01-03T04:04:00Z,"I'm sure if I've done all the submit changes to github part correctly. Just let me know if I need fix something.
",https://github.com/tidyverse/ggplot2/pull/344,ggplot2
kohske,COLLABORATOR,closed,7,https://github.com/tidyverse/ggplot2/pull/343,2012-01-01T08:06:35Z,2019-01-19T03:18:30Z,2012-02-21T13:55:03Z,,https://github.com/tidyverse/ggplot2/pull/343,ggplot2
djmurphy420,CONTRIBUTOR,closed,8,https://github.com/tidyverse/ggplot2/pull/342,2012-01-01T06:17:44Z,2019-01-19T04:20:57Z,2012-02-26T00:33:23Z,"Mostly typo fixes. The first example in ggpcp() fails, so it is fixed. A couple of comments re help pages of other geoms that I didn't modify:
    (i) should one say 'closed path' rather than 'path' in the title of geom_polygon()?
    (ii) I'm wondering if geom_smooth() always plots a conditional mean. What if you're plotting a quantile function, e.g., the median?
",https://github.com/tidyverse/ggplot2/pull/342,ggplot2
baptiste,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/341,2011-12-31T22:10:34Z,2019-01-19T06:07:25Z,2012-01-25T15:19:27Z,"cleaner custom grob pull request
",https://github.com/tidyverse/ggplot2/pull/341,ggplot2
djmurphy420,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/340,2011-12-31T13:56:31Z,2019-01-19T03:46:17Z,2012-01-02T15:23:38Z,"Resending descriptions for ggplot() and qplot() in their own branch.
",https://github.com/tidyverse/ggplot2/pull/340,ggplot2
djmurphy420,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/339,2011-12-31T04:40:57Z,2019-01-19T02:10:37Z,2011-12-31T14:52:31Z,"This is a test of sorts. I'm using Git Bash now instead of SmartGit and this pull request should be a lot cleaner, I hope. There are six files edited, each with minor typo fixes, and they are all in a separate branch. Let me know how this works out.
",https://github.com/tidyverse/ggplot2/pull/339,ggplot2
baptiste,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/337,2011-12-31T03:23:30Z,2019-01-19T06:07:23Z,2011-12-31T22:11:12Z,"attempt at a pull request... added annotation-custom.r and annotation-custom.Rd. R CMD check returns lots of warnings, but not from this addition. 
Note: I've wrapped one example in \dontrun{} because it requires gridExtra. Should I use a more basic grob instead? 
",https://github.com/tidyverse/ggplot2/pull/337,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/334,2011-12-30T02:20:58Z,2019-01-19T02:10:35Z,2011-12-30T15:57:27Z,,https://github.com/tidyverse/ggplot2/pull/334,ggplot2
djmurphy420,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/331,2011-12-29T22:15:21Z,2019-01-19T02:10:33Z,2011-12-31T15:24:47Z,"Added some description and a few examples to qplot() and ggplot() as requested. Let me know what you think and suggestions for improvement if you feel it's necessary.

D.
",https://github.com/tidyverse/ggplot2/pull/331,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/330,2011-12-29T15:44:14Z,2019-01-19T04:21:07Z,2011-12-29T18:12:18Z,"This adds the `binwidth` parameter to geom_dotplot.
",https://github.com/tidyverse/ggplot2/pull/330,ggplot2
djmurphy420,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/329,2011-12-29T01:44:51Z,2019-01-19T02:10:31Z,2011-12-29T14:22:45Z,"It appears that I've managed to push my repo successfully. Contained are changes to the help files that make it pass check_doc() with no errors. In a few cases, arguments that were in the documentation but not in the list of formal arguments had to be removed to get check_doc to work.
",https://github.com/tidyverse/ggplot2/pull/329,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/328,2011-12-28T21:02:47Z,2019-01-19T14:25:17Z,2011-12-28T21:06:09Z,"This adds `origin` and `binwidth` to the function call. It also fixes the documentation for `width`.
",https://github.com/tidyverse/ggplot2/pull/328,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/327,2011-12-27T17:15:29Z,2019-01-19T14:25:19Z,2011-12-29T18:12:15Z,"There have been a lot of questions about boxplots recently on the mailing list. Hopefully this will clear things up.
",https://github.com/tidyverse/ggplot2/pull/327,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/325,2011-12-25T02:26:04Z,2019-01-19T14:25:15Z,2011-12-29T18:12:06Z,"here is a typical usege:

```
> df <- data.frame(x = 1, y = 1, col = 1, txt = 1)
> aes_auto(df)
List of 3
 $ colour: symbol col
 $ x     : symbol x
 $ y     : symbol y
```

extra arguments are interpreted as manual aes-mapping (here, label = txt):

```
> aes_auto(df, label = txt)
List of 4
 $ colour: symbol col
 $ x     : symbol x
 $ y     : symbol y
 $ label : symbol txt
```
",https://github.com/tidyverse/ggplot2/pull/325,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/324,2011-12-24T02:05:19Z,2019-01-19T14:25:23Z,2011-12-24T02:09:19Z,"use `package:XXX` instead of `package::XXX`
",https://github.com/tidyverse/ggplot2/pull/324,ggplot2
wch,MEMBER,closed,3,https://github.com/tidyverse/ggplot2/pull/322,2011-12-24T00:08:21Z,2019-01-19T02:10:29Z,2011-12-24T02:01:21Z,,https://github.com/tidyverse/ggplot2/pull/322,ggplot2
wligtenberg,CONTRIBUTOR,closed,4,https://github.com/tidyverse/ggplot2/pull/320,2011-12-23T16:46:20Z,2019-01-19T03:46:13Z,2011-12-23T23:47:45Z,"As requested made a separate branch for the commit.

If any other changes are needed, I am willing to adapt.

Cheers,

Willem
",https://github.com/tidyverse/ggplot2/pull/320,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/318,2011-12-23T08:06:26Z,2019-01-19T02:10:27Z,2011-12-24T02:26:06Z,"here is an example:

```
cxc <- ggplot(mtcars, aes(x = factor(cyl))) + 
  geom_bar(width = 1, colour = ""black"")
cxc + coord_polar() # x = factor(cyl), y = count
cxc + coord_polar(theta = ""y"") # x = count, y = factor(cyl)
```
",https://github.com/tidyverse/ggplot2/pull/318,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/317,2011-12-23T06:12:19Z,2019-01-19T02:10:25Z,2011-12-23T14:24:28Z,"minor fix.
",https://github.com/tidyverse/ggplot2/pull/317,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/314,2011-12-21T17:54:01Z,2019-01-19T03:46:15Z,2011-12-21T17:56:50Z,"Now `scale_{x|y}_continuous(breaks = NA)` works again keeping the out-of-range bug out.
",https://github.com/tidyverse/ggplot2/pull/314,ggplot2
kohske,COLLABORATOR,closed,9,https://github.com/tidyverse/ggplot2/pull/308,2011-12-20T16:03:09Z,2019-01-19T04:21:15Z,2012-06-16T13:28:29Z,"a quick hack to get a guide grob.
If you need a same way with the previous version (i.e., opts(keep = ""legend""), probably I can do it.
Please let me know.
",https://github.com/tidyverse/ggplot2/pull/308,ggplot2
kohske,COLLABORATOR,closed,2,https://github.com/tidyverse/ggplot2/pull/307,2011-12-20T14:27:09Z,2019-01-19T02:10:23Z,2011-12-21T16:55:57Z,"Bug fix for scales.
",https://github.com/tidyverse/ggplot2/pull/307,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/306,2011-12-20T14:24:49Z,2019-01-19T02:10:21Z,2011-12-21T17:05:25Z,"This branch includes some bug fixes for guides.
Could you please look over the changes?
",https://github.com/tidyverse/ggplot2/pull/306,ggplot2
kohske,COLLABORATOR,closed,5,https://github.com/tidyverse/ggplot2/pull/305,2011-12-20T14:19:38Z,2018-11-06T17:42:26Z,2012-06-16T13:28:21Z,"This fix is not merged into master so here is a pull request.
",https://github.com/tidyverse/ggplot2/pull/305,ggplot2
wch,MEMBER,closed,2,https://github.com/tidyverse/ggplot2/pull/304,2011-12-20T07:15:27Z,2019-01-19T02:10:19Z,2011-12-20T13:43:41Z,"This fixes one part of #108.
",https://github.com/tidyverse/ggplot2/pull/304,ggplot2
wch,MEMBER,closed,13,https://github.com/tidyverse/ggplot2/pull/303,2011-12-20T01:03:07Z,2019-01-19T20:52:13Z,2011-12-23T23:47:11Z,"This is an implementation of dot plots.

I made this branch off of feature/geom-violin, so it looks like this pull request includes some of those previous commits. Hopefully this isn't a problem. I tested merging everything into the current hadley/master branch, and it seems to work.

Some things are strange because of dots are visually stacked. Notes:
- When binning along x axis, the y dimensions are arbitrary. This is because the vertical positioning of the the dots is done by the grob. I don't think it's possible to have correct y dimensions with ggplot2. (Something similar happens when binning along y axis, but the width is set so that each cluster will be dodged properly.)
- For the same reasons, the y axis label and tick labels aren't meaningful.
- When binning along x axis, pos_stack doesn't work because of the strange y dimensions. Stacking wouldn't be impossible to implement, but it would be a big hack (and it wouldn't use pos_stack).
- There is a fair bit of complexity. Part of it is because binning can be done on x or y, and part of it is because there are two methods of binning. Instead of adding the ""histodot"" option, I'd prefer to simply use stat_bin, but it doesn't allow binning along the y axis.

I'm going to try to implement the smoothing algorithm from Wilkinson (1999) p. 6, but I find it confusing at the moment.

Some examples here:
https://github.com/wch/ggplot2/wiki/geom_dotplot
",https://github.com/tidyverse/ggplot2/pull/303,ggplot2
wch,MEMBER,closed,1,https://github.com/tidyverse/ggplot2/pull/300,2011-12-18T07:43:40Z,2019-01-19T04:21:09Z,2011-12-19T13:13:05Z,,https://github.com/tidyverse/ggplot2/pull/300,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/296,2011-12-13T14:26:06Z,2019-01-19T14:25:01Z,2011-12-20T13:50:08Z,,https://github.com/tidyverse/ggplot2/pull/296,ggplot2
kohske,COLLABORATOR,closed,2,https://github.com/tidyverse/ggplot2/pull/295,2011-12-13T14:22:57Z,2019-01-19T02:10:17Z,2011-12-19T13:20:37Z,"Here is the bug report (from boxplot example):

```
> abc <- adply(matrix(rnorm(100), ncol = 5), 2, quantile, c(0, .25, .5, .75, 1))
> ggplot(abc, aes(x = X1, ymin = `0%`, lower = `25%`, middle = `50%`, upper = `75%`, ymax = `100%`)) +
+   geom_boxplot(stat = ""identity"")
Error in eval(expr, envir, enclos) : object '0%' not found
> ggplot(abc, aes(x = X1, y = `50%`)) + geom_point()
Error in eval(expr, envir, enclos) : object '50%' not found
> abc
  X1        0%        25%         50%       75%     100%
1  1 -1.714925 -0.6468398  0.17065804 0.4393230 1.201247
2  2 -1.189586 -0.6724862 -0.09751418 0.4884423 1.134490
3  3 -1.689927 -0.3296100  0.23288596 0.5751145 2.424042
4  4 -1.504052 -0.8237122 -0.33161341 0.3219800 1.507830
5  5 -2.463395 -0.7655001 -0.27450750 0.1631618 1.648378
```

This is because `transform` in `facet_map_layout.null` changes the column name.

```
> transform(abc, P=1)
  X1       X0.       X25.         X50.      X75.    X100. P
1  1 -2.584666 -0.5943572  0.200944872 0.7742156 2.166626 1
2  2 -2.115618 -0.4283542  0.004670815 0.3936428 1.808468 1
3  3 -2.638751 -0.7368470 -0.265173043 0.4781000 1.571617 1
4  4 -1.476560 -0.3720931  0.182308241 0.8797875 1.924785 1
5  5 -2.999939 -0.6789793 -0.214186432 1.0083131 1.775713 1
```

fixed it.
",https://github.com/tidyverse/ggplot2/pull/295,ggplot2
wch,MEMBER,closed,26,https://github.com/tidyverse/ggplot2/pull/293,2011-12-11T17:58:12Z,2019-01-19T16:55:35Z,2011-12-21T17:28:04Z,"This adds geom_violin and stat_ydensity. There are also changes to pos_dodge so that it dodges by group instead of by row.
",https://github.com/tidyverse/ggplot2/pull/293,ggplot2
wch,MEMBER,closed,7,https://github.com/tidyverse/ggplot2/pull/292,2011-12-11T17:55:11Z,2019-01-19T02:10:15Z,2011-12-20T21:30:42Z,"This adds the notch option to geom_boxplot.
",https://github.com/tidyverse/ggplot2/pull/292,ggplot2
kohske,COLLABORATOR,closed,10,https://github.com/tidyverse/ggplot2/pull/291,2011-12-11T15:23:40Z,2019-01-19T04:21:19Z,2011-12-22T01:10:28Z,"In the master branch, there are stat-aggr2d and stat-aggrhex. These are combination of stat-summary with geom-bin2d/geom-binhex. The stats are renamed.
",https://github.com/tidyverse/ggplot2/pull/291,ggplot2
kohske,COLLABORATOR,closed,3,https://github.com/tidyverse/ggplot2/pull/290,2011-12-11T14:06:46Z,2019-01-19T03:46:19Z,2011-12-11T15:12:12Z,"in the master branch, there are stat-aggr2d and stat-aggrhex. These are combination of stat-summary with geom-bin2d/geom-binhex. The stats are renamed.
",https://github.com/tidyverse/ggplot2/pull/290,ggplot2
kohske,COLLABORATOR,closed,3,https://github.com/tidyverse/ggplot2/pull/288,2011-12-10T10:29:28Z,2019-01-19T02:10:11Z,2011-12-11T14:45:50Z,,https://github.com/tidyverse/ggplot2/pull/288,ggplot2
BrianDiggs,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/286,2011-12-09T16:26:43Z,2019-01-19T14:25:05Z,2011-12-09T16:35:37Z,"This is a resubmission of pull request #229, now targeting the master branch after having been rebased to that branch.  Please see the original pull request for more detail.
",https://github.com/tidyverse/ggplot2/pull/286,ggplot2
jiho,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/285,2011-12-08T23:26:24Z,2019-01-19T14:24:59Z,2011-12-09T01:19:24Z,"Previously, only inches were available
",https://github.com/tidyverse/ggplot2/pull/285,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/265,2011-11-29T18:32:41Z,2019-01-19T04:20:45Z,2011-11-30T20:11:44Z,"Here is the dev version of my daily use.
As long as I tested, this branch is fast-forwardable when merging into the develop branch on your repository.
thanks.
",https://github.com/tidyverse/ggplot2/pull/265,ggplot2
kohske,COLLABORATOR,closed,3,https://github.com/tidyverse/ggplot2/pull/254,2011-11-01T14:59:35Z,2019-01-19T02:10:13Z,2011-11-30T20:11:50Z,"alpha support may be somewhat incoherent.
alpha does not affect the lines of geom_rect, but it affects the lines of geom_line.
",https://github.com/tidyverse/ggplot2/pull/254,ggplot2
kohske,COLLABORATOR,closed,2,https://github.com/tidyverse/ggplot2/pull/253,2011-11-01T14:35:25Z,2019-01-19T04:20:47Z,2011-11-01T18:49:24Z,"fix for issue #251
",https://github.com/tidyverse/ggplot2/pull/253,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/234,2011-08-29T14:23:42Z,2019-01-19T04:20:43Z,2011-11-30T20:11:49Z,"1. continuous scale now supports arbitral minor-break specification (as previous version).
2. discrete scale does not show minor-breaks (as previous version).
",https://github.com/tidyverse/ggplot2/pull/234,ggplot2
kohske,COLLABORATOR,closed,9,https://github.com/tidyverse/ggplot2/pull/233,2011-08-26T14:55:38Z,2019-01-19T04:21:17Z,2011-11-30T20:11:49Z,"I wrote test codes as much as possible, but definitely there must be bugs I'm unaware of.
Please let me know if I need fix something.
",https://github.com/tidyverse/ggplot2/pull/233,ggplot2
BrianDiggs,CONTRIBUTOR,closed,7,https://github.com/tidyverse/ggplot2/pull/229,2011-08-18T23:13:28Z,2019-01-19T12:37:33Z,2011-12-09T16:24:14Z,"This is to supersede Pull Request #228.  It is an implementation of autoplot which uses proper roxygen documentation.  The code for the functions is the same.  It also includes the roxygenized version of the documentation, and the additions to NAMESPACE and DESCRIPTION.
",https://github.com/tidyverse/ggplot2/pull/229,ggplot2
gsk3,NONE,closed,3,https://github.com/tidyverse/ggplot2/pull/228,2011-08-18T22:00:23Z,2019-01-19T06:08:01Z,2011-08-25T13:38:06Z,"This is the initial submission of autoplot() as discussed with Hadley in comments here:
http://stackoverflow.com/questions/7098830/bad-idea-ggplotting-an-s3-class-object

It is intended to provide a generic S3 method which package developers can use to write autoplot methods for their own classes.
",https://github.com/tidyverse/ggplot2/pull/228,ggplot2
kohske,COLLABORATOR,closed,4,https://github.com/tidyverse/ggplot2/pull/218,2011-08-05T07:59:06Z,2019-01-19T16:55:53Z,2011-11-30T20:11:49Z,"when setting aspect ratio with facetting, the setting is ignored.
This is because `compute_grob_dimensions` in utilities-table.r return `1null`
",https://github.com/tidyverse/ggplot2/pull/218,ggplot2
kohske,COLLABORATOR,closed,5,https://github.com/tidyverse/ggplot2/pull/217,2011-08-05T06:47:50Z,2019-01-19T04:21:27Z,2011-11-30T20:11:48Z,,https://github.com/tidyverse/ggplot2/pull/217,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/216,2011-08-05T06:46:17Z,2019-01-19T04:21:29Z,2011-08-05T06:46:51Z,,https://github.com/tidyverse/ggplot2/pull/216,ggplot2
kohske,COLLABORATOR,closed,2,https://github.com/tidyverse/ggplot2/pull/212,2011-07-29T14:11:33Z,2019-01-19T04:21:31Z,2011-07-29T14:14:15Z,"error occurs in remove_missing if data contains NA. Probably because of unevaled promise or something else.
",https://github.com/tidyverse/ggplot2/pull/212,ggplot2
davidmorrison,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/209,2011-07-16T03:18:53Z,2019-01-19T04:21:33Z,2011-07-26T02:10:58Z,"There were a couple of bare percent (%) signs in position_jitter.Rd that were causing warnings during the build.
",https://github.com/tidyverse/ggplot2/pull/209,ggplot2
BrianDiggs,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/208,2011-07-15T22:43:37Z,2019-01-19T06:07:59Z,2011-12-01T20:42:18Z,"Two changes to aes.r
",https://github.com/tidyverse/ggplot2/pull/208,ggplot2
BrianDiggs,CONTRIBUTOR,closed,3,https://github.com/tidyverse/ggplot2/pull/207,2011-07-15T17:10:53Z,2019-01-19T06:07:57Z,2011-07-15T17:12:35Z,"xintercept was added to the x scale (which already had xmin, xmax, and
xend). Similar for y.  Also added a to the tests (although did not pass
tests before change).  Fixes #206
",https://github.com/tidyverse/ggplot2/pull/207,ggplot2
davidmorrison,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/205,2011-07-12T18:24:16Z,2019-01-19T06:07:03Z,2011-07-12T18:27:10Z,"With this small tweak, the legend name and labels properly appear on the plot when I'm using scale_xxx_manual. 
",https://github.com/tidyverse/ggplot2/pull/205,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/200,2011-07-05T20:09:54Z,2019-01-19T06:07:55Z,2011-07-05T21:23:28Z,"Moved short description above roxygen tags so that it is not part of aliases.
",https://github.com/tidyverse/ggplot2/pull/200,ggplot2
BrianDiggs,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/199,2011-07-05T20:06:04Z,2019-01-19T02:10:07Z,2011-07-05T20:11:51Z,"Do not pull; submitted before complete.
",https://github.com/tidyverse/ggplot2/pull/199,ggplot2
BrianDiggs,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/198,2011-07-05T17:46:45Z,2019-01-19T06:07:53Z,2011-07-05T17:48:41Z,"Fixed typo in News.  Also, learning how to do pull requests and getting used to how git/github works.
",https://github.com/tidyverse/ggplot2/pull/198,ggplot2
jiho,CONTRIBUTOR,closed,8,https://github.com/tidyverse/ggplot2/pull/184,2011-05-18T15:53:57Z,2019-01-19T06:07:35Z,2011-12-08T23:26:54Z,,https://github.com/tidyverse/ggplot2/pull/184,ggplot2
jiho,CONTRIBUTOR,closed,1,https://github.com/tidyverse/ggplot2/pull/183,2011-05-18T15:43:02Z,2019-01-19T14:25:09Z,2011-06-28T13:16:46Z,"These are the remaining changes in my previous pull request regarding themes
",https://github.com/tidyverse/ggplot2/pull/183,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/182,2011-05-18T08:49:37Z,2019-01-19T06:07:05Z,2011-05-18T12:45:35Z,"Finally, here is a clean commit tree.
The bug in wisely zoom was fixed.
",https://github.com/tidyverse/ggplot2/pull/182,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/181,2011-05-18T07:28:23Z,2019-01-19T06:07:07Z,2011-05-18T12:38:32Z,"Finally I got a clean commit tree. Some notes on commits may be lost, though...

I modified geom_text so as to users specify fontfamily, fontface, and lineheight.
Note that the implementation is very simple, just pass the params to gpar.
So users need to set fontfamily via quartzFonts, pdfFonts, windowsFonts, etc, before using this function.
",https://github.com/tidyverse/ggplot2/pull/181,ggplot2
kohske,COLLABORATOR,closed,2,https://github.com/tidyverse/ggplot2/pull/180,2011-05-18T02:42:51Z,2019-01-19T06:07:09Z,2011-05-18T04:45:45Z,"I modified geom_text so as to users specify fontfamily, fontface, and lineheight.
Note that the implementation is very simple, just pass the params to gpar.
So users need to set fontfamily via quartzFonts, pdfFonts, windowsFonts, etc, before using this function.

A commit e1c08fbc is unexpectedly mixed in this branch.
Maybe I will fix the commit history and rebase.
",https://github.com/tidyverse/ggplot2/pull/180,ggplot2
kohske,COLLABORATOR,closed,4,https://github.com/tidyverse/ggplot2/pull/179,2011-05-17T16:49:20Z,2019-01-19T06:07:11Z,2011-05-18T04:43:43Z,"fix it.
As the scales${x|y}$limits are overwritten, please make sure this will not induce any problem in other place.
",https://github.com/tidyverse/ggplot2/pull/179,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/171,2011-03-31T15:48:38Z,2019-01-19T06:07:33Z,2011-05-18T15:43:53Z,"Small improvements to ggplot's themes
",https://github.com/tidyverse/ggplot2/pull/171,ggplot2
kohske,COLLABORATOR,closed,3,https://github.com/tidyverse/ggplot2/pull/166,2011-03-09T07:52:22Z,2019-01-19T06:07:13Z,2011-05-18T02:36:01Z,"I modified geom_text so as to users specify fontfamily, fontface, and lineheight.
Note that the implementation is very simple, just pass the params to gpar.
So users need to set fontfamily via quartzFonts, pdfFonts, windowsFonts, etc, before using this function.
",https://github.com/tidyverse/ggplot2/pull/166,ggplot2
jiho,CONTRIBUTOR,closed,2,https://github.com/tidyverse/ggplot2/pull/164,2011-03-04T17:13:55Z,2019-01-19T06:07:31Z,2011-05-18T15:59:43Z,"Fixes
",https://github.com/tidyverse/ggplot2/pull/164,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/154,2010-12-23T16:57:26Z,2019-01-19T14:25:03Z,2011-03-05T04:11:59Z,"Hi, I am aware that you are working for the next release now.
Here is an additional commit, which discussed in the mailing list.
I'm sorry if you have extra work for this commit.

the critical commit is: e1c08fbc    

<pre><code>## separately specifiy the x and y axis ticks.

p &lt;- qplot(mpg, wt, data=mtcars)

p
p + opts(axis.ticks.x = theme_segment(colour=""pink"", size=1))
p + opts(axis.ticks.x = theme_segment(colour=""pink"", size=1), axis.ticks.y = theme_segment(colour=""blue"", size=0.1))
</code></pre>
",https://github.com/tidyverse/ggplot2/pull/154,ggplot2
kohske,COLLABORATOR,closed,4,https://github.com/tidyverse/ggplot2/pull/150,2010-11-19T01:06:40Z,2019-01-19T06:07:21Z,2010-12-23T15:16:41Z,"Here is a test code with some comments.
I'd better to send separate pull-requests for this two commits...
Now I know that pull-request cannot choose commits, instead all updates are inevitably included.
So in future, I will do commit-pull-request phase for each commit.
<code><pre># full-range draw example
# 
# this code tries to draw a panel on full-range, but fails in ggplot2-0.8.8
# 
# commit in grob-null.r
# 
# Previously, it failed to draw a panel on full-range.
# This is becausae is.zero wrongly return false when grob is zeroGrob.
# This is ggname() adds a prefix to zeroGrob, so identical() in is.zero() returns false.
# Now, zeroGrob is determined if it inherits ""zeroGrob"".
# Hence, it fixed the extra margin problem
# 
# commit in guides-axis.r
# 
# Previously, axis tried to draw zeroGrob of axis labels and ticks on zero-size viewport.
# This bug emerges my recent modification, which imprement axis label justification by using frameGrob.
# Now guides-axis does not draw (i.e., put it on the frame), if they are zeroGrob.
# I think, hopefully, it is preferable not to draw zeroGrob if it is placed on the frame,
# since it keep from extra if-then dispatch.
# But I have not yet figure out how to implement this.
# .zeroGrob &lt;\- grob(cl = ""zeroGrob"", name = ""NULL"", draw = FALSE) did not work.
# 

qplot(x=1:2,y=1:2)+
  opts( 
    legend.position = ""none"",
    panel.grid.major = theme_blank(),
    panel.grid.minor = theme_blank(),
    panel.margin = unit(0,""null""),
    plot.margin = rep(unit(0,""null""),4),
    axis.ticks = theme_blank(),
    axis.text.x = theme_blank(),
    axis.text.y = theme_blank(),
    axis.title.x = theme_blank(),
    axis.title.y = theme_blank(),
    axis.ticks.length = unit(0,""null""),
    axis.ticks.margin = unit(0,""null"")
  )
</pre></code>
",https://github.com/tidyverse/ggplot2/pull/150,ggplot2
kohske,COLLABORATOR,closed,2,https://github.com/tidyverse/ggplot2/pull/145,2010-10-29T05:22:41Z,2019-01-19T06:07:19Z,2010-11-15T17:31:30Z,"hi hadley

this is a bug fix of coord_polor.
I made sure that this code works well for all example in help file.
and also, probably you can see the difference by

ggplot(mtcars, aes(x = factor(1), fill = factor(cyl))) + geom_bar(width = 1) + coord_polar()

I can find s small blank on around (356, 360) deg.
probably this is a bug in interp function.

and now I rewrote the calculation how many vertices are drawn by using the cartesian distance of polar coordinate. please find the distance() in coord-polar.r 

thanks.

kohske
",https://github.com/tidyverse/ggplot2/pull/145,ggplot2
kohske,COLLABORATOR,closed,1,https://github.com/tidyverse/ggplot2/pull/143,2010-10-19T05:47:34Z,2019-01-19T06:07:15Z,2010-11-15T17:31:29Z,"Hi Hadley

I have small changes in position-collide.r, removing a bug and following your coding style.
facet-grid.r remains the previous commit.

In works of legend, I made a change on behavior.
When legend.direction is vertical, then there is no change from the original one.
When legend.direction is horizontal, all legends are centre-aligned horizontally.
I put some example code on the head of guide_legends_box.

I hope I'm using github and pull request system in correct way...

Thanks.

Kohske
",https://github.com/tidyverse/ggplot2/pull/143,ggplot2
kohske,COLLABORATOR,closed,5,https://github.com/tidyverse/ggplot2/pull/142,2010-10-15T13:38:28Z,2019-01-19T06:07:17Z,2010-11-16T01:31:29Z,"first and third commits are bug fix.
as for 77a308d7 commit, please see http://groups.google.com/group/ggplot2/browse_thread/thread/2b939820d687cca2

In second commit, I implemented the ability to specify legend in more detail.
I think this is useful, but I don't know if this is necessary for ggplot2.
So, please merge this only when you think this is really improvement.

thanks a lot.

kohske
",https://github.com/tidyverse/ggplot2/pull/142,ggplot2
simonpcouch,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/2125,2022-04-27T13:44:38Z,2022-04-27T18:34:38Z,2022-04-27T18:34:38Z,"Hey there! This warning came up in an app I work on and I saw there was some previous discussion that yall might be open to transitioning your {tidyr} code over to the new pivoting syntax.

The transitions are all relatively similar to each other and follow this form:

``` r
library(tidyr)
library(testthat)
#> 
#> Attaching package: 'testthat'
#> The following object is masked from 'package:tidyr':
#> 
#>     matches

vt <- ""x""

relig_income <- as.data.frame(relig_income)

expect_equal(
  relig_income %>%
    pivot_longer(cols = ""religion"", names_to = ""income"", values_to = vt) %>%
    as.data.frame(),
  relig_income %>%
    gather_(gather_cols = ""religion"", key_col = ""income"", value_col = vt) 
)
#> Warning: `gather_()` was deprecated in tidyr 1.2.0.
#> Please use `gather()` instead.
#> This warning is displayed once every 8 hours.
#> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.
```

<sup>Created on 2022-04-27 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>

Much appreciated! 

Closes #2088, closes tidymodels/shinymodels#70.",https://github.com/plotly/plotly.R/pull/2125,plotly
casperhart,CONTRIBUTOR,open,2,https://github.com/plotly/plotly.R/pull/2098,2022-01-09T03:13:23Z,2022-04-24T20:57:33Z,list(),"When linking plots using {crosstalk}, running `selectionHandle.clear()` from another (non-plotly) visual causes the following error to appear in the console and the selection in the plotly visual is not cleared:
![image](https://user-images.githubusercontent.com/39182232/148667501-f688c92f-475d-404e-acc4-5584bd8f4d20.png)

This is because `selectionHandle.clear()` event passes an `undefined` value, which plotly isn't dealing with properly.

This PR fixes this issue.",https://github.com/plotly/plotly.R/pull/2098,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2096,2022-01-06T17:44:18Z,2022-03-26T17:56:19Z,2022-03-26T17:56:17Z,list(),https://github.com/plotly/plotly.R/pull/2096,plotly
casperhart,CONTRIBUTOR,closed,4,https://github.com/plotly/plotly.R/pull/2087,2021-12-12T09:34:42Z,2022-04-24T21:08:55Z,2022-04-24T15:10:39Z,"Hi, this is my first PR to this repository and I have reviewed the contributing guidelines. However I wasn't sure if it was necessary to create an issue first, or how to write tests for this change, so I'm open to suggestions.

## Why this PR?

I was having an issue using plotly with crosstalk filtering, where if all filters were cleared, the filtering would not be removed correctly and an exception would be raised in the browser console. This PR fixes that issue.

## Example

```r
library(crosstalk)
library(plotly)
library(DT)

data(iris)

shared_iris <- SharedData$new(iris)

a <- plot_ly(shared_iris, x = ~Sepal.Length, y = ~Sepal.Width) %>%
    add_markers() %>%
    highlight(on = ""plotly_click"", dynamic = TRUE)
b <- datatable(shared_iris)

bscols(
    list(
        filter_checkbox(""species"", ""Species"", shared_iris, ~Species)
    ),
    a, b 
)
```

### Steps to reproduce

In the webpage generated by the above code, select `setosa` under the species checkbox filter. Then unselect `setosa`

### Expected behaviour

the filtering returns to its original state

### Actual behaviour

the filtering doesn't change, and the following error appears in the console:
![image](https://user-images.githubusercontent.com/39182232/145707110-37a31f84-bbc9-4aa1-b728-35596365acf6.png)




",https://github.com/plotly/plotly.R/pull/2087,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2072,2021-11-12T20:42:19Z,2021-11-17T15:53:00Z,2021-11-17T15:52:58Z,Provided by https://github.com/wch/staticimports/pull/11,https://github.com/plotly/plotly.R/pull/2072,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2067,2021-11-02T17:52:26Z,2021-11-02T18:00:48Z,2021-11-02T18:00:46Z,"Closes #2043
Closes https://github.com/plotly/plotly.R/issues/2007",https://github.com/plotly/plotly.R/pull/2067,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2066,2021-11-02T17:05:52Z,2021-11-02T17:06:09Z,2021-11-02T17:06:07Z,Follow up to #2063 (this should've been done there and should fix failing unit tests),https://github.com/plotly/plotly.R/pull/2066,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2065,2021-11-02T15:34:16Z,2021-11-02T15:54:20Z,2021-11-02T15:54:18Z,"Closes #2011
Closes #1377
Closes #1030

Supersedes #2052",https://github.com/plotly/plotly.R/pull/2065,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2064,2021-11-01T21:39:12Z,2021-11-02T16:00:29Z,2021-11-02T16:00:28Z,"Closes #2013

To be merged after #2063 ",https://github.com/plotly/plotly.R/pull/2064,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2063,2021-11-01T21:31:59Z,2021-11-02T15:57:05Z,2021-11-02T15:57:03Z,Closes #1562,https://github.com/plotly/plotly.R/pull/2063,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2062,2021-11-01T20:40:22Z,2021-11-02T16:10:05Z,2021-11-02T16:10:03Z,Closes #2012,https://github.com/plotly/plotly.R/pull/2062,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2061,2021-11-01T18:52:31Z,2021-11-02T15:48:32Z,2021-11-02T15:48:30Z,"Closes #1824
Closes #1614

Supersedes https://github.com/plotly/plotly.R/pull/2044",https://github.com/plotly/plotly.R/pull/2061,plotly
moutikabdessabour,CONTRIBUTOR,open,0,https://github.com/plotly/plotly.R/pull/2053,2021-10-23T07:23:08Z,2022-03-26T18:43:31Z,list(),- [x] change news.md,https://github.com/plotly/plotly.R/pull/2053,plotly
moutikabdessabour,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/2052,2021-10-22T21:28:33Z,2021-11-02T15:36:02Z,2021-11-02T15:35:27Z,- [x] change `NEWS.md`,https://github.com/plotly/plotly.R/pull/2052,plotly
moutikabdessabour,CONTRIBUTOR,open,0,https://github.com/plotly/plotly.R/pull/2051,2021-10-22T11:00:24Z,2022-03-26T18:43:31Z,list(),- [x] change NEWS.MD,https://github.com/plotly/plotly.R/pull/2051,plotly
moutikabdessabour,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/2047,2021-10-14T21:13:15Z,2021-11-02T16:33:34Z,2021-11-02T16:33:34Z,"- [x] Implement test
- [ ] add changes to `NEWS.md` ",https://github.com/plotly/plotly.R/pull/2047,plotly
bersbersbers,CONTRIBUTOR,closed,10,https://github.com/plotly/plotly.R/pull/2046,2021-10-13T15:49:50Z,2021-10-18T20:02:56Z,2021-10-18T20:02:37Z,"For the first version of this PR, I am most of all interested in if/how CI works.

I will then fix more of these warnings in later commits.

Finally, I wonder how tests should be adapted for this case. On my system, with `options(warnPartialMatchArgs = TRUE)` in `.Rprofile`, several existing tests are issuing warnings. One could use
```r
options(warnPartialMatchArgs = TRUE, warnPartialMatchAttr = TRUE, warnPartialMatchDollar = TRUE)
```
in the setup of any test, but that might fail if dependencies issue such warnings.",https://github.com/plotly/plotly.R/pull/2046,plotly
moutikabdessabour,CONTRIBUTOR,open,5,https://github.com/plotly/plotly.R/pull/2045,2021-10-13T05:08:00Z,2022-03-26T18:43:31Z,list(),"Implemented `to_basic` methods that handle the output of `fabletools:autoplot.fbl_ts` and Added tests
```r
library(dplyr)
library(forecast)
library(tsibble)

data <- tourism %>%
    filter(Region == ""Melbourne"") %>%
    `[`(, c(""Quarter"", ""Trips"", ""Region"")) %>%
    distinct(Quarter, .keep_all = TRUE) %>%
    as_tsibble(key = Region) 
p <- data %>%
    model(
        ets = ETS(Trips ~ trend(""A"")),
    ) %>%
    forecast(h = ""5 years"") %>%
    autoplot(data)

p

ggplotly(p)
```

![ggplot](https://user-images.githubusercontent.com/11250014/137070772-21c387d4-a29a-40dd-8065-8ca565268be8.png)

![ggplotly](https://user-images.githubusercontent.com/11250014/137070710-534fb636-73ed-4cbc-b609-c3981c147cb7.png)
.",https://github.com/plotly/plotly.R/pull/2045,plotly
moutikabdessabour,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/2044,2021-10-12T21:14:55Z,2021-11-02T15:41:00Z,2021-11-02T15:41:00Z,"Closes #1614. 
```r
 p <- ggplot(as.data.frame(Titanic),
            aes(y = Freq,
                axis1 = Survived, axis2 = Sex, axis3 = Class)) +
        geom_alluvium(aes(fill = Class),
                width = 0, knot.pos = 0, reverse = FALSE) +
        guides(fill = ""none"") +
        geom_stratum(width = 1/8, reverse = FALSE) +
        geom_text(stat = ""stratum"", aes(label = after_stat(stratum)),
                  reverse = FALSE) +
        scale_x_continuous(breaks = 1:3, labels = c(""Survived"", ""Sex"", ""Class"")) +
        coord_flip() +
        ggtitle(""Titanic survival by class and sex"")
p
ggplotly(p)
```
![ggplot](https://user-images.githubusercontent.com/11250014/137029994-fdc6f269-15a3-40f2-96df-59d10a7ec66c.png)

![ggplotly](https://user-images.githubusercontent.com/11250014/137029981-c157e13f-4f54-4f89-93ab-ec711084c642.png)

I added tests and everything.
",https://github.com/plotly/plotly.R/pull/2044,plotly
moutikabdessabour,CONTRIBUTOR,closed,6,https://github.com/plotly/plotly.R/pull/2042,2021-10-08T20:01:09Z,2021-10-14T16:51:06Z,2021-10-14T16:51:06Z,@cpsievert Implemented `to_basic` for `GeomFunction` class.,https://github.com/plotly/plotly.R/pull/2042,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2041,2021-10-08T17:41:21Z,2021-10-08T18:58:39Z,2021-10-08T18:58:38Z,Closes #2040,https://github.com/plotly/plotly.R/pull/2041,plotly
moutikabdessabour,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/2039,2021-10-08T16:05:54Z,2021-11-02T20:15:20Z,2021-11-02T20:15:19Z,"Now the user can define the axis positions directly from `ggplot`.
```r
library(plotly)
library(ggplot2)

p <- ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  scale_x_continuous(position = 'top')

ggplotly(p)
```
![Screen Shot 2021-10-08 at 9 05 15 AM](https://user-images.githubusercontent.com/11250014/136588627-864c33b0-c0d6-4799-8c57-2dfe11693d86.png)

the `side` child element of `axisObj` was not being set making plotly use the defaults. I added the entry and used ggplot's `get_scales` function to get the scale for each axis then the position. @cpsievert can you please approve this PR? the tests that failed are related to a missing api key",https://github.com/plotly/plotly.R/pull/2039,plotly
moutikabdessabour,CONTRIBUTOR,closed,5,https://github.com/plotly/plotly.R/pull/2034,2021-09-28T23:16:50Z,2021-10-14T23:11:49Z,2021-10-14T16:50:07Z,Closes #2031. ggplot internally converts `color` to `colour`. Note that running the tests locally results in the deletion of `_snap` folder. @jackparmer @cpsievert. Maybe I should stop using `git commit -am`,https://github.com/plotly/plotly.R/pull/2034,plotly
moutikabdessabour,CONTRIBUTOR,closed,5,https://github.com/plotly/plotly.R/pull/2030,2021-09-28T08:06:19Z,2021-11-01T17:34:52Z,2021-11-01T17:34:51Z,"Solved The LaTeX2exp error. for more information check #2027.

Same code now gives the correct output.
```r
library(plotly)
library(latex2exp)
library(ggplot2)

p <- qplot(1, ""A"")+
     ylab(TeX(""Formula: $\\frac{2hc^2}{\\lambda^\\beta}$""))+
     xlab(TeX(""$\\alpha$""))

ggplotly(p)
```

![](https://user-images.githubusercontent.com/11250014/135048116-7b000749-d720-48e1-94eb-702f267488ac.png)

BTW running `devtools::test()` locally resulted in the deletion of the `tests/test_that/_snaps` folder may we should consider adding this folder to `.gitignore` ? Also great package. ",https://github.com/plotly/plotly.R/pull/2030,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2002,2021-09-20T22:32:29Z,2021-09-21T13:47:38Z,2021-09-21T13:47:34Z,Updates from 2.2.1 to 2.5.1,https://github.com/plotly/plotly.R/pull/2002,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/2001,2021-09-20T22:13:02Z,2021-09-20T22:30:58Z,2021-09-20T22:30:55Z,"This change makes it easier to implement smooth transitions when `renderPlotly()` is performing a redraw (by specifying `layout(transition = ...)`), which from my limited experimentation works reasonably well with `scatter` traces, especially if you have `xaxis.range`/`yaxis.range` fixed ""globally"". Here's a basic example:

```r
library(shiny)
library(plotly)

ui <- fluidPage(
  plotlyOutput(""p"")
)

server <- function(input, output, session) {
  output$p <- renderPlotly({
    invalidateLater(1000)
    plot_ly() %>%
      add_markers(x = rnorm(100), y = rnorm(100), alpha = 0.2) %>%
      layout(
        xaxis = list(range = c(-3, 3)),
        yaxis = list(range = c(-3, 3)),
        transition = list(
          duration = 1000, 
          easing = ""linear""
        )
      )
  })
}

shinyApp(ui, server)
```

Unfortunately `Plotly.react()` doesn't seem to support smooth transitions of non-scatter traces very well, but one can leverage workarounds such as https://plotly-r.com/animating-views.html#animation-support to implement things like animated ""bars"" ",https://github.com/plotly/plotly.R/pull/2001,plotly
s-fleck,NONE,open,0,https://github.com/plotly/plotly.R/pull/1999,2021-09-14T05:56:00Z,2022-03-26T18:43:31Z,list(),"`RColorBrewer::brewer.pal()` throws an (in this case) unnecessary warning if the output plot requires less than 2 colors. This is an easy fix, and does not change the workings of the code since `RColorBrewer::brewer.pal()` never returns less than three levels anywas:

```
> RColorBrewer::brewer.pal(2, ""Set2"")
[1] ""#66C2A5"" ""#FC8D62"" ""#8DA0CB""
Warning message:
In RColorBrewer::brewer.pal(2, ""Set2"") :
  minimal value for n is 3, returning requested palette with 3 different levels
```",https://github.com/plotly/plotly.R/pull/1999,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1982,2021-07-18T16:57:29Z,2021-07-18T17:31:09Z,2021-07-18T17:31:08Z,,https://github.com/plotly/plotly.R/pull/1982,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1981,2021-07-18T16:55:01Z,2021-07-18T17:17:36Z,2021-07-18T17:17:35Z,,https://github.com/plotly/plotly.R/pull/1981,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1975,2021-07-13T14:34:35Z,2021-07-14T20:43:27Z,2021-07-14T20:43:26Z,,https://github.com/plotly/plotly.R/pull/1975,plotly
abhilashlakshman,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/1974,2021-07-09T20:25:22Z,2021-07-14T19:34:17Z,2021-07-14T19:34:17Z,"Closes #1628

To get rid of ""Error is get_domains(length(plots), nrows, margin, widths = widths, heights = heights): The sum of the widths and heights arguments must be less than 1.",https://github.com/plotly/plotly.R/pull/1974,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1971,2021-07-02T18:01:33Z,2021-07-14T22:30:00Z,2021-07-14T22:29:59Z,"Adds `kaleido()` for static image exporting via https://github.com/plotly/Kaleido/, for example:

```r
library(plotly)
scope <- kaleido()
tmp <- tempfile(fileext = "".png"")
scope$transform(plot_ly(x = 1:10), tmp)
file.show(tmp)
```

Using `kaleido()` requires that both the kaleido and plotly Python packages are usable via reticulate. Here's a way to do that via miniconda:

```r
install.packages('reticulate')
reticulate::install_miniconda()
reticulate::conda_install('r-reticulate', 'python-kaleido')
reticulate::conda_install('r-reticulate', 'plotly', channel = 'plotly')
reticulate::use_miniconda('r-reticulate')
```

",https://github.com/plotly/plotly.R/pull/1971,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1967,2021-06-21T15:17:41Z,2021-06-22T14:07:44Z,2021-06-22T14:07:40Z,,https://github.com/plotly/plotly.R/pull/1967,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1965,2021-06-17T17:09:32Z,2021-06-21T15:17:04Z,2021-06-21T15:04:03Z,,https://github.com/plotly/plotly.R/pull/1965,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1964,2021-06-17T16:59:11Z,2021-06-17T17:04:14Z,2021-06-17T17:04:10Z,"Follow up to #1952. I missed the changes made in https://github.com/tidyverse/ggplot2/pull/4475, which introduces the following failures (this change fixes them):

```
  ══ Failed tests ════════════════════════════════════════════════════════════════
  ── Failure (test-animate-highlight.R:119:7): When key is equivalent to group, produce simple keys ──
  tr$key == tr$name is not TRUE
  
  `actual`:
  `expected`: TRUE
  ── Failure (test-animate-highlight.R:120:7): When key is equivalent to group, produce simple keys ──
  tr$`_isSimpleKey` is not TRUE
  
  `actual` is NULL
  `expected` is a logical vector (TRUE)
  ── Failure (test-animate-highlight.R:119:7): When key is equivalent to group, produce simple keys ──
  tr$key == tr$name is not TRUE
  
  `actual`:
  `expected`: TRUE
  ── Failure (test-animate-highlight.R:120:7): When key is equivalent to group, produce simple keys ──
  tr$`_isSimpleKey` is not TRUE
  
  `actual` is NULL
  `expected` is a logical vector (TRUE)
  
  [ FAIL 4 | WARN 36 | SKIP 56 | PASS 1404 ]
```",https://github.com/plotly/plotly.R/pull/1964,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1961,2021-06-09T23:10:05Z,2021-06-21T15:04:23Z,2021-06-18T14:07:56Z,,https://github.com/plotly/plotly.R/pull/1961,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1959,2021-06-08T15:59:16Z,2021-06-08T18:36:53Z,2021-06-08T18:36:49Z,,https://github.com/plotly/plotly.R/pull/1959,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1952,2021-05-17T15:44:32Z,2021-05-17T16:30:21Z,2021-05-17T16:30:17Z,Closes #1951 and another issue with `aes()` mappings getting duplicated in tooltips (surfaced via unit tests) ,https://github.com/plotly/plotly.R/pull/1952,plotly
charliejhadley,CONTRIBUTOR,open,0,https://github.com/plotly/plotly.R/pull/1945,2021-04-21T08:07:50Z,2022-03-26T18:43:31Z,list(),This PR is intended to solve this issue https://github.com/ropensci/plotly/issues/1944 by sorting the traces in the error message.,https://github.com/plotly/plotly.R/pull/1945,plotly
cpsievert,COLLABORATOR,closed,4,https://github.com/plotly/plotly.R/pull/1936,2021-03-26T22:38:55Z,2021-06-09T22:36:18Z,2021-04-07T14:37:33Z,Closes #1584,https://github.com/plotly/plotly.R/pull/1936,plotly
FrankBornais,CONTRIBUTOR,closed,6,https://github.com/plotly/plotly.R/pull/1932,2021-03-13T05:20:05Z,2021-03-18T23:04:33Z,2021-03-18T22:24:30Z,"- Fix #1618 
- Fix #1903",https://github.com/plotly/plotly.R/pull/1932,plotly
FrankBornais,CONTRIBUTOR,closed,0,https://github.com/plotly/plotly.R/pull/1927,2021-03-07T18:27:01Z,2021-03-13T01:53:18Z,2021-03-08T16:40:40Z,*fix #1919 ,https://github.com/plotly/plotly.R/pull/1927,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/1901,2020-12-10T16:07:56Z,2021-01-10T16:45:35Z,2021-01-10T16:45:35Z,"TODO:

- [x] Clean your package directory to remove any extraneous files, including ones that are git-ignored. (Warning, this will delete any unsaved buffers in RStudio! Also, be sure to close RStudio before taking this step!) `git clean -xdf .`
- [x] Build your package. I (jcheng) personally do it from the Mac command line like this:
PATH=$PATH:/Applications/RStudio.app/Contents/MacOS/pandoc R CMD build [pkgdir]
- [x] Do a sanity check by installing/testing the built package.
- [x] Run R CMD check --as-cran pkg_version.tar.gz both locally and on win-builder. You can also use https://r-hub.github.io/rhub/.
- [x] Perform revdepcheck.
- [x] Submit to CRAN via their online form.
- [x] If there are R CMD check warnings that are unavoidable, make sure to explain them in the comments.
- [x] When accepted, tag the RC branch with a v4.9.3 tag, and push the tag to origin
- [x] Merge RC into master
- [ ] On master, change the package version to 4.9.3.9000
- [ ] Revert the changes in f47a771
",https://github.com/plotly/plotly.R/pull/1901,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1892,2020-11-28T00:02:34Z,2020-12-08T23:20:40Z,2020-12-08T23:20:35Z,,https://github.com/plotly/plotly.R/pull/1892,plotly
wch,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1879,2020-11-05T20:37:02Z,2020-11-16T16:35:56Z,2020-11-16T16:35:52Z,"To be merged after https://github.com/ramnathv/htmlwidgets/pull/391.

This makes `renderPlotly` work with `shiny::bindCache` in the dev version of shiny. For example:

```R
library(shiny)
library(plotly)

ui <- fluidPage(
  selectizeInput(
    inputId = ""cities"", 
    label = ""Select a city"", 
    choices = unique(txhousing$city), 
    selected = ""Abilene"",
    multiple = TRUE
  ),
  plotlyOutput(outputId = ""p"")
)

server <- function(input, output, ...) {
  output$p <- renderPlotly({
    message(""Computing p: "", paste(input$cities, collapse = "", ""))
    Sys.sleep(2)
    plot_ly(txhousing, x = ~date, y = ~median) %>%
      filter(city %in% input$cities) %>%
      group_by(city) %>%
      add_lines()
  }) %>% 
    bindCache(input$cities)

}

shinyApp(ui, server)
```",https://github.com/plotly/plotly.R/pull/1879,plotly
FlukeAndFeather,CONTRIBUTOR,closed,8,https://github.com/plotly/plotly.R/pull/1871,2020-10-26T04:00:13Z,2020-12-08T22:09:31Z,2020-12-08T22:09:31Z,"Resolves #1870 

Adds an ISO 8601 time_format with milliseconds to to_JSON(). So the R objects don't change (i.e. POSIXct objects remain POSIXct) but their conversion to JSON does.",https://github.com/plotly/plotly.R/pull/1871,plotly
okhoma,NONE,open,2,https://github.com/plotly/plotly.R/pull/1848,2020-09-08T10:10:14Z,2022-03-26T18:43:31Z,list(),,https://github.com/plotly/plotly.R/pull/1848,plotly
julianstanley,CONTRIBUTOR,closed,0,https://github.com/plotly/plotly.R/pull/1830,2020-07-31T17:28:27Z,2020-11-18T15:24:22Z,2020-11-18T15:24:22Z,"Resolves #1790 

And, if/once these changes look good, then I'll go on to make similar changes in plotly-r.com https://github.com/cpsievert/plotly_book/issues/83
",https://github.com/plotly/plotly.R/pull/1830,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1821,2020-07-21T23:09:20Z,2020-07-24T17:40:19Z,2020-07-24T17:40:19Z,"Closes #1783, #1825, and #1799",https://github.com/plotly/plotly.R/pull/1821,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1804,2020-06-26T17:24:32Z,2020-06-26T21:37:03Z,2020-06-26T21:36:57Z,"Closes #1803, here's an example:

```r
library(shiny)
library(plotly)
library(thematic)

thematic_shiny(font = ""auto"")

ui <- fluidPage(
  titlePanel(""Hello auto theming with ggplotly()""),
  tags$head(
    tags$link(href=""https://fonts.googleapis.com/css?family=Pacifico"", rel=""stylesheet""),
    tags$style(HTML(""body{background-color:#444444; color:#e4e4e4; font-family: Pacifico}"")),
    tags$style(HTML(""a{color:#e39777}""))
  ),
  plotlyOutput(""p"")
)

server <- function(input, output, session) {
  output$p <- renderPlotly({
    p <- ggplot(faithfuld, aes(waiting, eruptions, z = density)) + 
      geom_raster(aes(fill = density)) + 
      geom_contour()
    ggplotly(p)
  })
}

shinyApp(ui, server)
```

<img width=""882"" alt=""Screen Shot 2020-06-26 at 12 24 16 PM"" src=""https://user-images.githubusercontent.com/1365941/85884291-038a3780-b7a8-11ea-87fb-37e6d32bdedb.png"">
",https://github.com/plotly/plotly.R/pull/1804,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1802,2020-06-26T15:40:04Z,2020-10-22T13:59:51Z,2020-06-26T16:16:24Z,"Adds the ability to access the new CSS styles reported in `getCurrentOutputInfo()` inside of a `renderPlotly()` context. For example:

```r
library(shiny)
library(plotly)

ui <- fluidPage(
  tags$style(HTML(""body {background-color: black; color: white}"")),
  tags$style(HTML(""body a {color: orange}"")),
  plotlyOutput(""p"")
)

server <- function(input, output, session) {
  
  output$p <- renderPlotly({
    info <- getCurrentOutputInfo()
    plot_ly(x = 0:10, y = 0:10, color = I(info$accent())) %>%
      layout(
        font = list(color = info$fg()),
        paper_bgcolor = info$bg(),
        plot_bgcolor = info$bg(),
        xaxis = list(
          gridcolor = info$fg(),
          zerolinecolor = info$fg()
        ),
        yaxis = list(
          gridcolor = info$fg(),
          zerolinecolor = info$fg()
        )
      )
  })
  
}

shinyApp(ui, server)
```

<img width=""821"" alt=""Screen Shot 2020-06-26 at 11 34 02 AM"" src=""https://user-images.githubusercontent.com/1365941/85880027-f584e880-b7a0-11ea-9b67-ffcebd417352.png"">



This'll provide the foundation **thematic** and `ggplotly()` need to make this possible

```r
library(shiny)
library(plotly)
library(thematic)

thematic_shiny()

ui <- fluidPage(
  titlePanel(""Hello auto theming with ggplotly()""),
  tags$head(
    tags$style(HTML(""body{background-color:#444444; color:#e4e4e4}"")),
    tags$style(HTML(""a{color:#e39777}""))
  ),
  plotlyOutput(""p"")
)

server <- function(input, output, session) {
  output$p <- renderPlotly({
    p <- ggplot(faithfuld, aes(waiting, eruptions, z = density)) + 
      geom_raster(aes(fill = density)) + 
      geom_contour()
    ggplotly(p)
  })
}

shinyApp(ui, server)
```

<img width=""894"" alt=""Screen Shot 2020-06-26 at 11 15 28 AM"" src=""https://user-images.githubusercontent.com/1365941/85878519-71c9fc80-b79e-11ea-9c01-c1e68945229f.png"">

",https://github.com/plotly/plotly.R/pull/1802,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1801,2020-06-23T17:46:34Z,2020-06-25T23:13:28Z,2020-06-25T23:13:22Z,"For example

```r
library(plotly)
thematic::thematic_on()
p <- qplot(1:10, 1:10, color = 1:10)
ggplotly(p)
```

<img width=""1911"" alt=""Screen Shot 2020-06-23 at 12 47 15 PM"" src=""https://user-images.githubusercontent.com/1365941/85437119-b2800680-b54f-11ea-8481-7298f27694ae.png"">
",https://github.com/plotly/plotly.R/pull/1801,plotly
julianstanley,CONTRIBUTOR,closed,9,https://github.com/plotly/plotly.R/pull/1800,2020-06-23T00:17:40Z,2020-07-21T23:14:49Z,2020-07-21T23:11:35Z,"Replaced all instances of depreciated standard evaluation dplyr verbs with their NSE equivalents.

Fixes associated depreciation warnings, so closes #1783. For example,

Before:

```R
> p <- ggplot(txhousing, aes(x = date, y = median, group = city)) +
+   geom_line(alpha = 0.3)
> ggplotly(p) %>% filter(city == ""Houston"")
Warning message:
`filter_()` is deprecated as of dplyr 0.7.0.
Please use `filter()` instead.
See vignette('programming') for more help
```

After:

```R
> p <- ggplot(txhousing, aes(x = date, y = median, group = city)) +
+   geom_line(alpha = 0.3)
> ggplotly(p) %>% filter(city == ""Houston"")
```

This PR introduces a util function called `as_quosures_explicit`. If/when [issue 1009 in r-lang](https://github.com/r-lib/rlang/issues/1009) is resolved, just replace all instances of `as_quosures_explicit` with `rlang::as_quosures`.  ",https://github.com/plotly/plotly.R/pull/1800,plotly
trekonom,CONTRIBUTOR,closed,0,https://github.com/plotly/plotly.R/pull/1791,2020-06-12T09:50:23Z,2020-06-23T13:33:12Z,2020-06-23T13:33:12Z,"This PR proposes a fix to take account of linebreaks in yaxis ticklabels.

At present `ggplotly` does not take linebreaks in y-axis labels into account when computing the margins. Hence, the left margin is set too wide in that case. 

The issue can be illustrated with this reprex:

```
library(plotly)

d <- data.frame(x = c(1, 2), y = c(""dfdfjdfdf\ndjdfkjdfdklj\nsldflkfdlf"", ""dfdfjdfdf""))

ggplot(d, aes(x, y)) +
  geom_bar(stat = ""identity"")

ggplotly()
```

At present this is rendered with a lot of white space to the left of the axis labels:
 
![grafik](https://user-images.githubusercontent.com/16198114/84488993-4e348b80-aca1-11ea-83a6-a012f088ea3e.png)

With the proposed fix the reprex is rendered like so:

![grafik](https://user-images.githubusercontent.com/16198114/84489260-b4211300-aca1-11ea-9086-9d5e7e78f06e.png)

As a workaround to this issue one can force `automargin` to do its job by setting the left margin to a small number in the layout options like so:

```
ggplotly() %>%
    layout(margin = list(l = 0))
```",https://github.com/plotly/plotly.R/pull/1791,plotly
trekonom,CONTRIBUTOR,closed,5,https://github.com/plotly/plotly.R/pull/1788,2020-06-07T18:33:28Z,2020-06-17T22:29:50Z,2020-06-17T22:29:50Z,"This PR fixes a bug in `verify_attr` which closes #1720 and #1577 .

Adding the fix the reprex from #1720 is rendered like so

![grafik](https://user-images.githubusercontent.com/16198114/83979967-56dc3900-a912-11ea-8c31-e91ff0da5e19.png)

and the reprex from #1577 like so:

![grafik](https://user-images.githubusercontent.com/16198114/83979984-72dfda80-a912-11ea-861b-a723ac3f5eb1.png)
",https://github.com/plotly/plotly.R/pull/1788,plotly
trekonom,CONTRIBUTOR,open,0,https://github.com/plotly/plotly.R/pull/1787,2020-06-07T09:20:59Z,2022-03-26T18:43:31Z,list(),This PR adds a `modeBarButtonsToKeep `argument to the configuration options and closes #1740 .,https://github.com/plotly/plotly.R/pull/1787,plotly
trekonom,CONTRIBUTOR,open,3,https://github.com/plotly/plotly.R/pull/1782,2020-06-01T11:18:39Z,2022-03-26T18:43:31Z,list(),"This PR adds support for `ggalt::geom_dumbbell`  and closes #1454 . 

- The implementation follows `ggalt::GeomDumbbell`.

- Tooltips only show up if hovering over the points and differ for the left and right point. To this end I added a util function `make_hovertext `which overwrites the hovertext set by `layers2traces`.

- I also added some tests and tried to add a visual test (which however failed when running the test while vdiffr::manage_cases showed me a successful doppelganger). Therefore the visual test is commented out in the test. ",https://github.com/plotly/plotly.R/pull/1782,plotly
trekonom,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/1779,2020-05-29T23:46:57Z,2020-12-08T21:50:27Z,2020-12-08T21:50:26Z,"This PR fixes #1751 . As far as I get it the bug arises in `make_error`. If the `y` aes is not set, `data[[""y""]]` is `NULL`. In that case empty vectors are assigned to `arrayminus `and `array`. To prevent this I added a check if `data[[""y""]]` is NULL and set `data[[""y""]]` equal to (`data[[""ymin ""]] + data[[""ymax""]]) / 2` if `TRUE`. I also added some tests.",https://github.com/plotly/plotly.R/pull/1779,plotly
dmurdoch,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/1773,2020-05-19T13:29:03Z,2020-05-19T19:11:13Z,2020-05-19T19:11:13Z,"… doesn't like factors.  This PR adds `nchar0()`, which converts its argument to character before counting chars, and fixes #1772.",https://github.com/plotly/plotly.R/pull/1773,plotly
cpsievert,COLLABORATOR,closed,3,https://github.com/plotly/plotly.R/pull/1771,2020-05-18T23:31:59Z,2020-05-19T14:53:29Z,2020-05-19T00:22:02Z,,https://github.com/plotly/plotly.R/pull/1771,plotly
rpkyle,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/1770,2020-05-16T17:30:05Z,2020-05-18T23:37:53Z,2020-05-18T23:37:53Z,"This PR proposes to update `plotly.js` to v1.54.1, released on 2020-05-04, using the zipfile available at https://api.github.com/repos/plotly/plotly.js/releases/26163877. 

The schema has been regenerated using `plotlyjs.R`. `shinytest` baselines were updated, and visual baselines were also updated as suggested [here](https://github.com/ropensci/plotly/blob/master/CONTRIBUTING.md#running-visual-tests-via-docker).

**• Initial issues running visual tests**

I was not able to get the Docker image located [here](https://hub.docker.com/r/cpsievert/plotly-orca/dockerfile) to run the visual tests (strangely, I kept seeing a lazy-load package database error). I managed to avoid this problem by splitting the `CMD` line into two separate statements.

I also noticed that the image is using a version of `orca` that is almost two years old, so I created my own Dockerfile based largely on the one above using `orca` v1.3.1 with a `xenial` base image (as we currently do for the `orca` Docker image). (This variation does not use `fuse`, so Docker can be run without passing `--privileged`.)

<details>
  <summary>Dockerfile</summary>

```bash
FROM ubuntu:xenial
MAINTAINER Ryan Patrick Kyle ""ryan@plotly.com""

# Don't print ""debconf: unable to initialize frontend: Dialog"" messages
ARG DEBIAN_FRONTED=noninteractive
ARG CACHEBUST=1

# Need this to add R repo
RUN apt-get update && apt-get install -y software-properties-common apt-transport-https \
 && add-apt-repository ""deb https://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/"" \
 && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \
 && apt-get update && apt-get install -y \
    sudo \
    git \
    vim-tiny \
    nano \
    wget \
    r-base \
    r-base-dev \
    r-recommended \
    fonts-texgyre \
    texinfo \
    locales \
    libcurl4-gnutls-dev \
    libcairo2-dev \
    libxt-dev \
    libssl-dev \
    libxml2-dev \
 && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
 && echo ""en_US.UTF-8 UTF-8"" >> /etc/locale.gen \
 && locale-gen en_US.utf8 \
 && /usr/sbin/update-locale LANG=en_US.UTF-8

ENV LANG=en_US.UTF-8

# Rprofile
RUN echo 'options(\n\
  repos = c(CRAN = ""https://cloud.r-project.org/""),\n\
  download.file.method = ""libcurl"",\n\
  Ncpus = parallel::detectCores(logical=FALSE),\n\
  shiny.host = ""0.0.0.0"", shiny.port = 3838\n\
)' >> /etc/R/Rprofile.site

# Update R packages and install those needed for visual testing
RUN R -e ""update.packages(ask = F); invisible(lapply(list('devtools', 'roxygen2', 'testthat', 'vdiffr', 'diffobj'), install.packages, dependencies=TRUE, repos='http://cloud.r-project.org/'))""

# sf system dependencies
RUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes \
 && apt-get -y update \
 && apt-get install -y \
 && apt-get install -y libudunits2-dev libproj-dev libgeos-dev libgdal-dev

# Install all plotly's dependencies
RUN R -e ""install.packages('plotly', dependencies = T)""

# system dependencies related to running orca
RUN apt-get install -y \
    libgtk2.0-0 \
    libgconf-2-4 \
    xvfb \
    xauth \
    libxtst6 \
    libxss1 \
    libnss3 \
    libasound2 \
    desktop-file-utils

# google chrome
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
    sh -c 'echo ""deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main"" >> /etc/apt/sources.list.d/google-chrome.list' && \
    apt-get update -y && \
    apt-get install -y google-chrome-stable

# Download orca binary and make it executable under xvfb
RUN mkdir -p /opt/orca \
 && cd /opt/orca \
 && wget https://github.com/plotly/orca/releases/download/v1.3.1/orca-1.3.1.AppImage \
 && chmod +x orca-1.3.1.AppImage \
 && ./orca-1.3.1.AppImage --appimage-extract \
 && rm orca-1.3.1.AppImage \
 && printf '#!/bin/bash \nargs=(""$@"") \nif [[ ! "" ${args[@]} "" =~ ""--no-sandbox"" ]]; then \n    args+=(""--no-sandbox"") \nfi \nxvfb-run --auto-servernum --server-args ""-screen 0 640x480x24"" /opt/orca/squashfs-root/orca ""${args[@]}""' > /usr/bin/orca \
 && chmod +x /usr/bin/orca

# switch on visual testing
ENV VDIFFR=true
EXPOSE 3838

RUN R -e ""update.packages(ask=FALSE)""

# install any new dependencies, then either manage cases (the default) or run tests
# note the workaround to get docker to run a proper exit status when there are testthat errors
# https://github.com/r-lib/testthat/issues/515#issuecomment-304169376
CMD R -e ""remotes::install_deps(dep = TRUE)""

CMD cd /home/plotly; R -e ""if (!identical(Sys.getenv('VMODE'), 'ci')) vdiffr::manage_cases(); \
  res <- devtools::test(reporter='summary'); \
  df <- as.data.frame(res); \
  if (sum(df\$failed) > 0 || any(df\$error)) q(status=1)""
```
</details>

On my system, Docker ends up running the tests as `root` within the container, so I also made a minor modification to the `bash` script which runs `orca` so that it inserts the `--no-sandbox` argument when it is not present, and the tests run as expected now:

```
#!/bin/bash 
args=(""$@"") 
if [[ ! "" ${args[@]} "" =~ ""--no-sandbox"" ]]; then 
    args+=(""--no-sandbox"") 
fi 
xvfb-run --auto-servernum --server-args ""-screen 0 640x480x24"" /opt/orca/squashfs-root/orca ""${args[@]}""
```

This may be related to a configuration issue on my own computer, but avoids edits to any code within the `plotly` package itself. I believe the issue is that running `orca -h` or `orca --version` as `root` will currently result in a core dump unless `--no-sandbox` is also provided.

I have not committed these changes, but I can do so if it would be helpful.

**• Output of visual tests**

There were a couple ""failures"", but they all appear to be related to `pandoc`. I visually inspected all the errors using the Shiny app (the toggle and slider modes are great), and every single one was the result of a very tiny shift in the plots, some of which were visually undetectable. 

All plots and legends which I reviewed rendered correctly.

<details>
<summary>Visual test summary</summary>
<pre>
R version 3.6.3 (2020-02-29) -- ""Holding the Windsock""
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> if (!identical(Sys.getenv('VMODE'), 'ci')) vdiffr::manage_cases();   res <- devtools::test(reporter='summary');   df <- as.data.frame(res);   if (sum(df$failed) > 0 || any(df$error)) q(status=1)
Running testthat to collect visual cases

  N = New visual case
  X = Failed doppelganger
  o = Successful doppelganger

W..................W............W...............................................
..................W...................................WWOGR: Unsupported geometry type
SSSSSSSSSX..WXW.WXW...X.
..X.X.X.WXW.X.WXW.X..X.X....X.X.X.X.X.X.X.X.X...X.X.X.X.X.X.X.X.X.....X....X...X
.XXXXXXXXXXXXX.....X...W...........................X.....X...X.......X.......X..
.X...X........X...X...X........X..X.........X...X...X.X......X......X...X......X
...XX...................................X...X.WWXWWX....X.....X...X..X..X...X...
................W..W..............X....X...X..X...X..X..X..X..X..X..X..X...X.X.X
.X...W.....X......X..X..X.X.X.X....X...X......X...X..X..X..X..X...X..X.X.X.X....
..X......X.X......X...X.X.X.X...X.......X..X.X....X...X.X..X....................
..X.X..X.....X.....X.......X.........X...X..X...X.X..X..............X...........
X.........X...........X.............X............X...X....X.....X.........SSX...
...X......X..........X..........X..........X....X..X.X.X.....................X..
X.....X...WXW.......WX...X....X..X..XX...X...X.X.X.X...X.X.............X..X..X..
X..X...X......X..X....X..X..X......XX.X.X.X.X.X.X.X.WXW..X..X..X..X..X..X...X...
.X..X..X.X.X.X..X.X..XX.X....X...X...X...X......X...X......X........X.......XXXX
XSX..X..X..X..X......X.....X.X.....X..................X..X.....X....X...X.......
...................WW..............................XXXXXXXXX........W....SSSSSSS
X..X....X...X.X.X...X.XX..X..X..X...X..X..WXW.............S.....................
.....W..SSW............SSSSSSS....SWWWWXWWWW.....................X..SX....X.....
.X.....X.....X..X...X.....X........X....WWWWWWWWWWWWWWWWXWWWWWWWWWWWWWWWWWWX....
.WWX.......WWX.......X.....WWX....WWX..X....X..WWX....WWX..X.....X...WWWWWX...XX
..X..WXW...X..X..X..WWXWW..XXX...WW......X........X.....X....X.....X...X..X....W
WXWW....X...X...X.....WX.X.....................................X......SSS.......
....
Loading required package: shiny

Attaching package: ‘shiny’

The following object is masked from ‘package:plotly’:

    br


Listening on http://0.0.0.0:3838
Loading plotly
Visual testing is enabled.
Testing plotly
highlighting and animation: ..................W............W.................................................................W...................................WWOGR: Unsupported geometry type

api: SSSSSSSSS
cookbook axes: ...W.W.W.W.............W.W...W.W.......................
cookbook lines: .........................................
cookbook-scatter: ............
Abline: ..........
annotation_: ...........................
Area: ..................
bar: ....................................................................
blank: ....
Boxplot: ......................
geom_col: .
Contour: ....
coord_fixed: ............................
crossbar: ....
date: ......WW.WW
Probability density: .....................
Density2d: ....................
device: .
dynamicTicks: ...W..W..............
geom_errorbarh: .....
Errorbar: .......
Facets: .....................................
ggplotly+plotly: .......
Heatmap: .............
hex: ......
Histogram: .............................................
Hline: .......................
geom_jitter: ....
labels: ..........
legends: ........................
lines: ..........................
maps: ..
path: .................................
geom_point: ................
polygon: .....................................................................................................
quantile: SS
geom_rect: ..................................................
ggplotly-resize: ..
ribbon: .........
rug: ....................
segment: .........
geom_sf: ....W.W.......W................
size: ........
smooth: ..............
spoke: ............
Step: ............
Text: ...........
ggplot themes: ........................
ggplot ticks: ..............W.W...............................................
tooltip: ...................
violin: ...........
Vline: ................
ggplot ylim: ....
group2NA: ....
means and error bars: .....
plotly-color: S....................................................
colorbar: .............................................WW..............................
colorscales: .........
customdata: ....
plotly data: ........
Filename: S
get_figure: SSSSSS
plotly-group: ......................
image-trace: ..
internals: ..
plotly-linetype: ................W.W..
name-mapping: ...........
partial-bundles: 1......
pie: ............
add_sf: ........W..SSW............SSSSSSS
shiny: ....S
size: WWWW.WWWW........................
splom: S
subplot: ...................................................WWWWWWWWWWWWWWWW.WWWWWWWWWWWWWWWWWW......WW........WW..............WW.....WW...........WW.....WW.............WWWWW....
sunburst: .
plotly-symbol: ......W.W............WW.WW..
treemap: ..
waterfall: .
plotly: ...WW............................................WW.WW.................................................................
rotated ticks: SSS
style/restyle functionality: .........
toRGB: ..

══ Skipped ═════════════════════════════════════════════════════════════════════
1. api() returns endpoints (@test-api.R#5) - Reason: Testing plot.ly API calls requires a plotly account

2. Can search with white-space (@test-api.R#14) - Reason: Testing plot.ly API calls requires a plotly account

3. Changing a filename works (@test-api.R#22) - Reason: Testing plot.ly API calls requires a plotly account

4. Downloading plots works (@test-api.R#32) - Reason: Testing plot.ly API calls requires a plotly account

5. Downloading grids works (@test-api.R#51) - Reason: Testing plot.ly API calls requires a plotly account

6. Creating produces a new file by default (@test-api.R#68) - Reason: Testing plot.ly API calls requires a plotly account

7. Can overwrite a grid (@test-api.R#92) - Reason: Testing plot.ly API calls requires a plotly account

8. Can overwrite a plot (@test-api.R#103) - Reason: Testing plot.ly API calls requires a plotly account

9. Can create plots with non-trivial src attributes (@test-api.R#115) - Reason: Testing plot.ly API calls requires a plotly account

10. Basic geom_quantile() works (@test-ggplot-quantile.R#7) - Reason: quantreg cannot be loaded

11. Can specify gpar() in geom_quantile() (@test-ggplot-quantile.R#30) - Reason: quantreg cannot be loaded

12. plot_ly() handles a simple scatterplot (@test-plotly-color.R#10) - Reason: empty test

13. filename supports names with paths included  (@test-plotly-filename.R#5) - Reason: Testing plot.ly API calls requires a plotly account

14. requests made by a user who doesn't exist error a 404 (@test-plotly-getfigure.R#5) - Reason: Testing plot.ly API calls requires a plotly account

15. requests made to retrieve a figure that doesn't exist returns a 404 (@test-plotly-getfigure.R#13) - Reason: Testing plot.ly API calls requires a plotly account

16. requests made to retrieve some elses private file errors (@test-plotly-getfigure.R#21) - Reason: Testing plot.ly API calls requires a plotly account

17. retrieving a public figure ... works. (@test-plotly-getfigure.R#27) - Reason: Testing plot.ly API calls requires a plotly account

18. can add traces to a subplot figure (@test-plotly-getfigure.R#36) - Reason: Testing plot.ly API calls requires a plotly account

19. posting a hidden plot returns a secret key (@test-plotly-getfigure.R#47) - Reason: Testing plot.ly API calls requires a plotly account

20. plot_mapbox() fitbounds is set (@test-plotly-sf.R#52) - Reason: has_mapbox() is not TRUE

21. sf defaults can be overriden (@test-plotly-sf.R#66) - Reason: has_mapbox() is not TRUE

22. discrete color informs fillcolor (@test-plotly-sf.R#128) - Reason: has_mapbox() is not TRUE

23. discrete color informs fillcolor (@test-plotly-sf.R#150) - Reason: has_mapbox() is not TRUE

24. numeric color informs fillcolor (@test-plotly-sf.R#186) - Reason: has_mapbox() is not TRUE

25. sizing constants (@test-plotly-sf.R#230) - Reason: has_mapbox() is not TRUE

26. size mappings (@test-plotly-sf.R#279) - Reason: has_mapbox() is not TRUE

27. altogether now (@test-plotly-sf.R#315) - Reason: has_mapbox() is not TRUE

28. color and stroke scales can be set independently (@test-plotly-sf.R#351) - Reason: has_mapbox() is not TRUE

29. event_data shiny app works (@test-plotly-shiny.R#29) - Reason: shiny testing not performed during visual testing

30. No cartesian axes are supplied to a splom chart (@test-plotly-splom.R#4) - Reason: empty test

31. no axis rotation is fine (@test-rotated-ticks.R#47) - Reason: empty test

32. axis.text.x=element_text(angle=90)"" (@test-rotated-ticks.R#52) - Reason: empty test

33. axis.text.x=element_text(angle=70) means transform=""rotate(-70)"" (@test-rotated-ticks.R#58) - Reason: empty test

══ Warnings ════════════════════════════════════════════════════════════════════
1. When key is equivalent to group, produce simple keys (@test-animate-highlight.R#98) - All elements of `...` must be named.
Did you want `key = c(key)`?

2. When key is nested within group, produce simple key (@test-animate-highlight.R#128) - All elements of `...` must be named.
Did you want `key = c(key)`?

3. animation frames are boxed up correctly (@test-animate-highlight.R#350) - Ignoring unknown aesthetics: frame

4. sf works with crosstalk (@test-animate-highlight.R#386) - Ignoring unknown aesthetics: text

5. sf works with crosstalk (@test-animate-highlight.R#389) - All elements of `...` must be named.
Did you want `key = c(key)`?

6. ylim hides points (@test-cookbook-axes.R#36) - Removed 13 rows containing non-finite values (stat_boxplot).

7. ylim hides points (@test-cookbook-axes.R#36) - Removed 13 rows containing non-finite values (stat_boxplot).

8. scale_y(limits) hides points (@test-cookbook-axes.R#41) - Removed 13 rows containing non-finite values (stat_boxplot).

9. scale_y(limits) hides points (@test-cookbook-axes.R#41) - Removed 13 rows containing non-finite values (stat_boxplot).

10. log2 transform with labels (@test-cookbook-axes.R#86) - is.na() applied to non-(list or vector) of type 'expression'

11. log2 transform with labels (@test-cookbook-axes.R#86) - is.na() applied to non-(list or vector) of type 'expression'

12. log10 with exponents on tick labels (@test-cookbook-axes.R#100) - is.na() applied to non-(list or vector) of type 'expression'

13. log10 with exponents on tick labels (@test-cookbook-axes.R#100) - is.na() applied to non-(list or vector) of type 'expression'

14. scale_x_date and irregular time series work (@test-ggplot-date.R#36) - Aspect ratios aren't yet implemented, but you can manually set a suitable height/width

15. scale_x_date and irregular time series work (@test-ggplot-date.R#36) - Aspect ratios aren't yet implemented, but you can manually set a suitable height/width

16. scale_x_date and irregular time series work (@test-ggplot-date.R#36) - Aspect ratios aren't yet implemented, but you can manually set a suitable height/width

17. scale_x_date and irregular time series work (@test-ggplot-date.R#36) - Aspect ratios aren't yet implemented, but you can manually set a suitable height/width

18. Categorical axis reflects custom scale mapping (@test-ggplot-dynamicTicks.R#36) - Removed 167 rows containing non-finite values (stat_count).

19. Categorical axis reflects custom scale mapping (@test-ggplot-dynamicTicks.R#51) - Removed 167 rows containing non-finite values (stat_count).

20. geom_sf() geometry collection. (@test-ggplot-sf.R#32) - repeating attributes for all sub-geometries for which they may not be constant

21. geom_sf() geometry collection. (@test-ggplot-sf.R#32) - repeating attributes for all sub-geometries for which they may not be constant

22. geom_sf() polygons with fill/text. (@test-ggplot-sf.R#51) - Ignoring unknown aesthetics: text

23. limits can hide data (@test-ggplot-ticks.R#59) - Removed 10 rows containing missing values (stat_boxplot).

24. limits can hide data (@test-ggplot-ticks.R#59) - Removed 10 rows containing missing values (stat_boxplot).

25. positioning with multiple colorbars and legends (@test-plotly-colorbar.R#122) - n too large, allowed maximum for palette Set2 is 8
Returning the palette you asked for with that many colors


26. positioning with multiple colorbars and legends (@test-plotly-colorbar.R#122) - n too large, allowed maximum for palette Set2 is 8
Returning the palette you asked for with that many colors


27. Trace ordering is alphabetical (@test-plotly-linetype.R#62) - plotly.js only supports 6 different linetypes

28. Trace ordering is alphabetical (@test-plotly-linetype.R#62) - plotly.js only supports 6 different linetypes

29. plot_geo() lat/lon range is set (@test-plotly-sf.R#37) - The trace types 'scattermapbox' and 'scattergeo' require a projected coordinate system that is based on the WGS84 datum (EPSG:4326), but the crs provided is: '+proj=longlat +datum=NAD27 +no_defs '. Attempting transformation to the target coordinate system.

30. Can plot sfc with a missing crs (@test-plotly-sf.R#89) - Missing coordinate reference system (crs). Defaulting to EPSG:4326

31. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

32. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

33. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

34. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

35. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

36. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

37. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

38. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

39. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

40. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

41. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

42. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

43. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

44. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

45. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

46. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

47. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

48. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

49. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

50. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

51. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

52. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

53. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

54. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

55. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

56. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

57. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

58. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

59. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

60. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

61. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

62. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

63. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

64. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

65. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

66. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

67. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

68. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

69. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

70. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

71. annotation paper repositioning (@test-plotly-subplot.R#148) - No trace type specified and no positional attributes specified

72. annotation paper repositioning (@test-plotly-subplot.R#148) - No trace type specified and no positional attributes specified

73. shape paper repositioning (@test-plotly-subplot.R#194) - No trace type specified and no positional attributes specified

74. shape paper repositioning (@test-plotly-subplot.R#194) - No trace type specified and no positional attributes specified

75. shape paper repositioning (@test-plotly-subplot.R#244) - No trace type specified and no positional attributes specified

76. shape paper repositioning (@test-plotly-subplot.R#244) - No trace type specified and no positional attributes specified

77. annotation xref/yref bumping (@test-plotly-subplot.R#308) - No trace type specified and no positional attributes specified

78. annotation xref/yref bumping (@test-plotly-subplot.R#308) - No trace type specified and no positional attributes specified

79. annotation xref/yref bumping (@test-plotly-subplot.R#320) - No trace type specified and no positional attributes specified

80. annotation xref/yref bumping (@test-plotly-subplot.R#320) - No trace type specified and no positional attributes specified

81. shape xref/yref bumping (@test-plotly-subplot.R#384) - No trace type specified and no positional attributes specified

82. shape xref/yref bumping (@test-plotly-subplot.R#384) - No trace type specified and no positional attributes specified

83. shape xref/yref bumping (@test-plotly-subplot.R#396) - No trace type specified and no positional attributes specified

84. shape xref/yref bumping (@test-plotly-subplot.R#396) - No trace type specified and no positional attributes specified

85. May specify legendgroup with through a vector of values (@test-plotly-subplot.R#481) - Unequal factor levels: coercing to character

86. May specify legendgroup with through a vector of values (@test-plotly-subplot.R#481) - binding character and factor vector, coercing into character vector

87. May specify legendgroup with through a vector of values (@test-plotly-subplot.R#481) - binding character and factor vector, coercing into character vector

88. May specify legendgroup with through a vector of values (@test-plotly-subplot.R#481) - binding character and factor vector, coercing into character vector

89. May specify legendgroup with through a vector of values (@subplots.R#84) - No trace type specified and no positional attributes specified

90. Setting a constant symbol works (@test-plotly-symbol.R#30) - The shape palette can deal with a maximum of 6 discrete values because
more than 6 becomes difficult to discriminate; you have 25. Consider
specifying shapes manually if you must have them.

91. Setting a constant symbol works (@test-plotly-symbol.R#30) - The shape palette can deal with a maximum of 6 discrete values because
more than 6 becomes difficult to discriminate; you have 25. Consider
specifying shapes manually if you must have them.

92. Trace ordering is alphabetical (@test-plotly-symbol.R#68) - The shape palette can deal with a maximum of 6 discrete values because
more than 6 becomes difficult to discriminate; you have 7. Consider
specifying shapes manually if you must have them.

93. Trace ordering is alphabetical (@test-plotly-symbol.R#68) - The following are not valid symbol codes:
'NA'
Valid symbols include:
'0', 'circle', '100', 'circle-open', '200', 'circle-dot', '300', 'circle-open-dot', '1', 'square', '101', 'square-open', '201', 'square-dot', '301', 'square-open-dot', '2', 'diamond', '102', 'diamond-open', '202', 'diamond-dot', '302', 'diamond-open-dot', '3', 'cross', '103', 'cross-open', '203', 'cross-dot', '303', 'cross-open-dot', '4', 'x', '104', 'x-open', '204', 'x-dot', '304', 'x-open-dot', '5', 'triangle-up', '105', 'triangle-up-open', '205', 'triangle-up-dot', '305', 'triangle-up-open-dot', '6', 'triangle-down', '106', 'triangle-down-open', '206', 'triangle-down-dot', '306', 'triangle-down-open-dot', '7', 'triangle-left', '107', 'triangle-left-open', '207', 'triangle-left-dot', '307', 'triangle-left-open-dot', '8', 'triangle-right', '108', 'triangle-right-open', '208', 'triangle-right-dot', '308', 'triangle-right-open-dot', '9', 'triangle-ne', '109', 'triangle-ne-open', '209', 'triangle-ne-dot', '309', 'triangle-ne-open-dot', '10', 'triangle-se', '110', 'triangle-se-open', '210', 'triangle-se-dot', '310', 'triangle-se-open-dot', '11', 'triangle-sw', '111', 'triangle-sw-open', '211', 'triangle-sw-dot', '311', 'triangle-sw-open-dot', '12', 'triangle-nw', '112', 'triangle-nw-open', '212', 'triangle-nw-dot', '312', 'triangle-nw-open-dot', '13', 'pentagon', '113', 'pentagon-open', '213', 'pentagon-dot', '313', 'pentagon-open-dot', '14', 'hexagon', '114', 'hexagon-open', '214', 'hexagon-dot', '314', 'hexagon-open-dot', '15', 'hexagon2', '115', 'hexagon2-open', '215', 'hexagon2-dot', '315', 'hexagon2-open-dot', '16', 'octagon', '116', 'octagon-open', '216', 'octagon-dot', '316', 'octagon-open-dot', '17', 'star', '117', 'star-open', '217', 'star-dot', '317', 'star-open-dot', '18', 'hexagram', '118', 'hexagram-open', '218', 'hexagram-dot', '318', 'hexagram-open-dot', '19', 'star-triangle-up', '119', 'star-triangle-up-open', '219', 'star-triangle-up-dot', '319', 'star-triangle-up-open-dot', '20', 'star-triangle-down', '120', 'star-triangle-down-open', '220', 'star-triangle-down-dot', '320', 'star-triangle-down-open-dot', '21', 'star-square', '121', 'star-square-open', '221', 'star-square-dot', '321', 'star-square-open-dot', '22', 'star-diamond', '122', 'star-diamond-open', '222', 'star-diamond-dot', '322', 'star-diamond-open-dot', '23', 'diamond-tall', '123', 'diamond-tall-open', '223', 'diamond-tall-dot', '323', 'diamond-tall-open-dot', '24', 'diamond-wide', '124', 'diamond-wide-open', '224', 'diamond-wide-dot', '324', 'diamond-wide-open-dot', '25', 'hourglass', '125', 'hourglass-open', '26', 'bowtie', '126', 'bowtie-open', '27', 'circle-cross', '127', 'circle-cross-open', '28', 'circle-x', '128', 'circle-x-open', '29', 'square-cross', '129', 'square-cross-open', '30', 'square-x', '130', 'square-x-open', '31', 'diamond-cross', '131', 'diamond-cross-open', '32', 'diamond-x', '132', 'diamond-x-open', '33', 'cross-thin', '133', 'cross-thin-open', '34', 'x-thin', '134', 'x-thin-open', '35', 'asterisk', '135', 'asterisk-open', '36', 'hash', '136', 'hash-open', '236', 'hash-dot', '336', 'hash-open-dot', '37', 'y-up', '137', 'y-up-open', '38', 'y-down', '138', 'y-down-open', '39', 'y-left', '139', 'y-left-open', '40', 'y-right', '140', 'y-right-open', '41', 'line-ew', '141', 'line-ew-open', '42', 'line-ns', '142', 'line-ns-open', '43', 'line-ne', '143', 'line-ne-open', '44', 'line-nw', '144', 'line-nw-open

94. Trace ordering is alphabetical (@test-plotly-symbol.R#68) - The shape palette can deal with a maximum of 6 discrete values because
more than 6 becomes difficult to discriminate; you have 7. Consider
specifying shapes manually if you must have them.

95. Trace ordering is alphabetical (@test-plotly-symbol.R#68) - The following are not valid symbol codes:
'NA'
Valid symbols include:
'0', 'circle', '100', 'circle-open', '200', 'circle-dot', '300', 'circle-open-dot', '1', 'square', '101', 'square-open', '201', 'square-dot', '301', 'square-open-dot', '2', 'diamond', '102', 'diamond-open', '202', 'diamond-dot', '302', 'diamond-open-dot', '3', 'cross', '103', 'cross-open', '203', 'cross-dot', '303', 'cross-open-dot', '4', 'x', '104', 'x-open', '204', 'x-dot', '304', 'x-open-dot', '5', 'triangle-up', '105', 'triangle-up-open', '205', 'triangle-up-dot', '305', 'triangle-up-open-dot', '6', 'triangle-down', '106', 'triangle-down-open', '206', 'triangle-down-dot', '306', 'triangle-down-open-dot', '7', 'triangle-left', '107', 'triangle-left-open', '207', 'triangle-left-dot', '307', 'triangle-left-open-dot', '8', 'triangle-right', '108', 'triangle-right-open', '208', 'triangle-right-dot', '308', 'triangle-right-open-dot', '9', 'triangle-ne', '109', 'triangle-ne-open', '209', 'triangle-ne-dot', '309', 'triangle-ne-open-dot', '10', 'triangle-se', '110', 'triangle-se-open', '210', 'triangle-se-dot', '310', 'triangle-se-open-dot', '11', 'triangle-sw', '111', 'triangle-sw-open', '211', 'triangle-sw-dot', '311', 'triangle-sw-open-dot', '12', 'triangle-nw', '112', 'triangle-nw-open', '212', 'triangle-nw-dot', '312', 'triangle-nw-open-dot', '13', 'pentagon', '113', 'pentagon-open', '213', 'pentagon-dot', '313', 'pentagon-open-dot', '14', 'hexagon', '114', 'hexagon-open', '214', 'hexagon-dot', '314', 'hexagon-open-dot', '15', 'hexagon2', '115', 'hexagon2-open', '215', 'hexagon2-dot', '315', 'hexagon2-open-dot', '16', 'octagon', '116', 'octagon-open', '216', 'octagon-dot', '316', 'octagon-open-dot', '17', 'star', '117', 'star-open', '217', 'star-dot', '317', 'star-open-dot', '18', 'hexagram', '118', 'hexagram-open', '218', 'hexagram-dot', '318', 'hexagram-open-dot', '19', 'star-triangle-up', '119', 'star-triangle-up-open', '219', 'star-triangle-up-dot', '319', 'star-triangle-up-open-dot', '20', 'star-triangle-down', '120', 'star-triangle-down-open', '220', 'star-triangle-down-dot', '320', 'star-triangle-down-open-dot', '21', 'star-square', '121', 'star-square-open', '221', 'star-square-dot', '321', 'star-square-open-dot', '22', 'star-diamond', '122', 'star-diamond-open', '222', 'star-diamond-dot', '322', 'star-diamond-open-dot', '23', 'diamond-tall', '123', 'diamond-tall-open', '223', 'diamond-tall-dot', '323', 'diamond-tall-open-dot', '24', 'diamond-wide', '124', 'diamond-wide-open', '224', 'diamond-wide-dot', '324', 'diamond-wide-open-dot', '25', 'hourglass', '125', 'hourglass-open', '26', 'bowtie', '126', 'bowtie-open', '27', 'circle-cross', '127', 'circle-cross-open', '28', 'circle-x', '128', 'circle-x-open', '29', 'square-cross', '129', 'square-cross-open', '30', 'square-x', '130', 'square-x-open', '31', 'diamond-cross', '131', 'diamond-cross-open', '32', 'diamond-x', '132', 'diamond-x-open', '33', 'cross-thin', '133', 'cross-thin-open', '34', 'x-thin', '134', 'x-thin-open', '35', 'asterisk', '135', 'asterisk-open', '36', 'hash', '136', 'hash-open', '236', 'hash-dot', '336', 'hash-open-dot', '37', 'y-up', '137', 'y-up-open', '38', 'y-down', '138', 'y-down-open', '39', 'y-left', '139', 'y-left-open', '40', 'y-right', '140', 'y-right-open', '41', 'line-ew', '141', 'line-ew-open', '42', 'line-ns', '142', 'line-ns-open', '43', 'line-ne', '143', 'line-ne-open', '44', 'line-nw', '144', 'line-nw-open

96. Variable mappings return same result regardless of where they appear (@test-plotly.R#41) - `line.width` does not currently support multiple values.

97. Variable mappings return same result regardless of where they appear (@test-plotly.R#41) - `line.width` does not currently support multiple values.

98. Character strings correctly mapped to a positional axis (@test-plotly.R#143) - minimal value for n is 3, returning requested palette with 3 different levels


99. Character strings correctly mapped to a positional axis (@test-plotly.R#143) - minimal value for n is 3, returning requested palette with 3 different levels


100. Character strings correctly mapped to a positional axis (@test-plotly.R#143) - minimal value for n is 3, returning requested palette with 3 different levels


101. Character strings correctly mapped to a positional axis (@test-plotly.R#143) - minimal value for n is 3, returning requested palette with 3 different levels


══ Failed ══════════════════════════════════════════════════════════════════════
── 1. Error: Can reduce saved file size with an basic (auto) partial bundle by h
cannot popen '/usr/bin/which 'pandoc' 2>/dev/null', probable reason 'Cannot allocate memory'
Backtrace:
 1. testthat::skip_if_not(Sys.which(""pandoc"") != """", ""pandoc needed for this test"") tests/testthat/test-plotly-partial-bundles.R:5:2
 3. base::Sys.which(""pandoc"")
 6. base::system(...)

══ DONE ════════════════════════════════════════════════════════════════════════
</pre>
</details>

@cpsievert @nicolaskruchten",https://github.com/plotly/plotly.R/pull/1770,plotly
doorisajar,NONE,closed,5,https://github.com/plotly/plotly.R/pull/1732,2020-03-30T22:50:10Z,2020-05-19T19:12:32Z,2020-05-19T19:12:32Z,Resolves https://github.com/ropensci/plotly/issues/1731,https://github.com/plotly/plotly.R/pull/1732,plotly
wfjvdham,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/1727,2020-03-27T20:36:32Z,2021-11-02T19:36:22Z,2021-11-02T19:36:21Z,Solves: https://github.com/ropensci/plotly/issues/1310,https://github.com/plotly/plotly.R/pull/1727,plotly
salim-b,CONTRIBUTOR,closed,6,https://github.com/plotly/plotly.R/pull/1700,2020-02-11T19:22:07Z,2020-06-22T16:43:21Z,2020-06-22T14:12:56Z,"Before, this only worked for colums of type character. This PR adds support for columns of type factor.

The linebreak conversion was first introduced in [v4.6.0](https://github.com/ropensci/plotly/blob/master/NEWS.md#new-features--improvements-4), see also https://github.com/ropensci/plotly/issues/851",https://github.com/plotly/plotly.R/pull/1700,plotly
cpsievert,COLLABORATOR,open,1,https://github.com/plotly/plotly.R/pull/1697,2020-02-06T19:51:16Z,2022-03-26T18:43:31Z,list(),To be merged after #1695 ,https://github.com/plotly/plotly.R/pull/1697,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1695,2020-02-05T23:45:04Z,2020-02-06T21:09:14Z,2020-02-06T21:05:50Z,To be merged after https://github.com/ropensci/plotly/pull/1690,https://github.com/plotly/plotly.R/pull/1695,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1690,2020-02-04T17:03:45Z,2020-02-06T20:48:53Z,2020-02-06T20:48:24Z,See #1659,https://github.com/plotly/plotly.R/pull/1690,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1679,2020-01-06T23:48:55Z,2020-02-06T21:09:26Z,2020-01-07T20:45:29Z,"As discussed in https://github.com/tidyverse/ggplot2/pull/3566#issuecomment-565085809, it's now possible for the ggplot2 labels/positions to contains missing values, and we should be able to simply ignore them.",https://github.com/plotly/plotly.R/pull/1679,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1674,2019-12-26T17:31:18Z,2020-03-04T14:45:48Z,2020-03-04T14:45:48Z,See #1673,https://github.com/plotly/plotly.R/pull/1674,plotly
jameslamb,CONTRIBUTOR,closed,7,https://github.com/plotly/plotly.R/pull/1656,2019-11-13T02:21:17Z,2020-05-19T22:16:29Z,2020-05-19T22:16:29Z,"Thanks for this awesome project!

In this PR, I'd like to propose swapping out calls to `httr::GET()`, `httr::PATCH()`, etc. with `httr::RETRY()`. This will make the package more resilient to transient problems like brief network outages or periods where the service(s) it hits are overwhelmed. In my experience, using retry logic almost always improves the user experience with HTTP clients.

I apologize for the whitespace changes. I have my editor set to trim excess horizontal whitespace when I save files. If you'd like me to revert those please let me know.",https://github.com/plotly/plotly.R/pull/1656,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1650,2019-11-07T01:27:53Z,2020-02-06T21:09:35Z,2020-01-07T20:44:57Z,"After https://github.com/tidyverse/ggplot2/commit/10fa0014, it's now possible for calculated aes to exist for all default_aes...27db11e278ce92bef7ec9a4c8be5ee3b3078c9e1 just removes any ""calculated aes"" that are also a ""user-specified aes"" from consideration when building the tooltip

27db11e278ce92bef7ec9a4c8be5ee3b3078c9e1 also changes the ordering in which the aes appear in the tooltip from:

* Layer aes
* Calculated aes
* Global aes

to what I think is a better default:

* Calculated aes
* Layer aes
* Global aes


## Testing notes

Confirm that density appears once (not twice) in the tooltip when hovering on the density lines:

```r
library(plotly)

p <- ggplot(mtcars, aes(x = mpg, fill = factor(cyl))) + 
  geom_density()
ggplotly(p)
```

",https://github.com/plotly/plotly.R/pull/1650,plotly
pmur002,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/1646,2019-10-22T23:34:44Z,2019-10-23T14:36:49Z,2019-10-23T14:36:49Z,"Hi

This is a suggested change for mm2pixels() and verifyUnit() to avoid them peeking at the internal representation of 'grid' units.  It makes use of a new function in R-devel called grid::unitType(), hence the R version conditioning.

Besides being a nicer way to do things, this change is important to help us with the transition to a new internal representation of 'grid' units for the next R release (https://github.com/thomasp85/grid/issues/14).

Paul",https://github.com/plotly/plotly.R/pull/1646,plotly
rpkyle,CONTRIBUTOR,closed,12,https://github.com/plotly/plotly.R/pull/1643,2019-10-19T06:05:20Z,2020-02-05T18:09:03Z,2020-02-05T17:14:34Z,"This PR proposes to update `plotly.js` to v1.50.1, released on 2019-10-15, using the zipfile available at https://api.github.com/repos/plotly/plotly.js/releases/20719620. 

The schema has been regenerated using `plotlyjs.R`. `shinytest` baselines were updated, and visual baselines were also updated as suggested [here](https://github.com/ropensci/plotly/blob/master/CONTRIBUTING.md#running-visual-tests-via-docker).
<details>
<summary>Output when regenerating visual baselines</summary>
<pre>
Listening on http://0.0.0.0:3838
Loading plotly
Visual testing is enabled.
Testing plotly
highlighting and animation: ..................W............W.................................................................W...................................WW
api: SSSSSSSSS
cookbook axes: ...W.W.W.W.........................................
cookbook lines: ........W..W..W....W..W.......................
cookbook-scatter: ............
Abline: ..........
annotation_: ...........................
Area: ..................
bar: ....................................................................
blank: ....
Boxplot: ......................
geom_col: ...
Contour: ....
coord_fixed: ............................
crossbar: ....
date: ......WW.WW
Density2d: ....................
Probability density: .....................
device: .
dynamicTicks: ...W..W..............
geom_errorbarh: .....
Errorbar: .......
Facets: .....................................
ggplotly+plotly: .......
Heatmap: WW.W......WW.W..WW.W..
hex: ......
Histogram: .............................................
Hline: ......................
geom_jitter: ....
labels: ..........
legends: ........................
lines: ........................
maps: ..
path: .................................
geom_point: ................
polygon: .....................................................................................................
quantile: SS
geom_rect: ..................................................
ggplotly-resize: ..
ribbon: .........
rug: ....................
segment: .........
geom_sf: ....W.W.......W...............
size: ........
smooth: ..............
spoke: ............
Step: ............
Text: ...........
ggplot themes: ........................
ggplot ticks: ..............W.W..............................................
tooltip: .......WW.W...........
violin: ...........
Vline: ................
ggplot ylim: ....
group2NA: ....
means and error bars: .....
colorbar: .............................................WW..............................
plotly-color: S....................................................
colorscales: .........
customdata: ....
plotly data: ........
Filename: S
get_figure: SSSSSS
plotly-group: ......................
internals: ..
plotly-linetype: ................W.W..
name-mapping: ...........
partial-bundles: S......
pie: ............
plotly: ...WW............................................WW.WW................................................................
add_sf: ........W..SSW............SSSSSSS
shiny: ....S
size: WWWW.WWWW........................
splom: S
subplot: ...................................................WWWWWWWWWWWWWWWW.WWWWWWWWWWWWWWWWWW......WW........WW..............WW.....WW...........WW.....WW.............WWWWW....
sunburst: .
plotly-symbol: ......W.W............WW.WW..
waterfall: .
rotated ticks: SSS
style/restyle functionality: .........
toRGB: ..

══ Skipped ═════════════════════════════════════════════════════════════════════
1. api() returns endpoints (@test-api.R#5) - Reason: Testing plot.ly API calls requires a plotly account

2. Can search with white-space (@test-api.R#14) - Reason: Testing plot.ly API calls requires a plotly account

3. Changing a filename works (@test-api.R#22) - Reason: Testing plot.ly API calls requires a plotly account

4. Downloading plots works (@test-api.R#32) - Reason: Testing plot.ly API calls requires a plotly account

5. Downloading grids works (@test-api.R#51) - Reason: Testing plot.ly API calls requires a plotly account

6. Creating produces a new file by default (@test-api.R#68) - Reason: Testing plot.ly API calls requires a plotly account

7. Can overwrite a grid (@test-api.R#92) - Reason: Testing plot.ly API calls requires a plotly account

8. Can overwrite a plot (@test-api.R#103) - Reason: Testing plot.ly API calls requires a plotly account

9. Can create plots with non-trivial src attributes (@test-api.R#115) - Reason: Testing plot.ly API calls requires a plotly account

10. Basic geom_quantile() works (@test-ggplot-quantile.R#7) - Reason: quantreg cannot be loaded

11. Can specify gpar() in geom_quantile() (@test-ggplot-quantile.R#30) - Reason: quantreg cannot be loaded

12. plot_ly() handles a simple scatterplot (@test-plotly-color.R#10) - Reason: empty test

13. filename supports names with paths included  (@test-plotly-filename.R#5) - Reason: Testing plot.ly API calls requires a plotly account

14. requests made by a user who doesn't exist error a 404 (@test-plotly-getfigure.R#5) - Reason: Testing plot.ly API calls requires a plotly account

15. requests made to retrieve a figure that doesn't exist returns a 404 (@test-plotly-getfigure.R#13) - Reason: Testing plot.ly API calls requires a plotly account

16. requests made to retrieve some elses private file errors (@test-plotly-getfigure.R#21) - Reason: Testing plot.ly API calls requires a plotly account

17. retrieving a public figure ... works. (@test-plotly-getfigure.R#27) - Reason: Testing plot.ly API calls requires a plotly account

18. can add traces to a subplot figure (@test-plotly-getfigure.R#36) - Reason: Testing plot.ly API calls requires a plotly account

19. posting a hidden plot returns a secret key (@test-plotly-getfigure.R#47) - Reason: Testing plot.ly API calls requires a plotly account

20. Can reduce saved file size with an basic (auto) partial bundle by half (@test-plotly-partial-bundles.R#5) - Reason: pandoc needed for this test is not TRUE

21. plot_mapbox() fitbounds is set (@test-plotly-sf.R#52) - Reason: has_mapbox() is not TRUE

22. sf defaults can be overriden (@test-plotly-sf.R#66) - Reason: has_mapbox() is not TRUE

23. discrete color informs fillcolor (@test-plotly-sf.R#128) - Reason: has_mapbox() is not TRUE

24. discrete color informs fillcolor (@test-plotly-sf.R#150) - Reason: has_mapbox() is not TRUE

25. numeric color informs fillcolor (@test-plotly-sf.R#186) - Reason: has_mapbox() is not TRUE

26. sizing constants (@test-plotly-sf.R#230) - Reason: has_mapbox() is not TRUE

27. size mappings (@test-plotly-sf.R#279) - Reason: has_mapbox() is not TRUE

28. altogether now (@test-plotly-sf.R#315) - Reason: has_mapbox() is not TRUE

29. color and stroke scales can be set independently (@test-plotly-sf.R#351) - Reason: has_mapbox() is not TRUE

30. event_data shiny app works (@test-plotly-shiny.R#29) - Reason: shiny testing not performed during visual testing

31. No cartesian axes are supplied to a splom chart (@test-plotly-splom.R#4) - Reason: empty test

32. no axis rotation is fine (@test-rotated-ticks.R#47) - Reason: empty test

33. axis.text.x=element_text(angle=90)"" (@test-rotated-ticks.R#52) - Reason: empty test

34. axis.text.x=element_text(angle=70) means transform=""rotate(-70)"" (@test-rotated-ticks.R#58) - Reason: empty test

══ Warnings ════════════════════════════════════════════════════════════════════
1. When key is equivalent to group, produce simple keys (@test-animate-highlight.R#98) - All elements of `...` must be named.
Did you want `key = c(key)`?

2. When key is nested within group, produce simple key (@test-animate-highlight.R#128) - All elements of `...` must be named.
Did you want `key = c(key)`?

3. animation frames are boxed up correctly (@test-animate-highlight.R#350) - Ignoring unknown aesthetics: frame

4. sf works with crosstalk (@test-animate-highlight.R#386) - Ignoring unknown aesthetics: text

5. sf works with crosstalk (@test-animate-highlight.R#389) - All elements of `...` must be named.
Did you want `key = c(key)`?

6. ylim hides points (@test-cookbook-axes.R#36) - Removed 13 rows containing non-finite values (stat_boxplot).

7. ylim hides points (@test-cookbook-axes.R#36) - Removed 13 rows containing non-finite values (stat_boxplot).

8. scale_y(limits) hides points (@test-cookbook-axes.R#41) - Removed 13 rows containing non-finite values (stat_boxplot).

9. scale_y(limits) hides points (@test-cookbook-axes.R#41) - Removed 13 rows containing non-finite values (stat_boxplot).

10. (unknown) (@test-cookbook-lines.R#50) - Ignoring unknown aesthetics: y

11. (unknown) (@test-cookbook-lines.R#57) - Ignoring unknown aesthetics: y

12. (unknown) (@test-cookbook-lines.R#73) - Ignoring unknown aesthetics: y

13. (unknown) (@test-cookbook-lines.R#95) - Ignoring unknown aesthetics: y

14. (unknown) (@test-cookbook-lines.R#114) - Ignoring unknown aesthetics: y

15. scale_x_date and irregular time series work (@test-ggplot-date.R#36) - Aspect ratios aren't yet implemented, but you can manually set a suitable height/width

16. scale_x_date and irregular time series work (@test-ggplot-date.R#36) - Aspect ratios aren't yet implemented, but you can manually set a suitable height/width

17. scale_x_date and irregular time series work (@test-ggplot-date.R#36) - Aspect ratios aren't yet implemented, but you can manually set a suitable height/width

18. scale_x_date and irregular time series work (@test-ggplot-date.R#36) - Aspect ratios aren't yet implemented, but you can manually set a suitable height/width

19. Categorical axis reflects custom scale mapping (@test-ggplot-dynamicTicks.R#36) - Removed 167 rows containing non-finite values (stat_count).

20. Categorical axis reflects custom scale mapping (@test-ggplot-dynamicTicks.R#51) - Removed 167 rows containing non-finite values (stat_count).

21. geom_tile is translated to type=heatmap (@test-ggplot-heatmap.R#20) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


22. geom_tile is translated to type=heatmap (@test-ggplot-heatmap.R#20) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


23. geom_tile is translated to type=heatmap (@test-ggplot-heatmap.R#20) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


24. geom_tile() scale_fill_gradient2() (@test-ggplot-heatmap.R#45) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


25. geom_tile() scale_fill_gradient2() (@test-ggplot-heatmap.R#45) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


26. geom_tile() scale_fill_gradient2() (@test-ggplot-heatmap.R#45) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


27. geom_tile() with discrete x/y (@test-ggplot-heatmap.R#60) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


28. geom_tile() with discrete x/y (@test-ggplot-heatmap.R#60) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


29. geom_tile() with discrete x/y (@test-ggplot-heatmap.R#60) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


30. geom_sf() geometry collection. (@test-ggplot-sf.R#32) - repeating attributes for all sub-geometries for which they may not be constant

31. geom_sf() geometry collection. (@test-ggplot-sf.R#32) - repeating attributes for all sub-geometries for which they may not be constant

32. geom_sf() polygons with fill/text. (@test-ggplot-sf.R#51) - Ignoring unknown aesthetics: text

33. limits can hide data (@test-ggplot-ticks.R#59) - Removed 10 rows containing missing values (stat_boxplot).

34. limits can hide data (@test-ggplot-ticks.R#59) - Removed 10 rows containing missing values (stat_boxplot).

35. geom_tile() displays correct info in tooltip with discrete y (@test-ggplot-tooltip.R#53) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


36. geom_tile() displays correct info in tooltip with discrete y (@test-ggplot-tooltip.R#53) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


37. geom_tile() displays correct info in tooltip with discrete y (@test-ggplot-tooltip.R#53) - 'heatmap' objects don't have these attributes: 'showlegend'
Valid attributes include:
'type', 'visible', 'opacity', 'name', 'uid', 'ids', 'customdata', 'meta', 'hoverinfo', 'hoverlabel', 'stream', 'transforms', 'uirevision', 'z', 'x', 'x0', 'dx', 'y', 'y0', 'dy', 'text', 'hovertext', 'transpose', 'xtype', 'ytype', 'zsmooth', 'connectgaps', 'xgap', 'ygap', 'zhoverformat', 'hovertemplate', 'zauto', 'zmin', 'zmax', 'zmid', 'colorscale', 'autocolorscale', 'reversescale', 'showscale', 'colorbar', 'coloraxis', 'xcalendar', 'ycalendar', 'xaxis', 'yaxis', 'idssrc', 'customdatasrc', 'metasrc', 'hoverinfosrc', 'zsrc', 'xsrc', 'ysrc', 'textsrc', 'hovertextsrc', 'hovertemplatesrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'


38. positioning with multiple colorbars and legends (@test-plotly-colorbar.R#122) - n too large, allowed maximum for palette Set2 is 8
Returning the palette you asked for with that many colors


39. positioning with multiple colorbars and legends (@test-plotly-colorbar.R#122) - n too large, allowed maximum for palette Set2 is 8
Returning the palette you asked for with that many colors


40. Trace ordering is alphabetical (@test-plotly-linetype.R#62) - plotly.js only supports 6 different linetypes

41. Trace ordering is alphabetical (@test-plotly-linetype.R#62) - plotly.js only supports 6 different linetypes

42. Variable mappings return same result regardless of where they appear (@test-plotly.R#41) - `line.width` does not currently support multiple values.

43. Variable mappings return same result regardless of where they appear (@test-plotly.R#41) - `line.width` does not currently support multiple values.

44. Character strings correctly mapped to a positional axis (@test-plotly.R#143) - minimal value for n is 3, returning requested palette with 3 different levels


45. Character strings correctly mapped to a positional axis (@test-plotly.R#143) - minimal value for n is 3, returning requested palette with 3 different levels


46. Character strings correctly mapped to a positional axis (@test-plotly.R#143) - minimal value for n is 3, returning requested palette with 3 different levels


47. Character strings correctly mapped to a positional axis (@test-plotly.R#143) - minimal value for n is 3, returning requested palette with 3 different levels


48. plot_geo() lat/lon range is set (@test-plotly-sf.R#37) - The trace types 'scattermapbox' and 'scattergeo' require a projected coordinate system that is based on the WGS84 datum (EPSG:4326), but the crs provided is: '+proj=longlat +datum=NAD27 +no_defs'. Attempting transformation to the target coordinate system.

49. Can plot sfc with a missing crs (@test-plotly-sf.R#89) - Missing coordinate reference system (crs). Defaulting to EPSG:4326

50. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

51. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

52. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

53. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

54. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

55. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

56. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

57. sizemode is always respected (@test-plotly-size.R#7) - `line.width` does not currently support multiple values.

58. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

59. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

60. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

61. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

62. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

63. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

64. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

65. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

66. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

67. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

68. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

69. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

70. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

71. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

72. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

73. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

74. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

75. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

76. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

77. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

78. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

79. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

80. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

81. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

82. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

83. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

84. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - Can only have one: highlight

85. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

86. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

87. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

88. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

89. ggplotly understands ggmatrix (@test-plotly-subplot.R#139) - All elements of `...` must be named.
Did you want `key = c(key)`?

90. annotation paper repositioning (@test-plotly-subplot.R#148) - No trace type specified and no positional attributes specified

91. annotation paper repositioning (@test-plotly-subplot.R#148) - No trace type specified and no positional attributes specified

92. shape paper repositioning (@test-plotly-subplot.R#194) - No trace type specified and no positional attributes specified

93. shape paper repositioning (@test-plotly-subplot.R#194) - No trace type specified and no positional attributes specified

94. shape paper repositioning (@test-plotly-subplot.R#244) - No trace type specified and no positional attributes specified

95. shape paper repositioning (@test-plotly-subplot.R#244) - No trace type specified and no positional attributes specified

96. annotation xref/yref bumping (@test-plotly-subplot.R#308) - No trace type specified and no positional attributes specified

97. annotation xref/yref bumping (@test-plotly-subplot.R#308) - No trace type specified and no positional attributes specified

98. annotation xref/yref bumping (@test-plotly-subplot.R#320) - No trace type specified and no positional attributes specified

99. annotation xref/yref bumping (@test-plotly-subplot.R#320) - No trace type specified and no positional attributes specified

100. shape xref/yref bumping (@test-plotly-subplot.R#384) - No trace type specified and no positional attributes specified

101. shape xref/yref bumping (@test-plotly-subplot.R#384) - No trace type specified and no positional attributes specified

102. shape xref/yref bumping (@test-plotly-subplot.R#396) - No trace type specified and no positional attributes specified

103. shape xref/yref bumping (@test-plotly-subplot.R#396) - No trace type specified and no positional attributes specified

104. May specify legendgroup with through a vector of values (@test-plotly-subplot.R#481) - Unequal factor levels: coercing to character

105. May specify legendgroup with through a vector of values (@test-plotly-subplot.R#481) - binding character and factor vector, coercing into character vector

106. May specify legendgroup with through a vector of values (@test-plotly-subplot.R#481) - binding character and factor vector, coercing into character vector

107. May specify legendgroup with through a vector of values (@test-plotly-subplot.R#481) - binding character and factor vector, coercing into character vector

108. May specify legendgroup with through a vector of values (@test-plotly-subplot.R#504) - No trace type specified and no positional attributes specified

109. Setting a constant symbol works (@test-plotly-symbol.R#30) - The shape palette can deal with a maximum of 6 discrete values because
more than 6 becomes difficult to discriminate; you have 25. Consider
specifying shapes manually if you must have them.

110. Setting a constant symbol works (@test-plotly-symbol.R#30) - The shape palette can deal with a maximum of 6 discrete values because
more than 6 becomes difficult to discriminate; you have 25. Consider
specifying shapes manually if you must have them.

111. Trace ordering is alphabetical (@test-plotly-symbol.R#68) - The shape palette can deal with a maximum of 6 discrete values because
more than 6 becomes difficult to discriminate; you have 7. Consider
specifying shapes manually if you must have them.

112. Trace ordering is alphabetical (@test-plotly-symbol.R#68) - The following are not valid symbol codes:
'NA'
Valid symbols include:
'0', 'circle', '100', 'circle-open', '200', 'circle-dot', '300', 'circle-open-dot', '1', 'square', '101', 'square-open', '201', 'square-dot', '301', 'square-open-dot', '2', 'diamond', '102', 'diamond-open', '202', 'diamond-dot', '302', 'diamond-open-dot', '3', 'cross', '103', 'cross-open', '203', 'cross-dot', '303', 'cross-open-dot', '4', 'x', '104', 'x-open', '204', 'x-dot', '304', 'x-open-dot', '5', 'triangle-up', '105', 'triangle-up-open', '205', 'triangle-up-dot', '305', 'triangle-up-open-dot', '6', 'triangle-down', '106', 'triangle-down-open', '206', 'triangle-down-dot', '306', 'triangle-down-open-dot', '7', 'triangle-left', '107', 'triangle-left-open', '207', 'triangle-left-dot', '307', 'triangle-left-open-dot', '8', 'triangle-right', '108', 'triangle-right-open', '208', 'triangle-right-dot', '308', 'triangle-right-open-dot', '9', 'triangle-ne', '109', 'triangle-ne-open', '209', 'triangle-ne-dot', '309', 'triangle-ne-open-dot', '10', 'triangle-se', '110', 'triangle-se-open', '210', 'triangle-se-dot', '310', 'triangle-se-open-dot', '11', 'triangle-sw', '111', 'triangle-sw-open', '211', 'triangle-sw-dot', '311', 'triangle-sw-open-dot', '12', 'triangle-nw', '112', 'triangle-nw-open', '212', 'triangle-nw-dot', '312', 'triangle-nw-open-dot', '13', 'pentagon', '113', 'pentagon-open', '213', 'pentagon-dot', '313', 'pentagon-open-dot', '14', 'hexagon', '114', 'hexagon-open', '214', 'hexagon-dot', '314', 'hexagon-open-dot', '15', 'hexagon2', '115', 'hexagon2-open', '215', 'hexagon2-dot', '315', 'hexagon2-open-dot', '16', 'octagon', '116', 'octagon-open', '216', 'octagon-dot', '316', 'octagon-open-dot', '17', 'star', '117', 'star-open', '217', 'star-dot', '317', 'star-open-dot', '18', 'hexagram', '118', 'hexagram-open', '218', 'hexagram-dot', '318', 'hexagram-open-dot', '19', 'star-triangle-up', '119', 'star-triangle-up-open', '219', 'star-triangle-up-dot', '319', 'star-triangle-up-open-dot', '20', 'star-triangle-down', '120', 'star-triangle-down-open', '220', 'star-triangle-down-dot', '320', 'star-triangle-down-open-dot', '21', 'star-square', '121', 'star-square-open', '221', 'star-square-dot', '321', 'star-square-open-dot', '22', 'star-diamond', '122', 'star-diamond-open', '222', 'star-diamond-dot', '322', 'star-diamond-open-dot', '23', 'diamond-tall', '123', 'diamond-tall-open', '223', 'diamond-tall-dot', '323', 'diamond-tall-open-dot', '24', 'diamond-wide', '124', 'diamond-wide-open', '224', 'diamond-wide-dot', '324', 'diamond-wide-open-dot', '25', 'hourglass', '125', 'hourglass-open', '26', 'bowtie', '126', 'bowtie-open', '27', 'circle-cross', '127', 'circle-cross-open', '28', 'circle-x', '128', 'circle-x-open', '29', 'square-cross', '129', 'square-cross-open', '30', 'square-x', '130', 'square-x-open', '31', 'diamond-cross', '131', 'diamond-cross-open', '32', 'diamond-x', '132', 'diamond-x-open', '33', 'cross-thin', '133', 'cross-thin-open', '34', 'x-thin', '134', 'x-thin-open', '35', 'asterisk', '135', 'asterisk-open', '36', 'hash', '136', 'hash-open', '236', 'hash-dot', '336', 'hash-open-dot', '37', 'y-up', '137', 'y-up-open', '38', 'y-down', '138', 'y-down-open', '39', 'y-left', '139', 'y-left-open', '40', 'y-right', '140', 'y-right-open', '41', 'line-ew', '141', 'line-ew-open', '42', 'line-ns', '142', 'line-ns-open', '43', 'line-ne', '143', 'line-ne-open', '44', 'line-nw', '144', 'line-nw-open

113. Trace ordering is alphabetical (@test-plotly-symbol.R#68) - The shape palette can deal with a maximum of 6 discrete values because
more than 6 becomes difficult to discriminate; you have 7. Consider
specifying shapes manually if you must have them.

114. Trace ordering is alphabetical (@test-plotly-symbol.R#68) - The following are not valid symbol codes:
'NA'
Valid symbols include:
'0', 'circle', '100', 'circle-open', '200', 'circle-dot', '300', 'circle-open-dot', '1', 'square', '101', 'square-open', '201', 'square-dot', '301', 'square-open-dot', '2', 'diamond', '102', 'diamond-open', '202', 'diamond-dot', '302', 'diamond-open-dot', '3', 'cross', '103', 'cross-open', '203', 'cross-dot', '303', 'cross-open-dot', '4', 'x', '104', 'x-open', '204', 'x-dot', '304', 'x-open-dot', '5', 'triangle-up', '105', 'triangle-up-open', '205', 'triangle-up-dot', '305', 'triangle-up-open-dot', '6', 'triangle-down', '106', 'triangle-down-open', '206', 'triangle-down-dot', '306', 'triangle-down-open-dot', '7', 'triangle-left', '107', 'triangle-left-open', '207', 'triangle-left-dot', '307', 'triangle-left-open-dot', '8', 'triangle-right', '108', 'triangle-right-open', '208', 'triangle-right-dot', '308', 'triangle-right-open-dot', '9', 'triangle-ne', '109', 'triangle-ne-open', '209', 'triangle-ne-dot', '309', 'triangle-ne-open-dot', '10', 'triangle-se', '110', 'triangle-se-open', '210', 'triangle-se-dot', '310', 'triangle-se-open-dot', '11', 'triangle-sw', '111', 'triangle-sw-open', '211', 'triangle-sw-dot', '311', 'triangle-sw-open-dot', '12', 'triangle-nw', '112', 'triangle-nw-open', '212', 'triangle-nw-dot', '312', 'triangle-nw-open-dot', '13', 'pentagon', '113', 'pentagon-open', '213', 'pentagon-dot', '313', 'pentagon-open-dot', '14', 'hexagon', '114', 'hexagon-open', '214', 'hexagon-dot', '314', 'hexagon-open-dot', '15', 'hexagon2', '115', 'hexagon2-open', '215', 'hexagon2-dot', '315', 'hexagon2-open-dot', '16', 'octagon', '116', 'octagon-open', '216', 'octagon-dot', '316', 'octagon-open-dot', '17', 'star', '117', 'star-open', '217', 'star-dot', '317', 'star-open-dot', '18', 'hexagram', '118', 'hexagram-open', '218', 'hexagram-dot', '318', 'hexagram-open-dot', '19', 'star-triangle-up', '119', 'star-triangle-up-open', '219', 'star-triangle-up-dot', '319', 'star-triangle-up-open-dot', '20', 'star-triangle-down', '120', 'star-triangle-down-open', '220', 'star-triangle-down-dot', '320', 'star-triangle-down-open-dot', '21', 'star-square', '121', 'star-square-open', '221', 'star-square-dot', '321', 'star-square-open-dot', '22', 'star-diamond', '122', 'star-diamond-open', '222', 'star-diamond-dot', '322', 'star-diamond-open-dot', '23', 'diamond-tall', '123', 'diamond-tall-open', '223', 'diamond-tall-dot', '323', 'diamond-tall-open-dot', '24', 'diamond-wide', '124', 'diamond-wide-open', '224', 'diamond-wide-dot', '324', 'diamond-wide-open-dot', '25', 'hourglass', '125', 'hourglass-open', '26', 'bowtie', '126', 'bowtie-open', '27', 'circle-cross', '127', 'circle-cross-open', '28', 'circle-x', '128', 'circle-x-open', '29', 'square-cross', '129', 'square-cross-open', '30', 'square-x', '130', 'square-x-open', '31', 'diamond-cross', '131', 'diamond-cross-open', '32', 'diamond-x', '132', 'diamond-x-open', '33', 'cross-thin', '133', 'cross-thin-open', '34', 'x-thin', '134', 'x-thin-open', '35', 'asterisk', '135', 'asterisk-open', '36', 'hash', '136', 'hash-open', '236', 'hash-dot', '336', 'hash-open-dot', '37', 'y-up', '137', 'y-up-open', '38', 'y-down', '138', 'y-down-open', '39', 'y-left', '139', 'y-left-open', '40', 'y-right', '140', 'y-right-open', '41', 'line-ew', '141', 'line-ew-open', '42', 'line-ns', '142', 'line-ns-open', '43', 'line-ne', '143', 'line-ne-open', '44', 'line-nw', '144', 'line-nw-open

══ DONE ════════════════════════════════════════════════════════════════════════
</pre>
</details>
",https://github.com/plotly/plotly.R/pull/1643,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1640,2019-10-15T23:59:10Z,2019-11-06T00:18:14Z,2019-10-16T18:33:09Z,See #1639 ,https://github.com/plotly/plotly.R/pull/1640,plotly
wfjvdham,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/1638,2019-10-15T18:28:05Z,2019-10-21T14:37:40Z,2019-10-21T14:37:37Z,solves #1299,https://github.com/plotly/plotly.R/pull/1638,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1635,2019-10-08T21:27:16Z,2020-03-04T14:46:00Z,2020-03-04T14:46:00Z,Closes #1569,https://github.com/plotly/plotly.R/pull/1635,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1634,2019-10-08T14:46:03Z,2020-01-08T19:07:22Z,2020-01-08T19:07:22Z,,https://github.com/plotly/plotly.R/pull/1634,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1625,2019-09-23T19:22:22Z,2019-11-06T00:18:21Z,2019-10-08T21:37:41Z,See #1624,https://github.com/plotly/plotly.R/pull/1625,plotly
ThierryO,NONE,closed,2,https://github.com/plotly/plotly.R/pull/1621,2019-09-20T14:29:56Z,2019-10-08T14:47:34Z,2019-10-08T14:47:34Z,"The current implementation is not affected by `set.seed()`. Rerunning the same code results in different id's, even if `set.seed()` is set.

The new version is based on `sample()`, yielding stable ids in case the user sets `set.seed()`. The benefit is that rerunning the code with unchanged definition and data yields identical HTML code. This is useful when the output is stored under version control.",https://github.com/plotly/plotly.R/pull/1621,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1611,2019-09-03T15:46:32Z,2019-09-03T21:28:10Z,2019-09-03T21:28:10Z,"Fixes #1610. Note also that when `pt.pointNumbers` is populated, the `key` attribute is relayed properly

## Testing notes

Install `remotes::install_github(""ropensci/plotly"")`, then run the app below. As you hover over points, information about the hovered point should appear in the R console.

```r
library(shiny)
library(plotly)

ui <- fluidPage(
  plotlyOutput(""distPlotTest"")
)

server <- function(input, output) {
  
  output$distPlotTest <- renderPlotly({
    highlight_key(mtcars, ~carb) %>%
      plot_ly(x = ~mtcars$carb, key = ~row.names(mtcars), type = ""histogram"") %>%
        layout(barmode = ""overlay"") %>% 
        highlight(on = ""plotly_hover"", off=""plotly_deselect"") 
  })
  
  observe({
    print(event_data(""plotly_hover""))
  })
  
}

# Run the application
shinyApp(ui = ui, server = server)
```",https://github.com/plotly/plotly.R/pull/1611,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1609,2019-08-30T18:21:38Z,2019-11-06T00:18:20Z,2019-10-08T20:36:44Z,"Another attempt at #1539, which was merged before fully understanding the shinytest failure (my bad). Note that the merge commit was already reverted on master via https://github.com/ropensci/plotly/commit/285673153adc56ec0cbb8a01d0af4c46f3894b00

I had tested #1539 on some minimal apps, but it turns out it would fail on any `renderPlotly()` statement that contained a reactive read. For example:

```r
library(shiny)
library(plotly)

ui <- fluidPage(
  selectInput(""x"", ""X"", names(diamonds)),
  plotlyOutput(""p"")
)

server <- function(input, output, session) {
  output$p <- renderPlotly({
    plot_ly(x = 1, y = 1, text = input$x)
  })
}
shinyApp(ui, server)
```

```r
Error in .getReactiveEnvironment()$currentContext: Operation not allowed without an active reactive context. (You tried to do something that can only be done from inside a reactive expression or observer.)
  71: stop
  70: .getReactiveEnvironment()$currentContext [/Users/cpsievert/github/shiny/R/react.R#143]
  69: getCurrentContext [/Users/cpsievert/github/shiny/R/react.R#202]
  65: .subset2(x, ""impl"")$get [/Users/cpsievert/github/shiny/R/reactives.R#344]
  64: $.reactivevalues [/Users/cpsievert/github/shiny/R/reactives.R#605]
  61: renderPlotly [#4]
  60: func
  53: renderPlotly [/Users/cpsievert/github/plotly/R/shiny.R#52]
  52: server [#3]
Error in .getReactiveEnvironment()$currentContext() : 
  Operation not allowed without an active reactive context. (You tried to do something that can only be done from inside a reactive expression or observer.)
```


I believe the problem is due to `prepareWidget(func())` being evaluated too early? 1a714b8 addresses the problem by passing this in as a quoted expression.",https://github.com/plotly/plotly.R/pull/1609,plotly
atusy,NONE,open,2,https://github.com/plotly/plotly.R/pull/1599,2019-08-15T04:05:17Z,2022-03-26T18:43:31Z,list(),"By this PR, we can convert ggplot to plotly by implementing `gginteractive()`.
In addition, `gginteractive` has the `interactive` argument to control the conversion.

```r
ggplot(mtcars, aes(wt, mpg)) +
  geom_point() +
  gginteractive()
  # gginteractive(FALSE) # can suppress conversion
```

This is a sort of syntax sugar for `ggplotly()`, which has to wrap whole ggplot:

```r
ggplotly(
  ggplot(mtcars, aes(wt, mpg)) +
  geom_point()
)
```",https://github.com/plotly/plotly.R/pull/1599,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1585,2019-07-24T20:27:23Z,2019-08-27T14:57:54Z,2019-08-27T14:57:54Z,,https://github.com/plotly/plotly.R/pull/1585,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1578,2019-07-13T17:14:41Z,2019-10-08T20:32:58Z,2019-10-08T20:32:57Z,See #1569,https://github.com/plotly/plotly.R/pull/1578,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1576,2019-07-12T23:20:46Z,2019-07-17T16:00:22Z,2019-07-17T16:00:22Z,See #1519,https://github.com/plotly/plotly.R/pull/1576,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1575,2019-07-12T22:02:17Z,2019-10-08T20:38:17Z,2019-10-08T20:38:17Z,"@jcheng5 I dug deeper into the root issue behind #1553. It turns out that `Plotly.relayout()` mutates input to `Plotly.plot()` ([minimal example](https://codepen.io/cpsievert/pen/WNeOrjj)). Normally this doesn't pose a problem for resizing logic, but for that dynamic UI example, `renderValue` gets called twice for every widget (meaning `x.layout.width`, and `instance.width` is populated during the second render).

Anyway, after this discovery, I think it's safer to make a deep copy of `width`/`height`/`autosize` at the start of `renderValue` (instead of using attributes attached to the DOM element)",https://github.com/plotly/plotly.R/pull/1575,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1572,2019-07-11T18:58:53Z,2019-07-16T16:14:27Z,2019-07-16T16:14:27Z,See #1561 and https://github.com/tidyverse/ggplot2/issues/3436,https://github.com/plotly/plotly.R/pull/1572,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1557,2019-06-27T02:34:57Z,2019-07-10T23:54:04Z,2019-07-10T23:54:04Z,,https://github.com/plotly/plotly.R/pull/1557,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1539,2019-05-24T19:29:58Z,2019-08-30T17:04:13Z,2019-08-30T17:04:13Z,"## Background

In order to render promises (that yield plotly objects), ggplot2 objects, and orchestrate event registration, `renderPlotly()` wraps user-supplied (reactive) expressions with `plotly:::prepareWidget()`

## The problem

If a user-supplied expression contains a `return()` statement. It appears `plotly:::prepareWidget()` will exit early. For an example, see below in the testing notes and/or the example in #1528

## Testing notes

Install `devtools::install_github(""ropensci/plotly"")`, then run the app:

```r
library(shiny)
library(plotly)

ui <- fluidPage(
  plotlyOutput(""myplot""),
  verbatimTextOutput(""hovered"")
)

server <- function(input, output, session) {
  
  x <- faithful$eruptions
  y <- faithful$waiting
  
  output$myplot <- renderPlotly({
    p <- plot_ly(x = x, y = y) %>%
      add_markers()
    return(p)
  })
  
  output$hovered <- renderPrint({
    event_data(""plotly_hover"")
  })
  
}

shinyApp(ui = ui, server = server)
```

* __Old behavior__: The app would throw multiple (irrelevant) warnings.

*  __New behavior__: The app should throw no warnings.

",https://github.com/plotly/plotly.R/pull/1539,plotly
chsafouane,NONE,closed,2,https://github.com/plotly/plotly.R/pull/1525,2019-05-08T10:27:19Z,2019-07-15T21:31:57Z,2019-07-15T16:20:21Z,"""its"" instead of ""it's""",https://github.com/plotly/plotly.R/pull/1525,plotly
cpsievert,COLLABORATOR,open,0,https://github.com/plotly/plotly.R/pull/1518,2019-04-11T18:20:17Z,2022-03-26T18:43:31Z,list(),,https://github.com/plotly/plotly.R/pull/1518,plotly
cpsievert,COLLABORATOR,open,4,https://github.com/plotly/plotly.R/pull/1514,2019-04-09T21:44:40Z,2022-03-26T18:43:31Z,list(),"This changes the default behaivor of ggplotly() to render `geom_boxplot()` as low-level polygons rather than plotly.js box traces. As result, we'll be able to exactly replicate the ggplot2 result in many more cases. A list of relevant issues this PR should close: #1484, #1241, #1114, #1098, #866, #697, #706

BTW, for those who want the old-behavior (which one might want in order to keep the tooltip behavior the same), you can change `geom_boxplot()` to `geom_boxplot2()`

TODO:
- [ ] Lots of visual tests",https://github.com/plotly/plotly.R/pull/1514,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1512,2019-04-09T00:06:50Z,2019-04-11T18:03:54Z,2019-04-11T18:03:54Z,"TODO: 

- [ ] *Always* set `layout.boxmode = ""group""` and `layout.boxgap = 0`?
- [ ] Default to non-statisical approach using GeomSegment/ GeomCrossbar (basically copy `GeomBoxplot$draw_group`)?
",https://github.com/plotly/plotly.R/pull/1512,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1511,2019-04-04T18:37:44Z,2019-10-08T21:38:27Z,2019-10-08T21:38:27Z,,https://github.com/plotly/plotly.R/pull/1511,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1508,2019-04-03T21:16:20Z,2019-04-04T19:55:47Z,2019-04-04T19:55:47Z,See #1508 ,https://github.com/plotly/plotly.R/pull/1508,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/1506,2019-04-02T19:13:58Z,2019-04-04T14:27:16Z,2019-04-04T14:27:16Z,"## TODO

These plotly.js releases will require some R changes:

* `title` attributes linked to strings are now deprecated. Please use `title.text` instead to fill in your title text [#3276]
* `title*` attributes are now deprecated. They moved to `title.*`. For example, colorbar.titleside is now colorbar.title.side [#3276]

FWIW, I'm pretty sure `layout.title`, `layout.titlefont`, `layout[axisid].title`, `layout[axisid].titlefont`, `marker.colorbar.title`, `marker.colorbar.titlefont`, `marker.colorbar.titleside`, and [carpet-specific attributes](https://github.com/plotly/plotly.js/pull/3276/files#diff-966c586836ba9876294bcca2af38b5eb)  are the only ones effected. 

- [x] It looks like these attributes still work, but be good form to identify these cases on the R side and throw an information deprecation message/warning. 
- [x] Update any 'internal' logic using these attributes to use the new nested structure.
- [x] Would also be a good time to have `ggplotly()` leverage the new `layout.title` placement API.
",https://github.com/plotly/plotly.R/pull/1506,plotly
alyst,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/1501,2019-03-20T17:12:56Z,2019-07-15T15:54:30Z,2019-07-15T15:54:30Z,"This is the continuation of the closed PR #619 after rebasing the changes to the current master.

*ggplotly* handles the `facet_wrap()` with the incomplete last row differently from *ggplot2*: `ggplot()` attaches the X axis to the last plot in the column, whereas `ggplotly(ggplot())` always puts it to the last row, even when there are no plots at that position. IMHO the *ggplot2* behaviour is better -- there are no ""floating"" axes; the axes are always attached to the plots.

There's one testcase affected by the fix: *""facet_wrap-free_y-2""* (it also demonstrates the difference between *ggplot* and current *ggplotly* behaviours).
I guess I also need to fix the reference *.png* image, but I'm not sure how to properly do it.",https://github.com/plotly/plotly.R/pull/1501,plotly
alyst,CONTRIBUTOR,open,0,https://github.com/plotly/plotly.R/pull/1499,2019-03-20T10:35:18Z,2022-03-26T18:43:31Z,list(),"This is a small cleanup to the `subplot()` grid layout logic: when defining the new domains of Y axis, `get_domains()` sets the new `ystart` > `yend`, but later in `subplot()`/`reposition()` the `ystart` and `yend` are reversed to do the proper transformation.
With the fix the logic of handling both X and Y axes is unified: **start* is always less than **end*, the axis domain is always from **start* to **end*.",https://github.com/plotly/plotly.R/pull/1499,plotly
alyst,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/1498,2019-03-20T10:01:29Z,2019-07-15T15:28:33Z,2019-07-15T15:28:33Z,"The PR replaces the uses of `Reduce(c, ...)` to merge the lists with `unlist(..., recursive = FALSE)`.

The motivation: for the list `x` of *n* elements `Reduce(c, x)` would implicitly create *n* lists/vectors of lengths 1 to *n*, whereas only the last one is needed. The pattern adds a considerable overhead when the subplots contain a lot of data.

It also simplifies `ensure_one()`: instead of using `[` to get the one-element list, it uses `[[` to get this one element (nulls are automatically filtered out).",https://github.com/plotly/plotly.R/pull/1498,plotly
cpsievert,COLLABORATOR,open,0,https://github.com/plotly/plotly.R/pull/1497,2019-03-19T20:22:35Z,2022-03-26T18:43:31Z,list(),See #1496 ,https://github.com/plotly/plotly.R/pull/1497,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1494,2019-03-18T20:40:44Z,2019-04-03T21:27:41Z,2019-04-03T21:27:41Z,"See #1493 for an example

## Background

`layout.shapes` have `xsizemode`/`ysizemode` attributes that allow you to specify a fixed height/width for shapes by setting, say `ysizemode='pixel'`. In this case, the `y0`/`y1` are measured in pixels and are positioned relative to `yanchor`. Therefore, when `ysizemode='pixel'` and `yref = 'paper'`, `subplot()` needs to reposition `yanchor` instead of `y0`/`y1`",https://github.com/plotly/plotly.R/pull/1494,plotly
michaelbabyn,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/1489,2019-03-14T17:08:21Z,2019-04-03T21:36:07Z,2019-04-03T21:36:07Z,resolves the issue mentioned in #1197. I checked the tests before re-commenting them out to make this PR and they worked.,https://github.com/plotly/plotly.R/pull/1489,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1485,2019-03-12T00:46:02Z,2019-03-14T16:25:40Z,2019-03-14T16:25:40Z,Fixes #1432,https://github.com/plotly/plotly.R/pull/1485,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1482,2019-03-08T00:14:17Z,2019-03-11T19:22:18Z,2019-03-11T19:22:18Z,"Fixes #1427 

TODO: throw error if we detect `layout.grid` in `subplot()`?",https://github.com/plotly/plotly.R/pull/1482,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1481,2019-03-08T00:01:28Z,2019-03-28T19:30:58Z,2019-03-11T20:18:19Z,"Closes #1457.

This was a fun 🐛 to track down 🔍 

## Background

Typically, when `ggplotly()` translates a layer, it prefixes the class of the data with `""Geom*""`. This is what allows `geom2plotly()` to work off S3 methods. The `aes2plotly()` function also uses this class to query the Geom's default aesthetics from ggplot2's namespace. 

## The issue

To translate the graticule that comes with `geom_sf()`/`coord_sf()`, I call `geom2trace.GeomPath()` in a fairly un-standard way:

https://github.com/ropensci/plotly/blob/4473d6454f01825e8f15783e670e6fffb017e123/R/ggplotly.R#L611

That ends up calling this code, and in this case, the value of `geom` is `data.frame`. 

https://github.com/ropensci/plotly/blob/4473d6454f01825e8f15783e670e6fffb017e123/R/layers2traces.R#L1003

As of https://github.com/tidyverse/ggplot2/commit/92d27779e210ce16f441eeec26926b8b045a47a8, **ggplot2** now defines `data.frame` in it's namespace, so `ggfun(geom)$default_aes` no longer returns `NULL` (in fact, it errors out)


",https://github.com/plotly/plotly.R/pull/1481,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1480,2019-03-06T22:55:52Z,2019-03-07T22:34:55Z,2019-03-07T22:34:55Z,Fixes #1479,https://github.com/plotly/plotly.R/pull/1480,plotly
adrianoesch,NONE,closed,1,https://github.com/plotly/plotly.R/pull/1477,2019-03-06T17:01:25Z,2019-07-15T15:30:58Z,2019-07-15T15:30:58Z,"```
ggplotly(ggplot(mtcars,aes(x=drat,y=hp))+geom_point()+
  geom_point(aes(y=qsec,color='red',axis=2))+
  scale_y_continuous(sec.axis = sec_axis(~./6,'2nd Axis')))
```

an additional `axis='sec'` or  `axis=2` is necessary in the geom for ggplotly to know which trace needs to be mapped onto y2, which results in a warning from ggplot (`Ignoring unknown aesthetics: axis`) but the outcome seems good enough to me. let me know what you think (tests included).
",https://github.com/plotly/plotly.R/pull/1477,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1467,2019-02-16T00:04:30Z,2019-02-27T18:36:46Z,2019-02-27T18:36:46Z,See #1466,https://github.com/plotly/plotly.R/pull/1467,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1458,2019-01-24T22:16:42Z,2019-02-11T15:49:39Z,2019-02-11T15:49:39Z,,https://github.com/plotly/plotly.R/pull/1458,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1450,2019-01-09T19:18:01Z,2019-04-02T21:38:16Z,2019-04-02T21:38:16Z,"## TODO

These plotly.js release notes will require some R changes:

* `title` attributes linked to strings are now deprecated. Please use `title.text` instead to fill in your title text [#3276]
* `title*` attributes are now deprecated. They moved to `title.*`. For example, colorbar.titleside is now colorbar.title.side [#3276]

FWIW, I'm pretty sure `layout.title`, `layout.titlefont`, `layout[axisid].title`, `layout[axisid].titlefont`, `marker.colorbar.title`, `marker.colorbar.titlefont`, `marker.colorbar.titleside`, and [carpet-specific attributes](https://github.com/plotly/plotly.js/pull/3276/files#diff-966c586836ba9876294bcca2af38b5eb)  are the only ones effected. 

- [x] It looks like these attributes still work, but be good form to identify these cases on the R side and throw an information deprecation message/warning. 
- [ ] Update any 'internal' logic using these attributes to use the new nested structure.
- [ ] Would also be a good time to have `ggplotly()` leverage the new `layout.title` and `layout[axisid].title` placement attributes
",https://github.com/plotly/plotly.R/pull/1450,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1449,2019-01-09T19:02:36Z,2019-01-10T17:34:24Z,2019-01-10T17:34:24Z,"See #1448 

##  Testing notes

Install `remotes::install_github(""ropensci/plotly#1449"")`, then verify expectation in #1448",https://github.com/plotly/plotly.R/pull/1449,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1445,2019-01-07T23:45:00Z,2019-01-21T15:39:44Z,2019-01-21T15:39:43Z,"See #1444 for an example

## Testing notes

Install `remotes::install_github('ropensci/plotly#1445')` then run the example in #1444. Make sure that when you drag annotation(s), there is only one 'foo' and one 'bar' annotation

",https://github.com/plotly/plotly.R/pull/1445,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1436,2018-12-13T21:59:55Z,2018-12-17T15:15:33Z,2018-12-17T15:15:33Z,"## Description

Crosstalk highlight events work by adding/deleting traces as needed. Currently, the deleting logic removes _all_ traces added after initial render. This change makes it so only the traces added by crosstalk are removed. 

## Example

In the example below you would expect that a new marker is added to the everytime a point is clicked. Instead, without this change, only a single marker is added (and moves `x` position after every click)

```r
library(plotly)
library(htmlwidgets)

mtcars %>%
  highlight_key() %>%
  plot_ly(x = ~wt, y = ~mpg) %>%
  add_markers() %>%
  highlight(""plotly_click"") %>%
  onRender(""
    function(el) {
      window.nclicks = 0;
      el.on('plotly_click', function(d) {
        window.nclicks = window.nclicks + 1;
        var trace = {
          x: [window.nclicks],
          y: [10],
          type: 'scatter',
          mode: 'markers'
        }
        Plotly.addTraces(el.id, trace);
      })
    }
  "")
```

## Testing Notes

Install `devtools::install_github(""ropensci/plotly#1436"")` then ensure the example above has the correct behavior
",https://github.com/plotly/plotly.R/pull/1436,plotly
jefshe,NONE,closed,0,https://github.com/plotly/plotly.R/pull/1435,2018-12-13T01:14:16Z,2019-01-24T22:43:50Z,2019-01-24T22:43:50Z,relates to https://github.com/ropensci/plotly/issues/1434,https://github.com/plotly/plotly.R/pull/1435,plotly
cpsievert,COLLABORATOR,open,0,https://github.com/plotly/plotly.R/pull/1429,2018-12-06T23:41:38Z,2022-03-26T18:43:31Z,list(),"TODO: how hard would it be to get this respecting aesthetic mappings? For example, `plot_ly(iris) %>% add_parcoords(color = ~Species)`",https://github.com/plotly/plotly.R/pull/1429,plotly
Alanocallaghan,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/1426,2018-12-06T11:19:18Z,2018-12-07T17:32:08Z,2018-12-07T17:29:59Z,"This checks the help page to ensure that the installed orca is plotly's orca.

Closes #1425",https://github.com/plotly/plotly.R/pull/1426,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1423,2018-12-05T00:57:53Z,2019-01-21T15:42:10Z,2019-01-21T15:42:10Z,"Closes https://github.com/ropensci/plotly/issues/1162

## Testing Notes

Install `remotes::install_github('ropensci/plotly#1423')`, then run the following:

```r
shiny::runGitHub(""plotly"", ""ropensci"", ref = ""customdata"", subdir = ""inst/examples/shiny/event_data"")
```

Confirm that when you hover/click/brush points, that the event data contains a `customdata` column",https://github.com/plotly/plotly.R/pull/1423,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/1422,2018-12-04T14:15:20Z,2018-12-04T23:00:30Z,2018-12-04T23:00:30Z,"Hi @cpsievert!

I noticed your little ORCiD badge on https://cran.r-project.org/web/packages/plotly/index.html so I thought I would start using mine as well...

Best,
Marianne",https://github.com/plotly/plotly.R/pull/1422,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1421,2018-12-03T21:39:02Z,2019-11-06T00:18:03Z,2019-11-06T00:16:22Z,"This PR won't be necessary until scales goes to CRAN. It just makes sure our test expectations are in line with the new behavior in scales.

TODO: will need to approve the new svg baseline(s)",https://github.com/plotly/plotly.R/pull/1421,plotly
cpsievert,COLLABORATOR,open,1,https://github.com/plotly/plotly.R/pull/1409,2018-11-15T23:25:06Z,2022-03-26T18:43:31Z,list(),"See #1401 for more context

## Review questions

  - [ ] Is it safe to remember event data by attaching an attribute to `graphDiv` in this way? Should try this out in conjunction with `plotlyProxy()`.
  - [ ] Should we worry about emitting redundant data in the persistent case? Or should this be the responsibility of the user?
  - [ ] Should we worry that the persistent hover data isn't cleared when unhovering after a shift?

## Testing notes

Install (`devtools::install_github(""ropensci/plotly#1409"")`), run this app, and make sure the event data is what you'd expect.

```r
library(shiny)
library(plotly)

ui <- fluidPage(
  plotlyOutput(""plot""),
  verbatimTextOutput(""click""),
  verbatimTextOutput(""shift_click""),
  verbatimTextOutput(""hover""),
  verbatimTextOutput(""shift_hover"")
)

server <- function(input, output, session) {
  output$plot <- renderPlotly({
    plot_ly(x = 1:10, y = 1:10, key = LETTERS[1:10])
  })
  
  output$click <- renderPrint({
    d <- event_data(""plotly_click"")
    if (is.null(d)) ""Transient click data"" else d
  })
  output$shift_click <- renderPrint({
    d <- event_data(""plotly_click_persist_on_shift"")
    if (is.null(d)) ""Persistent click data"" else d
  })
  output$hover <- renderPrint({
    d <- event_data(""plotly_hover"")
    if (is.null(d)) ""Transient hover data"" else d
  })
  output$shift_hover <- renderPrint({
    d <- event_data(""plotly_hover_persist_on_shift"")
    if (is.null(d)) ""Persistent hover data"" else d
  })
}

shinyApp(ui, server)
```",https://github.com/plotly/plotly.R/pull/1409,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1408,2018-11-15T22:24:46Z,2018-11-19T16:26:32Z,2018-11-19T16:26:32Z,"Closes #1121 and #1122 

## Testing notes

Install (`devtools::install_github(""ropensci/plotly#1408"")`) then make sure the examples in the example apps referenced in #1121 and #1122 work as expected",https://github.com/plotly/plotly.R/pull/1408,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1407,2018-11-15T19:39:56Z,2018-11-20T17:02:49Z,2018-11-20T17:02:49Z,"Closes #1406. 

The bug in #1406 happens because of the hidden trace that is used to render the colorbar. That trace has an opacity of 0, but `0 || 1` evaluates to 1 in JavaScript, so this client-side logic used to store the original opacity (needed for 'clearing' a crosstalk event) was incorrectly storing 1 (instead of 0), making that invisible trace visible when clearing the brush.

## Testing notes

Install (`devtools::install_github(""ropensci/plotly#1407"")`) then make sure the behavior outlined in #1406 is fixed (i.e. a marker in the lower-left should not appear after click&drag over points and double-clicking to clear the highlight)",https://github.com/plotly/plotly.R/pull/1407,plotly
salim-b,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/1394,2018-11-03T03:00:41Z,2018-11-05T16:11:48Z,2018-11-05T16:11:37Z,,https://github.com/plotly/plotly.R/pull/1394,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1393,2018-11-02T20:29:35Z,2018-11-09T19:12:31Z,2018-11-09T19:12:31Z,"Closes #1141 

## TESTING NOTES

Run the following and make sure that by clicking on each cell of the heatmap, it prints the correct information (gee, it sure would be nice to have https://github.com/rstudio/shinytest/issues/193 to unit test this!)

```r
# devtools::install_github(""ropensci/plotly#1393"")
library(shiny)
library(plotly)

ui <- fluidPage(
        
        fluidRow(column(6, h4(""Heatmap based on data.frame()""),
                        plotlyOutput(""plot1""),
                        h4(""Selected point in heatmap""),
                        verbatimTextOutput(""selected1"")
                ), 
                column(6, 
                        h4(""Heatmap based on matrix()""),
                        plotlyOutput(""plot2""),
                        h4(""Selected point in heatmap""),
                        verbatimTextOutput(""selected2"")
                )
        )
)

server <- function(input, output) {
    
    randomValues <- rnorm(9)
    
    # Heatmap based on data.frame(): not working correctly, try to select x = b; y = 1
    output$plot1 <- renderPlotly({
                
                set.seed(1)
                myData <- data.frame(x = rep(letters[1:3], times = 3), 
                        y = rep(as.character(1:3), each = 3), value = randomValues)
                myData$value[1] <- NA
                
                plot_ly(
                        x = ~x, y = ~y, z = ~value, data = myData,
                        type = ""heatmap"", source = ""plot1""
                )
                
            })
    
    
    output$selected1 <- renderPrint(
            event_data(""plotly_click"", source = ""plot1"")
    )
    
    
    # Heatmap based on matrix()
    output$plot2 <- renderPlotly({
                
                m <- matrix(randomValues, nrow = 3, ncol = 3, byrow = TRUE)
                m[1,1] <- NA
                
                plot_ly(
                        x = c(""a"", ""b"", ""c""), y = as.character(1:3),
                        z = m, type = ""heatmap"", source = ""plot2""
                )
                
                
            })
    
    
    output$selected2 <- renderPrint(
            event_data(""plotly_click"", source = ""plot2"")
    )
}

shinyApp(ui = ui, server = server)
```
",https://github.com/plotly/plotly.R/pull/1393,plotly
cpsievert,COLLABORATOR,closed,3,https://github.com/plotly/plotly.R/pull/1392,2018-11-02T20:23:39Z,2019-02-08T19:48:29Z,2019-02-08T19:48:29Z,"See changes to NEWS.md for the relevant improvements.

## Testing Notes

Install `devtools::install_github(""ropensci/plotly#1392"")`. Run any apps under https://github.com/ropensci/plotly/tree/input-events/inst/examples/shiny that start with 'event_data' and verify they do a sensible thing (happy to walk you through that)",https://github.com/plotly/plotly.R/pull/1392,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1389,2018-11-01T21:59:24Z,2018-11-13T17:18:18Z,2018-11-13T17:18:18Z,"Closes #1308.

## TESTING NOTES

On either linux or windows, please do:

```shell
# devtools::install_github(""ropensci/plotly#1389"")
library(plotly)
library(viridis)

f <- rnorm(100)
f[[5]] <- 1e2
plot_ly(x=f, y=f, color=f, colors=viridis(100))
```

You should see something like this (refer to #1308 for the 'incorrect' version):


![screen shot 2018-11-05 at 12 19 28 pm](https://user-images.githubusercontent.com/1365941/48017883-117fd600-e0f5-11e8-9fed-ee0f34f8e5c0.png)

",https://github.com/plotly/plotly.R/pull/1389,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1388,2018-11-01T21:35:12Z,2018-11-13T22:05:09Z,2018-11-13T22:05:09Z,"## Background

After the `stroke` argument was recently introduced (v4.8.0 I believe), the `color` argument was refined to control the ""fill color"" properties (previously, it would control both ""stroke color"" and ""fill color""). 

That logic relies on `has_fill()` to determine whether ""fill color"" is relevant for the trace (if it isn't, then both `color` and `stroke` will control the ""stroke color"")

This PR broadens the definition of what it means for a plotly trace to have a ""fill color"" to include traces that have a `fillcolor` attribute but no `fill` attribute (e.g., `box` traces).

## Testing notes

Please ensure both of the examples below produce the following image:

![screen shot 2018-11-05 at 3 38 20 pm](https://user-images.githubusercontent.com/1365941/48028379-f1f6a680-e110-11e8-8064-3a70585bbff8.png)


```r
# devtools::install_github(""ropensci/plotly#1388"")
library(plotly)

set.seed(1)
data <- data.frame(x = rep(c(""A"", ""B""), each = 5), y = rnorm(10))
cols <- c('A' = ""blue"", 'B' = ""red"")

plot_ly(data) %>% 
  add_boxplot(x = ~x, y = ~y, color = ~x, colors = cols, line = list(color = ""black""))
```

```r
plot_ly(data) %>% 
  add_boxplot(x = ~x, y = ~y, color = ~x, colors = cols, stroke = I(""black""))
```
",https://github.com/plotly/plotly.R/pull/1388,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1386,2018-11-01T20:35:52Z,2018-11-09T19:12:54Z,2018-11-09T19:12:54Z,"Closes #1351

## TESTING NOTES

Run the following and make sure it produces the image below. Make sure the point labelled ""1"" (not ""3"") is black. 

```r
# devtools::install_github(""ropensci/plotly#1386"")
library(plotly)

mtcars %>%
    mutate(id = seq_len(nrow(.))) %>%
    group_by(cyl) %>%
    plot_ly(
      x = ~mpg, y = ~wt, text = ~id,
      marker = list(color = ~ifelse(id == 1, ""black"", ""red"")),
      mode = ""marker+text"", textposition = ""right""
    )
```

![screen shot 2018-11-06 at 10 23 01 am](https://user-images.githubusercontent.com/1365941/48077880-f8872b80-e1ad-11e8-8265-9b94f9a43012.png)


",https://github.com/plotly/plotly.R/pull/1386,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1385,2018-11-01T17:35:26Z,2019-01-22T18:12:41Z,2019-01-22T18:12:41Z,"## Testing notes

Install `remotes::install_github(""ropensci/plotly#1385"")`, then run the package demos (just make sure each one renders graphs):

```r
demo(""animation-tour-basic"", package = ""plotly"")
demo(""animation-tour-USArrests"", package = ""plotly"")
demo(""crosstalk-filter-dynamic-axis"", package = ""plotly"")
demo(""crosstalk-filter-lines"", package = ""plotly"")
demo(""crosstalk-highlight-binned-target-a"", package = ""plotly"")
demo(""crosstalk-highlight-binned-target-b"", package = ""plotly"")
demo(""crosstalk-highlight-binned-target-c"", package = ""plotly"")
demo(""crosstalk-highlight-epl-2"", package = ""plotly"")
demo(""crosstalk-highlight-epl"", package = ""plotly"")
demo(""crosstalk-highlight-ggpairs"", package = ""plotly"")
demo(""crosstalk-highlight-ggplotly"", package = ""plotly"")
demo(""crosstalk-highlight-intro"", package = ""plotly"")
demo(""crosstalk-highlight-leaflet"", package = ""plotly"")
demo(""crosstalk-highlight-pipeline"", package = ""plotly"")
demo(""crosstalk-highlight-subplot"", package = ""plotly"")
demo(""custom-javascript"", package = ""plotly"")
demo(""rotate"", package = ""plotly"")
demo(""sf-dt"", package = ""plotly"")
demo(""sf-geo"", package = ""plotly"")
demo(""sf-ggplot2"", package = ""plotly"")
demo(""sf-mapbox-data"", package = ""plotly"")
demo(""sf-mapbox-layout"", package = ""plotly"")
demo(""sf-mapbox-style"", package = ""plotly"")
demo(""sf-plotly-3D-globe"", package = ""plotly"")
demo(""sf-plotly-storms"", package = ""plotly"")
demo(""ternary"", package = ""plotly"")
```",https://github.com/plotly/plotly.R/pull/1385,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1384,2018-10-31T18:56:42Z,2018-11-27T21:08:05Z,2018-11-27T21:08:04Z,"Partially fixes #1376, but `crosstalk::crosstalkLibs()` needs to adopt these same changes for those dependencies to be portable as well (see https://github.com/rstudio/crosstalk/pull/63). Note that, unfortunately, since `partial_bundle()` downloads the relevant plotly.js bundle at print-time, I don't think there is a fool-proof way to make that portable, but one could do `partial_bundle(p, local = FALSE)` in that case if they really need the R object to be portable.

### DEVELOPMENT NOTES

With these changes, file paths are now resolved in the htmltools namespace, rather than htmlwidgets, so the usual hack to get `pkgload::load_all()` to work will have to be extended/revised to shim in the appropriate namespace -- https://github.com/r-lib/pkgload/issues/69


### TESTING NOTES

After installing plotly and crosstalk, make sure the following code will produce the image below

```r
# devtools::install_github(""ropensci/plotly#1384"")
# devtools::install_github(""rstudio/crosstalk#63"")

# This should download and render a R plotly object that I created with this PR and uploaded to my dropbox
readRDS(url(""https://www.dropbox.com/s/4trwd7dvm73pb7v/plotly-test.rds?dl=1""))
```

![screen shot 2018-11-06 at 11 25 46 am](https://user-images.githubusercontent.com/1365941/48081889-bdd5c100-e1b6-11e8-8e81-d5c6c7c3bc88.png)
",https://github.com/plotly/plotly.R/pull/1384,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/1382,2018-10-31T17:00:42Z,2018-11-01T16:46:45Z,2018-11-01T16:46:45Z,See #1381,https://github.com/plotly/plotly.R/pull/1382,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1379,2018-10-29T22:33:24Z,2018-12-06T18:44:16Z,2018-12-06T18:44:16Z,"This PR addresses the main problem in https://github.com/rstudio/shinytest/issues/174, but it's worth noting there are a couple remaining issues to be aware of:

* Since shinytest currently runs on phantomjs, it won't work well with plotly's WebGL chart types. a9714dd adds a warning if plotly detects webgl in shinytest mode, but until https://github.com/rstudio/shinytest/issues/146 is addressed, there is no real way for users to see that warning
* How should input values that are triggered through direct manipluation events be handled? I suppose a more long-term solution would be to leverage whatever comes out of https://github.com/rstudio/shinytest/issues/193, but a shorter-term fix might be to use `shiny::snapshotPreprocessInput()`?

## Testing notes

Install `devtools::install_github(""ropensci/plotly#1379"")`, then use **shinytest** to record and test the following app -- https://github.com/ropensci/plotly/tree/master/inst/examples/shiny/Diamonds

Make sure you don't get false positive test failures when running the tests.

Here is some code to help with those tasks:

```shell
git clone https://github.com/ropensci/plotly.git
cd plotly
R
shinytest::recordTest(""inst/examples/shiny/Movies/"")
shinytest::testApp(""inst/examples/shiny/Movies/"")
```",https://github.com/plotly/plotly.R/pull/1379,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1369,2018-10-16T15:31:07Z,2018-10-18T15:35:00Z,2018-10-18T15:34:59Z,"These changes rely on https://github.com/lionel-/vdiffr/pull/48. That PR should be merged first, but strictly speaking, it doesn't have to since the dependency managed via https://hub.docker.com/r/cpsievert/plotly-orca/) ",https://github.com/plotly/plotly.R/pull/1369,plotly
krlmlr,NONE,closed,3,https://github.com/plotly/plotly.R/pull/1365,2018-10-10T19:25:42Z,2018-10-29T23:39:24Z,2018-10-29T23:39:23Z,This changes `new_id()` to use `runif()` and `digest::digest()` to generate reproducible IDs. This is important for testing and resolves https://github.com/rstudio/shinytest/issues/174 and https://github.com/ropensci/plotly/issues/985#issuecomment-367634260.,https://github.com/plotly/plotly.R/pull/1365,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1361,2018-10-05T21:33:07Z,2018-10-05T21:43:39Z,2018-10-05T21:43:39Z,,https://github.com/plotly/plotly.R/pull/1361,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1354,2018-09-28T22:00:33Z,2018-10-08T14:46:13Z,2018-10-08T14:46:13Z,"The main purpose of this pull request is to leverage `vdiffr::expect_doppelganger()` for visual testing and :hocho: the current approach which detects differences in JSON blobs and reports them via a GitHub bot. Detecting and reporting differences in SVG covers a lot more surface area (e.g., tests how the JSON is actually rendered by plotly.js) in a more portable way (i.e., now anyone can run and see differences locally). Plus, the shiny app provides a really nice experience for looking at both visual and textual differences.

Some other note-worthy things that came of this overhaul:

* Producing all the SVG files via `orca()` was painfully slow (because it spins up/down a node instance for each image), so this introduces a `orca_serve` R6 class for static image exporting via an [orca](https://github.com/plotly/orca) server. See

https://github.com/ropensci/plotly/pull/1354/files#diff-be623f9a10f4ce00bfc18cf7c9876f46R72
https://github.com/ropensci/plotly/blob/3f51097c86506d0c9e4260df3908d8f4849e8852/tests/testthat/helper-vdiffr.R


* Tests can now be run via `devtools::test()` rather than the `load_all(); source(""tests/testthat.R"", chdir = T)` hack

## REVIEW NOTES

The svg files may be ignored and the main thing to review is https://github.com/ropensci/plotly/blob/new-test-framework/tests/testthat/helper-vdiffr.R

## TESTING NOTES

https://github.com/ropensci/plotly/blob/new-test-framework/CONTRIBUTING.md

## TODO

- [x] Get tests passing on travis
- [x] Reduce the size of `tests/figs` by reducing amount of unnecessary data being plotted in some examples",https://github.com/plotly/plotly.R/pull/1354,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1343,2018-09-20T20:44:58Z,2018-10-11T18:45:49Z,2018-10-11T18:45:48Z,,https://github.com/plotly/plotly.R/pull/1343,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1338,2018-09-18T15:53:43Z,2018-10-08T20:10:36Z,2018-10-08T20:10:36Z,"The new `layout.clickmode = ""select""` plotly.js attribute conflicts with the crosstalk framework (when the highlighting event is `plotly_click`, which is the default). For example:

```r
d <- highlight_key(mtcars)
qplot(data = d, x = mpg, y = wt) %>%
  subplot(qplot(data = d, x = mpg, y = vs)) %>% 
  layout(clickmode = ""select"")
```

I don't think it's worth the time to try to get the two working well together because `layout.clickmode = ""select""` doesn't provide anything that the current crosstalk framework already provides, so I decided to just throw a warning if I detect `layout.clickmode = ""select""` when in a crosstalk key is present and the relevant event is `plotly_click`.

## Testing notes

This PR upgrades the underlying JS library from v1.40.1 to 1.41.3. It should be sufficient to just make sure this example renders on all platforms https://github.com/ropensci/plotly/issues/1359#issue-366812629",https://github.com/plotly/plotly.R/pull/1338,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1335,2018-09-17T19:26:19Z,2018-10-04T16:17:48Z,2018-10-04T16:17:48Z,,https://github.com/plotly/plotly.R/pull/1335,plotly
cpsievert,COLLABORATOR,open,7,https://github.com/plotly/plotly.R/pull/1326,2018-08-22T18:28:42Z,2022-03-26T18:43:31Z,list(),"TODO:

- [ ] Converters for **ggforce**'s `GeomMarkCircle`/`GeomMarkEllipsis`/`GeomMarkHull`
- [ ] Converter for **ggraph**'s `GeomAxisHive` (path + text?). For example, see https://github.com/thomasp85/ggraph/blob/8d23845/R/geom_axis_hive.R#L123-L142
- [ ] Add relevant `key` attributes.
- [ ] Throw warnings/pointers to issues when lack of plotly.js support for color/width arrays is relevant (perhaps this should be done at the `geom2trace()` level).
- [ ] Catch cases where we need to incorporate geom params into the drawing logic?
- [ ] Tests!
",https://github.com/plotly/plotly.R/pull/1326,plotly
Shians,NONE,open,0,https://github.com/plotly/plotly.R/pull/1304,2018-07-11T01:09:08Z,2022-03-26T18:43:31Z,list(),"The color picker currently has a text cursor when you hover over it. I've changed this to a `cursor: pointer` style, now it should be more obvious that the color picker object is clickable.",https://github.com/plotly/plotly.R/pull/1304,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1283,2018-06-07T01:12:22Z,2018-06-07T15:26:41Z,2018-06-07T15:25:48Z,"TODO:

- [x] Test out MathJax support in `orca()` (should that just pickup on the `config()`? Is a local mathjax setup required?)",https://github.com/plotly/plotly.R/pull/1283,plotly
jcheng5,COLLABORATOR,closed,5,https://github.com/plotly/plotly.R/pull/1281,2018-06-05T02:18:54Z,2018-06-05T19:50:15Z,2018-06-05T19:50:15Z,"Example:

```r
library(shiny)
library(plotly)
library(ggplot2)
library(promises)
library(future)
plan(multisession)

ui <- fluidPage(
  plotlyOutput(""plot1""),
  plotlyOutput(""plot2""),
  plotlyOutput(""plot3""),
  plotlyOutput(""plot4"")
)

server <- function(input, output, session) {
  output$plot1 <- renderPlotly({
    # Async plot_ly
    future({ Sys.sleep(2); cars }) %...>%
      plot_ly(x = ~speed, y = ~dist, type = ""scatter"", mode = ""markers"")
  })

  output$plot2 <- renderPlotly({
    # Async ggplotly
    future({ Sys.sleep(2); mtcars }) %...>%
      { ggplot(., aes(hp, mpg)) + geom_point() } %...>%
      ggplotly()
  })
  
  output$plot3 <- renderPlotly({
    # Not async
    plot_ly(iris, x = ~Sepal.Length, y = ~Sepal.Width,
      type = ""scatter"", mode = ""markers"")
  })
  
  output$plot4 <- renderPlotly({
    # Ensure errors are handled properly (should be blank)
    future({}) %...>%
      { req(FALSE) }
  })
}

shinyApp(ui, server)
```",https://github.com/plotly/plotly.R/pull/1281,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1280,2018-06-04T21:42:09Z,2021-11-02T19:33:40Z,2021-11-02T19:33:38Z,"Seems plotly.js isn't (yet) able to support data-level modifications of a plot during `plotly_selecting`, but there is [there is hope](https://github.com/plotly/plotly.js/issues/2644#issuecomment-391152782) that one day it'll be a non-issue (so this PR will wait until https://github.com/plotly/plotly.js/issues/2687 is resolved)

More reading:

https://community.plot.ly/t/adding-traces-during-plotly-selecting/10679
https://github.com/plotly/plotly.js/issues/2644
https://github.com/plotly/plotly.js/issues/2687
https://github.com/plotly/plotly.js/issues/2643",https://github.com/plotly/plotly.R/pull/1280,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1278,2018-06-04T19:39:40Z,2018-06-05T17:41:47Z,2018-06-05T17:41:47Z,,https://github.com/plotly/plotly.R/pull/1278,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1277,2018-06-04T14:08:51Z,2018-06-04T22:12:46Z,2018-06-04T22:12:46Z,"Left TODO:

- [ ] Debounce `off` event as well?
(**UPDATE:** Seems like this would really only make sense for `plotly_unhover`, but there are still issues with using that related to https://github.com/plotly/plotly.js/issues/1467) 

- [ ] Add `plotly_selecting` as a valid `on` event?
(UPDATE: `plotly_selecting` will have to wait -- see #1280) ",https://github.com/plotly/plotly.R/pull/1277,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1276,2018-05-31T21:00:40Z,2018-06-06T15:51:36Z,2018-06-06T15:51:36Z,,https://github.com/plotly/plotly.R/pull/1276,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1274,2018-05-31T18:43:53Z,2018-05-31T19:34:27Z,2018-05-31T19:34:27Z,,https://github.com/plotly/plotly.R/pull/1274,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1271,2018-05-30T19:46:26Z,2018-05-30T21:28:44Z,2018-05-30T21:28:44Z,…addresses #1270,https://github.com/plotly/plotly.R/pull/1271,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1269,2018-05-30T17:15:30Z,2018-05-30T18:17:07Z,2018-05-30T18:17:07Z,,https://github.com/plotly/plotly.R/pull/1269,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1268,2018-05-30T16:43:53Z,2018-05-30T18:19:34Z,2018-05-30T18:19:34Z,,https://github.com/plotly/plotly.R/pull/1268,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1256,2018-05-16T19:37:36Z,2018-07-10T03:49:17Z,2018-07-10T03:49:16Z,,https://github.com/plotly/plotly.R/pull/1256,plotly
cpsievert,COLLABORATOR,open,0,https://github.com/plotly/plotly.R/pull/1239,2018-04-17T20:54:50Z,2022-03-26T18:43:31Z,list(),"TODO:
  - [ ] tests (seems as though opacity dimming isn't working as of 951727c)
  - [ ] benchmarks",https://github.com/plotly/plotly.R/pull/1239,plotly
Nikolai-Hlubek,CONTRIBUTOR,closed,5,https://github.com/plotly/plotly.R/pull/1232,2018-04-09T08:51:42Z,2018-04-12T16:01:51Z,2018-04-12T16:01:51Z,"Addresses issue: _Plotting large data sets #1104_

I have been running a custom version of plotly for several months at my company now and we did not experience any issues.

Changes:

 - I use precompiled headers containing the plotly javascript code.
 - I do not use htmlwidgets and thus pandoc but xml2. This gets rid of pandoc as external dependency and drastically increases the number of points a figure can contain.

 - I allow embed_notebook with external save files again.
This is important because otherwise the notebooks get to big. If you are working across a slow internet connection, a notebook with 100MB cannot be efficiently saved. If you change one line of code and save, all figures need to be transferred again. 
",https://github.com/plotly/plotly.R/pull/1232,plotly
cpsievert,COLLABORATOR,open,0,https://github.com/plotly/plotly.R/pull/1230,2018-04-03T22:48:02Z,2022-03-26T18:43:31Z,list(),"- [ ] find a way to query default system font, perhaps similar to this -- https://github.com/r-lib/svglite/blob/dcda7d885b108ef0d8cf1dfbc16167e0914ce827/R/fonts.R#L5-L19

also https://cran.r-project.org/web/packages/svglite/vignettes/fonts.html",https://github.com/plotly/plotly.R/pull/1230,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1223,2018-03-22T17:27:36Z,2018-05-29T17:04:32Z,2018-05-02T14:43:43Z,"Addresses #1206

Depends on https://github.com/plotly/plotly.js/issues/2298#issuecomment-375381690

TODO: throw warning on R side if selected/unselected API is specified (and point to `highlight()`'s `selected` argument)",https://github.com/plotly/plotly.R/pull/1223,plotly
cpsievert,COLLABORATOR,open,0,https://github.com/plotly/plotly.R/pull/1220,2018-03-21T20:42:34Z,2022-03-26T18:43:31Z,list(),"This change is kinda scary, but the speed improvement seems to be worth it. See, for example, https://github.com/ropensci/plotly/tree/master/inst/examples/shiny/Diamonds

UPDATE: this appears to break some crosstalk+shiny use cases, such as https://github.com/cpsievert/housing-data-challenge-plotly",https://github.com/plotly/plotly.R/pull/1220,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1219,2018-03-20T20:30:29Z,2018-05-29T17:04:30Z,2018-05-02T15:15:50Z,,https://github.com/plotly/plotly.R/pull/1219,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1193,2018-02-07T16:33:34Z,2018-03-30T16:15:54Z,2018-03-30T16:15:54Z,"- [ ] Should `size`/`span` control error bars?

- [ ] How come highlighting via `res_mn` isn't working?

- [ ] More tests

  - Test the inherit logic c28c65d (storms demo)

- [ ] Update sf-mapbox-data demo",https://github.com/plotly/plotly.R/pull/1193,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1188,2018-01-29T23:34:08Z,2018-02-05T18:04:29Z,2018-02-05T18:04:28Z,"This approach to sf conversion will be more robust as it should support anything that `sf::st_as_grob()` supports, left to do:

- [ ] Avoid converting redundant sf objects.",https://github.com/plotly/plotly.R/pull/1188,plotly
cpsievert,COLLABORATOR,closed,7,https://github.com/plotly/plotly.R/pull/1178,2018-01-11T17:29:22Z,2018-01-26T03:32:47Z,2018-01-25T20:01:32Z,"Things that need to be done before we can safely update:

  - [x] Integrate `selected` attribute/api with crosstalk framework.
  - [ ] Integrate `unselected` attribute/api with crosstalk framework (should `opacityDim` map to `unselected.marker.opacity`, etc?). 
(__UPDATE__: I can't think of a good use-case for changing stuff like `marker.color`, `marker.size`, or `textfont.color` for unselected marks, and in fact, I think it just leads to more confusion than usefulness, so I'm not likely going to add integration) 
  - [x] Enable persistent selection via 'shift' key (this should work for all valid event types, not just `plotly_selected`)
  - [ ] Does it make sense for `selectedpoints` to set an initial crosstalk selection (like `defaultValues` arg in `highlight()`)?
(__UPDATE__: It's definitely not straight-forward how one would use `selectedpoints` in conjunction with crosstalk, and adding support wouldn't enable anything that can't already be done via `defaultValues` in `highlight()`, so I'm not sure the dev time this would require is necessarily worth it) 
  - [x] Wait until fix for https://github.com/plotly/plotly.js/issues/2282 has been included in an official release

",https://github.com/plotly/plotly.R/pull/1178,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/1176,2018-01-09T16:47:24Z,2018-06-13T23:11:57Z,2018-06-13T23:11:57Z,,https://github.com/plotly/plotly.R/pull/1176,plotly
bioinformatist,NONE,closed,2,https://github.com/plotly/plotly.R/pull/1157,2017-12-06T04:34:24Z,2017-12-08T14:05:59Z,2017-12-06T16:02:45Z,"Move sf from *suggests* to *imports*: it is not only required by tests now, sometimes call `gg2list()` may raise an error: `Error in loadNamespace(name) : there is no package called 'sf'`

Traceback:
```pre
40.
stop(e) 
39.
value[[3L]](cond) 
38.
tryCatchOne(expr, names, parentenv, handlers[[1L]]) 
37.
tryCatchList(expr, classes, parentenv, handlers) 
36.
tryCatch(loadNamespace(name), error = function(e) stop(e)) 
35.
getNamespace(ns) 
34.
asNamespace(ns) 
33.
getExportedValue(pkg, name) 
32.
sf::st_is_longlat 
31.
isTRUE(sf::st_is_longlat(rng$crs)) 
30.
gg2list(p, width = width, height = height, tooltip = tooltip, 
    dynamicTicks = dynamicTicks, layerData = layerData, originalData = originalData, 
    source = source, ...) 
29.
ggplotly.ggplot(p) 
28.
ggplotly(p) 
27.
eval(expr, envir, enclos) 
26.
eval(expr, envir, enclos) 
25.
withVisible(eval(expr, envir, enclos)) 
24.
withCallingHandlers(withVisible(eval(expr, envir, enclos)), warning = wHandler, 
    error = eHandler, message = mHandler) 
23.
handle(ev <- withCallingHandlers(withVisible(eval(expr, envir, 
    enclos)), warning = wHandler, error = eHandler, message = mHandler)) 
22.
timing_fn(handle(ev <- withCallingHandlers(withVisible(eval(expr, 
    envir, enclos)), warning = wHandler, error = eHandler, message = mHandler))) 
21.
evaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos, 
    debug = debug, last = i == length(out), use_try = stop_on_error != 
        2L, keep_warning = keep_warning, keep_message = keep_message, 
    output_handler = output_handler, include_timing = include_timing) 
20.
evaluate::evaluate(...) 
19.
evaluate(code, envir = env, new_device = FALSE, keep_warning = !isFALSE(options$warning), 
    keep_message = !isFALSE(options$message), stop_on_error = if (options$error && 
        options$include) 0L else 2L, output_handler = knit_handlers(options$render, 
        options)) 
18.
in_dir(input_dir(), evaluate(code, envir = env, new_device = FALSE, 
    keep_warning = !isFALSE(options$warning), keep_message = !isFALSE(options$message), 
    stop_on_error = if (options$error && options$include) 0L else 2L, 
    output_handler = knit_handlers(options$render, options))) 
17.
block_exec(params) 
16.
call_block(x) 
15.
process_group.block(group) 
14.
process_group(group) 
13.
withCallingHandlers(if (tangle) process_tangle(group) else process_group(group), 
    error = function(e) {
        setwd(wd)
        cat(res, sep = ""\n"", file = output %n% """") ... 
12.
process_file(text, output) 
11.
knit(..., tangle = opts_knit$get(""tangle""), envir = envir, encoding = opts_knit$get(""encoding"") %n% 
    getOption(""encoding"")) 
10.
FUN(X[[i]], ...) 
9.
lapply(sc_split(params$child), knit_child, options = block$params) 
8.
call_block(x) 
7.
process_group.block(group) 
6.
process_group(group) 
5.
withCallingHandlers(if (tangle) process_tangle(group) else process_group(group), 
    error = function(e) {
        setwd(wd)
        cat(res, sep = ""\n"", file = output %n% """") ... 
4.
process_file(text, output) 
3.
knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet, 
    encoding = encoding) 
2.
rmarkdown::render(system.file(file.path(""rmd"", ""reporter.Rmd""), 
    package = ""LncPipeReporter""), output_dir = output_dir, output_options = list(lib_dir = file.path(output_dir, 
    ""libs"")), params = list(input = input, output = output, theme = theme, 
    cdf.percent = cdf.percent, max.lncrna.len = max.lncrna.len,  ... at run_reporter.R#52
1.
run_reporter() 
```

This occurred when I call `ggplotly()` to convert `ggplot2` object (generated by [ggbiplot](https://github.com/vqv/ggbiplot) indeed) to one as `plotly` in [my package](https://github.com/bioinformatist/LncPipeReporter/blob/master/inst/rmd/DE.Rmd).

`gg2list()` may [call functions in `sf` package](https://github.com/ropensci/plotly/blob/a75613ba3d0fc3638c50daf740e4415dc4b9619e/R/ggplotly.R#L719) in certain conditions, so it should be moved into *imports*.

I have read the development guidelines, and this is such a small commit that do not need new unit tests.


",https://github.com/plotly/plotly.R/pull/1157,plotly
wibeasley,CONTRIBUTOR,closed,0,https://github.com/plotly/plotly.R/pull/1135,2017-10-09T11:30:50Z,2017-10-09T14:57:16Z,2017-10-09T14:57:16Z,https://github.com/tidyverse/ggplot2,https://github.com/plotly/plotly.R/pull/1135,plotly
wibeasley,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/1134,2017-10-09T11:26:12Z,2017-10-09T14:58:24Z,2017-10-09T14:58:24Z,https://github.com/tidyverse/ggplot2,https://github.com/plotly/plotly.R/pull/1134,plotly
jackparmer,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/1131,2017-10-03T17:33:34Z,2017-10-03T17:37:32Z,2017-10-03T17:37:32Z,"Nov 16, 17 ➡️  18, 19",https://github.com/plotly/plotly.R/pull/1131,plotly
Tim113,NONE,closed,2,https://github.com/plotly/plotly.R/pull/1123,2017-09-20T16:04:45Z,2017-09-20T19:45:57Z,2017-09-20T19:45:15Z,"Only give the plotly widget and id, that will throw a warning in shiny, if it is needed.",https://github.com/plotly/plotly.R/pull/1123,plotly
alyst,CONTRIBUTOR,open,3,https://github.com/plotly/plotly.R/pull/1100,2017-08-17T18:26:22Z,2022-03-26T18:43:32Z,list(),"The PR extracts `merge_plots()` function from the `subplot()` function, so that `subplot()` only checks the `plots` argument and defines how the plots should be layed out  in the merged result. The actual merging of the plotly objects is done by `merge_plots()` function. It enables the users to generate subplots using their own customized layouts.

#### Rationale
I have 2 ggplotly plots, each using `facet_grid()`, I want that the subplots of each ggplotly objects are interleaved in the merged result. Currently, `subplot()` does not support faceted ggplotly plots and does only support specifying the layout of the subplots of its arguments. E.g.:
![custom_subplot](https://user-images.githubusercontent.com/348591/29427439-17057144-838a-11e7-801f-738fe6d3d7a2.png)

#### Implementation
```R
merge_plots(plots, subplots_info, axes_info, which_layout = ""merge"")
```
`subplots_info` and `axes_info` define how the `plots` should be transformed into the new merged layout:
* `subplots_info` enumerates all the subplots in the merged results: the source plotly object, the reference axes, the shapes and the annotations that belong to the plot.
* `axes_info` enumerates all the axes of the `plots` and how they should be renamed and repositioned in the new layout. Repositioning of the axes automatically updates the positions of the linked shapes and annotations (via `subplots_info`).
",https://github.com/plotly/plotly.R/pull/1100,plotly
cpsievert,COLLABORATOR,open,1,https://github.com/plotly/plotly.R/pull/1087,2017-07-27T18:25:28Z,2022-03-26T18:43:32Z,list(),,https://github.com/plotly/plotly.R/pull/1087,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1040,2017-05-31T21:45:09Z,2017-06-08T17:51:20Z,2017-06-08T17:51:19Z,"@jcheng5 @timelyportfolio @bhaskarvk @yihui

This is an attempt at replicating ""proxy"" objects in **plotly**, akin to `leaflet::leafletProxy()` and `DT::dataTableProxy()`, so that folks can leverage the plotly.js API inside shiny (addresses #580).

If you have anything you wish you'd done differently when implementing proxies, please let me know!",https://github.com/plotly/plotly.R/pull/1040,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/1035,2017-05-30T20:50:13Z,2017-06-06T14:53:09Z,2017-06-06T14:53:09Z,Addresses #1033 ,https://github.com/plotly/plotly.R/pull/1035,plotly
cpsievert,COLLABORATOR,closed,3,https://github.com/plotly/plotly.R/pull/1022,2017-05-22T22:13:38Z,2017-05-24T05:43:28Z,2017-05-24T05:43:28Z,Branched off of #996,https://github.com/plotly/plotly.R/pull/1022,plotly
msummersgill,CONTRIBUTOR,closed,11,https://github.com/plotly/plotly.R/pull/996,2017-05-09T23:19:22Z,2017-05-24T05:30:29Z,2017-05-24T05:30:29Z,"This references issue  #981  (Speed up group2NA).

Using **data.table** package in place of current methods results in meaningful speed improvement.

**Splitting out absolute merge critical needs vs other ""probably should be done"" tasks**

### Merge Critical TODO
- [x] Resolve namespace warning message triggered by importing **data.table**- import of  `purrr::transform()` repaces `data.table::transform()`
         - *Is there a way to exclude a function from import? From some googling [(Stack Overflow Example)](http://stackoverflow.com/questions/40888820/r-added-importdata-table-to-namespace-automatically-using-devtools) I'm getting the impression that a partial import of **data.table** may not be feasible, `transform()` is currently the only conflicting function in the namespace.*
- [x] Test that output of data.table implementation of `group2NA` is identical to current implementation for all possible cases  
        - @cpsievert ***Potential issue**: the output using data.table results in rownames attribute of the input data frame being eliminated and replaced with an index pointer- is the rownames attribute being used anywhere in the steps downstream? I haven't identified any issues resulting from this so far, but don't know if I know all the places to look. If this does cause problems I think a workaround to keep these should be possible.*
- [x] Standardize syntax of `return()` and `structure()` nesting once benchmarks complete
- [x] Make sure that data.table operations are being performed on a shallow copy of data and external objects are not modified
- [x] Look into if intermediate assignment to `d` and line `if (all(is.na(d[.N, ]))) d <- d[-.N,]` can be eliminated to reduce copies made in memory
- [x] Resolve issue of lines re-connecting to start in scatter traces

### Other TODO
- [ ] Check into if similar changes would be appropriate for `train_data()` in **plotly_build.R**
- [x] Verify potential namespace conflicts between **data.table** and **dplyr** will not cause issues *(nothing currently throws errors all the way back to the console when plotting)*
- [x] Standardize benchmarks (currently working through some locally) *Do these need to be integrated into `/tests` somehow or just documented as part of the pull request?*
",https://github.com/plotly/plotly.R/pull/996,plotly
RichardLitt,NONE,closed,2,https://github.com/plotly/plotly.R/pull/984,2017-04-28T13:17:16Z,2019-07-15T15:44:46Z,2019-07-15T15:44:46Z,"This is a documentation checkup. These changes were made:

- Update Plotly's license name to match what they use on their own repos;
- Update the CoC to the most recent Contributor Covenant version, with an email account for people to check;
- Standardize the README according to [RichardLitt/standard-readme](https://github.com/RichardLItt/standard-readme). Some of these changes are sugar, but a few have reasons - badges below heading for readability on  non-Markdown rendered interfaces, for instance.
- Added a Maintainers section to encourage others to want to be maintainers, and to provide an explicit point of reference. I added @cpsievert there - let me know if we should add more!
- Added a license section to the README. ",https://github.com/plotly/plotly.R/pull/984,plotly
talgalili,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/979,2017-04-26T21:45:50Z,2017-04-26T22:21:42Z,2017-04-26T22:21:33Z,"The error message says it should be ""plotly_relayout""

```
> highlight(ggplotly(p), on = ""plotly_selected"", off = 'plotly_unhover', persis = FALSE)
Error in match.arg(off, off_options) : 
  'arg' should be one of “plotly_doubleclick”, “plotly_deselect”, “plotly_relayout”
> 
```",https://github.com/plotly/plotly.R/pull/979,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/966,2017-04-22T00:38:24Z,2017-04-22T00:50:13Z,2017-04-22T00:50:13Z,,https://github.com/plotly/plotly.R/pull/966,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/958,2017-04-20T23:21:42Z,2017-04-21T18:14:59Z,2017-04-21T18:14:59Z,,https://github.com/plotly/plotly.R/pull/958,plotly
cpsievert,COLLABORATOR,open,3,https://github.com/plotly/plotly.R/pull/938,2017-04-10T19:27:39Z,2022-03-26T18:43:31Z,list(),"Note to self: this is really the only relevant part -- https://github.com/ropensci/plotly/pull/938/files#diff-bfe74656b9837557ae3edcc5e1daa831R22

May want to cherry-pick that code as merging might be a disaster",https://github.com/plotly/plotly.R/pull/938,plotly
cpsievert,COLLABORATOR,open,0,https://github.com/plotly/plotly.R/pull/937,2017-04-10T19:24:21Z,2022-03-26T18:43:32Z,list(),New idea -- implement as an annotation with no text! https://codepen.io/cpsievert/pen/ZKxRva,https://github.com/plotly/plotly.R/pull/937,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/936,2017-04-10T19:20:10Z,2017-04-10T19:25:00Z,2017-04-10T19:25:00Z,Deleting this ancient branch in favor of #937 ,https://github.com/plotly/plotly.R/pull/936,plotly
cpsievert,COLLABORATOR,open,2,https://github.com/plotly/plotly.R/pull/929,2017-04-06T21:48:43Z,2022-03-26T18:43:32Z,list(),"This is forked off of #895, but that will need a new plotly.js release...",https://github.com/plotly/plotly.R/pull/929,plotly
sctyner,CONTRIBUTOR,closed,9,https://github.com/plotly/plotly.R/pull/928,2017-04-06T16:43:34Z,2017-04-06T20:59:48Z,2017-04-06T20:59:48Z,I hope these are useful! ,https://github.com/plotly/plotly.R/pull/928,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/898,2017-03-10T19:34:18Z,2017-04-06T21:01:12Z,2017-03-24T16:20:15Z,,https://github.com/plotly/plotly.R/pull/898,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/894,2017-03-07T23:41:18Z,2017-04-10T19:19:42Z,2017-03-10T16:44:48Z,,https://github.com/plotly/plotly.R/pull/894,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/891,2017-03-03T20:32:43Z,2017-04-20T00:37:31Z,2017-04-20T00:37:31Z,,https://github.com/plotly/plotly.R/pull/891,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/886,2017-02-20T21:27:39Z,2017-04-27T17:29:51Z,2017-04-27T17:29:51Z,,https://github.com/plotly/plotly.R/pull/886,plotly
stevenysw,NONE,closed,1,https://github.com/plotly/plotly.R/pull/882,2017-02-16T04:30:19Z,2017-04-21T19:41:03Z,2017-04-21T19:14:34Z,,https://github.com/plotly/plotly.R/pull/882,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/859,2017-01-23T20:06:32Z,2017-04-06T21:01:09Z,2017-03-20T19:49:34Z,Attempt at #768,https://github.com/plotly/plotly.R/pull/859,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/856,2017-01-23T18:54:07Z,2017-02-20T21:31:53Z,2017-01-23T21:35:19Z,,https://github.com/plotly/plotly.R/pull/856,plotly
ghost,NONE,closed,1,https://github.com/plotly/plotly.R/pull/830,2016-12-15T17:22:06Z,2016-12-30T21:12:26Z,2016-12-30T21:12:22Z,"Plotly makes one WebGL context per graph meaning that pages with multiple plotly WebGL graphs are exposed to the browser's context cap.  https://github.com/plotly/plotly.js/issues/337
So it is better to redraw the graph, rather than create a new one.
Thanks",https://github.com/plotly/plotly.R/pull/830,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/823,2016-12-01T17:26:00Z,2017-02-20T21:32:01Z,2016-12-01T18:06:13Z,,https://github.com/plotly/plotly.R/pull/823,plotly
jrowen,NONE,open,9,https://github.com/plotly/plotly.R/pull/818,2016-11-30T14:02:35Z,2022-03-26T18:43:32Z,list(),"These changes were made to better support dendrograms, particularly those created with `dendextend`.  It adds support for 
- `fontface` in `geom_text`
- a rough translation of `hjust` and `vjust` in `geom_text`
- `-Inf` and `Inf` in `geom_rect`
- `guide = ""none""`

Feedback is very welcome.  Below is some sample code.
```
library(ggplot2)
library(plotly)
library(dendextend)

dend <- iris[1:30,-5] %>% dist %>% hclust %>% as.dendrogram %>%
  set(""branches_k_color"", k=3) %>% set(""branches_lwd"", c(1.5,1,1.5)) %>%
  set(""branches_lty"", c(1,1,3,1,1,2)) %>%
  set(""labels_colors"") %>% set(""labels_cex"", c(.9,1.2)) %>% 
  set(""nodes_pch"", 19) %>% set(""nodes_col"", c(""orange"", ""black"", ""plum"", NA))
ggd1 <- as.ggdend(dend)
p = ggplot(ggd1, horiz = TRUE, theme = NULL)
ggplotly(p)

p1 = ggplot(cars) +
  geom_point(aes(x = speed, y = dist)) +
  geom_rect(xmin = 5, xmax = 10, ymin = -Inf, ymax = Inf)
ggplotly(p1)

p2 = ggplot(cars) +
  geom_point(aes(x = speed, y = dist)) +
  geom_rect(ymin = 25, ymax = 50, xmin = -Inf, xmax = Inf)
ggplotly(p2)

p3 = ggplot(cars) +
  geom_point(aes(x = speed, y = dist)) +
  geom_rect(xmin = 5, xmax = 10, ymin = -Inf, ymax = Inf) +
  coord_flip()
ggplotly(p3)

p4 = ggplot(cars) +
  geom_point(aes(x = speed, y = dist)) +
  geom_rect(ymin = 25, ymax = 50, xmin = -Inf, xmax = Inf) +
  coord_flip()
ggplotly(p4)

p5 = ggplot(data.frame(x = seq(5, 25, 5), y = 60)) +
  geom_point(aes(x = x, y = y)) +
  geom_text(x = 5, y = 60, label = ""nothing"") +
  geom_text(x = 10, y = 60, label = ""bold"", fontface = ""bold"", hjust = 0, vjust = 0) +
  geom_text(x = 15, y = 60, label = ""italic"", fontface = ""italic"", hjust = 1, vjust = 1) +
  geom_text(x = 20, y = 60, label = ""bold italic"", fontface = ""bold italic"", hjust = 0, vjust = 1) +
  geom_text(x = 25, y = 60, label = ""plain"", fontface = ""plain"", hjust = 1, vjust = 0)
ggplotly(p5)
```",https://github.com/plotly/plotly.R/pull/818,plotly
Alanocallaghan,CONTRIBUTOR,closed,30,https://github.com/plotly/plotly.R/pull/813,2016-11-23T22:40:12Z,2021-04-27T21:22:53Z,2021-04-27T21:22:53Z,This is a fairly straightforward edit and shouldn't break any existing functionality. It just adds support for the new axis locations (top and right) in ggplot2 2.2.0 which already have support in `plotly.js`,https://github.com/plotly/plotly.R/pull/813,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/801,2016-11-18T22:12:12Z,2017-02-20T21:32:00Z,2016-11-21T16:46:18Z,,https://github.com/plotly/plotly.R/pull/801,plotly
cpsievert,COLLABORATOR,open,1,https://github.com/plotly/plotly.R/pull/798,2016-11-17T16:11:12Z,2022-03-26T18:43:32Z,list(),,https://github.com/plotly/plotly.R/pull/798,plotly
zeehio,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/773,2016-10-28T12:39:48Z,2016-11-01T19:34:25Z,2016-11-01T19:34:25Z,"This test case shows a plot with two lines where the tooltip does not contain the right text on all the points

The `group` aesthetic in `geom_line` is not properly set in the tooltip rendering mismatched ""id: Sample2"" tooltips on Sample1 data points and viceversa.

``` r
  # Tooltips with y == 10 should belong to Sample2 in this example
  mydata <- data.frame(id = paste0(""Sample"", rep(1:2, times = 4)),
                       x = rep(1:4, each = 2),
                       y = rep(c(1, 10), times = 4),
                       stringsAsFactors = FALSE)
  #        id x  y
  #1 Sample1 1  1
  #2 Sample2 1 10
  #3 Sample1 2  1
  #4 Sample2 2 10
  #5 Sample1 3  1
  #6 Sample2 3 10
  #7 Sample1 4  1
  #8 Sample2 4 10
  gplt <- ggplot(mydata) + geom_line(aes(x=x, y = y, group = id))
  pltly <- plotly::ggplotly(gplt)
  pltly
  y_equal_ten <- grepl(""y: 10"", pltly$x$data[[1]]$text)
  sample_2 <- grepl(""id: Sample2"", pltly$x$data[[1]]$text)
  expect_that(all(y_equal_ten == sample_2))
```

The tooltip in the image should show ""id: Sample2""

![image](https://cloud.githubusercontent.com/assets/75441/19806521/d55b9156-9d1b-11e6-96cc-26a4028200d4.png)

Checked against current master:

```
plotly        4.5.5.9000 2016-10-28 Github (ropensci/plotly@32020c2)
```
",https://github.com/plotly/plotly.R/pull/773,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/742,2016-09-30T19:52:09Z,2016-09-30T20:38:07Z,2016-09-30T20:34:59Z,,https://github.com/plotly/plotly.R/pull/742,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/741,2016-09-30T18:49:04Z,2016-11-04T14:55:16Z,2016-11-04T14:55:16Z,,https://github.com/plotly/plotly.R/pull/741,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/736,2016-09-28T18:34:12Z,2016-09-30T19:19:25Z,2016-09-30T19:19:25Z,,https://github.com/plotly/plotly.R/pull/736,plotly
nielsenmarkus11,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/728,2016-09-26T17:02:44Z,2016-09-26T17:14:29Z,2016-09-26T17:14:29Z,"The purpose is to avoid error messages and confusion if and when someone clicks a point on the scatter plot [online.](https://plot.ly/r/shinyapp-linked-click/)
",https://github.com/plotly/plotly.R/pull/728,plotly
cpsievert,COLLABORATOR,open,1,https://github.com/plotly/plotly.R/pull/726,2016-09-23T20:46:47Z,2022-03-26T18:43:32Z,list(),,https://github.com/plotly/plotly.R/pull/726,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/725,2016-09-22T19:19:33Z,2016-09-22T21:22:54Z,2016-09-22T21:22:54Z,,https://github.com/plotly/plotly.R/pull/725,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/714,2016-09-12T21:53:47Z,2016-09-13T23:31:05Z,2016-09-13T23:31:05Z,,https://github.com/plotly/plotly.R/pull/714,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/703,2016-09-02T04:38:04Z,2016-09-05T20:30:51Z,2016-09-05T20:30:51Z,,https://github.com/plotly/plotly.R/pull/703,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/700,2016-08-31T17:44:30Z,2016-09-12T04:39:32Z,2016-09-12T04:39:32Z,"This PR addresses #659. 

I see at least two ways to approach this problem:

(1) Have `plot_ly()` and `event_data()` both accept/query a shiny session object and enforce namespacing under-the-hood using that object. This will make it impossible to obtain data from events originating in another module. This seems to be the main motivation behind using modules anyway, so I think this is the preferred approach, and you can see the implementation in https://github.com/ropensci/plotly/pull/700/commits/d2257d4747f4a5361e55c70c971579fd7b83b24b

(2) Have `event_data()` always look in the global scope and leave it to the user to ""namespace"" the `source` arguments. This would conflict with the philosophy of using modules, but it wouldn't be that onerous on users, and saves us some hacks.

See [here](https://github.com/ropensci/plotly/blob/fix/ns/inst/examples/plotlyShinyModules/app.R) for a toy example. Any thoughts @jcheng5? @happyshows?
",https://github.com/plotly/plotly.R/pull/700,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/691,2016-08-22T19:05:14Z,2016-08-22T20:19:13Z,2016-08-22T20:19:13Z,,https://github.com/plotly/plotly.R/pull/691,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/690,2016-08-22T14:49:40Z,2016-08-22T17:02:27Z,2016-08-22T17:02:27Z,,https://github.com/plotly/plotly.R/pull/690,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/676,2016-08-10T23:02:53Z,2016-08-11T15:27:08Z,2016-08-11T15:27:08Z,,https://github.com/plotly/plotly.R/pull/676,plotly
harryprince,NONE,closed,1,https://github.com/plotly/plotly.R/pull/671,2016-08-07T01:53:59Z,2016-08-17T14:12:26Z,2016-08-17T14:12:26Z,"I just change the rating parameter prefix. it works.
",https://github.com/plotly/plotly.R/pull/671,plotly
maxto,NONE,closed,0,https://github.com/plotly/plotly.R/pull/668,2016-08-03T08:32:39Z,2016-09-27T08:08:19Z,2016-09-27T08:08:19Z,"An error occurred for pie charts with hoverinfo in HTMLWidgets.widget. I m not a web dev and i solved with a logical statement 

This is the error with mouse over the chart's pieces:

![image](https://cloud.githubusercontent.com/assets/3137038/17358958/d3b78800-5964-11e6-95e1-199e210df925.png)

![image](https://cloud.githubusercontent.com/assets/3137038/17358985/ee998c54-5964-11e6-921f-fad113c7c877.png)

I'm creating a shiny app, this is the log after changes made

![image](https://cloud.githubusercontent.com/assets/3137038/17359136/84fb26bc-5965-11e6-947c-18e6f21a26e7.png)

Thks for your help
",https://github.com/plotly/plotly.R/pull/668,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/654,2016-07-25T21:04:45Z,2016-07-28T17:44:37Z,2016-07-28T17:44:37Z,,https://github.com/plotly/plotly.R/pull/654,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/651,2016-07-21T15:37:48Z,2016-07-25T18:01:30Z,2016-07-25T18:01:30Z,,https://github.com/plotly/plotly.R/pull/651,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/642,2016-07-13T21:21:16Z,2016-07-15T15:39:08Z,2016-07-15T15:39:08Z,,https://github.com/plotly/plotly.R/pull/642,plotly
cpsievert,COLLABORATOR,closed,7,https://github.com/plotly/plotly.R/pull/628,2016-06-16T21:52:56Z,2016-07-13T21:18:25Z,2016-07-13T21:18:25Z,"@jackparmer @timelyportfolio 

This is a _major_ update to the `plot_ly()` interface that addresses a number of concerns raised by @hadley / @jcheng5 / others. See the [NEWS](https://github.com/ropensci/plotly/blob/fix/nse/NEWS) file for a summary. My goal is to have this on CRAN before I fly out to SF on the 23rd. Here is a list of stuff that should be addressed before submitting:
- [x] Get a working version of `add_polygon()`/`add_ribbon()`. BTW, if anyone has ideas for other `add_*()` functions (to do things that aren't easy/available or slow in ggplot2) I'm all ears!
- [x] Add tests/documentation
- [x] Fix grouping when there is multiple traces, for instance:

``` r
g <- expand.grid(visit = 1:10, id = 1:50, cohort = c(""A"", ""B""))
g$response <- rnorm(nrow(g))
g %>%
  group_by(id) %>%
  plot_ly(x = ~visit, y = ~response, color = ~cohort, opacity = 0.5)
```

I also think that `color` should be deprecated and split into `stroke`/`fill`, but that should probably wait for now.
",https://github.com/plotly/plotly.R/pull/628,plotly
yankev,NONE,closed,2,https://github.com/plotly/plotly.R/pull/627,2016-06-16T15:47:07Z,2016-07-13T21:22:57Z,2016-07-13T21:22:57Z,"I changed the path for file copy because I ran `plotlyjs.R` from within its directory.
For Issue #626.
",https://github.com/plotly/plotly.R/pull/627,plotly
alyst,CONTRIBUTOR,closed,5,https://github.com/plotly/plotly.R/pull/623,2016-06-06T11:49:59Z,2016-09-29T18:38:04Z,2016-09-29T18:38:04Z,"This is the proof-of-concept workaround for the layout problems of ggplotly() (see e.g. #622).
The problem is that when converting from absolute sizes of e.g. labels (""inches"", ""mm"" etc) to relative sizes (""npc"") ggplotly uses `grid::convertXXX()` functions that use the dimensions of the active device, which may not match the size of the plotly plot on the client.
The PR provides at least the way to control the size of the active device on the server side. It introduces `virt.width`/`virt.height` arguments to `ggplotly()` that serve as the expected dimensions of the client plot. If set to numeric values, `ggplotly()` creates the viewport of the specified dimensions (in ""points""), so that all conversions to/from ""npc"" are done relative to this viewport. `virt.width/height` do not affect the size of the resulting plot, neither they interfere with the `width/height` (which might be set to something not numerical as e.g. ""100%"").
",https://github.com/plotly/plotly.R/pull/623,plotly
alyst,CONTRIBUTOR,open,2,https://github.com/plotly/plotly.R/pull/622,2016-06-05T23:16:49Z,2022-03-26T18:43:32Z,list(),"In master the subplot margins are _subtracted_ from the given subplot width/heights. Since top-left subplot should start in (0,1) and bottom-right should end at (1,0), the left margin is not subtracted from the leftmost subplots and the right margin -- from the rightmost. The same for heights. As the result the proportions of the plots drawn differ from the ones given to `subplot()`: in comparison to outer subplots the inner ones are more narrow than they should be. See e.g.:

``` R
p <- ggplot( data.frame(x = rnorm(1000), y = rnorm(1000),
                   a = sample(1:5, 1000, replace=TRUE),
                   b = factor(sample(1:3, 1000, replace=TRUE)),
                   c = factor(sample(1:3, 1000, replace=TRUE))) ) +
  geom_point(aes(x=x, y=y, color=b, shape=c)) + facet_wrap(~ a )
ggplotly(p)
```

The PR changes how the `get_domains()` calculates the subplot positions. Instead of subtracting the margins from the subplot widths/heights, it rescales the width/heights so that the sum of margins and width/heights does not exceed 1.0 (the margins are not scaled since they are calculated wrt ticks/labels sizes). This approach preserves the relative subplot proportions. It looks like it also fixes the `free_y` case in #619.

There are 2 open issues related to this PR:
1. For `get_domains()` there's no difference between left/right, only the left+right sum does matter. The same for top/bottom. So instead of expecting 4-element `margins` vector, `get_domains()` could be simplified to expect 2-element `spaces` vector.
2. Margins take into account the size of labels converted from pixels to (0,1) range. Since the plot size on the server side (used for this conversion) could be different from the actual plot size on the client, the resulting layout might be incorrect. The current workaround is to double the margin sizes (see the comment in `ggplotly()`) to avoid subplot overlaps. But certain combinations of client/server plot sizes result in overly large margins and reduced subplots. Would be nice if at least upon redraws the server can get the actual plot dimensions.
",https://github.com/plotly/plotly.R/pull/622,plotly
alyst,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/620,2016-06-03T11:50:24Z,2016-07-25T21:17:51Z,2016-07-25T21:17:51Z,"Another fix for multi-subplots case.

Test case (single aesthetic bound to trace):

``` R
p <- ggplot( data.frame(x = rnorm(1000), y = rnorm(1000),
                   a = sample(1:20, 1000, replace=TRUE),
                   b = factor(sample(1:5, 1000, replace=TRUE))) ) +
  geom_point(aes(x=x, y=y, color=b)) + facet_wrap(~ a )

ggplotly(p)
```

With multiple aesthetics per trace:

``` R
p <- ggplot( data.frame(x = rnorm(1000), y = rnorm(1000),
                   a = sample(1:20, 1000, replace=TRUE),
                   b = factor(sample(1:3, 1000, replace=TRUE)),
                   c = factor(sample(1:3, 1000, replace=TRUE))) ) +
  geom_point(aes(x=x, y=y, color=b, shape=c)) + facet_wrap(~ a )

ggplotly(p)
```
",https://github.com/plotly/plotly.R/pull/620,plotly
alyst,CONTRIBUTOR,closed,5,https://github.com/plotly/plotly.R/pull/619,2016-06-03T09:55:00Z,2019-03-20T14:25:21Z,2016-07-25T21:17:24Z,"The PR fixes the labels of axes/anchors if the corresponding indices are >= 10 (otherwise the data/gridlines in some panels are missing). 

For a test one can try

``` R
p <- ggplot( data.frame(x = rnorm(1000), y = rnorm(1000),
                   a = sample(1:20, 1000, replace=TRUE) ) ) +
  geom_point(aes(x=x, y=y)) + facet_wrap(~ a, scales = ""free_x"" )
ggplotly(p)
```

The PR fixes the behaviour for `scales=""free""` and `scales=""free_x""` case. For `scales=""free_y""` case it fixes the missing panels, but the X axes at the bottom are still missing.
",https://github.com/plotly/plotly.R/pull/619,plotly
Nikolai-Hlubek,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/613,2016-05-30T17:00:16Z,2016-05-31T04:30:49Z,2016-05-31T04:30:44Z,"The fix for #581 by adding '.embed' to plotly_iframe breaks compatibility with Jupyter. 

The '.embed' extension is not added in all necessary places: New files are saved without the extension, and than they can't be loaded, because the iframe expects the extension. 

However fixing this would still not work with Jupyter, as Jupyter does not render files with the extension '.embed'. It only renders if the extension is html otherwise it shows the contents as text.

This commit is a possible suggestion that allows fix #581 to remain valid and saves graphs for Jupyter without '.embed' extension.
",https://github.com/plotly/plotly.R/pull/613,plotly
McClellandLegge,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/603,2016-05-24T13:31:19Z,2016-05-24T13:39:34Z,2016-05-24T13:39:34Z,,https://github.com/plotly/plotly.R/pull/603,plotly
talgalili,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/597,2016-05-23T20:59:18Z,2016-05-24T11:26:32Z,2016-05-24T11:26:32Z,"I found this fix here:
https://github.com/hadley/dplyr/blob/master/R/utils.r
And it works better (i.e.: will save us from pointless warnings with other packages who export it in the old way)
",https://github.com/plotly/plotly.R/pull/597,plotly
McClellandLegge,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/594,2016-05-23T14:21:41Z,2016-05-24T13:29:22Z,2016-05-24T13:29:22Z,,https://github.com/plotly/plotly.R/pull/594,plotly
alyst,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/593,2016-05-23T08:56:18Z,2016-06-09T20:46:03Z,2016-06-09T20:46:03Z,"Currently ggplotly uses `,` to separate `facet_grid()` columns.
The PR changes that to `<br>` to make it more compatible with ggplot (every column on its own line).
It would also help with overlapping row/column long labels.
",https://github.com/plotly/plotly.R/pull/593,plotly
sipemu,NONE,closed,1,https://github.com/plotly/plotly.R/pull/591,2016-05-23T06:34:21Z,2016-05-23T11:43:32Z,2016-05-23T11:43:32Z,"plotly_build has as input a list in the case of evaluate = TRUE. But there is no method plotly_build.list. 
",https://github.com/plotly/plotly.R/pull/591,plotly
timelyportfolio,COLLABORATOR,closed,9,https://github.com/plotly/plotly.R/pull/586,2016-05-18T02:38:04Z,2016-05-18T14:14:56Z,2016-05-18T03:56:46Z,"update to plotly [1.11.0](https://github.com/plotly/plotly.js/releases/tag/v1.11.0)
",https://github.com/plotly/plotly.R/pull/586,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/584,2016-05-15T23:08:13Z,2016-11-17T15:50:49Z,2016-11-17T15:50:49Z,"Waiting for a fix of https://github.com/plotly/plotly.js/issues/537
",https://github.com/plotly/plotly.R/pull/584,plotly
timelyportfolio,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/574,2016-05-05T02:20:09Z,2016-05-05T06:14:55Z,2016-05-05T06:14:54Z,"Closes #573 to pull from ropensci remote.  Also rebase to current master.

As reported in #510, axis titles can be positioned improperly depending on the size of the plot.  In a2aedacd0900bf6f447d72e3f174deb4d8cfbc91, axis titles were changed to annotations, so they are not duplicated and work much more similarly to `ggplot2`.  Unfortunately, `plotly` annotations are positioned based on a `[0,1]` scale with respect to the plot area.  This means the axis titles scale inversely and negatively to the plot size.  When the plot is small, the `x` axis title will be placed too high.  When the plot is large/high, the `x` axis title moves too far down sometimes out of the svg bounding box.

This pull changes to use `plotly` axis titles when the plot is not facetted.  When the plot is facetted, the `plotly` axis titles are changed to `""""` in favor of the annotation approach.
",https://github.com/plotly/plotly.R/pull/574,plotly
timelyportfolio,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/573,2016-05-05T01:40:00Z,2016-05-05T02:20:29Z,2016-05-05T02:20:29Z,"As reported in #510, axis titles can be positioned improperly depending on the size of the plot.  In a2aedacd0900bf6f447d72e3f174deb4d8cfbc91, axis titles were changed to annotations, so they are not duplicated and work much more similarly to `ggplot2`.  Unfortunately, `plotly` annotations are positioned based on a `[0,1]` scale with respect to the plot area.  This means the axis titles scale inversely and negatively to the plot size.  When the plot is small, the `x` axis title will be placed too high.  When the plot is large/high, the `x` axis title moves too far down sometimes out of the svg bounding box.

This pull changes to use `plotly` axis titles when the plot is not facetted.  When the plot is facetted, the `plotly` axis titles are changed to `""""` in favor of the annotation approach.
",https://github.com/plotly/plotly.R/pull/573,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/562,2016-04-26T02:49:13Z,2016-04-26T03:36:50Z,2016-04-26T03:36:50Z,,https://github.com/plotly/plotly.R/pull/562,plotly
jcheng5,COLLABORATOR,closed,5,https://github.com/plotly/plotly.R/pull/561,2016-04-25T18:13:00Z,2016-04-26T03:00:20Z,2016-04-26T03:00:20Z,"Change the class of the plot_ly object (built but not widgetized)
to plotly_hash, and simplify print/knit_print methods. This fixes
compatibility issues with RStudio's upcoming R Notebook feature.

@cpsievert You may be wondering why I didn't change the classname
of the as.widget output instead of the plotly_build output; it's because
htmlwidgets uses the first element of the classname to look up the
filename of the htmlwidget binding (htmlwidgets/plotly.js), so it would've
been a more invasive change to go that way.

cc @jjallaire
",https://github.com/plotly/plotly.R/pull/561,plotly
jcheng5,COLLABORATOR,closed,35,https://github.com/plotly/plotly.R/pull/554,2016-04-19T00:22:54Z,2016-11-17T16:08:33Z,2016-11-17T16:08:33Z,"Lots of work still needed here, but it works enough that you can get a sense of what I'd like to see happen here. This is similar to other demos that have existed in the past, but unlike my previous demos it now uses plotly, not just ggplot2/ggvis/base graphics; and unlike @cpsievert's previous demos (to my knowledge) it now does client-side linked brushing between two distinct plotly plots.

Live demo:
https://beta.rstudioconnect.com/jcheng/shiny-crosstalk/
- [x] Decide on API for specifying Crosstalk key and group (or should both parameters be bundled into a single `crosstalk` param?)--this should ideally be consistent across all Crosstalk-compatible htmlwidgets (**Update**: key/group are attributes of the `crosstalk::SharedData` object which `plot_ly()`/`ggplotly()` will require for enabling linked views)
- [x] Need to be able to programatically clear the selection box on a plotly.js plot when another plot in the same group activates its brush (including non-plotly plots) (**Update:** I worked around this for now by removing the selection box myself.)
- [x] I'm not sure I understand all the possibilities around multiple traces and/or subplots, could use a brain dump on these things from @cpsievert 
- [ ] Client-side linking can use `plotly_selecting` and you get a really nice experience--but to make it not overwhelm the server we need to use `plotly_selected` right now. Maybe should formalize this in Crosstalk and have both ""fast"" and ""slow"" subscription models.

cc @jjallaire, @ramnathv

@hafen, I'm hoping to look more closely at rbokeh next.
",https://github.com/plotly/plotly.R/pull/554,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/553,2016-04-18T07:48:37Z,2016-04-19T00:30:48Z,2016-04-19T00:30:48Z,,https://github.com/plotly/plotly.R/pull/553,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/552,2016-04-18T04:11:12Z,2016-04-18T04:28:49Z,2016-04-18T04:28:49Z,,https://github.com/plotly/plotly.R/pull/552,plotly
cpsievert,COLLABORATOR,closed,5,https://github.com/plotly/plotly.R/pull/547,2016-04-13T04:57:30Z,2016-09-27T14:22:29Z,2016-09-27T14:22:29Z,"For some reason, transitions are currently grayed out:

![tour](https://cloud.githubusercontent.com/assets/1365941/14483236/3aae7198-0188-11e6-8ae8-423022935d9c.gif)

I'm guessing we need to use something akin to `Shiny.addCustomMessageHandler` like [ggvis does](https://github.com/rstudio/ggvis/blob/076e350fa1664f510a2f448e2ee22e67e11f59d6/inst/www/ggvis/js/shiny-ggvis.js#L105-L130) in order for the client to process messages in a logical order

Any experience with this sort of thing @timelyportfolio?
",https://github.com/plotly/plotly.R/pull/547,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/538,2016-04-06T04:57:30Z,2016-04-06T06:34:07Z,2016-04-06T06:34:07Z,,https://github.com/plotly/plotly.R/pull/538,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/535,2016-04-01T00:39:28Z,2016-04-01T06:15:09Z,2016-04-01T06:15:09Z,,https://github.com/plotly/plotly.R/pull/535,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/530,2016-03-22T22:37:12Z,2016-03-23T02:27:00Z,2016-03-23T01:26:28Z,,https://github.com/plotly/plotly.R/pull/530,plotly
cpsievert,COLLABORATOR,closed,3,https://github.com/plotly/plotly.R/pull/526,2016-03-19T05:59:12Z,2016-05-16T05:20:25Z,2016-05-16T05:20:24Z,"Stuff left to do:
- [x] Scale shapes/annotations appropriately. Here's a nice working example:

``` r
# once this is working well, we can wrap it up, and have a special build for 'ggmatrix' objects
pm <- GGally::ggpairs(reshape::tips[, 1:3])
plotList <- list()
for (i in seq_len(pm$nrow)) {
  for (j in seq_len(pm$ncol)) {
    plotList <- c(plotList, list(pm[i, j]))
  }
}
do.call(subplot, c(plotList, list(nrows = 3)))
```
- [x] Allow some way to specify column/row width. This would be potentially useful both for support space=""free"" in ggplot2 facets, as well as in https://github.com/ropensci/plotly/issues/376
- [x] Support subplots of subplots, for example `subplot(plot_ly(), subplot(plot_ly(), plot_ly()))`
- [x] Bring back support for geo subplots (should this be done via the [new `subplotid` attribute](https://github.com/plotly/plotly.js/pull/390#issue-145465567)?)
",https://github.com/plotly/plotly.R/pull/526,plotly
timelyportfolio,COLLABORATOR,closed,7,https://github.com/plotly/plotly.R/pull/524,2016-03-18T03:54:19Z,2019-02-28T15:39:59Z,2016-03-19T06:22:38Z,"This pull represents the most minimal solution possible to #463, so tooltips will appear in `ioslides` presentations.  I tested with various examples in different contexts and did not notice any harmful regressions or side effects.  Duplicates #523 to see if credentials work correctly with tests.
",https://github.com/plotly/plotly.R/pull/524,plotly
timelyportfolio,COLLABORATOR,closed,4,https://github.com/plotly/plotly.R/pull/523,2016-03-18T02:24:58Z,2016-03-18T04:00:26Z,2016-03-18T04:00:26Z,"This pull represents the most minimal solution possible to #463, so tooltips will appear in `ioslides` presentations.  I tested with various examples in different contexts and did not notice any harmful regressions or side effects.
",https://github.com/plotly/plotly.R/pull/523,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/519,2016-03-17T06:27:35Z,2016-03-17T06:39:23Z,2016-03-17T06:35:19Z,,https://github.com/plotly/plotly.R/pull/519,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/518,2016-03-17T05:56:29Z,2016-03-17T06:26:03Z,2016-03-17T06:26:03Z,,https://github.com/plotly/plotly.R/pull/518,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/516,2016-03-17T02:56:57Z,2016-03-17T04:23:18Z,2016-03-17T04:23:18Z,,https://github.com/plotly/plotly.R/pull/516,plotly
cpsievert,COLLABORATOR,open,1,https://github.com/plotly/plotly.R/pull/509,2016-03-15T04:30:11Z,2022-03-26T18:43:32Z,list(),,https://github.com/plotly/plotly.R/pull/509,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/508,2016-03-14T00:42:17Z,2016-03-14T00:57:44Z,2016-03-14T00:54:55Z,,https://github.com/plotly/plotly.R/pull/508,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/506,2016-03-13T23:37:42Z,2016-03-14T00:55:50Z,2016-03-13T23:52:13Z,,https://github.com/plotly/plotly.R/pull/506,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/503,2016-03-13T06:37:43Z,2016-03-13T23:40:16Z,2016-03-13T07:07:26Z,,https://github.com/plotly/plotly.R/pull/503,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/500,2016-03-12T06:30:41Z,2016-03-13T23:40:19Z,2016-03-13T04:06:52Z,,https://github.com/plotly/plotly.R/pull/500,plotly
cpsievert,COLLABORATOR,closed,3,https://github.com/plotly/plotly.R/pull/496,2016-03-11T00:53:46Z,2016-03-13T23:40:24Z,2016-03-11T03:06:53Z,,https://github.com/plotly/plotly.R/pull/496,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/488,2016-03-10T01:28:04Z,2016-03-13T23:40:37Z,2016-03-10T02:33:37Z,,https://github.com/plotly/plotly.R/pull/488,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/487,2016-03-10T00:11:39Z,2016-03-13T23:40:37Z,2016-03-10T00:53:07Z,,https://github.com/plotly/plotly.R/pull/487,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/484,2016-03-08T03:03:34Z,2016-03-13T23:40:38Z,2016-03-08T04:08:50Z,,https://github.com/plotly/plotly.R/pull/484,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/480,2016-03-04T04:52:30Z,2016-03-13T23:41:04Z,2016-03-08T01:31:42Z,"@jackparmer @chriddyp @cldougl @etpinard @royr2 @yankev

This is a major rewrite of `ggplotly()`. Here is an executive summary of the results:
1. It's about 20x faster (it avoids calling `ggplot_build()` 20+ times). In some cases, it might be even faster since a lot of other redundant computation is avoided.
2. Implements all of `scale_*()`, and most of `theme()`/`guides()`. Since plotly.js doesn't support multiple legends, I can't support all of `theme()`/`guides()`, and have to combine multiple legends into a single legend (thankfully we now have scrolling legends :). You can, however, have numerous colorbars and a legend. As a result, this should fix a lot of issues (#482, #481, #479, #476, #473, #460, #456, #454, #453, #447, #443, #434, #422, #421, #399, #379, #378, #357, #318, #316, #242, #232, #211, #203, #185, #184, #161)
3. It's simpler -- more functional programming, less floating variables, and less nested programming logic -- making it much easier to maintain and extend.

There are a couple significant changes in philosophy, which lead to some backwards-incompatible changes. In my opinion, especially now that we have `plot_ly()`, reproducing the ggplot2 result takes precedence over downstream zoom/hover behavior. This is a big reason why I've decided to _always_ use a linear axis type and specify `tickvals`/`ticktext`. For one, this is necessary in order to do sizing correctly, and it is more consistent with ggplot2's discrete position scales ([they have both a discrete and continuous component](https://github.com/hadley/ggplot2/issues/1542#issuecomment-185044522)). Unfortunately, this means that hover formatting might look strange for date/categorical axes, but this seems like something we might be able to fix via plotly.js enhancements down the road.

Also, before we were creating a axis grid object to reflect both major and _minor_ grid lines in ggplot2. There are two problems with this:
- major/minor grids styling (width, color, etc) can be different.
- You can't put ticks or tick text on minor grid lines without hacking into grid itself. 
  I think it's better if we just translate the major grid to a plotly.js axis object, and if people really miss the minor grid lines, I'll implement them as line shapes.

PS. we'd love some help from the community with respect to converting ggplot2 extensions (cc @sctyner, @hrbrmstr, @lionel-, @thomasp85, @slowkow, @ellisp, @daattali, @GuangchuangYu, @aphalo, @Ather-Energy, @timelyportfolio). To add support for your custom geom, say `GeomCustom`, you'll need to export a `to_basic.GeomCustom` method in your extension package. For example, since `GeomLine` is a special case of `GeomPath`, to add support for GeomLine, [we just sort the data by x and prefix a `GeomPath` class](https://github.com/ropensci/plotly/blob/7b6144697fba0c9e03a5be7f0170e0b3b0e433f9/R/layers2traces.R#L182-L185). If you can't convert your custom geom to a ""basic"" geom, you might need to also export a `geom2trace.GeomCustom` method. This will require some knowledge of [the plotly.js JSON spec](https://plot.ly/javascript/reference/), but we'd be more than happy to help. If anyone has questions, or suggestions on better ways to do things, please let me know!

Also pining animint contributors that might find some of this useful (@tdhock, @srvanderplas, @kferris10, @caijun, @heike).
",https://github.com/plotly/plotly.R/pull/480,plotly
alyst,CONTRIBUTOR,closed,6,https://github.com/plotly/plotly.R/pull/471,2016-02-23T01:17:57Z,2016-07-26T15:10:21Z,2016-07-26T15:10:21Z,"This is my version of the #418 fix:
- add `indices` property to the trace to reference the indices of
  the data elements associated with the trace
- replace `tracify()` by `subdivide_traces()` that correctly subdivides
  the current set of traces based on the given data property

Note that while the traces are assigned the correct visual properties, the PR does not fix #381 -- individual `group` traces are still being created and displayed in the legend.

Comments, especially regarding the ways to fix #381 are most welcome.
",https://github.com/plotly/plotly.R/pull/471,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/462,2016-02-12T02:37:08Z,2016-03-13T23:40:50Z,2016-02-13T01:29:31Z,,https://github.com/plotly/plotly.R/pull/462,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/458,2016-02-09T03:07:55Z,2016-03-13T23:40:51Z,2016-02-11T00:56:10Z,,https://github.com/plotly/plotly.R/pull/458,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/457,2016-02-09T00:26:35Z,2016-03-13T23:40:53Z,2016-02-09T03:04:26Z,,https://github.com/plotly/plotly.R/pull/457,plotly
charliejhadley,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/450,2016-02-03T12:09:21Z,2016-02-13T01:31:57Z,2016-02-13T01:31:57Z,"movies is no longer contained within ggplot2 https://cran.r-project.org/web/packages/ggplot2movies/index.html
",https://github.com/plotly/plotly.R/pull/450,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/448,2016-02-02T16:16:32Z,2016-02-02T16:36:58Z,2016-02-02T16:36:53Z,,https://github.com/plotly/plotly.R/pull/448,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/446,2016-02-01T16:33:31Z,2016-03-13T23:40:53Z,2016-02-01T16:49:50Z,,https://github.com/plotly/plotly.R/pull/446,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/445,2016-02-01T15:28:38Z,2016-02-01T15:38:02Z,2016-02-01T15:38:02Z,,https://github.com/plotly/plotly.R/pull/445,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/442,2016-01-29T23:05:37Z,2016-03-13T23:40:54Z,2016-02-01T15:38:03Z,,https://github.com/plotly/plotly.R/pull/442,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/437,2016-01-28T03:38:58Z,2016-03-13T23:40:55Z,2016-03-08T01:31:42Z,,https://github.com/plotly/plotly.R/pull/437,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/436,2016-01-28T03:00:23Z,2016-01-28T03:33:08Z,2016-01-28T03:33:06Z,,https://github.com/plotly/plotly.R/pull/436,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/435,2016-01-28T02:32:54Z,2016-03-13T23:40:57Z,2016-01-28T03:35:47Z,,https://github.com/plotly/plotly.R/pull/435,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/433,2016-01-27T17:36:08Z,2016-01-27T17:55:29Z,2016-01-27T17:55:29Z,,https://github.com/plotly/plotly.R/pull/433,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/423,2016-01-25T15:50:15Z,2016-01-28T02:47:02Z,2016-01-25T20:38:42Z,,https://github.com/plotly/plotly.R/pull/423,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/417,2016-01-21T03:24:51Z,2016-01-28T02:47:02Z,2016-01-25T22:44:14Z,,https://github.com/plotly/plotly.R/pull/417,plotly
cpsievert,COLLABORATOR,closed,9,https://github.com/plotly/plotly.R/pull/416,2016-01-21T02:23:56Z,2016-03-23T20:40:57Z,2016-03-02T00:08:57Z,"@chriddyp @jp @cldougl

I talked to @jcheng5 today. He suggested that we don't yet rely on crosstalk, as it's still very experimental, and may never be officially supported.

Later I realized that, in #312, crosstalk is only used to send plotly event data to the shiny server. It turns out that isn't super hard to implement using shiny alone, so I've done that here.

[Here](http://104.131.111.111:3838/plotlyEvents/) is a barebones example ([source](https://github.com/ropensci/plotly/blob/feature/transmit/inst/examples/events/app.R))

To see how the interface for accessing plotly user event data has changed for those older examples, see https://github.com/cpsievert/shiny_apps/commit/5633b6ebca4e8f4e141b405d5fec2cc5a011a8c8 (ignore the inline stuff, cc @pssguy)

A few things left to sort through:
1. In the basic example above, notice that if you select point(s), then double click to unselect, the selection doesn't clear in the linked views. @etpinard, if possible, a 'plotly_doubleClick' event would be a _huge_ help here!
2. Do we want to support 'plotly_hover'? If so, that probably means we should clear the selection on 'plotly_unhover', but I imagine this quickly leads to glitchy behavior when hovering over a bunch of points.
3. Should we provide an option to _not_ send plotly user selections to shiny?
",https://github.com/plotly/plotly.R/pull/416,plotly
cpsievert,COLLABORATOR,closed,11,https://github.com/plotly/plotly.R/pull/411,2016-01-19T21:35:27Z,2018-07-18T10:45:10Z,2018-06-07T01:12:35Z,"This addresses #375 and #356 by leveraging a new environment variable which should point to the plotly.js source. In other words, you can render MathJax and/or maps without an internet connection by doing something like:

``` shell
git clone https://github.com/plotly/plotly.js.git
cd plotly.js
export plotly_jsdir=`pwd`
echo ""Sys.setenv('plotly_jsdir', '$plotly_jsdir')"" >> ~/.Rprofile
```
",https://github.com/plotly/plotly.R/pull/411,plotly
cpsievert,COLLABORATOR,closed,4,https://github.com/plotly/plotly.R/pull/410,2016-01-19T02:41:46Z,2016-01-28T02:47:03Z,2016-01-19T16:46:46Z,,https://github.com/plotly/plotly.R/pull/410,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/409,2016-01-18T23:21:16Z,2016-01-28T02:47:03Z,2016-01-19T01:20:51Z,,https://github.com/plotly/plotly.R/pull/409,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/408,2016-01-18T20:06:50Z,2016-03-13T23:41:03Z,2016-03-13T00:00:51Z,,https://github.com/plotly/plotly.R/pull/408,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/407,2016-01-18T18:40:23Z,2016-01-28T02:47:04Z,2016-01-18T19:39:02Z,,https://github.com/plotly/plotly.R/pull/407,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/406,2016-01-18T16:13:04Z,2016-01-28T02:47:04Z,2016-01-18T16:23:56Z,,https://github.com/plotly/plotly.R/pull/406,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/396,2016-01-15T01:11:13Z,2016-01-28T02:47:04Z,2016-01-18T15:48:29Z,,https://github.com/plotly/plotly.R/pull/396,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/395,2016-01-14T18:21:49Z,2016-01-28T02:47:04Z,2016-01-14T23:43:27Z,,https://github.com/plotly/plotly.R/pull/395,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/394,2016-01-14T00:32:10Z,2016-01-28T02:47:04Z,2016-01-18T16:06:04Z,,https://github.com/plotly/plotly.R/pull/394,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/387,2016-01-13T00:10:16Z,2016-01-28T02:47:04Z,2016-01-13T00:58:54Z,,https://github.com/plotly/plotly.R/pull/387,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/385,2016-01-11T23:54:10Z,2017-04-06T21:01:13Z,2017-03-10T16:56:15Z,,https://github.com/plotly/plotly.R/pull/385,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/384,2016-01-11T22:44:45Z,2016-01-28T02:47:04Z,2016-01-11T23:49:30Z,,https://github.com/plotly/plotly.R/pull/384,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/383,2016-01-11T18:47:17Z,2016-01-11T18:58:22Z,2016-01-11T18:58:22Z,,https://github.com/plotly/plotly.R/pull/383,plotly
cpsievert,COLLABORATOR,open,0,https://github.com/plotly/plotly.R/pull/374,2015-12-23T23:40:14Z,2022-03-26T18:43:32Z,list(),,https://github.com/plotly/plotly.R/pull/374,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/372,2015-12-23T23:03:20Z,2016-03-13T23:42:09Z,2016-01-21T02:30:36Z,,https://github.com/plotly/plotly.R/pull/372,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/371,2015-12-23T20:46:23Z,2015-12-23T23:14:19Z,2015-12-23T21:08:49Z,,https://github.com/plotly/plotly.R/pull/371,plotly
cpsievert,COLLABORATOR,closed,5,https://github.com/plotly/plotly.R/pull/368,2015-12-22T20:06:51Z,2016-01-28T02:47:04Z,2015-12-29T15:57:57Z,"This would require a major version bump (2.1) since we're changing the default for inheriting properties.

Let me know what you think @chriddyp @cldougl
",https://github.com/plotly/plotly.R/pull/368,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/367,2015-12-22T17:57:14Z,2016-01-28T02:47:04Z,2016-01-13T22:53:13Z,"This addresses #45
",https://github.com/plotly/plotly.R/pull/367,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/366,2015-12-22T15:48:58Z,2015-12-23T18:13:06Z,2015-12-22T16:19:44Z,,https://github.com/plotly/plotly.R/pull/366,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/364,2015-12-22T00:59:26Z,2015-12-23T18:13:07Z,2015-12-22T15:55:11Z,,https://github.com/plotly/plotly.R/pull/364,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/362,2015-12-18T19:11:08Z,2018-06-07T17:32:15Z,2018-06-07T17:32:15Z,,https://github.com/plotly/plotly.R/pull/362,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/355,2015-12-16T22:28:50Z,2016-03-13T23:57:50Z,2015-12-18T18:25:17Z,"Reverts ropensci/plotly#354
",https://github.com/plotly/plotly.R/pull/355,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/354,2015-12-16T16:58:21Z,2016-03-13T23:58:21Z,2015-12-16T17:55:59Z,,https://github.com/plotly/plotly.R/pull/354,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/347,2015-12-13T23:42:09Z,2015-12-14T19:47:26Z,2015-12-14T00:23:44Z,,https://github.com/plotly/plotly.R/pull/347,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/344,2015-12-12T15:48:28Z,2015-12-14T19:47:30Z,2015-12-12T23:11:23Z,,https://github.com/plotly/plotly.R/pull/344,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/339,2015-12-11T21:12:45Z,2015-12-11T21:19:10Z,2015-12-11T21:19:07Z,,https://github.com/plotly/plotly.R/pull/339,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/335,2015-12-10T20:04:21Z,2015-12-11T21:36:19Z,2015-12-11T21:36:16Z,,https://github.com/plotly/plotly.R/pull/335,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/334,2015-12-10T16:53:47Z,2015-12-10T17:41:48Z,2015-12-10T17:40:14Z,,https://github.com/plotly/plotly.R/pull/334,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/314,2015-11-27T23:13:14Z,2015-11-30T14:16:58Z,2015-11-30T14:16:53Z,,https://github.com/plotly/plotly.R/pull/314,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/312,2015-11-27T04:00:45Z,2016-03-13T23:42:10Z,2015-12-23T23:04:59Z,,https://github.com/plotly/plotly.R/pull/312,plotly
DexGroves,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/305,2015-11-18T13:33:17Z,2015-11-18T16:44:19Z,2015-11-18T16:44:19Z,,https://github.com/plotly/plotly.R/pull/305,plotly
cpsievert,COLLABORATOR,closed,5,https://github.com/plotly/plotly.R/pull/302,2015-11-17T21:40:30Z,2016-01-21T03:30:07Z,2016-01-21T03:30:07Z,,https://github.com/plotly/plotly.R/pull/302,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/301,2015-11-17T03:29:04Z,2015-11-20T02:08:43Z,2015-11-17T10:06:59Z,,https://github.com/plotly/plotly.R/pull/301,plotly
cpsievert,COLLABORATOR,closed,6,https://github.com/plotly/plotly.R/pull/296,2015-11-11T00:44:19Z,2015-11-20T02:08:44Z,2015-11-16T23:58:43Z,,https://github.com/plotly/plotly.R/pull/296,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/293,2015-11-03T02:04:12Z,2015-11-20T02:09:49Z,2015-11-03T15:34:45Z,,https://github.com/plotly/plotly.R/pull/293,plotly
cpsievert,COLLABORATOR,closed,7,https://github.com/plotly/plotly.R/pull/287,2015-10-04T23:39:51Z,2015-11-20T02:08:48Z,2015-11-03T15:34:44Z,"Hey @chriddyp, @jackparmer, @13bzhang:

As well as porting to htmlwidgets, this pull request drastically improves our test reporting strategy. Travis builds are now taking ~12 minutes (down from ~40!), so Travis’ 50 minute time limit is no longer a problem.

The main idea is to check whether the R list (used to create the plotly) is different from master. If it is, we create a web page showing the JSON difference, and use plotlyjs to embed the interactive versions for reference (all locally, no API requests -- which was causing problems with Travis). If it isn’t different, we do nothing.

To see this in action, see the automated comment below. Yes, there are many differences, but I’m pretty sure that’s because we now use `{}` instead of `null` for missing values. For one, this leads to better tooltip info, for example -- http://cpsievert.github.io/plotly-test-table/5614f60/abline/

Another neat side-effect of this change is that we can (essentially) simulate a Travis build locally, making debugging much, much less time-consuming. If you want to take advantage, do the following:

``` r
# enter any number for the pull request (it shouldn’t matter for local builds)
Sys.setenv('TRAVIS_PULL_REQUEST' = '1')
Sys.setenv('TRAVIS_COMMIT' = substr(system('git rev-parse HEAD', intern = T), 1, 7))
devtools::load_all(); source('tests/testthat.R', chdir = TRUE)
```

The one downside is that we no longer have a complete table that compares ggplot2 and plotly figures. If you think this is still worth having, please let me know, and I’ll write a function to build the table independent of the testing suite. For example, something like

``` r
build_table('ropensci/plotly#287', 'ropensci/plotly')
```

would compare this pull request with plotly’s master branch and the installed version of ggplot2.
",https://github.com/plotly/plotly.R/pull/287,plotly
chriddyp,MEMBER,closed,2,https://github.com/plotly/plotly.R/pull/285,2015-09-28T16:21:11Z,2015-09-29T03:52:31Z,2015-09-29T03:52:29Z,"hey @cpsievert  -- looks like the refactor in https://github.com/ropensci/plotly/commit/0b2eeb9692a2dfd69a596252e3b4a1f82db973c6 missed a couple things with the filename kwarg. since that commit, specifying the same filename doesn't overwrite the graph:

```
> d <- diamonds[sample(nrow(diamonds), 1000), ]
> p <- plot_ly(d, x = carat, y = price, text = paste(""Clarity: "", clarity), filename=""test"")
> p
Success! Created a new plotly here -> https://plot.ly/~christopherp/1310
> p <- plot_ly(d, x = carat, y = price, text = paste(""Clarity: "", clarity), filename=""test"")
> p
Success! Created a new plotly here -> https://plot.ly/~christopherp/1312
```

here's a fix.

cc @cldougl
",https://github.com/plotly/plotly.R/pull/285,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/281,2015-09-14T16:16:36Z,2015-11-20T02:09:54Z,2015-10-05T03:47:50Z,,https://github.com/plotly/plotly.R/pull/281,plotly
cpsievert,COLLABORATOR,closed,3,https://github.com/plotly/plotly.R/pull/279,2015-09-04T03:21:21Z,2015-11-20T02:09:51Z,2015-09-14T16:15:33Z,,https://github.com/plotly/plotly.R/pull/279,plotly
chriddyp,MEMBER,closed,5,https://github.com/plotly/plotly.R/pull/275,2015-08-26T17:11:51Z,2015-08-28T14:51:13Z,2015-08-26T21:11:48Z,"file.info returns file size in bytes

`useBytes` - logical: For readChar, should nchars be regarded as a
number of bytes not characters in a multi-byte locale?

This _may_ fix an issue

```
In readChar(off, file.info(off)$size) :
can only read in bytes in a non-UTF-8 MBCS locale
```

from a user with a Japanese environment
",https://github.com/plotly/plotly.R/pull/275,plotly
cpsievert,COLLABORATOR,closed,3,https://github.com/plotly/plotly.R/pull/274,2015-08-25T15:28:32Z,2015-08-25T16:06:44Z,2015-08-25T15:51:50Z,"Fixes a bug likely introduced by d4e214322481c89ddc857f8ba2f3fb24e65143c5.

The test shows where the bug is relevant
",https://github.com/plotly/plotly.R/pull/274,plotly
chriddyp,MEMBER,closed,2,https://github.com/plotly/plotly.R/pull/272,2015-08-20T22:40:17Z,2015-08-21T02:24:23Z,2015-08-21T02:24:22Z,"see commit for details. cc @cpsievert !
",https://github.com/plotly/plotly.R/pull/272,plotly
cpsievert,COLLABORATOR,closed,1,https://github.com/plotly/plotly.R/pull/269,2015-08-18T23:50:46Z,2016-03-13T23:41:39Z,2015-12-18T19:08:02Z,"I was trying to do too much in #264. This will focus solely on _fixing bugs_ that the dev version of ggplot2 introduces.
",https://github.com/plotly/plotly.R/pull/269,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/266,2015-08-14T21:24:48Z,2015-11-20T02:09:17Z,2015-08-14T21:49:27Z,"Fixes #265
",https://github.com/plotly/plotly.R/pull/266,plotly
cpsievert,COLLABORATOR,closed,5,https://github.com/plotly/plotly.R/pull/264,2015-08-14T01:01:08Z,2015-11-20T02:09:19Z,2015-09-04T01:51:12Z,"The development version of ggplot2 [has shifted from proto objects to ""ggproto"" objects](https://github.com/hadley/ggplot2/blob/e408ccf18aa3c072103d1e48f538638b90a3d9fe/NEWS#L179-L181). That change breaks some assumptions we were making about the structure of ggplot objects.
",https://github.com/plotly/plotly.R/pull/264,plotly
chriddyp,MEMBER,closed,4,https://github.com/plotly/plotly.R/pull/263,2015-08-12T04:44:34Z,2015-08-12T21:50:29Z,2015-08-12T21:50:27Z,,https://github.com/plotly/plotly.R/pull/263,plotly
chriddyp,MEMBER,closed,3,https://github.com/plotly/plotly.R/pull/262,2015-08-12T03:41:39Z,2015-08-12T23:35:41Z,2015-08-12T23:35:37Z,,https://github.com/plotly/plotly.R/pull/262,plotly
chriddyp,MEMBER,closed,9,https://github.com/plotly/plotly.R/pull/261,2015-08-11T23:36:32Z,2016-02-25T15:55:01Z,2015-08-13T19:34:35Z,"hey @cpsievert - this look right? In response to this stack overflow question: http://stackoverflow.com/questions/31935305/r-plotly-ggplot
",https://github.com/plotly/plotly.R/pull/261,plotly
chriddyp,MEMBER,closed,0,https://github.com/plotly/plotly.R/pull/260,2015-08-11T20:51:10Z,2015-08-12T04:17:30Z,2015-08-12T04:17:28Z,,https://github.com/plotly/plotly.R/pull/260,plotly
chriddyp,MEMBER,closed,0,https://github.com/plotly/plotly.R/pull/259,2015-08-11T20:43:39Z,2015-08-11T20:44:42Z,2015-08-11T20:44:41Z,"This reverts commit 4a20a2045d8d29472468786ce783cb2e15058b46, reversing
changes made to 75b05e30e50f83d8baee8b878119970dd9f37d45.
",https://github.com/plotly/plotly.R/pull/259,plotly
chriddyp,MEMBER,closed,0,https://github.com/plotly/plotly.R/pull/258,2015-08-11T20:23:01Z,2015-08-11T20:46:50Z,2015-08-11T20:46:49Z,,https://github.com/plotly/plotly.R/pull/258,plotly
13bzhang,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/257,2015-08-11T20:17:39Z,2015-11-20T02:09:12Z,2015-08-11T20:27:44Z,"This is a temporary fix for loading dependency ""viridis."" I created a zzz.R file with a onLoad funciton that checks if `viridis` is installed. If not installed, I tell it to install it from `type = ""source""`. 
",https://github.com/plotly/plotly.R/pull/257,plotly
chriddyp,MEMBER,closed,2,https://github.com/plotly/plotly.R/pull/256,2015-08-11T19:00:27Z,2015-08-14T16:15:46Z,2015-08-14T16:15:44Z,"@cpsievert @mkcor 
",https://github.com/plotly/plotly.R/pull/256,plotly
chriddyp,MEMBER,closed,2,https://github.com/plotly/plotly.R/pull/252,2015-08-11T16:42:38Z,2015-08-11T17:35:51Z,2015-08-11T17:35:50Z,"and anyways, let the user see the appropriate http status response by visiting the web page and seeing the server's response

fixes #251 

cc @cpsievert @mkcor 
",https://github.com/plotly/plotly.R/pull/252,plotly
chriddyp,MEMBER,closed,2,https://github.com/plotly/plotly.R/pull/248,2015-08-07T14:33:26Z,2015-08-11T20:57:25Z,2015-08-07T14:36:57Z,"hey @cpsievert - minor change here. using more standard filenames for the plotly.js bundles (and http://purchasing.plot.ly/plotly-offline-r reflects this)
",https://github.com/plotly/plotly.R/pull/248,plotly
cpsievert,COLLABORATOR,closed,0,https://github.com/plotly/plotly.R/pull/246,2015-08-03T20:06:17Z,2015-11-20T02:09:05Z,2015-08-03T21:31:34Z,,https://github.com/plotly/plotly.R/pull/246,plotly
cpsievert,COLLABORATOR,closed,2,https://github.com/plotly/plotly.R/pull/244,2015-08-03T14:43:54Z,2017-03-10T16:47:47Z,2017-03-10T16:47:46Z,"An implementation of -> https://plot.ly/streaming/

(not ready, so don't take this seriously, yet)
",https://github.com/plotly/plotly.R/pull/244,plotly
chriddyp,MEMBER,closed,2,https://github.com/plotly/plotly.R/pull/243,2015-07-31T15:03:59Z,2015-07-31T15:48:10Z,2015-07-31T15:13:24Z,"otherwise plotly will detect that the graph is in an iframe, and redirect to `.embed` anyway. so, this should make plotly embeds load ~2 seconds faster :)

cc @cpsievert 
",https://github.com/plotly/plotly.R/pull/243,plotly
13bzhang,CONTRIBUTOR,closed,4,https://github.com/plotly/plotly.R/pull/241,2015-07-31T03:54:37Z,2015-11-20T02:09:10Z,2015-08-07T18:03:15Z,"This pull request is to fix problems in Issue #195. 

Right now I have fixes for
1. move the horizontal position of the legend to the right more
2. the vertical position of the legend should stay in the middle (made it such that it accommodates legends with different number of items)

``` r
p <- ggplot(diamonds, aes(clarity, fill = cut)) + geom_bar(position=""dodge"")
```

ggplot2
![195_bar_ggplot2](https://cloud.githubusercontent.com/assets/6131842/9000453/6c6b59d2-3715-11e5-8e1b-10cf840af8a8.png)

Plotly (old) https://plot.ly/~13bzhang/1104/count-vs-clarity/
![195_bar_old_plotly](https://cloud.githubusercontent.com/assets/6131842/9000481/c01cf306-3715-11e5-93e7-d3d396076a37.png)

Plotly (new) https://plot.ly/~13bzhang/1164/count-vs-clarity/

![195_bar_new_plotly](https://cloud.githubusercontent.com/assets/6131842/9000514/53d95a76-3716-11e5-85dc-2567caad093f.png)

The code also works for a legend where the name of the legend items are very, very long:

``` r
mydat <- data.frame(cat1 = sample(x = LETTERS[1:10], 
                                  size = 100, replace = TRUE),
                    cat2 = sample(x = c(""AAAAAAAAAAAAAAAAAAAAAAAAAAAAA"",
                                        ""BBBBBBBBBBBBBBBBBBBBBBBBBBBBB"",
                                        ""CCCCCCCCCCCCCCCCCCCCCCCCCCCCC""),
                                  size = 100, replace = TRUE))
p <- ggplot(mydat, aes(cat1, fill=cat2)) + geom_bar(position=""dodge"")
```

https://plot.ly/~13bzhang/1160/count-vs-cat1/
![195_very_long](https://cloud.githubusercontent.com/assets/6131842/9000486/f6e8c8ec-3715-11e5-8f65-8f48f31e744f.png)

@cpsievert @chriddyp @mkcor 
",https://github.com/plotly/plotly.R/pull/241,plotly
13bzhang,CONTRIBUTOR,closed,11,https://github.com/plotly/plotly.R/pull/236,2015-06-26T09:02:29Z,2015-12-14T19:47:48Z,2015-12-01T01:16:24Z,"First stab at a solution to Issue #188. Currently, the legend name is the variable name of the fill, color, or shape variable; it has a problem recognizing user generated legend names. I'm trying to fix it so `annotations` takes the user generated legend name when there is one. 

@mkcor @cpsievert @chriddyp 
",https://github.com/plotly/plotly.R/pull/236,plotly
13bzhang,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/235,2015-06-26T03:27:16Z,2015-12-10T17:40:50Z,2015-12-10T16:17:11Z,"This is a fix for Issue #233 ""Namespace clash with NLP package"". The problem was the `exists` function in `ggplotly.R` considered the global environment. So if there is already an object with the names `annotations` or `increase_margin_r` outside of the `plotly` environment, `gg2list` would not work. This is especially a problem if one loads the package `NLP` as seen in Issue #233 . 

I fixed this problem by restricting `exists` to the `plotly` environment. Also I added tests to made sure `gg2list` works when there are existing objects named `annotations` and `increase_margin_r`. 

@cpsievert @mkcor @chriddyp 
",https://github.com/plotly/plotly.R/pull/235,plotly
13bzhang,CONTRIBUTOR,closed,8,https://github.com/plotly/plotly.R/pull/230,2015-06-10T09:26:07Z,2015-12-14T19:47:28Z,2015-12-13T22:45:52Z,"This a solution to Issue #212. The legends weren't showing up for boxplots and density plots is because those features were not part of `markLegends` in `ggplotly`. I added them. I also made an except for boxplot so that is takes `markSplit` instead. Finally, I added a test for boxplots where each box-and-whiskers has a different fill. Will add to the existing density plot tests tomorrow to check for legends. 

Now we can enjoy legends:

![boxplot_plotly_fixed](https://cloud.githubusercontent.com/assets/6131842/8079038/1b674d28-0f30-11e5-9212-511a44079dac.png)

![density_carson_fixed](https://cloud.githubusercontent.com/assets/6131842/8079222/2eda2f3c-0f31-11e5-9eb0-e2527637456f.png)

@cpsievert @mkcor @chriddyp 
",https://github.com/plotly/plotly.R/pull/230,plotly
mkcor,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/228,2015-06-05T21:46:39Z,2015-12-10T17:40:58Z,2015-12-10T17:10:31Z,"Ran into this bug by chance, while working on content.

It might be `g$aes[a]` instead of `g$aes[a.name]`... I should come up with an example where that makes a difference and add it as a test. But clearly it cannot be the vector we're looping over (`aes.used`).

/cc @cpsievert @13bzhang @chriddyp 
",https://github.com/plotly/plotly.R/pull/228,plotly
13bzhang,CONTRIBUTOR,closed,9,https://github.com/plotly/plotly.R/pull/227,2015-06-05T08:55:48Z,2015-12-11T21:10:49Z,2015-12-10T20:57:47Z,"This is a pull request to address #225 ""Ordering of traces is wrong"". This seems to be a problem with a lot of geoms. I am attempting a general first-cut solution (pretty drastic try) by reversing the order of the traces. I want to see how it fares in the plotly test tables.
@cpsievert @chriddyp 
",https://github.com/plotly/plotly.R/pull/227,plotly
cpsievert,COLLABORATOR,closed,8,https://github.com/plotly/plotly.R/pull/226,2015-06-03T19:30:32Z,2015-08-01T14:51:06Z,2015-08-01T03:26:54Z,"This is a major revision of the R API which includes a new declarative DSL. [See here for an overview of that system](http://cpsievert.github.io/plotly/pipe-dsl).

I decided to branch off from #217 since some of those comments are now obsolete. Here is a more succinct list of other noteworthy technical changes:
- If users already have credentials/configurations stored under `~/.plotly`, they'll still work. However, we no longer try to write to `~/.plotly` (to avoid file permission issues), and instead prefer the use of [environment variables](http://stat.ethz.ch/R-manual/R-devel/library/base/html/Sys.setenv.html). See `help(signup)` for more details. 
- Uses **httr** instead of **RCurl** to communicate with the plotly API. This provides some useful utilities for turning HTTP errors into R errors and makes code more readable.
- Uses **jsonlite** instead of **RJSONIO** which will give us better control over conversion from R objects to JSON.
- These changes will close #40, #206, #180, #209, #220

This isn’t quite ready for a serious review since the new visual testing table isn't ready. 

It would be huge help to me if others could help produce examples for help pages and report any problems/issues (I'm sure there are certain use cases I haven't accounted for).
",https://github.com/plotly/plotly.R/pull/226,plotly
13bzhang,CONTRIBUTOR,closed,15,https://github.com/plotly/plotly.R/pull/224,2015-05-21T03:01:24Z,2015-12-12T02:36:26Z,2015-12-12T02:32:57Z,"This is a pull request for Issue #221 ""Conversion not implemented for geom_jitter"".
Note: I am having trouble with getting the seed to set for the `testthat`.
https://github.com/ropensci/plotly/blob/baobao-geom_jitter/tests/testthat/test-ggplot-jitter.R

@mkcor @cpsievert @chriddyp 
",https://github.com/plotly/plotly.R/pull/224,plotly
13bzhang,CONTRIBUTOR,closed,21,https://github.com/plotly/plotly.R/pull/223,2015-05-15T20:26:20Z,2017-05-11T19:19:42Z,2017-05-11T19:19:41Z,"A solution to Issue #218 ""Equal scaling of axes not working"" -- so that the height and width ratios will be those specified by users. Conformed to the style guide. 
",https://github.com/plotly/plotly.R/pull/223,plotly
13bzhang,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/222,2015-05-15T18:22:16Z,2015-05-15T20:15:55Z,2015-05-15T20:15:45Z,"This pull request is a solution to fix Issue #218 ""Equal scaling of axes not working"". I fixed it so the width and height of Plotly plots have the ratios specified by ggplot2 user if they decide to specify coordinate ratios.
",https://github.com/plotly/plotly.R/pull/222,plotly
cpsievert,COLLABORATOR,closed,10,https://github.com/plotly/plotly.R/pull/217,2015-05-07T18:48:55Z,2015-08-01T14:50:54Z,2015-06-03T19:31:35Z,"I couldn’t help myself and took a stab at the redesign discussed in #40.

Some of the big changes include:
1. No more `list$function()` interface. The new interface should be more intuitive to R users and resolves documentation issues (see #206). See the example section in `help(plotly)` for an overview of the new interface.
2. Credentials/configuration are managed via environment variables so file permissions shouldn’t be an issue anymore (see #204). Users _can_ still pass their username and API key to `plotly()` (and they will be automatically stored as environment variables). Also, the `signup()` function will (by default) try to store these variables in `~/.Rprofile` so they will be loaded upon startup.
3. Uses **httr** instead of **RCurl** to communicate with the plotly API. As a result, the source code is much simpler and provides some useful utilities for turning HTTP errors into R errors.
4. Leverages the `knitr::knit_print()` S3 generic to automatically embed plotly iframes in R Markdown files. See `test-plotly-knitr.R` for a simple example.
5. IPython users will have to use `embed_notebook()` to embed plotly frames in IPython (I haven't tested this yet, it'd be great if others could test this functionality).

Since this is such a drastic change to API, merging this would require bumping to 1.0.0. I’d be happy to work on shiny bindings as well (I’ve done this for several other R packages), but that might be appropriate for another pull request. 
",https://github.com/plotly/plotly.R/pull/217,plotly
mkcor,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/215,2015-05-05T17:28:51Z,2015-05-05T19:36:33Z,2015-05-05T19:36:30Z,"Follow @cpsievert 's suggestion to respect semantic versioning (should be part of https://github.com/ropensci/plotly/pull/210).

/cc @chriddyp @cldougl @13bzhang
",https://github.com/plotly/plotly.R/pull/215,plotly
cpsievert,COLLABORATOR,closed,11,https://github.com/plotly/plotly.R/pull/214,2015-05-01T00:44:23Z,2015-06-04T18:39:17Z,2015-06-02T07:11:12Z,,https://github.com/plotly/plotly.R/pull/214,plotly
cpsievert,COLLABORATOR,closed,10,https://github.com/plotly/plotly.R/pull/213,2015-04-30T19:10:51Z,2015-05-28T16:56:35Z,2015-05-21T04:14:19Z,"This will checkoff the ""maybe ggplot2-bar-category-names should be a histogram: https://plot.ly/~TestBot/550 instead of a zillion stacked bars"" point in #161.
",https://github.com/plotly/plotly.R/pull/213,plotly
mkcor,CONTRIBUTOR,closed,9,https://github.com/plotly/plotly.R/pull/210,2015-04-28T15:01:35Z,2015-05-05T17:29:42Z,2015-05-04T21:27:10Z,"`gg2list()` returns a list of lists which is converted into the final JSON file by `ggplotly()`.

It makes a lot more sense in the plotly framework to have `gg2list()` return a figure object, i.e., with dimensions `data` and `layout`. This way, users can apply it to a ggplot2 plot, say, `gg`:

``` r
fig <- gg2list(gg)
# Get/set layout attributes
fig$layout
# Get/set data attributes
fig$data
# And only then make the API call
py <- plotly()
py$plotly(fig$data, kwargs=list(layout=fig$layout))
```

It could be an opportunity to rewrite the `plotly()` method (as in `py$plotly()`), making things explicit and less 'flexible' (dot-dot-dot argument). But this is not as urgent so I have only adapted to the new figure return (7f4435c).

Tests won't pass as of commit 6b2a8e8, I'm going to make extensive use of `sed` to update our tests accordingly.

/cc @chriddyp @etpinard @cpsievert @tdhock 
",https://github.com/plotly/plotly.R/pull/210,plotly
cpsievert,COLLABORATOR,closed,14,https://github.com/plotly/plotly.R/pull/208,2015-04-25T20:32:23Z,2015-04-29T03:21:43Z,2015-04-29T03:20:17Z,"Once completed, this will close #207 
",https://github.com/plotly/plotly.R/pull/208,plotly
mkcor,CONTRIBUTOR,closed,4,https://github.com/plotly/plotly.R/pull/205,2015-04-16T16:00:35Z,2015-11-20T02:09:24Z,2015-04-21T19:42:36Z,"Reference: http://opensource.org/licenses/MIT

/cc @tdhock @chriddyp 
",https://github.com/plotly/plotly.R/pull/205,plotly
cpsievert,COLLABORATOR,closed,7,https://github.com/plotly/plotly.R/pull/202,2015-04-13T18:06:12Z,2015-04-17T01:54:03Z,2015-04-17T01:53:57Z,"See #199.
",https://github.com/plotly/plotly.R/pull/202,plotly
cpsievert,COLLABORATOR,closed,9,https://github.com/plotly/plotly.R/pull/200,2015-04-10T22:21:14Z,2015-04-16T01:58:07Z,2015-04-16T01:57:46Z,"This pull request started out as a fix for #198, but I quickly realized the implementation of `geom_bar()`/`geom_histogram()` was suboptimal for a couple reasons 
1. The binning for histograms was done by plotly. Not only is this default binning different, but that also means a number of [arguments in stat_bin](http://docs.ggplot2.org/current/stat_bin.html) are ignored. If the goal is to have a correct mapping from ggplot2 to plotly, we should let ggplot2 handle the binning, then use a type=""bar"" and bargap=0.
2. [This thinking](https://github.com/ropensci/plotly/blob/a9daa28a2069cf437059e642c227b082fa882f66/R/trace_generation.R#L47-L54) lead to false warnings. For example, `ggplot(mtcars, aes(factor(vs)))+geom_bar()` would throw a warning, but it shouldn’t.
",https://github.com/plotly/plotly.R/pull/200,plotly
tdhock,CONTRIBUTOR,closed,30,https://github.com/plotly/plotly.R/pull/196,2015-03-31T23:41:33Z,2015-05-07T18:03:54Z,2015-05-07T18:03:52Z,"I added some tests based on https://github.com/ropensci/plotly/blob/add-r-cookbook-tests/tests/cookbook-test-suite/lines.R

one test doesn't pass, and I'm working on fixing it.
",https://github.com/plotly/plotly.R/pull/196,plotly
cpsievert,COLLABORATOR,closed,22,https://github.com/plotly/plotly.R/pull/193,2015-03-18T22:23:49Z,2015-03-24T14:47:41Z,2015-03-24T14:47:41Z,"This pull request re-implements ribbon as a basic polygon (in a similar fashion to [rect](https://github.com/ropensci/plotly/pull/178)).

One major benefit of doing so is that `geom_ribbon()` (and consequently `geom_smooth()`)  will respect fill/colour/group aesthetics.
",https://github.com/plotly/plotly.R/pull/193,plotly
cpsievert,COLLABORATOR,closed,10,https://github.com/plotly/plotly.R/pull/183,2015-03-10T05:44:07Z,2015-09-03T14:40:59Z,2015-03-12T22:06:20Z,"This will close #179.
",https://github.com/plotly/plotly.R/pull/183,plotly
cpsievert,COLLABORATOR,closed,4,https://github.com/plotly/plotly.R/pull/182,2015-03-10T03:35:08Z,2015-03-13T01:56:31Z,2015-03-10T19:54:55Z,,https://github.com/plotly/plotly.R/pull/182,plotly
tdhock,CONTRIBUTOR,closed,8,https://github.com/plotly/plotly.R/pull/178,2015-03-07T01:19:00Z,2015-03-18T16:42:26Z,2015-03-18T16:42:23Z,"I implemented geom_rect conversion by treating it as a basic version of a polygon, which is transformed into a trace with mode=""lines"", type=""scatter"", fill=""tozerox""
",https://github.com/plotly/plotly.R/pull/178,plotly
cpsievert,COLLABORATOR,closed,5,https://github.com/plotly/plotly.R/pull/174,2015-03-04T23:37:08Z,2015-08-01T14:50:57Z,2015-03-21T23:11:52Z,"This will take advantage of ""officially supported"" [native R builds on Travis](http://blog.travis-ci.com/2015-02-26-test-your-r-applications-on-travis-ci/)
",https://github.com/plotly/plotly.R/pull/174,plotly
cpsievert,COLLABORATOR,closed,20,https://github.com/plotly/plotly.R/pull/173,2015-03-01T17:41:43Z,2015-03-04T23:29:16Z,2015-03-04T21:25:16Z,"I've been unable to successfully run `make` over at plotly-test-table (see [here](https://github.com/ropensci/plotly-test-table/issues/2) &[here](https://github.com/ropensci/plotly-test-table/issues/5))

Instead of wasting more time trying to debug on different machines, I thought it would be better to automate the job with Travis (as described [here](https://github.com/ropensci/plotly-test-table/issues/4)).

Let me know what you think @tdhock @chriddyp @mkcor
",https://github.com/plotly/plotly.R/pull/173,plotly
tdhock,CONTRIBUTOR,closed,16,https://github.com/plotly/plotly.R/pull/172,2015-02-28T00:01:36Z,2015-03-10T21:01:28Z,2015-03-10T21:01:26Z,"This branch translates some of Marianne's visual tests from the axes.R file in the add-r-cookbook-tests branch 

https://github.com/ropensci/plotly/blob/add-r-cookbook-tests/tests/cookbook-test-suite/axes.R

to the format I need for adding them to the test table.
",https://github.com/plotly/plotly.R/pull/172,plotly
tdhock,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/171,2015-02-27T22:07:36Z,2015-03-02T23:39:17Z,2015-03-02T23:39:16Z,"this branch has a small fix for using ylim in one of the #161 examples

http://www.cookbook-r.com/Graphs/Bar_and_line_graphs_%28ggplot2%29/line-point-ylim.png
",https://github.com/plotly/plotly.R/pull/171,plotly
tdhock,CONTRIBUTOR,closed,6,https://github.com/plotly/plotly.R/pull/169,2015-02-24T00:38:13Z,2015-03-03T13:59:18Z,2015-03-03T13:59:14Z,"This fixes ""legend doesn't hide"" from #161 
",https://github.com/plotly/plotly.R/pull/169,plotly
cpsievert,COLLABORATOR,closed,38,https://github.com/plotly/plotly.R/pull/167,2015-02-18T00:22:06Z,2015-03-13T01:55:55Z,2015-03-11T00:56:20Z,"Howdy @chriddyp @mkcor @tdhock!

The purpose of this pull request is to fully implement `facet_wrap(..., scales = 'free')`.

It also seems possible to implement space = ""free"", but perhaps that should be in a separate pull request.
",https://github.com/plotly/plotly.R/pull/167,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/165,2015-02-09T20:42:01Z,2015-02-09T20:48:37Z,2015-02-09T20:48:30Z,"Always wanted to keep these outside the R package.

They live on branch `add-r-cookbook-tests`.
",https://github.com/plotly/plotly.R/pull/165,plotly
mkcor,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/164,2015-02-09T17:27:29Z,2015-02-09T20:30:42Z,2015-02-09T20:30:38Z,"Small PR addressing issue #162 -- will update version number after review.

/cc @tdhock please :)
",https://github.com/plotly/plotly.R/pull/164,plotly
tdhock,CONTRIBUTOR,closed,36,https://github.com/plotly/plotly.R/pull/163,2015-02-02T23:53:09Z,2015-02-23T23:58:08Z,2015-02-23T23:58:06Z,"Hey guys, I coded some fixes for geom_errorbar and geom_errorbarh, which is the first problem in #161 

I changed the way traces are merged at the end of gg2list, so now it does not matter if the error bars come before or after the other geoms (points, lines).

I also moved the definition of a few constants from corresp_one_one.R to the top of ggplotly.R -- this saves me time during development and debugging since I only have to source(""ggplotly.R"") instead of both code files (in the correct order). I hope this is not a big deal for you guys.

Tests pass on my machine.
",https://github.com/plotly/plotly.R/pull/163,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/158,2015-01-22T18:33:00Z,2015-01-23T05:57:26Z,2015-01-23T05:57:21Z,"Sorry, the branch name has become unrelated to the PR.

`inherits()` checks the class.  It's pretty frustrating that I cannot just do

``` r
is.null(class(myObject))
```

!! Class is returned as a string, so it's `""NULL""`, not `NULL`. Line 52, I'm basically checking for the existence of dimension `x.name` or `y.name`. (Don't be confused, the period does not mean anything here!)

The whitespaces are just for styling.

Thanks! @theengineear
",https://github.com/plotly/plotly.R/pull/158,plotly
mkcor,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/156,2015-01-20T21:19:00Z,2015-01-22T17:38:32Z,2015-01-22T17:38:30Z,"This PR addresses issue #26.

What's posted is actually fine (resulting tree in plotly account is what you expect online).

Value `kwargs$filename` is preserved under `toJSON()` but then under `postForm()` some parsing issue generates the double directory prepending...  Which in turns propagates to `fromJSON()` -- I'm talking about https://github.com/ropensci/plotly/blob/master/R/plotly.R#L107

That's why I suggest overwriting `resp$filename` with the initial `kwargs$filename` so the returned response is what you expect -- no impact on what's actually sent to plotly (as the web platform).

Note that the resulting plotly plot is private by default -- is this what we expect?

/cc @sckott @chriddyp 
",https://github.com/plotly/plotly.R/pull/156,plotly
mkcor,CONTRIBUTOR,closed,6,https://github.com/plotly/plotly.R/pull/151,2014-12-30T21:36:18Z,2014-12-31T16:37:01Z,2014-12-30T22:12:58Z,"When date-time _durations_ are expressed with a numerical value, plotly's unit is the millisecond (ms).
This is different in R, where the `POSIXt` class uses seconds, and the `Date` class uses days.

This PR offers the corresponding conversions for the width (size) of (`x`) bins in histograms.

See these successful `ggplotly` conversions when dates are of class `POSIXt`:
https://plot.ly/~marianne2/336/deaths-by-police-across-time-by-region/,
when dates are of class `Date`:
https://plot.ly/~marianne2/358/deaths-by-police-across-time-by-region/

/cc @chriddyp @alexcjohnson @jackparmer
",https://github.com/plotly/plotly.R/pull/151,plotly
mkcor,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/150,2014-12-29T19:00:06Z,2014-12-30T04:59:56Z,2014-12-30T04:59:50Z,"This fixes issue #144 @myazdani

@chriddyp Please review, I'll update version number afterwards.
",https://github.com/plotly/plotly.R/pull/150,plotly
mkcor,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/149,2014-12-18T19:37:07Z,2014-12-19T16:38:33Z,2014-12-19T16:38:32Z,"So it behaves the same way as `makecall()`.

Some users would be getting errors with ""SSL certificate problem"".

@chriddyp @scjody Please review and I'll update version number everywhere and news.
",https://github.com/plotly/plotly.R/pull/149,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/148,2014-12-01T22:55:53Z,2015-11-20T02:10:34Z,2015-06-01T16:15:52Z,"Following conversion after https://github.com/ropensci/plotly/pull/146 was merged...
Thanks for catching this, @chriddyp !

I'm not sure whether/how the `R/plotly-package.r` file interacts with `devtools` capabilities but I'll look into this.
/cc @jdblischak if you're interested -- thanks for following up.
",https://github.com/plotly/plotly.R/pull/148,plotly
mkcor,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/147,2014-11-27T19:11:23Z,2014-12-01T21:55:14Z,2014-11-27T20:27:12Z,"- Changed parameter name from `base.url` to `base_url` because the `.` notation is ambiguous (http://kbroman.org/hipsteR/).  Indeed, you could now run `plotly(base.url=""https://plot.ly"")` as well as `plotly(base=""https://plot.ly"")`, which is _so_ scary, right?
- Renamed R file `one_to_one_corr.R` into `corresp_one_one.R` so it comes before `ggplotly.R` in alphabetical order--and we can dispose of the `Collate` field in `DESCRIPTION` and we can thus make use of modern tools (I mean, `roxygen2` and `devtools`).
  @jdblischak Following up on our R packaging conversation, see above, if you're curious. 

Will update `NEWS` and `DESCRIPTION` after review.

Thanks @chriddyp 
",https://github.com/plotly/plotly.R/pull/147,plotly
mkcor,CONTRIBUTOR,closed,12,https://github.com/plotly/plotly.R/pull/146,2014-11-25T17:04:15Z,2014-12-01T22:18:55Z,2014-12-01T17:22:51Z,"(Instead of 2 so far).

Indeed, before PR: https://plot.ly/~ggplot2-cookbook/22
After PR: https://plot.ly/~marianne2/137

@pedrodz @chriddyp Let me know what you think.  I'll run the image tests :)
",https://github.com/plotly/plotly.R/pull/146,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/145,2014-11-13T14:28:53Z,2014-11-17T16:05:45Z,2014-11-17T16:05:43Z,"Commit missing on PR https://github.com/ropensci/plotly/pull/143
",https://github.com/plotly/plotly.R/pull/145,plotly
pedrodz,CONTRIBUTOR,closed,9,https://github.com/plotly/plotly.R/pull/143,2014-11-12T16:45:34Z,2014-11-12T22:38:45Z,2014-11-12T22:38:42Z,"This PR is to tackle https://github.com/ropensci/plotly/pull/142#issuecomment-62310471

Summary:
- Legend: `xanchor=center`, `yanchor=top`
- Legend title (annotation): `xanchor=center`

With `xanchor` `center`, legend was on top of plot. Legend `x` position (unfortunately) had to be hard-coded to `1.04`. If `x` position is not hard-coded: https://plot.ly/~pdespouy/2211/total-bill-vs-time/
With large number of variables, legend skews to the bottom, see https://plot.ly/~pdespouy/2209/posttest-vs-pretest/

Examples:

With 2 variables un-merged, before PR: https://plot.ly/~pdespouy/2203/total-bill-vs-time/
With 2 variables un-merged, after PR: https://plot.ly/~pdespouy/2207/total-bill-vs-time/

With 2 variables, before PR: https://plot.ly/~pdespouy/2204/rating-vs-cond/
With 2 variables, after PR: https://plot.ly/~pdespouy/2208/rating-vs-cond/

With 9 variables, before PR: https://plot.ly/~pdespouy/2205/posttest-vs-pretest/
With 9 variables, after PR: https://plot.ly/~pdespouy/2209/posttest-vs-pretest/

With 3 variables, before PR: https://plot.ly/~pdespouy/2206/weight-vs-group/
With 3 variables, after PR: https://plot.ly/~pdespouy/2210/weight-vs-group/
",https://github.com/plotly/plotly.R/pull/143,plotly
pedrodz,CONTRIBUTOR,closed,9,https://github.com/plotly/plotly.R/pull/142,2014-11-07T21:35:57Z,2014-11-12T00:04:31Z,2014-11-11T21:55:04Z,"This PR is for showing legend **titles** when the legend in not broken for the geom; not for modifying its attributes, like colour.

Summary:
- Retrieve legend title from column name of legend elements in `p$data`; and,
- Create legend title as an annotation, with position `x` and `y` dependent on legend.

Example (to be judged on full-size graph):
Before: https://plot.ly/~pdespouy/2098/posttest-vs-pretest/
After: https://plot.ly/~pdespouy/2099/posttest-vs-pretest/

Image diffs can be seen here: 3c9d75b (PNG rendering is not good, since it should be seen in full-size)

cc/ @mkcor 
",https://github.com/plotly/plotly.R/pull/142,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/141,2014-11-07T02:54:27Z,2014-11-07T20:07:07Z,2014-11-07T20:07:05Z,"This PR is as split of legend titles to ease its reviewing.

Summary:
- Add condition so when legends are shown is closer to ggplot's
- Fix legend position of 'x': change 100 to 1 (limit is 1);
- Some code cleaning.

Example, see first: http://www.cookbook-r.com/Graphs/Titles_%28ggplot2%29/
Before: https://plot.ly/~pdespouy/2096/weight-vs-group/
After: https://plot.ly/~pdespouy/2097/weight-vs-group/

Image diffs can be seen here: ecc8cc3

cc/ @mkcor 
",https://github.com/plotly/plotly.R/pull/141,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/140,2014-10-30T22:04:08Z,2014-11-03T18:00:09Z,2014-11-03T18:00:05Z,"Summary:
- When using `colour=""NA""`, change `toRGB()` output to `transparent` (compatible with Plotly)
- Default `colour` for geom_polygon(): `NA`
- Default `fill` for geom_polygon(): `grey20`
- Adapt geom_ribbon() and geom_area() to new `toRGB()`
- Improve tests

ggplot2 reference: https://github.com/hadley/ggplot2/blob/4bb9270ef4d5d5062353438fd99d17b6f6de98a2/R/geom-polygon.r#L91

geom_polygon() default `line` colour:
Before: https://plot.ly/~pdespouy/2061
After (with `colour=""NA""`): https://plot.ly/~pdespouy/2062

geom_polygon() default `fill` colour:
Before: https://plot.ly/~pdespouy/2077
After (with `fill=""grey20""`): https://plot.ly/~pdespouy/2072

Image diffs can be seen here: 2921585, and here: d23c12e

Version number will be updated after revisions.

/cc @mkcor 
",https://github.com/plotly/plotly.R/pull/140,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/139,2014-10-30T15:47:27Z,2014-10-30T16:02:07Z,2014-10-30T16:01:25Z,"Also, support multiple hlines (when `yintercept` is multiple or in the case of `facet`) properly.
By 'supporting properly', I mean with the proper number of traces, and corresponding/matching traces as found in the JSON (not just seen in the image).

Corresponding image diffs are found at https://github.com/ropensci/plotly/commit/fec1c5124d178d0a87151544e47110163b653c6d and https://github.com/ropensci/plotly/commit/c0b193deaf99b078b9a4bcfff022479022650b68

(Plot `cookbook-test-suite/bars-and-lines/basic-line-with-points...` is not related but I thought I would update it since it was broken.)

/cc @pedrodz 
",https://github.com/plotly/plotly.R/pull/139,plotly
pedrodz,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/138,2014-10-29T23:03:17Z,2014-10-30T16:40:15Z,2014-10-30T16:39:57Z,"Summary:
- Default `fill` color: `white`
- Default `line` color: `grey20`

ggplot2 reference: https://github.com/hadley/ggplot2/blob/4bb9270ef4d5d5062353438fd99d17b6f6de98a2/R/geom-boxplot.r#L231

In Plotly `boxplot()` with default colours:
Before: https://plot.ly/~pdespouy/1989
After: https://plot.ly/~pdespouy/1993

In Plotly `boxplot()` with default colours using `fill=`:
Before: https://plot.ly/~pdespouy/1991
After: https://plot.ly/~pdespouy/1995

Version number will be updated after revisions.

cc// @mkcor 
",https://github.com/plotly/plotly.R/pull/138,plotly
pedrodz,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/137,2014-10-28T23:01:27Z,2014-10-29T20:10:10Z,2014-10-29T20:09:19Z,"Summary: 
- Default fill color for `geom_area` and `geom_ribbon`: `gray20`
- Default line color for `geom_area` and `geom_ribbon`: `NA` (equivalent in Plotly to `width=0`)

geom_ribbon:
before: https://plot.ly/~pdespouy/1959
after: https://plot.ly/~pdespouy/1968

geom_area: https://plot.ly/~pdespouy/1958
after: https://plot.ly/~pdespouy/1967

Version number will be updated after revisions.

cc// @mkcor 
",https://github.com/plotly/plotly.R/pull/137,plotly
pedrodz,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/136,2014-10-27T20:11:41Z,2014-10-28T17:01:56Z,2014-10-28T16:55:10Z,"Summary:
- Fix typo in line style mapping (`dotted` -> `dot`);
- Add multiplier (2x) for converting `line size` from ggplot2 to `line width` in Plotly;
- Fix some tests. For example, they were using `dotted` line type - there's no such thing in Plotly; and,
- Some styling.

Line width default was `2`, that means when line size _was not_ defined: a `1` in ggplot2 was a `2` in Plotly. Now, when size _was_ defined it had the same value in Plotly, when it should be 2x - a `1.5` in ggplot2 should be a `3` in Plotly. 
ggplot2: http://www.cookbook-r.com/Graphs/Bar_and_line_graphs_%28ggplot2%29/line-red-dotted-shape.png):
Plotly before: https://plot.ly/~pdespouy/1807
Plotly after: https://plot.ly/~pdespouy/1806

In the tests, `geom_density2d()`, `geom_step()` and `geom_contour()` size/width is `1`: that's because the _default_ value in ggplot2 is `0.5`. See:
https://github.com/hadley/ggplot2/blob/4bb9270ef4d5d5062353438fd99d17b6f6de98a2/R/geom-path-density2d.r#L28
https://github.com/hadley/ggplot2/blob/4bb9270ef4d5d5062353438fd99d17b6f6de98a2/R/geom-path-contour.r#L21
https://github.com/hadley/ggplot2/blob/4bb9270ef4d5d5062353438fd99d17b6f6de98a2/R/geom-path-step.r#L39

//cc @mkcor 
",https://github.com/plotly/plotly.R/pull/136,plotly
pedrodz,CONTRIBUTOR,closed,0,https://github.com/plotly/plotly.R/pull/135,2014-10-25T20:44:07Z,2014-10-27T18:51:45Z,2014-10-27T13:54:10Z,"Reverts ropensci/plotly#132
",https://github.com/plotly/plotly.R/pull/135,plotly
mkcor,CONTRIBUTOR,closed,4,https://github.com/plotly/plotly.R/pull/133,2014-10-23T21:41:48Z,2014-10-24T18:25:12Z,2014-10-24T18:25:11Z,"This PR fixes category histograms (bar gap and x-labels).
Before: https://plot.ly/~marianne2/98
After: https://plot.ly/~marianne2/96
- Image diffs can be seen here: https://github.com/ropensci/plotly/commit/89870edbef0599b8f17b31d6af4b480cdedbf6fe
  Look for JSON changes (i.e., `test-ggplot-histogram-barmodestack.json`, `test-ggplot-histogram-binwidth.json`, `test-ggplot-histogram-dates.json`) and corresponding image files, as @chriddyp suggested.

I'll increment the package version number after reviews.

/cc @pedrodz 
",https://github.com/plotly/plotly.R/pull/133,plotly
pedrodz,CONTRIBUTOR,closed,6,https://github.com/plotly/plotly.R/pull/132,2014-10-22T20:53:17Z,2014-10-28T17:02:26Z,2014-10-25T20:12:17Z,"Summary:
- Fix typo in line style mapping (`dotted` -> `dot`);
- Add multiplier (2x) for converting `line size` from ggplot2 to `line width` in Plotly;
- Fix some tests. For example, they were using `dotted` line type - there's no such thing in Plotly; and,
- Some styling.

Line width default was `2`, that means when line size _was not_ defined, an `1` in ggplot2 was a `2` in Plotly. Now when size _was_ defined it had the same value in Plotly, when it should be 2x - a `1.5` in ggplot2 should be a `3` in Plotly. 
ggplot2: http://www.cookbook-r.com/Graphs/Bar_and_line_graphs_%28ggplot2%29/line-red-dotted-shape.png):
Plotly before: https://plot.ly/~pdespouy/1807
Plotly after: https://plot.ly/~pdespouy/1806
",https://github.com/plotly/plotly.R/pull/132,plotly
mkcor,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/131,2014-10-22T20:48:05Z,2014-10-22T21:42:07Z,2014-10-22T21:42:04Z,"- Also enhanced it for geom_hline() at the same time: You can now pass a vector of values to the intercept parameter, to draw multiple lines (horizontal or vertical).
- Image diffs can be seen at https://github.com/ropensci/plotly/commit/08a4199f13af9c7cdd0c32cae925ffef9494bce0
- New images are `tests/testthat/test-ggplot-vline-*.png`, `tests/testthat/test-ggplot-vline-multiple-*.png`, `tests/testthat/test-ggplot-hline-multiple-*.png`;
- `tests/cookbook-test-suite/lines/basic_horizontal_line.*` has improved a little, but that's because the original ggplot2 code was broken--now fixed, and I'm not supporting x-ranges that are not numerical--to do;
- @chriddyp `hline_on_facets-*.png` now fixed (https://plot.ly/~TestBot/690).

/cc @pedrodz 
",https://github.com/plotly/plotly.R/pull/131,plotly
karthik,CONTRIBUTOR,closed,7,https://github.com/plotly/plotly.R/pull/130,2014-10-20T19:44:55Z,2015-05-22T19:44:04Z,2015-05-22T19:43:29Z,"Hi Plotly team,
I removed a couple of lines from the `.travis.yml` because the notifications to our slack build room are a bit overwhelming at the moment. Since @sckott and I are not actively helping with this package right now, these notifications don't help us much (and also masks the others). This PR just removes that notification. But as always, you can ping us anytime for any help.

Thanks,
- Karthik
",https://github.com/plotly/plotly.R/pull/130,plotly
mkcor,CONTRIBUTOR,closed,6,https://github.com/plotly/plotly.R/pull/129,2014-10-20T18:51:19Z,2014-10-21T20:09:25Z,2014-10-21T20:09:23Z,"Also including fairly unrelated commits in here:
- removing image files from `master` (they will live on a branch dedicated to the image diff framework);
- style in image-diff--related files (will move to above-mentioned branch);
- updating NEWS file.

This PR offers a working conversion for ggplot2 plots made with `geom_bar()` and `position_dodge()`: before (https://plot.ly/~ggplot2-cookbook/16) vs after (https://plot.ly/~marianne2/80).  Strengthened related test accordingly.

/cc @pedrodz @chriddyp 
",https://github.com/plotly/plotly.R/pull/129,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/128,2014-10-18T22:08:34Z,2014-10-19T00:55:40Z,2014-10-19T00:55:35Z,"- Fixes https://plot.ly/~TestBot/718/total-bill-vs-time/ (before: https://plot.ly/~ggplot2-cookbook/20)
- Add corresponding test (taken from R cookbook)
- Increment version number for this revision (now 0.5.2)

/cc @chriddyp @pedrodz 
",https://github.com/plotly/plotly.R/pull/128,plotly
chriddyp,MEMBER,closed,12,https://github.com/plotly/plotly.R/pull/126,2014-10-16T03:55:48Z,2014-10-25T20:32:20Z,2014-10-25T20:12:17Z,"we're adding a lot of functionality based off the r-coobook examples, so I thought I'd just add them to our visual-diffing test suite
",https://github.com/plotly/plotly.R/pull/126,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/125,2014-10-15T20:36:47Z,2014-10-15T22:23:09Z,2014-10-15T22:23:03Z,"ggplot: no zeroline. 
Plotly version 0.5.1
- Set zeroline default as FALSE

cc/ @mkcor @chriddyp 
",https://github.com/plotly/plotly.R/pull/125,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/124,2014-10-15T19:17:58Z,2014-10-15T19:36:12Z,2014-10-15T19:36:10Z,"Let's use the following standard version numbering scheme: major.minor.revision
Typically, ""the major number is increased when there are significant jumps in functionality, the minor number is incremented when only minor features or significant fixes have been added, and the revision number is incremented when minor bugs are fixed"" (see http://en.wikipedia.org/wiki/Software_versioning).

Changes since version ""0.4"" include using a newer encryption protocol (just now), supporting many more geom's (see #18) and many more theme-related features (better conversion of ticks, labels, grid lines, etc.)

/cc @pedrodz @chriddyp 
",https://github.com/plotly/plotly.R/pull/124,plotly
pedrodz,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/123,2014-10-15T17:18:12Z,2014-10-15T18:55:10Z,2014-10-15T17:59:59Z,"Yesterday, for security reasons SSLv3 got deprecated. Message returned from running `py$ggplotly()`:

```
Error in function (type, msg, asError = TRUE)  :
  Unknown SSL protocol error in connection to plot.ly:-9824
```

Protocol is changed from SSLv3 to TLSv1. `sslversion=1` is for TLSv1, see http://stackoverflow.com/questions/17119449/rcurl-boolean-options. It can me checked with:

```
c(RCurl:::SSLVERSION_TLSv1, RCurl:::SSLVERSION_SSLv3)
```

cc/ @mkcor 
",https://github.com/plotly/plotly.R/pull/123,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/122,2014-10-15T00:42:05Z,2014-10-15T01:12:18Z,2014-10-15T01:12:16Z,"Partly addresses open issue #115 and feedback by several users.

/cc @pedrodz 
",https://github.com/plotly/plotly.R/pull/122,plotly
pedrodz,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/121,2014-10-14T18:39:20Z,2014-10-15T19:00:50Z,2014-10-15T19:00:48Z,,https://github.com/plotly/plotly.R/pull/121,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/120,2014-10-10T21:35:43Z,2014-10-10T21:46:41Z,2014-10-10T21:46:36Z,"@chriddyp 
",https://github.com/plotly/plotly.R/pull/120,plotly
chriddyp,MEMBER,closed,1,https://github.com/plotly/plotly.R/pull/119,2014-10-10T20:52:20Z,2014-10-15T18:59:33Z,2014-10-10T21:03:33Z,"Reverts ropensci/plotly#117 - i wanna merge master into this branch and run the new image generation script before merging master back 
cc @mkcor @pedrodz 
",https://github.com/plotly/plotly.R/pull/119,plotly
mkcor,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/118,2014-10-10T17:28:43Z,2014-10-10T20:33:27Z,2014-10-10T20:33:24Z,"Visual tests are awesome!
We'll be able to check possible diffs on image files and JSON as we re-run the tests (incl. automatically upon pushing new branches).
/cc @pedrodz @chriddyp 
",https://github.com/plotly/plotly.R/pull/118,plotly
pedrodz,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/117,2014-10-09T21:32:34Z,2014-10-16T18:07:47Z,2014-10-10T20:51:07Z,"ggplot: themes: fix marker default shape

By changing `shape=""o""` from `circle` to `circle-open`, #114 changed default marker shape... Thanks to @mkcor for finding this.
- Change marker default shape to 16
- Add a test

Before PR: https://plot.ly/~pdespouy/1730/illn-vs-edu/;
After PR: https://plot.ly/~pdespouy/1731/illn-vs-edu/

cc/ @mkcor @chriddyp 
",https://github.com/plotly/plotly.R/pull/117,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/116,2014-10-09T20:04:23Z,2014-10-09T20:30:30Z,2014-10-09T20:30:24Z,"For the sake of readability and maintainability.

Functions, code units were not modified, only moved out of `ggplotly.R` into new files.

Also, moving towards a future CRAN submission...

/cc @pedrodz @chriddyp 
",https://github.com/plotly/plotly.R/pull/116,plotly
pedrodz,CONTRIBUTOR,closed,6,https://github.com/plotly/plotly.R/pull/114,2014-10-08T15:37:32Z,2014-10-09T02:01:07Z,2014-10-09T02:01:05Z,"ggplot: scatterplot: hollow cicles
- `shape=1` in ggplot is `circle-open` in Plotly

Example: 

```
sampledat <- diamonds[sample(nrow(diamonds), 500), ]
p <- ggplot(data = sampledat, aes(carat, price, colour = cut)) + 
  geom_point(size = 5, alpha = 0.5, shape = 1) +
  labs(title = ""Scatter Plot Example"", x = ""Carat"", y = ""Price"", colour = ""Cut"") 
```

https://plot.ly/~pdespouy/1593/scatter-plot-example/

cc/ @mkcor @chriddyp 
",https://github.com/plotly/plotly.R/pull/114,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/113,2014-10-07T23:20:18Z,2014-10-08T22:12:47Z,2014-10-08T22:12:44Z,"ggplot: themes: dashed and dotted grid lines as lines with alpha=0.1
- Temporary solution until `dashed` and `dotted` grid lines are implemented in Plotly.
- `toRGB()` function was modified as to accept alpha values.
- Styling was done in the `test-ggplot-theme.R` script.

Example: https://plot.ly/~pdespouy/1573/scatter-plot-example/

cc/ @mkcor 
",https://github.com/plotly/plotly.R/pull/113,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/112,2014-10-06T19:09:11Z,2014-10-06T19:23:24Z,2014-10-06T19:23:19Z,"Implementing use of background colors in `theme(rect=...)`.

When using `rect`, values are assigned to all rectangle elements in ggplot2, i.e., `legend`, `panel`, and `plot`.

Example:

```
library(ggthemes)
sampledat <- diamonds[sample(nrow(diamonds), 500),]
p <- ggplot(data = sampledat, aes(carat, price, colour = cut)) + geom_point(size = 5, alpha = 0.5) +
  labs(title = ""Scatter Plot Example"", x = ""Carat"", y = ""Price"", colour = ""Cut"") 
p <- p + theme_wsj()
```

yields https://plot.ly/~pdespouy/1520/scatter-plot-example/

cc/ @mkcor 
",https://github.com/plotly/plotly.R/pull/112,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/111,2014-10-02T19:25:23Z,2014-10-02T19:55:29Z,2014-10-02T19:55:26Z,"Translating element_blank() when used with grids in theme function.

Examples:
z <- z + theme(panel.grid.major =  element_blank()): https://plot.ly/~pdespouy/1489/mpg-vs-wt/
z <- z + theme(panel.grid.major.x = element_blank()): https://plot.ly/~pdespouy/1488/mpg-vs-wt/
z <- z + theme(panel.grid.major.y = element_blank()): https://plot.ly/~pdespouy/1487/mpg-vs-wt/

/cc @mkcor 
",https://github.com/plotly/plotly.R/pull/111,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/110,2014-10-01T03:52:57Z,2014-10-06T19:26:54Z,2014-10-01T18:52:39Z,"From Asana task: https://app.asana.com/0/15417658028776/15417658028776
- Add family fonts to title, axis title, legend and text. To use like in: p <- p + theme(plot.title=element_text(family=""Raleway""))
- Add bold, italic and bold.italic face to title, axis title and text. To use like in: p <- p + theme(plot.title=element_text(face=""bold""))

Comments:
Family font for axis is already integrated.
Legend Title is not implemented in Plotly yet. 
Legend and ticks elements are hidden in the JSON. Not evident to concatenate HTML elements to it. 

Examples:
Title, face=“bold”: https://plot.ly/~pdespouy/1390/scatter-plot-example/
Title, family=“Times”: https://plot.ly/~pdespouy/1389/scatter-plot-example/
Title, face=“bold” and family=“Times”: https://plot.ly/~pdespouy/1391/scatter-plot-example/
xaxis, face=“bold” and family=“Raleway”; yaxis, family=“Raleway”: https://plot.ly/~pdespouy/1392/scatter-plot-example/
Legend, family=“Raleway”: https://plot.ly/~pdespouy/1393/scatter-plot-example/
Text, family=“Raleway”: https://plot.ly/~pdespouy/1394/scatter-plot-example/
Text, face=“italic”: https://plot.ly/~pdespouy/1401/scatter-plot-example/
Text, face=“bold.italic”: https://plot.ly/~pdespouy/1402/scatter-plot-example/
Text, family=“Raleway”: face=bold.italic: https://plot.ly/~pdespouy/1403/scatter-plot-example/

cc// @mkcor 
",https://github.com/plotly/plotly.R/pull/110,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/109,2014-09-30T00:13:57Z,2014-09-30T16:26:00Z,2014-09-30T16:25:56Z,"So far, `size` was handled over one trace (PR #108 for reference).
One layer in ggplot2 can correspond to multiple traces in plotly, typically when you make use of the `colour` aesthetics (see additional example in `test-ggplot-size.R`).
I applied the same idea as I once did for the x-range: You want to keep the global range (as opposed to per-trace) and scale accordingly within each trace.
/cc @pedrodz 
",https://github.com/plotly/plotly.R/pull/109,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/108,2014-09-26T14:06:50Z,2014-09-30T00:13:58Z,2014-09-26T17:25:29Z,"When using size, ggplot changes circle sizes relatively using a range of 1-6. https://github.com/hadley/ggplot2/blob/4bb9270ef4d5d5062353438fd99d17b6f6de98a2/R/scale-size.r

The mathematical conversion was based on this post: http://stackoverflow.com/questions/929103/convert-a-number-range-to-another-range-maintaining-ratio

The minimum range in ggplot (1) is equivalent to the width of a grid line. For plotly, this is 0.25. As to keep the original difference (6 - 1 = 5), we use (5.25 - 0.25 = 5)

This translation is not perfect, because in addition ggplot sizes the markers line width in terms of size of circles - Plotly only uses one value for all makers lines width. https://github.com/hadley/ggplot2/blob/4bb9270ef4d5d5062353438fd99d17b6f6de98a2/R/scale-size.r#L53-L55

Examples using these changes:
map: https://plot.ly/~pdespouy/1325/lat-vs-long/
sepal&petal: https://plot.ly/~pdespouy/1324/sepalwidth-vs-petalwidth/
mpg&wt: https://plot.ly/~pdespouy/1329/mpg-vs-wt/
",https://github.com/plotly/plotly.R/pull/108,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/107,2014-09-23T15:29:20Z,2014-10-16T18:08:13Z,2014-09-23T16:47:17Z,"Basic implementation of geom_ribbon()

Example, running this line of code: 
gg <- ggplot(huron, aes(x=year)) + geom_ribbon(aes(ymin=level-1, ymax=level+1))
outputs: https://plot.ly/~pdespouy/1262

Particular case of NAs in data: to be implemented.

//cc @mkcor 
",https://github.com/plotly/plotly.R/pull/107,plotly
pedrodz,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/106,2014-09-22T21:19:31Z,2014-09-23T12:10:17Z,2014-09-22T21:46:14Z,"Basic implementation of geom_text()

Arguments supported in this PR:
Color: https://plot.ly/~pdespouy/1248/mpg-vs-wt/; 
Size: https://plot.ly/~pdespouy/1249/mpg-vs-wt/; and, 
Combination of both: https://plot.ly/~pdespouy/1251/mpg-vs-wt/.

For angle, plotly support textangle for annotations, but not in traces. To be implemented. 
For position, translation is not direct: integers in ggplot vs text in plotly. To be implemented. 

//cc @mkcor @chriddyp 
",https://github.com/plotly/plotly.R/pull/106,plotly
xsaintmleux,NONE,closed,1,https://github.com/plotly/plotly.R/pull/105,2014-09-19T18:59:31Z,2014-09-26T21:47:54Z,2014-09-22T18:14:27Z,"Prevent RJSONIO from rounding numbers by specifying digits=50.  By default the JSON output is rounded to five significant digits, e.g. 1234567 becomes 1234600.
",https://github.com/plotly/plotly.R/pull/105,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/104,2014-09-19T15:32:44Z,2014-09-19T17:03:26Z,2014-09-19T17:03:25Z,"Forgot to `git add` these files when they were automagically generated by `roxygen2`.

As Travis warns: ""All user-level objects in a package should have documentation entries.""

/cc @xsaintmleux 
",https://github.com/plotly/plotly.R/pull/104,plotly
mkcor,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/102,2014-09-18T23:00:16Z,2014-09-19T15:21:43Z,2014-09-19T15:21:41Z,"@chriddyp Please test.
",https://github.com/plotly/plotly.R/pull/102,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/101,2014-09-17T15:13:26Z,2014-09-18T19:47:53Z,2014-09-18T19:47:50Z,"Thanks for spotting this @chriddyp !
",https://github.com/plotly/plotly.R/pull/101,plotly
mkcor,CONTRIBUTOR,closed,7,https://github.com/plotly/plotly.R/pull/100,2014-09-16T17:24:21Z,2014-09-24T03:27:14Z,2014-09-24T03:27:11Z,"Added a test where a bar chart uses dates.
(Motivated by user feedback :8ball:)

/cc @xsaintmleux @pedrodz 
",https://github.com/plotly/plotly.R/pull/100,plotly
mkcor,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/99,2014-09-12T19:36:34Z,2014-09-12T21:27:15Z,2014-09-12T21:27:13Z,"by converting them into POSIXct.

/cc @xsaintmleux 

Addresses https://github.com/ropensci/plotly/issues/15
",https://github.com/plotly/plotly.R/pull/99,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/98,2014-09-11T17:13:47Z,2014-09-11T17:37:53Z,2014-09-11T17:37:51Z,"A violin plot is a combination of a box plot and a kernel density plot (Wikipedia).

Convert the box plot part for now, so that calling `ggplotly()` on a violin plot does not return an error, but just a warning.

As kernel density estimations (KDE) become available in Plotly, we will support more faithful conversions.

/cc @xsaintmleux @pedrodz @chriddyp 
",https://github.com/plotly/plotly.R/pull/98,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/97,2014-09-08T23:07:46Z,2014-09-08T23:27:49Z,2014-09-08T23:27:46Z,"Although error bars correspond to a layer in ggplot2, they should not correspond to a separate trace in Plotly.

Also, ensure they have the same colour as the corresponding data: https://plot.ly/~mkcor/522

/cc @xsaintmleux @pedrodz 
",https://github.com/plotly/plotly.R/pull/97,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/96,2014-09-03T14:04:14Z,2014-09-26T21:48:40Z,2014-09-03T15:20:52Z,"- Add xanchor=""center"" for yaxis labels, using facet_grid() and facet_wrap()

/cct thank you @xsaintmleux @mkcor 
",https://github.com/plotly/plotly.R/pull/96,plotly
mkcor,CONTRIBUTOR,closed,4,https://github.com/plotly/plotly.R/pull/95,2014-09-02T22:03:42Z,2014-10-06T18:23:39Z,2014-10-06T18:23:36Z,"ggplot2's geom_density estimates a probability density using Gaussian smoothing.

As of now we don't have this exact feature in Plotly, so for now let's map this visualization to a normalized histogram.  See https://plot.ly/~mkcor/513

I hard-coded the binwidth to be `1/30` of the `x` range because that's what ggplot2 does with histograms.

Also, I thought I'd force `bargap` to be `0` whenever we are converting histograms; this is consistent with ggplot2 and has been brought up by many R users (`x` variable is continuous).

/cc @xsaintmleux @pedrodz 
",https://github.com/plotly/plotly.R/pull/95,plotly
pedrodz,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/94,2014-09-02T15:40:28Z,2014-09-02T18:49:19Z,2014-09-02T18:49:17Z,"Fixing particular cases when faceting:
- Space and alignment for plots using facet_wrap(). https://plot.ly/~pdespouy/491 vs https://plot.ly/~pdespouy/595
- Clean ""new text"" annotations. https://plot.ly/~pdespouy/490 vs https://plot.ly/~pdespouy/594
- Angles on yaxis label. https://plot.ly/~pdespouy/491 vs https://plot.ly/~pdespouy/678
- Alignment and spacing on the yaxis, using facet_grid(). https://plot.ly/~pdespouy/641 vs https://plot.ly/~pdespouy/795
- Alignment for yxis title. https://plot.ly/~pdespouy/491 vs https://plot.ly/~pdespouy/836

/cc @mkcor @xsaintmleux 
",https://github.com/plotly/plotly.R/pull/94,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/93,2014-08-29T20:24:47Z,2014-08-29T21:01:29Z,2014-08-29T21:01:22Z,"Followed the same approach as for credentials.

Did not include permission tests per se: The R functions which provide access to the computer's file system (such as `file.create()`) already take care of the proper warning/messaging.

/cc @chriddyp 
",https://github.com/plotly/plotly.R/pull/93,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/92,2014-08-29T16:45:01Z,2014-10-21T19:10:09Z,2014-08-29T17:46:05Z,"Since https://plot.ly/ggplot2/ is already under large ""Get Started"".
",https://github.com/plotly/plotly.R/pull/92,plotly
chriddyp,MEMBER,closed,1,https://github.com/plotly/plotly.R/pull/91,2014-08-28T22:38:58Z,2014-08-28T22:47:39Z,2014-08-28T22:47:34Z,"https://github.com/ropensci/plotly/blob/freshen_up_readme/README.md
",https://github.com/plotly/plotly.R/pull/91,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/90,2014-08-28T01:36:27Z,2014-08-28T17:05:54Z,2014-08-28T17:05:52Z,"Strictly speaking, only the last two commits are about this conversion.  Feel free to check them out separately (https://github.com/ropensci/plotly/commit/0bab4d73e61e66150d25f4e586691a774065f405 and https://github.com/ropensci/plotly/commit/24cfe2a6f6dfd3823808f3e37728008c544895c5).

The rest is about clean-up.

/cc @pedrodz @xsaintmleux 
",https://github.com/plotly/plotly.R/pull/90,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/89,2014-08-26T19:32:21Z,2014-10-21T21:52:46Z,2014-08-26T19:55:09Z,"Area chart in plotly. To be iterated with geom_ribbon()
- Add area function in ggplotly.R
- New test-ggplot-area.R

/cc @mkcor @xsaintmleux
",https://github.com/plotly/plotly.R/pull/89,plotly
mkcor,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/88,2014-08-26T18:25:07Z,2014-08-28T20:29:43Z,2014-08-28T20:29:40Z,"Corresponding chart type in Plotly is 'histogram2dcontour'.
Defaults (contour spacing) are different.
I wanted to retrieve them from ggplot2 and assign corresponding values to `xbins=list(start, end, size)` (same for `ybins`) as I once did for the `geom_histogram` conversion.  But the ggplot2 parameters which controls resolution/discretization (`n`, see http://docs.ggplot2.org/current/stat_density2d.html) seems to get lost on the way...
Users can play with this in the GUI: Traces > Range/bins
/cc @pedrodz @xsaintmleux 
",https://github.com/plotly/plotly.R/pull/88,plotly
xsaintmleux,NONE,closed,4,https://github.com/plotly/plotly.R/pull/87,2014-08-26T16:38:04Z,2014-08-28T23:29:26Z,2014-08-28T23:29:22Z,,https://github.com/plotly/plotly.R/pull/87,plotly
pedrodz,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/86,2014-08-26T16:25:13Z,2014-08-26T19:39:15Z,2014-08-26T18:45:21Z,"Area chart in plotly. To be iterated with geom_ribbon()
- Add area function in ggplotly.R
- New test-ggplot-area.R

/cc @mkcor @xsaintmleux 
",https://github.com/plotly/plotly.R/pull/86,plotly
xsaintmleux,NONE,closed,1,https://github.com/plotly/plotly.R/pull/85,2014-08-25T21:54:16Z,2014-08-25T23:24:17Z,2014-08-25T23:24:15Z,,https://github.com/plotly/plotly.R/pull/85,plotly
mkcor,CONTRIBUTOR,closed,0,https://github.com/plotly/plotly.R/pull/84,2014-08-25T18:45:00Z,2015-11-20T02:11:00Z,2015-11-20T02:10:58Z,"Dependencies have to be properly managed (typically, declared) in an R package.
/cc @tdhock @xsaintmleux 
",https://github.com/plotly/plotly.R/pull/84,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/83,2014-08-25T18:10:36Z,2014-08-25T18:26:43Z,2014-08-25T18:25:44Z,"Contour plots! :dancer: https://plot.ly/~mkcor/479
",https://github.com/plotly/plotly.R/pull/83,plotly
mkcor,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/82,2014-08-20T23:19:07Z,2014-08-21T21:33:25Z,2014-08-21T21:33:22Z,"For lack of a better approach, I decided to handle the different ways of displaying/embedding plotly graphs (depending on session mode) with a parameter for the `ggplotly()` method.  This parameter, `session`, can take 3 possible values: `interactive` (default, reminiscent of former implementation), 'knitr' and 'ipynb' (which stands for IPython Notebook, running a native R kernel).
Defaulting to this behaviour has proven useful in the Shiny App use case (where session was not detected as interactive, as expected).
Please review /cc @pedrodz @xsaintmleux @tdhock 
Documenting ipynb use right away.
",https://github.com/plotly/plotly.R/pull/82,plotly
xsaintmleux,NONE,closed,2,https://github.com/plotly/plotly.R/pull/80,2014-08-15T21:00:53Z,2014-08-15T22:00:47Z,2014-08-15T22:00:45Z,"Basic support for boxplots.
",https://github.com/plotly/plotly.R/pull/80,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/79,2014-08-15T20:00:07Z,2014-08-15T20:10:34Z,2014-08-15T20:10:29Z,"Following up on issue #14 !

Wondering if I should default `kwargs$layout$showlegend` to `FALSE` in this case...  What do you think?
@xsaintmleux @pedrodz 
",https://github.com/plotly/plotly.R/pull/79,plotly
xsaintmleux,NONE,closed,1,https://github.com/plotly/plotly.R/pull/78,2014-08-13T16:09:52Z,2014-08-19T19:28:35Z,2014-08-13T17:52:42Z,,https://github.com/plotly/plotly.R/pull/78,plotly
karthik,CONTRIBUTOR,closed,5,https://github.com/plotly/plotly.R/pull/77,2014-08-12T19:38:53Z,2015-12-18T18:05:14Z,2015-07-31T14:48:16Z,"This PR will add Windows CI to the package. So in addition to what Travis accomplishes, you'll get something similar from `appveyor`. You may not want to merge for now, at least until you can fix the issue that make the build fail (it does now). I'll leave it up to the Toby (or anyone else) whether or not to merge this.
",https://github.com/plotly/plotly.R/pull/77,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/76,2014-08-11T18:30:17Z,2014-08-12T17:15:35Z,2014-08-12T17:07:56Z,"- Re-ordered lines in ggplotly.R no longer considers ""now"" as part of the function, and cleans the warning:
  checking Rd \usage sections ... WARNING
  Documented arguments not in \usage in documentation object 'now':
  'g' 'geom'
- Removed ""required(RJSONIO)"", cleans the following warning: 
  library' or 'require' call to 'RJSONIO' which was already attached by Depends.
  Please remove these calls from your code.

/cc @mkcor
/cc @xsaintmleux 
",https://github.com/plotly/plotly.R/pull/76,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/75,2014-08-11T15:40:18Z,2014-08-11T18:10:29Z,2014-08-11T16:11:37Z,"/cc @xsaintmleux 
",https://github.com/plotly/plotly.R/pull/75,plotly
pedrodz,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/74,2014-08-01T23:44:15Z,2014-08-02T12:58:56Z,2014-08-02T00:51:51Z,"- Some coding in tools.R giving more details to function
- New *.Rd files generated from running roxygen2::roxygenise()

/cc @mkcor 
",https://github.com/plotly/plotly.R/pull/74,plotly
mplourde,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/73,2014-08-01T14:50:44Z,2014-08-01T19:54:27Z,2014-08-01T19:53:20Z,"2 updates:

1) Modified `pub$makecall` so that it no longer overwrites global RCurlOptions. This is necessary to respect any proxy settings the user may have defined. 
2) `postForm` may return a raw vector, which causes the subsequent call to `fromJSON` to choke, so I've added a line to convert its return value to character, if it comes back as raw.
",https://github.com/plotly/plotly.R/pull/73,plotly
pedrodz,CONTRIBUTOR,closed,3,https://github.com/plotly/plotly.R/pull/72,2014-07-31T19:33:22Z,2014-08-02T12:58:46Z,2014-08-01T23:28:50Z,"Fix some errors and warnings that check() was returning.

/cc @mkcor 
",https://github.com/plotly/plotly.R/pull/72,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/71,2014-07-31T18:43:48Z,2014-07-31T18:57:02Z,2014-07-31T18:56:36Z,"Nothing's going on here really.
It was once decided we would have all our tests in tests/testthat/ but I was in the midst of writing ""test-ggplot-step.R"", which was left behind.
/cc @tdhock @sckott 
",https://github.com/plotly/plotly.R/pull/71,plotly
mkcor,CONTRIBUTOR,closed,20,https://github.com/plotly/plotly.R/pull/70,2014-07-31T18:35:40Z,2014-08-19T19:28:19Z,2014-08-13T17:59:00Z,"Decided to go for this approach after fruitful discussions with @wch from ggplot2.

@tdhock @sckott Could you please have a look?
I shouldn't be able to just call `ggplot_build2()` (as I do in the test) since I haven't exported it...  Should I?
I've run `devtools::check()` but right now it is failing for other reasons, it seems... (docs-related, not code-related).  Thank you!!

/cc @xsaintmleux for good measure ;)
",https://github.com/plotly/plotly.R/pull/70,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/68,2014-07-30T14:06:11Z,2014-07-30T14:55:45Z,2014-07-30T14:42:12Z,"Thanks, Travis CI!
Noticed a warning about this. 
",https://github.com/plotly/plotly.R/pull/68,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/67,2014-07-29T19:02:14Z,2014-07-30T19:25:49Z,2014-07-30T19:24:36Z,"`auto_open=TRUE` being the default.
",https://github.com/plotly/plotly.R/pull/67,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/65,2014-07-16T21:08:00Z,2014-07-16T21:40:57Z,2014-07-16T21:40:54Z,"The default is to show the legend.

This change does not affect the plots.
As of now, this change affects the JSON and the return of `get_figure()`, which now have `layout$showlegend` equal to `TRUE` when previously unspecified.  But this is the intended default anyway.
",https://github.com/plotly/plotly.R/pull/65,plotly
xsaintmleux,NONE,closed,1,https://github.com/plotly/plotly.R/pull/64,2014-07-09T20:48:35Z,2014-07-17T17:39:12Z,2014-07-17T17:29:34Z,"partially fixes #31 
",https://github.com/plotly/plotly.R/pull/64,plotly
xsaintmleux,NONE,closed,1,https://github.com/plotly/plotly.R/pull/63,2014-07-09T18:42:04Z,2014-07-17T20:07:38Z,2014-07-17T20:07:16Z,,https://github.com/plotly/plotly.R/pull/63,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/60,2014-07-02T20:53:31Z,2014-07-02T20:57:43Z,2014-07-02T20:57:41Z,,https://github.com/plotly/plotly.R/pull/60,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/59,2014-06-29T16:14:09Z,2014-07-02T19:03:58Z,2014-07-02T19:03:50Z,"You may want to add `response` to this return list.  But then you should edit the `irplot()` function.
",https://github.com/plotly/plotly.R/pull/59,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/58,2014-06-27T22:40:51Z,2014-06-28T00:04:25Z,2014-06-28T00:04:24Z,"We use IPython Notebooks (here running an R kernel) as a standard for our docs.
Method `irplot()` is similar to `iplot()`, which works with `knitr`, but works with notebooks.
",https://github.com/plotly/plotly.R/pull/58,plotly
xsaintmleux,NONE,closed,4,https://github.com/plotly/plotly.R/pull/56,2014-06-26T18:04:37Z,2014-06-26T19:06:21Z,2014-06-26T18:18:49Z,,https://github.com/plotly/plotly.R/pull/56,plotly
xsaintmleux,NONE,closed,1,https://github.com/plotly/plotly.R/pull/55,2014-06-20T18:42:34Z,2014-08-26T16:27:47Z,2014-06-20T18:56:29Z,,https://github.com/plotly/plotly.R/pull/55,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/54,2014-06-19T20:52:32Z,2014-06-24T21:15:32Z,2014-06-24T21:15:30Z,"I believe this is relevant.
",https://github.com/plotly/plotly.R/pull/54,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/53,2014-06-19T17:14:46Z,2014-06-19T17:28:09Z,2014-06-19T17:27:31Z,"I should know!  I even stressed this when teaching the R workshop in Rimouski ;)
",https://github.com/plotly/plotly.R/pull/53,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/52,2014-06-17T21:30:56Z,2014-06-27T22:27:57Z,2014-06-17T21:45:14Z,"fixes #48 
",https://github.com/plotly/plotly.R/pull/52,plotly
mkcor,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/50,2014-06-13T20:35:34Z,2014-06-17T20:55:27Z,2014-06-17T20:54:26Z,"Note that geom_histogram is an alias for geom_bar plus stat_bin (http://docs.ggplot2.org/current/geom_histogram.html).

I have (manually) included changes from PR #44 (non-numeric data with factor levels).
",https://github.com/plotly/plotly.R/pull/50,plotly
chriddyp,MEMBER,closed,3,https://github.com/plotly/plotly.R/pull/46,2014-05-30T03:31:34Z,2014-10-15T18:59:57Z,2014-06-04T18:47:39Z,,https://github.com/plotly/plotly.R/pull/46,plotly
xsaintmleux,NONE,closed,19,https://github.com/plotly/plotly.R/pull/44,2014-05-28T17:59:57Z,2014-08-19T19:28:25Z,2014-06-25T19:09:26Z,"Please review...
",https://github.com/plotly/plotly.R/pull/44,plotly
chriddyp,MEMBER,closed,0,https://github.com/plotly/plotly.R/pull/43,2014-05-28T17:39:04Z,2014-07-15T10:37:10Z,2014-05-28T17:40:02Z,,https://github.com/plotly/plotly.R/pull/43,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/41,2014-05-26T19:36:50Z,2014-06-13T06:38:12Z,2014-05-26T20:08:08Z,"Yay!  Thanks, @chriddyp -- it's amazing to have the `get_figure()` method! :)
I did some clean-up and played around a bit:

```
install_github(""ropensci/plotly"", ref=""chriddyp-GET-requests"")
library(plotly)
py <- plotly()
super <- py$get_figure(""mkcor"", 118)
super$data[[1]]$y
```
",https://github.com/plotly/plotly.R/pull/41,plotly
chriddyp,MEMBER,closed,2,https://github.com/plotly/plotly.R/pull/39,2014-05-23T07:45:58Z,2014-10-10T21:51:34Z,2014-10-10T21:51:34Z,"Here's a first pass at an interface to plotly's static image generation. Check out `tests/testthat/test-plotly-savefigure.R` for usage. 
",https://github.com/plotly/plotly.R/pull/39,plotly
chriddyp,MEMBER,closed,1,https://github.com/plotly/plotly.R/pull/38,2014-05-23T04:51:59Z,2014-07-15T10:37:02Z,2014-05-26T19:44:07Z,,https://github.com/plotly/plotly.R/pull/38,plotly
mkcor,CONTRIBUTOR,closed,4,https://github.com/plotly/plotly.R/pull/37,2014-05-22T16:45:49Z,2014-07-15T10:38:16Z,2014-05-23T17:08:02Z,"""Converted"" credentials tools from https://github.com/plotly/python-api/blob/master/plotly/tools.py so users can always work within R.
",https://github.com/plotly/plotly.R/pull/37,plotly
chriddyp,MEMBER,closed,1,https://github.com/plotly/plotly.R/pull/32,2014-05-20T02:39:29Z,2014-07-15T20:41:06Z,2014-05-23T03:26:31Z,"Reference: https://stat.ethz.ch/pipermail/r-help/2007-March/128217.html
",https://github.com/plotly/plotly.R/pull/32,plotly
tdhock,CONTRIBUTOR,closed,4,https://github.com/plotly/plotly.R/pull/28,2014-05-12T21:51:19Z,2014-07-15T10:38:09Z,2014-05-15T18:35:44Z,"Instead of stopping with an error when we do not know how to convert a geom to plotly, we now issue a warning, and convert all the other layers.
",https://github.com/plotly/plotly.R/pull/28,plotly
mkcor,CONTRIBUTOR,closed,4,https://github.com/plotly/plotly.R/pull/27,2014-05-12T19:28:08Z,2014-07-27T22:39:08Z,2014-05-13T18:08:51Z,"Before fix: https://plot.ly/~mkcor/101/papers-vs-country/
After fix: https://plot.ly/~mkcor/106/papers-vs-country/ (as expected)
",https://github.com/plotly/plotly.R/pull/27,plotly
mkcor,CONTRIBUTOR,closed,2,https://github.com/plotly/plotly.R/pull/24,2014-05-08T16:14:42Z,2014-07-15T10:38:03Z,2014-05-08T16:52:06Z,"Scroll down down down in the grep() docs and you will find grepl()...  That's what I was looking for!
Thank you, Gavin Simpson [Mozilla Science Lab call 2014-05-08].
",https://github.com/plotly/plotly.R/pull/24,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/23,2014-05-08T13:58:32Z,2014-07-15T10:37:57Z,2014-05-08T14:40:29Z,"- Took this chunk of code outside the for loop, since plotly does not handle barmode at the layer/trace level anyway.
- Added an error message since `geom_bar()` is only partially supported. Default is `geom_bar(..., stat=""bin"")` and our current implementation is for `geom_bar(..., stat=""identity"")`!
  I tend to draw inspiration from the Plotly gallery more than from examples in the ggplot2 docs.
",https://github.com/plotly/plotly.R/pull/23,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/22,2014-05-07T19:52:48Z,2014-06-13T06:38:16Z,2014-05-07T20:45:24Z,"I followed suggestions by @tdhock to:
- avoid for loops in tests
- check that `geom_line` and `geom_path` end up with shape=linear
- support the conversion of different ""linetype"", ""size"", ""colour"" (Do we know how to handle ""group""?)
",https://github.com/plotly/plotly.R/pull/22,plotly
sckott,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/21,2014-05-07T19:47:27Z,2014-07-27T22:39:08Z,2014-05-07T20:11:46Z,"can I get a +1
",https://github.com/plotly/plotly.R/pull/21,plotly
mkcor,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/19,2014-05-07T14:58:34Z,2014-07-27T22:38:54Z,2014-05-07T16:10:25Z,"""Continuous deployment model: The code on the master branch is always tested and deployable.  Any testing that needs to happen should be done on the feature branch before it's merged into master.""

Now we have a conversion for `geom_bar` but we should support more aesthetics than just `fill` (http://docs.ggplot2.org/current/geom_bar.html).  Also, line 231 of `ggplotly.R` should be moved outside the for loop.  Then we will be able to check off `geom_bar` in this list: issue #18 :)
",https://github.com/plotly/plotly.R/pull/19,plotly
tdhock,CONTRIBUTOR,closed,0,https://github.com/plotly/plotly.R/pull/10,2014-04-09T21:44:12Z,2014-07-15T10:36:22Z,2014-04-12T00:44:45Z,,https://github.com/plotly/plotly.R/pull/10,plotly
tdhock,CONTRIBUTOR,closed,0,https://github.com/plotly/plotly.R/pull/5,2014-03-22T03:48:08Z,2014-07-15T10:37:23Z,2014-03-22T03:51:58Z,,https://github.com/plotly/plotly.R/pull/5,plotly
tdhock,CONTRIBUTOR,closed,0,https://github.com/plotly/plotly.R/pull/4,2014-03-15T00:16:22Z,2014-03-15T00:27:15Z,2014-03-15T00:27:15Z,"I changed the default behavior of ggplotly so that it embeds an iframe into an Rmd document with a chunk option plotly=TRUE, e.g.

http://rpubs.com/tdhock/14362
",https://github.com/plotly/plotly.R/pull/4,plotly
tdhock,CONTRIBUTOR,closed,1,https://github.com/plotly/plotly.R/pull/2,2014-03-10T22:52:33Z,2014-06-13T00:01:28Z,2014-03-12T18:00:27Z,"I copied the code and tests, and added an example of py$ggplotly(gg).
",https://github.com/plotly/plotly.R/pull/2,plotly
