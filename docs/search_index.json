[["index.html", "5293-Final Project Chapter 1 Introduction", " 5293-Final Project Yujie Tu, Yuchen Meng 2022-04-26 Chapter 1 Introduction "],["data-sources.html", "Chapter 2 Data sources", " Chapter 2 Data sources Our data come from the GHTorrent Project, which is “an effort to create a scalable, queriable, offline mirror of data offered through the Github REST API.” It includes the complete data up to 2019-06-30 (in the format of MySql dumps and MongoDB daily dumps). Due to our limited computing power, we choose to use only one day’s data (the raw data is about 23 gigabytes), 2019-06-30. The raw GHTorrent data consists of 16 tables and is stored in bson format. The schema is provided under the resources/schema folder: ## [1] &quot;commit_comments.txt&quot; &quot;commits.txt&quot; &quot;events.txt&quot; &quot;forks.txt&quot; &quot;geo_cache.txt&quot; ## [6] &quot;issue_comments.txt&quot; &quot;issue_events.txt&quot; &quot;issues.txt&quot; &quot;org_members.txt&quot; &quot;pull_request_comments.txt&quot; ## [11] &quot;pull_requests.txt&quot; &quot;repo_labels.txt&quot; &quot;repos.txt&quot; &quot;topics.txt&quot; &quot;users.txt&quot; ## [16] &quot;watchers.txt&quot; And a typical schema file of the table includes three elements: the number of records, the schema of one record, and an example record: ## resources/schema/commits.txt: ## Total records: 624376 ## Schema: ## root: ## |-- _id: &lt;class &#39;bson.objectid.ObjectId&#39;&gt; ## |-- sha: &lt;class &#39;str&#39;&gt; ## |-- node_id: &lt;class &#39;str&#39;&gt; ## |-- commit: ## |-- author: ## |-- name: &lt;class &#39;str&#39;&gt; ## |-- email: &lt;class &#39;str&#39;&gt; ## ... "],["data-transformation.html", "Chapter 3 Data transformation", " Chapter 3 Data transformation Out of the 16 tables provided by the GHTorrent project, we will use commits, issue comments, and pull request comments. Their original schemas are as follows: ## resources/schema/commits.txt ## Total records: 624376 ## Schema: ## root: ## |-- _id: &lt;class &#39;bson.objectid.ObjectId&#39;&gt; ## |-- sha: &lt;class &#39;str&#39;&gt; ## |-- node_id: &lt;class &#39;str&#39;&gt; ## |-- commit: ## |-- author: ## |-- name: &lt;class &#39;str&#39;&gt; ## |-- email: &lt;class &#39;str&#39;&gt; ## |-- date: &lt;class &#39;str&#39;&gt; ## |-- committer: ## |-- name: &lt;class &#39;str&#39;&gt; ## |-- email: &lt;class &#39;str&#39;&gt; ## |-- date: &lt;class &#39;str&#39;&gt; ## |-- message: &lt;class &#39;str&#39;&gt; ## |-- tree: ## |-- sha: &lt;class &#39;str&#39;&gt; ## |-- url: &lt;class &#39;str&#39;&gt; ## |-- url: &lt;class &#39;str&#39;&gt; ## |-- comment_count: &lt;class &#39;int&#39;&gt; ## |-- verification: ## |-- verified: &lt;class &#39;bool&#39;&gt; ## |-- reason: &lt;class &#39;str&#39;&gt; ## |-- signature: &lt;class &#39;NoneType&#39;&gt; ## |-- payload: &lt;class &#39;NoneType&#39;&gt; ## |-- url: &lt;class &#39;str&#39;&gt; ## |-- html_url: &lt;class &#39;str&#39;&gt; ## |-- comments_url: &lt;class &#39;str&#39;&gt; ## |-- author: ## |-- login: &lt;class &#39;str&#39;&gt; ## |-- id: &lt;class &#39;int&#39;&gt; ## |-- node_id: &lt;class &#39;str&#39;&gt; ## |-- avatar_url: &lt;class &#39;str&#39;&gt; ## |-- gravatar_id: &lt;class &#39;str&#39;&gt; ## |-- url: &lt;class &#39;str&#39;&gt; ## |-- html_url: &lt;class &#39;str&#39;&gt; ## |-- followers_url: &lt;class &#39;str&#39;&gt; ## |-- following_url: &lt;class &#39;str&#39;&gt; ## |-- gists_url: &lt;class &#39;str&#39;&gt; ## |-- starred_url: &lt;class &#39;str&#39;&gt; ## |-- subscriptions_url: &lt;class &#39;str&#39;&gt; ## |-- organizations_url: &lt;class &#39;str&#39;&gt; ## |-- repos_url: &lt;class &#39;str&#39;&gt; ## |-- events_url: &lt;class &#39;str&#39;&gt; ## |-- received_events_url: &lt;class &#39;str&#39;&gt; ## |-- type: &lt;class &#39;str&#39;&gt; ## |-- site_admin: &lt;class &#39;bool&#39;&gt; ## |-- committer: ## |-- login: &lt;class &#39;str&#39;&gt; ## |-- id: &lt;class &#39;int&#39;&gt; ## |-- node_id: &lt;class &#39;str&#39;&gt; ## |-- avatar_url: &lt;class &#39;str&#39;&gt; ## |-- gravatar_id: &lt;class &#39;str&#39;&gt; ## |-- url: &lt;class &#39;str&#39;&gt; ## |-- html_url: &lt;class &#39;str&#39;&gt; ## |-- followers_url: &lt;class &#39;str&#39;&gt; ## |-- following_url: &lt;class &#39;str&#39;&gt; ## |-- gists_url: &lt;class &#39;str&#39;&gt; ## |-- starred_url: &lt;class &#39;str&#39;&gt; ## |-- subscriptions_url: &lt;class &#39;str&#39;&gt; ## |-- organizations_url: &lt;class &#39;str&#39;&gt; ## |-- repos_url: &lt;class &#39;str&#39;&gt; ## |-- events_url: &lt;class &#39;str&#39;&gt; ## |-- received_events_url: &lt;class &#39;str&#39;&gt; ## |-- type: &lt;class &#39;str&#39;&gt; ## |-- site_admin: &lt;class &#39;bool&#39;&gt; ## |-- parents: &lt;class &#39;list&#39;&gt; ## |-- stats: ## |-- total: &lt;class &#39;int&#39;&gt; ## |-- additions: &lt;class &#39;int&#39;&gt; ## |-- deletions: &lt;class &#39;int&#39;&gt; ## |-- files: &lt;class &#39;list&#39;&gt; ## |-- etag: &lt;class &#39;str&#39;&gt; ## ## resources/schema/issue_comments.txt ## Total records: 41231 ## Schema: ## root: ## |-- _id: &lt;class &#39;bson.objectid.ObjectId&#39;&gt; ## |-- url: &lt;class &#39;str&#39;&gt; ## |-- html_url: &lt;class &#39;str&#39;&gt; ## |-- issue_url: &lt;class &#39;str&#39;&gt; ## |-- id: &lt;class &#39;int&#39;&gt; ## |-- node_id: &lt;class &#39;str&#39;&gt; ## |-- user: ## |-- login: &lt;class &#39;str&#39;&gt; ## |-- id: &lt;class &#39;int&#39;&gt; ## |-- node_id: &lt;class &#39;str&#39;&gt; ## |-- avatar_url: &lt;class &#39;str&#39;&gt; ## |-- gravatar_id: &lt;class &#39;str&#39;&gt; ## |-- url: &lt;class &#39;str&#39;&gt; ## |-- html_url: &lt;class &#39;str&#39;&gt; ## |-- followers_url: &lt;class &#39;str&#39;&gt; ## |-- following_url: &lt;class &#39;str&#39;&gt; ## |-- gists_url: &lt;class &#39;str&#39;&gt; ## |-- starred_url: &lt;class &#39;str&#39;&gt; ## |-- subscriptions_url: &lt;class &#39;str&#39;&gt; ## |-- organizations_url: &lt;class &#39;str&#39;&gt; ## |-- repos_url: &lt;class &#39;str&#39;&gt; ## |-- events_url: &lt;class &#39;str&#39;&gt; ## |-- received_events_url: &lt;class &#39;str&#39;&gt; ## |-- type: &lt;class &#39;str&#39;&gt; ## |-- site_admin: &lt;class &#39;bool&#39;&gt; ## |-- created_at: &lt;class &#39;str&#39;&gt; ## |-- updated_at: &lt;class &#39;str&#39;&gt; ## |-- author_association: &lt;class &#39;str&#39;&gt; ## |-- body: &lt;class &#39;str&#39;&gt; ## |-- etag: &lt;class &#39;str&#39;&gt; ## |-- repo: &lt;class &#39;str&#39;&gt; ## |-- owner: &lt;class &#39;str&#39;&gt; ## |-- issue_id: &lt;class &#39;int&#39;&gt; ## ## resources/schema/pull_request_comments.txt ## Total records: 10379 ## Schema: ## root: ## |-- _id: &lt;class &#39;bson.objectid.ObjectId&#39;&gt; ## |-- url: &lt;class &#39;str&#39;&gt; ## |-- pull_request_review_id: &lt;class &#39;int&#39;&gt; ## |-- id: &lt;class &#39;int&#39;&gt; ## |-- node_id: &lt;class &#39;str&#39;&gt; ## |-- diff_hunk: &lt;class &#39;str&#39;&gt; ## |-- path: &lt;class &#39;str&#39;&gt; ## |-- position: &lt;class &#39;int&#39;&gt; ## |-- original_position: &lt;class &#39;int&#39;&gt; ## |-- commit_id: &lt;class &#39;str&#39;&gt; ## |-- original_commit_id: &lt;class &#39;str&#39;&gt; ## |-- user: ## |-- login: &lt;class &#39;str&#39;&gt; ## |-- id: &lt;class &#39;int&#39;&gt; ## |-- node_id: &lt;class &#39;str&#39;&gt; ## |-- avatar_url: &lt;class &#39;str&#39;&gt; ## |-- gravatar_id: &lt;class &#39;str&#39;&gt; ## |-- url: &lt;class &#39;str&#39;&gt; ## |-- html_url: &lt;class &#39;str&#39;&gt; ## |-- followers_url: &lt;class &#39;str&#39;&gt; ## |-- following_url: &lt;class &#39;str&#39;&gt; ## |-- gists_url: &lt;class &#39;str&#39;&gt; ## |-- starred_url: &lt;class &#39;str&#39;&gt; ## |-- subscriptions_url: &lt;class &#39;str&#39;&gt; ## |-- organizations_url: &lt;class &#39;str&#39;&gt; ## |-- repos_url: &lt;class &#39;str&#39;&gt; ## |-- events_url: &lt;class &#39;str&#39;&gt; ## |-- received_events_url: &lt;class &#39;str&#39;&gt; ## |-- type: &lt;class &#39;str&#39;&gt; ## |-- site_admin: &lt;class &#39;bool&#39;&gt; ## |-- body: &lt;class &#39;str&#39;&gt; ## |-- created_at: &lt;class &#39;str&#39;&gt; ## |-- updated_at: &lt;class &#39;str&#39;&gt; ## |-- html_url: &lt;class &#39;str&#39;&gt; ## |-- pull_request_url: &lt;class &#39;str&#39;&gt; ## |-- author_association: &lt;class &#39;str&#39;&gt; ## |-- _links: ## |-- self: ## |-- href: &lt;class &#39;str&#39;&gt; ## |-- html: ## |-- href: &lt;class &#39;str&#39;&gt; ## |-- pull_request: ## |-- href: &lt;class &#39;str&#39;&gt; ## |-- in_reply_to_id: &lt;class &#39;int&#39;&gt; ## |-- etag: &lt;class &#39;str&#39;&gt; ## |-- repo: &lt;class &#39;str&#39;&gt; ## |-- owner: &lt;class &#39;str&#39;&gt; ## |-- pullreq_id: &lt;class &#39;int&#39;&gt; We used python to extract data from the bson file. The python script can be found in preprocess/preprocess.py, which will download the raw data set, extract the desired tables, and convert the bson files to csv file. And the extracted bson file, converted csv file will be stored under resources/raw_data and resources/data respectively. Since the amount of data are still quite large, especially for commits table, which original has over 0.6 million records, we decided to randomly subsample 10 thousand records from each file and removes some unuseful columns. The commits table has the following columns: ## sha user author committer time message stats ## Length:10000 Length:10000 Length:10000 Length:10000 Min. :2019-06-30 00:02:28 Length:10000 Length:10000 ## Class :character Class :character Class :character Class :character 1st Qu.:2019-06-30 08:39:57 Class :character Class :character ## Mode :character Mode :character Mode :character Mode :character Median :2019-06-30 14:01:13 Mode :character Mode :character ## Mean :2019-06-30 13:31:21 ## 3rd Qu.:2019-06-30 18:36:01 ## Max. :2019-06-30 23:59:52 ## url ## Length:10000 ## Class :character ## Mode :character ## ## ## Sha is an unique identifier for the recorder generated by GitHub, user, author, and committed all refer to the user(s) associated with the commit (the different between author and committed can be found here), time is when the commit is committed, message is the commit message, stats contains the number of total modifications, additions and deletions for this commit, and url is the commit’s url link. And the issue_comments table has the following columns: ## id user_id author_association created_at body url repo ## Min. :506997018 Length:10000 Length:10000 Min. :2019-06-30 00:32:19 Length:10000 Length:10000 Length:10000 ## 1st Qu.:507021152 Class :character Class :character 1st Qu.:2019-06-30 09:17:52 Class :character Class :character Class :character ## Median :507040742 Mode :character Mode :character Median :2019-06-30 14:26:43 Mode :character Mode :character Mode :character ## Mean :507039963 Mean :2019-06-30 13:59:31 ## 3rd Qu.:507058945 3rd Qu.:2019-06-30 19:00:08 ## Max. :507077971 Max. :2019-06-30 23:59:12 And the pull_request_comments table has the following columns: ## id user_id author_association created_at body url repo ## Min. :298814091 Length:10000 Length:10000 Min. :2019-06-30 00:09:59 Length:10000 Length:10000 Length:10000 ## 1st Qu.:298825518 Class :character Class :character 1st Qu.:2019-06-30 09:34:53 Class :character Class :character Class :character ## Median :298836008 Mode :character Mode :character Median :2019-06-30 14:08:41 Mode :character Mode :character Mode :character ## Mean :298835293 Mean :2019-06-30 13:57:11 ## 3rd Qu.:298844975 3rd Qu.:2019-06-30 18:47:41 ## Max. :298855085 Max. :2019-06-30 23:59:56 The columns for issue_comments and pull_request_comments are exactly the same and the names are quite self-explantory. id is an unique identifier, user_id is the id for the user who posted the comments, author_association is user’s association with the repository (can be “NONE”, “CONTRIBUTOR”, “COLLABORATOR”, “MEMBER”, and “OWNER”), created_at is the time when comment is posted, body is the comment’s content, url is the comment’s link, and repo is the comments associated repo. "],["missing-values.html", "Chapter 4 Missing values", " Chapter 4 Missing values "],["results.html", "Chapter 5 Results 5.1 issue comments 5.2 pull request comments", " Chapter 5 Results library(tidyverse) library(stringi) library(stopwords) library(lubridate) library(qdapRegex) library(ggridges) library(ggpubr) # function used to clean commit messages and issue/pull request comments clean_string &lt;- function(string){ string &lt;- gsub(&quot;&#39;t&quot;, &quot;ot&quot;, string) # change &#39;t to not, e.g., don&#39;t -&gt; donot string &lt;- gsub(&quot;&#39;[a-z]+? &quot;, &quot; &quot;, string) # remove &#39;s, &#39;ll and similar string &lt;- rm_url(string) # remove url string &lt;- gsub(&quot;[[:punct:]\\n\\r]&quot;, &quot; &quot;, string) # remove punctuation string &lt;- gsub(&quot; [0-9]+&quot;, &quot; &quot;, string) # remove numbers string &lt;- gsub(&quot;\\\\s+&quot;, &quot; &quot;, string) # remove all extra white space return(string %&gt;% tolower() %&gt;% trimws()) } 5.1 issue comments issue&lt;-read_csv(&quot;resources/data/issue_comments.csv&quot;) # remove those whose comments is not written in English issue&lt;-issue %&gt;% mutate(encoding_comment=stri_enc_mark(body)) issue &lt;- issue %&gt;% filter(encoding_comment==&quot;ASCII&quot;) %&gt;% select(-encoding_comment) # clean the body column and split it into a list of word issue &lt;- issue %&gt;% mutate(comment_string=sapply(body, clean_string)) %&gt;% mutate(comment_split=strsplit(comment_string, &quot; &quot;)) %&gt;% mutate(comment_length=sapply(comment_split, length)) First, let try to see if there is any relationship between user’s association with the repo and the length of their posted issue comments. Yet, we can see that there are a lot of outliers, which makes the box plot impossible to analysis. issue %&gt;% select(author_association, comment_length) %&gt;% ggplot(aes(x = author_association, y = comment_length)) + geom_boxplot() + coord_flip() + labs(x = &quot;author association&quot;, y = &quot;comment length&quot;, title = &quot;issue comments&#39; boxplot&quot;) Therefore, we decided to first remove the longest 10% comments and redraw the box plot. Now we can clearly see, after removing the longest 10% comments, that the distribution is still left skew and that “NONE” users (users who does not have any association with the repo) tend to leave longer “issue” comments. # remove the longest 10% comment issue_comment_len_first_90_perc &lt;- issue %&gt;% arrange(comment_length) %&gt;% mutate(rank = row_number(comment_length)) %&gt;% filter(rank &lt; 0.90 * nrow(issue)) %&gt;% mutate(author_association = fct_reorder(author_association, comment_length)) issue_comment_len_first_90_perc %&gt;% select(author_association, comment_length) %&gt;% ggplot(aes(x = author_association, y = comment_length)) + geom_boxplot() + coord_flip() + labs(x = &quot;author association&quot;, y = &quot;comment length&quot;, title = &quot;issue comments&#39; boxplot&quot;) By further inspecting the distribution of each category, we can see that the peak of “OWNER” is to the left of all other categories and that the peak of “COLLABORATOR” is a lot higher than other categories and also to the right of other categories except “NONE”. We may guess that “OWNER” tend to leave shorter and “COLLABORATOR” tend to leave longer comments than others. Also the distribution support our observation from previous plot that “NONE” tend to (or rather with higher probability to) leave longer issue comments than others, and it makes sense since users who do not involve in the development of the project tend to have problems and/or questions. issue_comment_len_first_90_perc %&gt;% select(author_association, comment_length) %&gt;% ggplot(aes(x = comment_length, y = author_association, fill = stat(quantile))) + stat_density_ridges(quantile_lines = FALSE, calc_ecdf = TRUE, bandwidth = 1, geom = &quot;density_ridges_gradient&quot;) + scale_fill_brewer(name = &quot;quantile&quot;, labels = c(&quot;1st&quot;, &quot;2nd&quot;, &quot;3rd&quot;, &quot;4th&quot;)) + labs(x = &quot;comment length&quot;, y = &quot;author association&quot;, title = &quot;issue comments&#39; distributions&quot;) + theme_ridges() Next, we would like to see the most common word people use in their comments. Not surprisingly, words like “issue”, “test”, “code”, “problem”, “error”, which are related to codings, comes top of the list. And we can also see github users are very polite since words like “can”, “please”, and “thanks” also appears very frequently. issue_split&lt;- issue_comment_len_first_90_perc %&gt;% select(comment_split) %&gt;% unnest(comment_split) %&gt;% group_by(comment_split) %&gt;% count(name = &quot;Freq&quot;) %&gt;% filter(! comment_split %in% stopwords(&quot;en&quot;, source = &quot;snowball&quot;)) %&gt;% arrange(desc(Freq)) issue_split %&gt;% head(30) %&gt;% ggplot(aes(x = fct_reorder(comment_split, Freq, .desc=TRUE), y = Freq)) + geom_bar(stat=&#39;identity&#39;) + theme(axis.text.x = element_text(angle = 45, hjust=1)) + labs(x = &quot;word&quot;, title = &quot;issue comments&#39; most frequent word&quot;) 5.2 pull request comments pull&lt;-read_csv(&quot;resources/data/pull_request_comments.csv&quot;) # remove those whose comments is not written in English pull&lt;-pull %&gt;% mutate(encoding_comment=stri_enc_mark(body)) pull &lt;- pull %&gt;% filter(encoding_comment==&quot;ASCII&quot;) %&gt;% select(-encoding_comment) # clean the body column and split it into a list of word pull &lt;- pull %&gt;% mutate(comment_string=sapply(body, clean_string2)) %&gt;% mutate(comment_split=strsplit(comment_string, &quot; &quot;)) %&gt;% mutate(comment_length=sapply(comment_split, length)) Similarly, for pull request comments, there also are a large amount of outliers, although not that extreme compared to issue comments, but still the outliers make the box plot harder to analysis. pull %&gt;% select(author_association, comment_length) %&gt;% ggplot(aes(x = author_association, y = comment_length)) + geom_boxplot() + coord_flip() + labs(x = &quot;author association&quot;, y = &quot;comment length&quot;, title = &quot;pull request comments&#39; boxplot&quot;) So, we remove the longest 10% comments, and we can see this time, “NONE” users no longer tend to leave longer comments, but rather they seems to leave shorter comments than others. # remove the highest 10% (in terms of length of comments) pull_comment_len_first_90_perc &lt;- pull %&gt;% arrange(comment_length) %&gt;% mutate(rank = row_number(comment_length)) %&gt;% filter(rank &lt; 0.90 * nrow(pull)) %&gt;% mutate(author_association = fct_reorder(author_association, comment_length)) pull_comment_len_first_90_perc %&gt;% select(author_association, comment_length) %&gt;% ggplot(aes(x = author_association, y = comment_length)) + geom_boxplot() + coord_flip() + labs(x = &quot;author association&quot;, y = &quot;comment length&quot;, title = &quot;pull request comments&#39; boxplot&quot;) But by examining the ridgeline plot, the peak of “NONE” is still to right of other categories, especially compared to “CONTRIBUTOR” and “OWNER”. We may infer that “OWNER” and “CONTRIBUTOR” leaves shorter message than others with higher probability, yet the difference is only within a few words pull_comment_len_first_90_perc %&gt;% select(author_association, comment_length) %&gt;% ggplot(aes(x = comment_length, y = author_association, fill = stat(quantile))) + stat_density_ridges(quantile_lines = FALSE, calc_ecdf = TRUE, bandwidth = 1, geom = &quot;density_ridges_gradient&quot;) + scale_fill_brewer(name = &quot;quantile&quot;, labels = c(&quot;1st&quot;, &quot;2nd&quot;, &quot;3rd&quot;, &quot;4th&quot;)) + labs(x = &quot;comment length&quot;, y = &quot;author association&quot;, title = &quot;pull request comments&#39; distributions&quot;) + theme_ridges() Similarly, we still can see polite words like “can”, “please”, and code-related words like “code”, “function”, “method” “file”, “comment” and “error” comes top of the list. But we also can see words like “add”, “remove”, “fixed”, “good”, and “better”, which is related to pull requests since pull request is all about modifying codes to make it better. pull_split&lt;- pull_comment_len_first_90_perc %&gt;% select(comment_split) %&gt;% unnest(comment_split) %&gt;% group_by(comment_split) %&gt;% count(name = &quot;Freq&quot;) %&gt;% filter(! comment_split %in% stopwords(&quot;en&quot;, source = &quot;snowball&quot;)) %&gt;% arrange(desc(Freq)) pull_split %&gt;% head(30) %&gt;% ggplot(aes(x = fct_reorder(comment_split, Freq, .desc=TRUE), y = Freq)) + geom_histogram(stat=&#39;identity&#39;) + theme(axis.text.x = element_text(angle = 45, hjust=1)) + labs(x = &quot;word&quot;, title = &quot;pull request comments&#39; most frequent word&quot;) ## Comparison between Issue and Pull Request Intuitively, the composition of users leaving issue comments should be relatively different from the composition of users leaving pull request comments. And it indeed is the case. We can see that “NONE” users leaves twice as many comments as others but only half as many comments as “CONTRIBUTOR” and “MEMBER” users. Surprisingly, “OWNER” user leaves the fewest number of pull request comments. pull_comment_len_first_90_perc %&gt;% select(author_association, comment_length) %&gt;% group_by(author_association) %&gt;% summarise(pull_request = n()) %&gt;% inner_join( issue_comment_len_first_90_perc %&gt;% select(author_association, comment_length) %&gt;% group_by(author_association) %&gt;% summarise(issue = n()) ) %&gt;% mutate(author_association = fct_reorder(author_association, issue, .desc = TRUE)) %&gt;% pivot_longer(cols = -author_association, names_to = &quot;Category&quot;) %&gt;% ggplot(aes(x = author_association, y = value, fill = Category)) + geom_bar(stat = &quot;identity&quot;, position = &quot;dodge&quot;) + labs(x = &quot;author association&quot;, y = &quot;number&quot;, title = &quot;comment number of Issue vs Pull Request&quot;) "],["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component "],["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
